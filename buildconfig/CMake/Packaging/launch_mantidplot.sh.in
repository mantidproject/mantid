#!/bin/sh
#
# Launch Mantidplot using any necessary LD_PRELOAD or software collection behaviour
#
# Script is configured by CMake

# Find out where we are
THISFILE=$(readlink -f "$0")
INSTALLDIR=$(echo $THISFILE | sed -r -e 's|^(.*)/(.*)$|\1|g') #.* is greedy and eats up until the final slash

# Define extra libraries and load paths
LOCAL_PRELOAD=@TCMALLOC_RUNTIME_LIB@
if [ -n "${LD_PRELOAD}" ]; then
    LOCAL_PRELOAD=${LOCAL_PRELOAD}:${LD_PRELOAD}
fi
if [ -z "${TCMALLOC_RELEASE_RATE}" ]; then
    TCM_RELEASE=10000
else
    TCM_RELEASE=${TCMALLOC_RELEASE_RATE}
fi

if [ -n "${NXSESSIONID}" ]; then
  command -v vglrun >/dev/null 2>&1 || { echo >&2 "MantidPlot requires VirtualGL but it's not installed.  Aborting."; exit 1; }
  VGLRUN="vglrun"
elif [ -n "${TLSESSIONDATA}" ]; then
  command -v vglrun >/dev/null 2>&1 || { echo >&2 "MantidPlot requires VirtualGL but it's not installed.  Aborting."; exit 1; }
  VGLRUN="vglrun"
fi

# Define when to report large memory allocation
if [ -z "${TCMALLOC_LARGE_ALLOC_REPORT_THRESHOLD}" ]; then
    # total available memory
    TCM_REPORT=$(grep MemTotal /proc/meminfo --color=never | awk '{print $2}')
    # half of available memory
    TCM_REPORT=`expr 512 \* $TCM_REPORT`
    # minimum is 1GB
    if [ ${TCM_REPORT} -le 1073741824 ]; then
        TCM_REPORT=1073741824
    fi
else
    TCM_REPORT=${TCMALLOC_LARGE_ALLOC_REPORT_THRESHOLD}
fi

# run with gdb THIS OPTION MUST BE SUPPLIED FIRST
if [ -n "$1" ] && [ "$1" = "--debug" ]; then
    shift
    GDB="gdb --args"
fi


# Launch
LD_PRELOAD=${LOCAL_PRELOAD} TCMALLOC_RELEASE_RATE=${TCM_RELEASE} \
    TCMALLOC_LARGE_ALLOC_REPORT_THRESHOLD=${TCM_REPORT} QT_API=pyqt \
    @WRAPPER_PREFIX@$VGLRUN $GDB $INSTALLDIR/@MANTIDPLOT_EXEC@ $*@WRAPPER_POSTFIX@ || @PYTHON_EXECUTABLE@ @SCRIPTSDIR@/ErrorReporter/error_dialog_app.py --exitcode=$? --directory=$INSTALLDIR
