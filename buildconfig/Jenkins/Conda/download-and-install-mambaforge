#!/bin/bash -ex

# This script will download and install mambaforge if it's not present where expected
#
# Expected args:
#   1. EXPECTED_MAMBAFORGE_PATH: path to where mambaforge should be installed
#   2. CLEAN_BUILD: whether or not to force mambaforge to be removed before attempting to install it again

EXPECTED_MAMBAFORGE_PATH=$1
CLEAN_BUILD=$2
MAMBAFORGE_VERSION=23.1.0-4

LINUX_SHA256="6ca38e02be99c410644c283bac74601f296dd10995ce1c8d345af995a39b5916  Mambaforge-23.1.0-4-Linux-x86_64.sh"
MACX86_SHA256="26937ea98870531e51da942b7f6cc26cc9af49bb16390486ee6dde9e0dc2c597  Mambaforge-23.1.0-4-MacOSX-x86_64.sh"
MACARM_SHA256="baa1ae638537766cac808efba09175ba21878b34288476dc7bbd01347145721f  Mambaforge-23.1.0-4-MacOSX-arm64.sh"
WINDOWS_SHA256="8b7218ce4502759495d1c7a6a9eaff32ab0a0fd316bdb5e6f302fe857fe40710 *Mambaforge-23.1.0-4-Windows-x86_64.exe"

EXPECTED_MAMBA_EXE=$EXPECTED_MAMBAFORGE_PATH/bin/mamba
if [[ $OSTYPE == 'msys'* ]]; then
    MAMBAFORGE_SCRIPT_NAME=Mambaforge-$MAMBAFORGE_VERSION-Windows-x86_64.exe
    EXPECTED_INSTALLER_SHA=$WINDOWS_SHA256
    EXPECTED_MAMBA_EXE=$EXPECTED_MAMBAFORGE_PATH/condabin/mamba.bat
elif [[ $OSTYPE == 'darwin'* ]]; then
    if [[ $(uname -p) == 'arm' ]]; then
      MAMBAFORGE_SCRIPT_NAME=Mambaforge-$MAMBAFORGE_VERSION-MacOSX-arm64.sh
      EXPECTED_INSTALLER_SHA=$MACARM_SHA256
    else
      MAMBAFORGE_SCRIPT_NAME=Mambaforge-$MAMBAFORGE_VERSION-MacOSX-x86_64.sh
      EXPECTED_INSTALLER_SHA=$MACX86_SHA256
    fi
else
    MAMBAFORGE_SCRIPT_NAME=Mambaforge-$MAMBAFORGE_VERSION-$(uname)-x86_64.sh
    EXPECTED_INSTALLER_SHA=$LINUX_SHA256
fi
URL=https://github.com/conda-forge/miniforge/releases/download/$MAMBAFORGE_VERSION/$MAMBAFORGE_SCRIPT_NAME

if [[ $CLEAN_BUILD  == true ]]; then
    rm -rf $EXPECTED_MAMBAFORGE_PATH
    if [[ -f $MAMBAFORGE_SCRIPT_NAME ]]; then
        rm $MAMBAFORGE_SCRIPT_NAME
    fi
fi

# Ensure conda is installed
if [ ! -f $EXPECTED_MAMBA_EXE ]; then
    echo "Mambaforge not found. Installing version ${MAMBAFORGE_VERSION}"
    if [ ! -f $MAMBAFORGE_SCRIPT_NAME ]; then
        # Download mambaforge
        if [ -x "$(which curl)" ]; then
            curl -L -O $URL
        elif [ -x "$(which wget)" ] ; then
            wget $URL
        else
            echo "Could not download Conda as wget and curl are not installed."
            exit 1
        fi
    fi

    # Compare the sha256 of the downloaded file to the expected sha256
    if [[ $OSTYPE == 'darwin'* ]]; then
        SHA256_DOWNLOADED=$(shasum -a 256 $MAMBAFORGE_SCRIPT_NAME)
    else
        SHA256_DOWNLOADED=$(sha256sum $MAMBAFORGE_SCRIPT_NAME)
    fi

    if [[ $SHA256_DOWNLOADED != $EXPECTED_INSTALLER_SHA ]]; then
        echo "sha256 of downloaded file does not match expected sha256, failing..."
        exit 1
    fi

    if [[ $OSTYPE == 'msys'* ]]; then
        # Replace all / with \ for windows batch support before passing in $EXPECTED_MAMBAFORGE_PATH
        cmd.exe /C "START /wait "" $MAMBAFORGE_SCRIPT_NAME /InstallationType=JustMe /RegisterPython=0 /S /D=${EXPECTED_MAMBAFORGE_PATH////\\}"
        # The paths in the Conda environment shell environments are Windows style. Convert to cygwin style
        cp $EXPECTED_MAMBAFORGE_PATH/etc/profile.d/conda.sh{,.orig}
        cat $EXPECTED_MAMBAFORGE_PATH/etc/profile.d/conda.sh.orig | \
          sed -e '/^export\ CONDA_/s/\\/\//g' | \
          sed -e '/^export\ CONDA_/s/\(\w\)\:/\/\1/g' > $EXPECTED_MAMBAFORGE_PATH/etc/profile.d/conda.sh
    else
        bash $MAMBAFORGE_SCRIPT_NAME -b -p $EXPECTED_MAMBAFORGE_PATH
    fi
    rm $MAMBAFORGE_SCRIPT_NAME
fi
