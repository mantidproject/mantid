#!/bin/bash -ex

# This script expects to be in a POSIX environment, the script clones the conda-recipes
# repo and then runs conda builds based on passed args. By default it only clones the
# source, you need to pass a flag to actually build something useful. If building a
# package dependent on a different one it will build and produce that package too.
#
# Script usage:
# package-conda WORKSPACE [options]
#
# Example command to build all of the packages:
# conda-build-recipes $WORKSPACE --build-mantid --build-qt --build-docs --build-workbench
#
# Expected args:
#   1. WORKSPACE: path to the workspace/source code that this should run inside
#                 (mantid repo). Windows Caveat: Only use / for this argument do
#                 not use \\ or \ in the path.
#
# Possible flags:
#   --build-mantid: build the mantid package using conda-build
#   --build-qt: build the qt package using conda-build (this will implicitly build mantid)
#   --build-docs: build the HTML/Qthelp documentation
#   --build-workbench: build the workbench package using conda-build (this will implicitly build qt and mantid)
#   --build-current-branch: build the packages from the latest commit in the currently checkout out branch
#   --release-version: indicate that this is a build for a stable release
#
# Possible parameters:
#   --clobber-yml: clobber the meta yaml files of each package build with conda-build, provide an absolute path to the yml file
#   --recipes-tag: a branch or tag that should be used for cloning the recipes
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source $SCRIPT_DIR/mamba-utils

# Setup expected variables
WORKSPACE=$1
if [[ -z "$WORKSPACE" ]]; then
    echo "A workspace argument is required"
    exit 1
fi
shift
if [[ $OSTYPE == "msys"* ]]; then
    if [[ "$WORKSPACE" == *'\'* ]]; then
        echo "You have \ or \\ in your Workspace path, this is not supported on Windows."
        exit 1
    fi
    WORKSPACE=${WORKSPACE////\\} # Replace // with \
    # Require git settings so that paths can be checked out with longer file names than 260 characters
    if [[ ! $(git config --system --get core.longpaths) == true ]]; then
        echo "This windows machine is does not have longpaths enabled for git, please run this command: git config --system core.longpaths true"
        exit 1
    fi
fi
RECIPES_DIR=$WORKSPACE/conda-recipes
SCRIPT_DIR=$WORKSPACE/buildconfig/Jenkins/Conda/

# Parse flags
ENABLE_BUILD_MANTID=false
ENABLE_BUILD_QT=false
ENABLE_BUILD_WORKBENCH=false
ENABLE_BUILD_DOCS=false
BUILD_CURRENT_BRANCH=false
RELEASE_VERSION=false
CLOBBER_FILE=
RECIPES_TAG=main

# Handle flag inputs
while [ ! $# -eq 0 ]
do
    case "$1" in
        --build-mantid) ENABLE_BUILD_MANTID=true ;;
        --build-qt) ENABLE_BUILD_QT=true ;;
        --build-workbench) ENABLE_BUILD_WORKBENCH=true ;;
        --build-docs) ENABLE_BUILD_DOCS=true ;;
        --build-current-branch) BUILD_CURRENT_BRANCH=true ;;
        --release-version) RELEASE_VERSION=true ;;
        --clobber-yml)
            CLOBBER_FILE="--clobber-file $2"
            shift ;;
        --recipes-tag)
            RECIPES_TAG="$2"
            shift ;;
        *)
            echo "Argument not accepted: $1"
            exit 1
            ;;
  esac
  shift
done

# Mamba
setup_mamba $WORKSPACE/mambaforge "package-conda"
mamba install boa conda-verify

# Clone the recipes
cd $WORKSPACE
if [[ -d conda-recipes ]]; then
    rm -rf conda-recipes
fi
git clone https://github.com/mantidproject/conda-recipes.git --depth=1 -b $RECIPES_TAG

# Update the git sha and version number when building packages from the current branch.
if [[ $BUILD_CURRENT_BRANCH == true ]]; then
    RECIPE_UPDATE_ARGS="dummy_token dummy_name dummy_email --local-only"
    #If it's a release version, pass an extra argument to use the patch version number
    if [[ $RELEASE_VERSION == true ]]; then
        RECIPE_UPDATE_ARGS="${RECIPE_UPDATE_ARGS} --release-version"
    fi
    $SCRIPT_DIR/update-conda-recipes.sh $RECIPE_UPDATE_ARGS
fi

# Run conda build. Use a known path so packages built in other steps can be
# copied to a known location and reused
export CONDA_BLD_PATH=$WORKSPACE/conda-bld
if [[ -d $CONDA_BLD_PATH ]]; then
    conda index $CONDA_BLD_PATH
fi
cd $RECIPES_DIR/recipes/

if [[ $OSTYPE == "msys" ]]; then
    WINDOWS_BUILD_OPTIONS="--no-build-id" # Do not use build id as it makes the path too long (>260 chars) for CMake (Legacy Windows API issue)
fi

if [[ $ENABLE_BUILD_MANTID == true ]]; then
    conda mambabuild ./mantid/ $CLOBBER_FILE $WINDOWS_BUILD_OPTIONS
fi
if [[ $ENABLE_BUILD_QT == true ]]; then
    conda mambabuild ./mantidqt/ $CLOBBER_FILE $WINDOWS_BUILD_OPTIONS
fi
if [[ $ENABLE_BUILD_DOCS == true ]]; then
    conda mambabuild ./mantiddocs/ $CLOBBER_FILE $WINDOWS_BUILD_OPTIONS
fi
if [[ $ENABLE_BUILD_WORKBENCH == true ]]; then
    conda mambabuild ./mantidworkbench/ $CLOBBER_FILE $WINDOWS_BUILD_OPTIONS
fi
