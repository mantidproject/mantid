#!/bin/bash -ex

# This script expects to be in a POSIX environment. Uses boa to build the suite of
# mantid packages. You must pass flags to specify which packages to build. If building
# a package dependent on another one it will either install a locally built package
# (if present from a previous build step) or build and produce that package too.
#
# Script usage:
# package-conda WORKSPACE [options]
#
# Example command to build all of the packages:
# package-conda $WORKSPACE --build-mantid --build-qt --build-docs --build-workbench
#
# Expected args:
#   1. WORKSPACE: path to the base of the working space for a build. The source
#                 must be checked out into a subdirectory and the final conda-bld
#                 outputs are placed in $WORKSPACE/conda-bld
#
# Possible flags:
#   --build-mantid-developer: build the mantid-developer metapackage using conda-build
#   --build-mantid: build the mantid package using conda-build
#   --build-qt: build the qt package using conda-build (this will implicitly build mantid)
#   --build-docs: build the HTML/Qthelp documentation
#   --build-workbench: build the workbench package using conda-build (this will implicitly build qt and mantid)
#   --git-tag: specify a tag for a release or nightly version
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source $SCRIPT_DIR/mamba-utils
start_time=$(date +%s)

# Setup expected variables
REPO_ROOT_DIR=$SCRIPT_DIR/../../..
WORKSPACE=$1
if [[ -z "$WORKSPACE" ]]; then
    echo "A workspace argument is required"
    exit 1
fi
shift
if [[ $OSTYPE == "msys"* ]]; then
    # Convert all slashes to forward slashes for consistency with the rest of the script.
    if [[ "$WORKSPACE" == *'\'* ]]; then
        WORKSPACE="${WORKSPACE//\\//}" # Replace \ with /
    fi
    # Require git settings so that paths can be checked out with longer file names than 260 characters
    if [[ ! $(git config --system --get core.longpaths) == true ]]; then
        echo "This windows machine is does not have longpaths enabled for git, please run this command: git config --system core.longpaths true"
        exit 1
    fi
fi
RECIPES_DIR=$REPO_ROOT_DIR/conda/recipes/

# Parse flags
ENABLE_BUILD_MANTID_DEVELOPER=false
ENABLE_BUILD_MANTID=false
ENABLE_BUILD_QT=false
ENABLE_BUILD_WORKBENCH=false
ENABLE_BUILD_DOCS=false
BUILD_WORKBENCH_WITH_DOCS=true

# Handle flag inputs
while [ ! $# -eq 0 ]
do
    case "$1" in
        --build-mantid-developer) ENABLE_BUILD_MANTID_DEVELOPER=true ;;
        --build-mantid) ENABLE_BUILD_MANTID=true ;;
        --build-qt) ENABLE_BUILD_QT=true ;;
        --build-workbench) ENABLE_BUILD_WORKBENCH=true ;;
        --build-docs) ENABLE_BUILD_DOCS=true ;;
        --build-workbench-without-docs)
            ENABLE_BUILD_WORKBENCH=true
            BUILD_WORKBENCH_WITH_DOCS=false
            ;;
        --git-tag)
            GIT_TAG="$2"
            shift ;;
        *)
            echo "Argument not accepted: $1"
            exit 1
            ;;
  esac
  shift
done


# Mamba
setup_mamba $WORKSPACE/mambaforge "package-conda" true
mamba install --yes boa conda-verify versioningit

# Clean up any legacy conda-recipes git clones
cd $WORKSPACE
if [[ -d conda-recipes ]]; then
    rm -rf conda-recipes
fi

# Create a git tag to be used for version information
cd $REPO_ROOT_DIR
if [[ -n "$GIT_TAG" ]]; then
    # If the tag already exists remove it first
    if [[ -n "$(git tag -l $GIT_TAG)" ]]; then
        git tag -d $GIT_TAG
    fi
    git tag -a $GIT_TAG -m "Tagging $GIT_TAG"
fi

# Set locale to avoid problems building the docs
# See https://unix.stackexchange.com/questions/87745/what-does-lc-all-c-do
export LC_ALL=C

# Use a known path so packages built in other steps can be
# copied to a known location and reused.
# Use the workspace root outside of the git tree or conda-build cannot
# copy the source to a working folder.
export CONDA_BLD_PATH=$WORKSPACE/conda-bld
if [[ -d $CONDA_BLD_PATH ]]; then
    python -m conda_index $CONDA_BLD_PATH
fi
cd $RECIPES_DIR

# Add the '--debug' option to EXTRA_BUILD_OPTIONS if you want conda build to provide verbose debug info
EXTRA_BUILD_OPTIONS="--debug "

if [[ $OSTYPE == "msys" ]]; then
    # Do not use build id as it makes the path too long (>260 chars) for CMake (Legacy Windows API issue)
    EXTRA_BUILD_OPTIONS+="--no-build-id"
elif [[ $OSTYPE == 'darwin'* ]]; then
    EXTRA_BUILD_OPTIONS+="-m ./osx_64.yaml"
fi

# Run conda build.
if [[ $ENABLE_BUILD_MANTID_DEVELOPER == true ]]; then
    conda mambabuild ./mantid-developer/ $EXTRA_BUILD_OPTIONS
fi
if [[ $ENABLE_BUILD_MANTID == true ]]; then
    conda mambabuild ./mantid/ $EXTRA_BUILD_OPTIONS
fi
if [[ $ENABLE_BUILD_QT == true ]]; then
    conda mambabuild ./mantidqt/ $EXTRA_BUILD_OPTIONS
fi
if [[ $ENABLE_BUILD_DOCS == true ]]; then
    conda mambabuild ./mantiddocs/ $EXTRA_BUILD_OPTIONS
fi
if [[ $ENABLE_BUILD_WORKBENCH == true ]]; then
    if [[ $BUILD_WORKBENCH_WITH_DOCS == false ]]; then
	export INCLUDE_MANTIDDOCS=False
    fi
    conda mambabuild ./mantidworkbench/ -c mantid/label/main $EXTRA_BUILD_OPTIONS
fi

# elapsed time with second resolution
end_time=$(date +%s)
elapsed=$(( end_time - start_time ))
echo "Conda packaging script took $elapsed seconds."
