#!/bin/bash -ex
###############################################################################
# LINUX/MAC SCRIPT TO DRIVE THE SYSTEM TESTS OF MANTID
#
# Notes:
#
# WORKSPACE, JOB_NAME, NODE_LABEL GIT_COMMIT are environment variables that
# are set by Jenkins. The last one corresponds to any labels set on a slave.
###############################################################################

###############################################################################
# Print out the versions of things we are using
###############################################################################
if [ $(command -v cmake3) ]; then
    CMAKE_EXE=cmake3
else
    CMAKE_EXE=cmake
fi
$CMAKE_EXE --version

###############################################################################
# Wraps calls for gui emulation
###############################################################################
if [ $(command -v xvfb-run) ]; then
  X11_RUNNER="xvfb-run"
  X11_RUNNER_ARGS=--server-args="-screen 0 640x480x24"
else
  X11_RUNNER="eval"
  X11_RUNNER_ARGS=""
fi

###############################################################################
# Set up the location for the local object store outside of the build and
# source tree, which can be shared by multiple builds.
# It defaults to a MantidExternalData directory within the HOME directory.
# It can be overridden by setting the MANTID_DATA_STORE environment variable.
###############################################################################
if [ -z "$MANTID_DATA_STORE" ]; then
  export MANTID_DATA_STORE=$HOME/MantidExternalData
fi

# -z checks for empty string
if [ -z "$EXTRA_ARGS" ]; then
  EXTRA_ARGS=''
fi

###############################################################################
# Check whether we want to run installer tests or just system tests.
# Default is true to preserve oringinal behaviour of the script.
###############################################################################
if [ -z "$RUN_INSTALLER_TESTS" ]; then
  RUN_INSTALLER_TESTS=true
fi

###############################################################################
# Create the build directory if it doesn't exist
###############################################################################
[ -d $WORKSPACE/build ] || mkdir $WORKSPACE/build
cd $WORKSPACE/build

# Remove (possibly) stale files
#   build/ExternalData/**: data files will change over time and removing
#                          the links helps keep it fresh
rm -rf $WORKSPACE/build/ExternalData

###############################################################################
# CMake configuration if it has not already been configured.
# We use the special flag that only creates the targets for the data
###############################################################################
if [[ ! -e $WORKSPACE/build/CMakeCache.txt ]]; then
  ${CMAKE_EXE} -DMANTID_DATA_STORE=${MANTID_DATA_STORE} -DDATA_TARGETS_ONLY=ON ..
else
  ${CMAKE_EXE} .
fi

###############################################################################
# Build step
###############################################################################
${CMAKE_EXE} --build . -- StandardTestData
${CMAKE_EXE} --build . -- SystemTestData

###############################################################################
# Run the tests
###############################################################################
# Remove any user settings
userconfig_dir=$HOME/.mantid
rm -fr $userconfig_dir
# Remove GUI qsettings files
rm -f ~/.config/mantidproject/mantidworkbench.ini

# Turn off any auto updating on startup
mkdir -p $userconfig_dir
userprops=$userconfig_dir/Mantid.user.properties
echo "UpdateInstrumentDefinitions.OnStartup = 0" > $userprops
echo "usagereports.enabled = 0" >> $userprops
echo "CheckMantidVersion.OnStartup = 0" >> $userprops

# Remove mismatch files which have not been cleaned up yet
default_save_directory=${WORKSPACE}/build/Testing/SystemTests/scripts/
find ${default_save_directory} -name "*-mismatch*" -delete

# Run. Use SYSTEST_NPROCS over BUILD_THREADS if defined
BUILD_THREADS=${BUILD_THREADS:-1}
SYSTEST_NPROCS=${SYSTEST_NPROCS:-$BUILD_THREADS}
echo "The list of system tests will be split and executed over ${SYSTEST_NPROCS} processes."

@JEMALLOC_DEFINITIONS@

# Running installer tests script only works if we have a package
if [[ ${RUN_INSTALLER_TESTS} == true ]]; then
  PKGDIR=${WORKSPACE}/build
  ${X11_RUNNER} "${X11_RUNNER_ARGS}" LD_PRELOAD=${LOCAL_PRELOAD} python3
  $WORKSPACE/Testing/SystemTests/scripts/InstallerTests.py -o -d $PKGDIR -j ${SYSTEST_NPROCS} $EXTRA_ARGS
# Run systems tests without a package
else
  # For multi-config generators the pythonpath should be set to a config-dependent subdirectory of the bin folder
  if [ -f ${WORKSPACE}/build/bin/$BUILD_CONFIG/ ]; then
    LOCAL_PYTHONPATH=${WORKSPACE}/build/bin/$BUILD_CONFIG/
  else
    LOCAL_PYTHONPATH=${WORKSPACE}/build/bin/
  fi
  SYSTEMTEST_ARGS="--loglevel=information --executable=python3 -j ${SYSTEST_NPROCS} --quiet --output-on-failure"
  ${X11_RUNNER} "${X11_RUNNER_ARGS}" LD_PRELOAD=${LOCAL_PRELOAD} PYTHONPATH=${LOCAL_PYTHONPATH} python3
  $WORKSPACE/Testing/SystemTests/scripts/runSystemTests.py $SYSTEMTEST_ARGS $EXTRA_ARGS
fi
