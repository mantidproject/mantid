#!/bin/bash
# Check that the source conforms to the clang-format style
# Assumes that this will run on a node where the clang-format
# binaries have a version suffix and BUILD_URL is set in the
# running environment

# clang-format executable

# Rely on pre-commit if clang format is in the config.yaml
if grep -F "id: clang-format" $WORKSPACE/.pre-commit-config.yaml; then
  echo "Pre-commit will handle clang-format. Skipping check."
  exit 0
fi

SCRIPT_DIR=$(dirname "$0")
if [[ ${JOB_NAME} == *pull_requests* ]]; then
    # This relies on the fact pull requests use pull/$PR-NAME
    # which squashes the branch into a single merge commit
    cd $WORKSPACE

    if ${SCRIPT_DIR}/check_for_changes cpp; then
        echo "No C++ files have changed. Skipping check."
        exit 0
    fi
fi

CLANG_FORMAT_EXE=clang-format-6.0
CLANG_FORMAT=$(which $CLANG_FORMAT_EXE)
if [ -z "$CLANG_FORMAT" ]; then
  echo "Cannot find ${CLANG_FORMAT_EXE} executable"
  exit 1
else
  ${CLANG_FORMAT} --version
fi

# git needs to have a minimal coniguration for git commit to work
if [ "$(git config user.name)" == "" ]; then
  git config user.name mantid-builder
fi
if [ "$(git config user.email)" == "" ]; then
  git config user.email "mantid-buildserver@mantidproject.org"
fi

sha=`git rev-parse --short HEAD`

if [ -x "$(command -v parallel)" ]; then
  echo "Using GNU parallel"
  runner="parallel ${CLANG_FORMAT} -i {}"
else
  echo "Using xargs"
  runner="xargs ${CLANG_FORMAT} -i"
fi

# format
find Framework MantidPlot qt \( -name '*.cpp' -o -name '*.h' -o -name '*.tcc' \) | ${runner}

git add -A
echo
if git diff --cached --quiet
then
    echo "code is formatted correctly"
    exit 0
else
    echo "code is not formatted correctly!"
    echo ".cpp/.h files are required to be formatted with ${CLANG_FORMAT_EXE}"
    git commit --no-verify --quiet -m "clang-format PR${PR} ${sha}"
    git format-patch --quiet HEAD~
    echo
    echo "To fix download ${BUILD_URL}artifact/0001-clang-format-PR${PR}-${sha}.patch"
    echo "then run the following in your mantid directory:"
    echo "'git apply /path/to/0001-clang-format-PR${PR}-${sha}.patch'"
    echo "and commit the changes."
    echo
    exit 1
fi
