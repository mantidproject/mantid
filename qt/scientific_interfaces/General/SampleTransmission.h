// Mantid Repository : https://github.com/mantidproject/mantid
//
// Copyright &copy; 2018 ISIS Rutherford Appleton Laboratory UKRI,
//     NScD Oak Ridge National Laboratory, European Spallation Source
//     & Institut Laue - Langevin
// SPDX - License - Identifier: GPL - 3.0 +
#ifndef MANTIDQTCUSTOMINTERFACES_SAMPLETRANSMISSION_H_
#define MANTIDQTCUSTOMINTERFACES_SAMPLETRANSMISSION_H_

//----------------------
// Includes
//----------------------
#include "MantidAPI/MatrixWorkspace_fwd.h"
#include "MantidQtWidgets/Common/AlgorithmRunner.h"
#include "MantidQtWidgets/Common/UserSubWindow.h"
#include "MantidQtWidgets/Common/WorkspaceObserver.h"
#include "ui_SampleTransmission.h"

namespace MantidQt {
namespace CustomInterfaces {
class SampleTransmission : public MantidQt::API::UserSubWindow {
  Q_OBJECT

public:
  /// The name of the interface as registered into the factory
  static std::string name() { return "Sample Transmission Calculator"; }
  // This interface's categories.
  static QString categoryInfo() { return "General"; }

public:
  /// Default Constructor
  explicit SampleTransmission(QWidget *parent = nullptr);

private slots:
  /// Opens the Qt help page for the interface
  void showHelp();
  /// Runs the calculation
  void calculate();
  /// Handle completion of the calculation algorithm
  void algorithmComplete(bool error);

private:
  /// Initialize the layout
  void initLayout() override;
  /// Validates UI input
  bool validate(bool silent = false);

private:
  /// The form generated by Qt Designer
  Ui::SampleTransmission m_uiForm;
  /// Algorithm runner
  API::AlgorithmRunner *m_algRunner;
};
} // namespace CustomInterfaces
} // namespace MantidQt

#endif // MANTIDQTCUSTOMINTERFACES_SAMPLETRANSMISSION_H_
