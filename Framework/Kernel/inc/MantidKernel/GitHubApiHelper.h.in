// Mantid Repository : https://github.com/mantidproject/mantid
//
// Copyright &copy; 2016 ISIS Rutherford Appleton Laboratory UKRI,
//   NScD Oak Ridge National Laboratory, European Spallation Source,
//   Institut Laue - Langevin & CSNS, Institute of High Energy Physics, CAS
// SPDX - License - Identifier: GPL - 3.0 +
#pragma once

#include "MantidKernel/InternetHelper.h"

namespace Mantid {
namespace Kernel {

namespace  {
 const static std::string DEFAULT_GITHUB_TOKEN("@GITHUB_AUTHORIZATION_TOKEN@");
}

/** GitHubApiHelper : A helper class for supporting access to the github api
through HTTP and HTTPS, inherits from the InternetHelper.
This class automatically adds the authorization to a read only account.
*/
class MANTID_KERNEL_DLL GitHubApiHelper : public InternetHelper {
public:
  GitHubApiHelper();
  GitHubApiHelper(const Kernel::ProxyInfo &proxy);
  virtual ~GitHubApiHelper() = default;

  void reset() override;
  bool isAuthenticated();
  /**
   * String describing the rate limit status. This uses a url that github claims
   * will never count against your REST API limit.
   * https://developer.github.com/v3/rate_limit/
   *
   * @return description of the status or an empty string
   */
  std::string getRateLimitDescription();

protected:
  virtual void processResponseHeaders(const Poco::Net::HTTPResponse &res) override;
  virtual int sendRequestAndProcess(Poco::Net::HTTPClientSession &session,
    Poco::URI &uri, std::ostream &responseStream) override;
private:
  int processAnonymousRequest(Poco::URI &uri, std::ostream &responseStream);
  void addAuthenticationToken();
  /**
   * API token for github access. This is only created during construction.
   */
  std::string m_api_token;
};

} // namespace Kernel
} // namespace Mantid
