/* ICat3H.h
   Generated by gSOAP 2.8.15 from ICat3Service.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef ICat3H_H
#define ICat3H_H
#include "ICat3Stub.h"

namespace ICat3 {

#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap *, const void *, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap *);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap *);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap *, int *);
SOAP_FMAC3 int SOAP_FMAC4
soap_putelement(struct soap *, const void *, const char *, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap *);

SOAP_FMAC3 const char **SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void *SOAP_FMAC4
ICat3_instantiate(struct soap *, int, const char *, const char *, size_t *);
SOAP_FMAC3 int SOAP_FMAC4 ICat3_fdelete(struct soap_clist *);
SOAP_FMAC3 void *SOAP_FMAC4 soap_class_id_enter(struct soap *, const char *,
                                                void *, int, size_t,
                                                const char *, const char *);

SOAP_FMAC3 void *SOAP_FMAC4
soap_container_id_forward(struct soap *, const char *, void *, size_t, int, int,
                          size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 ICat3_container_insert(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_byte
#define SOAP_TYPE_ICat3_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap *, char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_byte(struct soap *, const char *, int, const char *, const char *);
SOAP_FMAC3 char *SOAP_FMAC4
soap_in_byte(struct soap *, const char *, char *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_byte(struct soap *, const char *, const char *, const char *);

#ifndef soap_write_byte
#define soap_write_byte(soap, data)                                            \
  (ICat3::soap_serialize_byte(soap, data),                                     \
   soap_begin_send(soap) || ICat3::soap_put_byte(soap, data, "byte", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 char *SOAP_FMAC4
soap_get_byte(struct soap *, char *, const char *, const char *);

#ifndef soap_read_byte
#define soap_read_byte(soap, data)                                             \
  (soap_begin_recv(soap) || !ICat3::soap_get_byte(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_int
#define SOAP_TYPE_ICat3_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap *, int *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_int(struct soap *, const char *, int, const int *, const char *);
SOAP_FMAC3 int *SOAP_FMAC4
soap_in_int(struct soap *, const char *, int *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_int(struct soap *, const int *, const char *, const char *);

#ifndef soap_write_int
#define soap_write_int(soap, data)                                             \
  (ICat3::soap_serialize_int(soap, data),                                      \
   soap_begin_send(soap) || ICat3::soap_put_int(soap, data, "int", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 int *SOAP_FMAC4
soap_get_int(struct soap *, int *, const char *, const char *);

#ifndef soap_read_int
#define soap_read_int(soap, data)                                              \
  (soap_begin_recv(soap) || !ICat3::soap_get_int(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_LONG64
#define SOAP_TYPE_ICat3_LONG64 (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap *, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_LONG64(struct soap *, const char *, int, const LONG64 *, const char *);
SOAP_FMAC3 LONG64 *SOAP_FMAC4
soap_in_LONG64(struct soap *, const char *, LONG64 *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_LONG64(struct soap *, const LONG64 *, const char *, const char *);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data)                                          \
  (ICat3::soap_serialize_LONG64(soap, data),                                   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_LONG64(soap, data, "long", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 LONG64 *SOAP_FMAC4
soap_get_LONG64(struct soap *, LONG64 *, const char *, const char *);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data)                                           \
  (soap_begin_recv(soap) || !ICat3::soap_get_LONG64(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_float
#define SOAP_TYPE_ICat3_float (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_float(struct soap *, float *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_float(struct soap *, const char *, int, const float *, const char *);
SOAP_FMAC3 float *SOAP_FMAC4
soap_in_float(struct soap *, const char *, float *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_float(struct soap *, const float *, const char *, const char *);

#ifndef soap_write_float
#define soap_write_float(soap, data)                                           \
  (ICat3::soap_serialize_float(soap, data),                                    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_float(soap, data, "float", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 float *SOAP_FMAC4
soap_get_float(struct soap *, float *, const char *, const char *);

#ifndef soap_read_float
#define soap_read_float(soap, data)                                            \
  (soap_begin_recv(soap) || !ICat3::soap_get_float(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_double
#define SOAP_TYPE_ICat3_double (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap *, double *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_double(struct soap *, const char *, int, const double *, const char *);
SOAP_FMAC3 double *SOAP_FMAC4
soap_in_double(struct soap *, const char *, double *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_double(struct soap *, const double *, const char *, const char *);

#ifndef soap_write_double
#define soap_write_double(soap, data)                                          \
  (ICat3::soap_serialize_double(soap, data),                                   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_double(soap, data, "double", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 double *SOAP_FMAC4
soap_get_double(struct soap *, double *, const char *, const char *);

#ifndef soap_read_double
#define soap_read_double(soap, data)                                           \
  (soap_begin_recv(soap) || !ICat3::soap_get_double(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_time
#define SOAP_TYPE_ICat3_time (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap *, time_t *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_time(struct soap *, const char *, int, const time_t *, const char *);
SOAP_FMAC3 time_t *SOAP_FMAC4
soap_in_time(struct soap *, const char *, time_t *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_time(struct soap *, const time_t *, const char *, const char *);

#ifndef soap_write_time
#define soap_write_time(soap, data)                                            \
  (ICat3::soap_serialize_time(soap, data),                                     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_time(soap, data, "dateTime", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 time_t *SOAP_FMAC4
soap_get_time(struct soap *, time_t *, const char *, const char *);

#ifndef soap_read_time
#define soap_read_time(soap, data)                                             \
  (soap_begin_recv(soap) || !ICat3::soap_get_time(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__elementType
#define SOAP_TYPE_ICat3_ns1__elementType (371)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_ns1__elementType(struct soap *, enum ns1__elementType *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__elementType(struct soap *, const char *, int,
                          const enum ns1__elementType *, const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S
soap_ns1__elementType2s(struct soap *, enum ns1__elementType);
SOAP_FMAC3 enum ns1__elementType *SOAP_FMAC4
soap_in_ns1__elementType(struct soap *, const char *, enum ns1__elementType *,
                         const char *);

SOAP_FMAC3S int SOAP_FMAC4S
soap_s2ns1__elementType(struct soap *, const char *, enum ns1__elementType *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_ns1__elementType(struct soap *, const enum ns1__elementType *,
                          const char *, const char *);

#ifndef soap_write_ns1__elementType
#define soap_write_ns1__elementType(soap, data)                                \
  (ICat3::soap_serialize_ns1__elementType(soap, data),                         \
   soap_begin_send(soap) || ICat3::soap_put_ns1__elementType(                  \
                                soap, data, "ns1:elementType", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__elementType *SOAP_FMAC4
soap_get_ns1__elementType(struct soap *, enum ns1__elementType *, const char *,
                          const char *);

#ifndef soap_read_ns1__elementType
#define soap_read_ns1__elementType(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__elementType(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__parameterType
#define SOAP_TYPE_ICat3_ns1__parameterType (369)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_ns1__parameterType(struct soap *, enum ns1__parameterType *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__parameterType(struct soap *, const char *, int,
                            const enum ns1__parameterType *, const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S
soap_ns1__parameterType2s(struct soap *, enum ns1__parameterType);
SOAP_FMAC3 enum ns1__parameterType *SOAP_FMAC4
soap_in_ns1__parameterType(struct soap *, const char *,
                           enum ns1__parameterType *, const char *);

SOAP_FMAC3S int SOAP_FMAC4S
soap_s2ns1__parameterType(struct soap *, const char *,
                          enum ns1__parameterType *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_ns1__parameterType(struct soap *, const enum ns1__parameterType *,
                            const char *, const char *);

#ifndef soap_write_ns1__parameterType
#define soap_write_ns1__parameterType(soap, data)                              \
  (ICat3::soap_serialize_ns1__parameterType(soap, data),                       \
   soap_begin_send(soap) || ICat3::soap_put_ns1__parameterType(                \
                                soap, data, "ns1:parameterType", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__parameterType *SOAP_FMAC4
soap_get_ns1__parameterType(struct soap *, enum ns1__parameterType *,
                            const char *, const char *);

#ifndef soap_read_ns1__parameterType
#define soap_read_ns1__parameterType(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__parameterType(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__keywordType
#define SOAP_TYPE_ICat3_ns1__keywordType (367)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_ns1__keywordType(struct soap *, enum ns1__keywordType *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__keywordType(struct soap *, const char *, int,
                          const enum ns1__keywordType *, const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S
soap_ns1__keywordType2s(struct soap *, enum ns1__keywordType);
SOAP_FMAC3 enum ns1__keywordType *SOAP_FMAC4
soap_in_ns1__keywordType(struct soap *, const char *, enum ns1__keywordType *,
                         const char *);

SOAP_FMAC3S int SOAP_FMAC4S
soap_s2ns1__keywordType(struct soap *, const char *, enum ns1__keywordType *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_ns1__keywordType(struct soap *, const enum ns1__keywordType *,
                          const char *, const char *);

#ifndef soap_write_ns1__keywordType
#define soap_write_ns1__keywordType(soap, data)                                \
  (ICat3::soap_serialize_ns1__keywordType(soap, data),                         \
   soap_begin_send(soap) || ICat3::soap_put_ns1__keywordType(                  \
                                soap, data, "ns1:keywordType", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__keywordType *SOAP_FMAC4
soap_get_ns1__keywordType(struct soap *, enum ns1__keywordType *, const char *,
                          const char *);

#ifndef soap_read_ns1__keywordType
#define soap_read_ns1__keywordType(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__keywordType(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__comparisonOperator
#define SOAP_TYPE_ICat3_ns1__comparisonOperator (365)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_ns1__comparisonOperator(struct soap *,
                                     enum ns1__comparisonOperator *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__comparisonOperator(struct soap *, const char *, int,
                                 const enum ns1__comparisonOperator *,
                                 const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S
soap_ns1__comparisonOperator2s(struct soap *, enum ns1__comparisonOperator);
SOAP_FMAC3 enum ns1__comparisonOperator *SOAP_FMAC4
soap_in_ns1__comparisonOperator(struct soap *, const char *,
                                enum ns1__comparisonOperator *, const char *);

SOAP_FMAC3S int SOAP_FMAC4S
soap_s2ns1__comparisonOperator(struct soap *, const char *,
                               enum ns1__comparisonOperator *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_ns1__comparisonOperator(struct soap *,
                                 const enum ns1__comparisonOperator *,
                                 const char *, const char *);

#ifndef soap_write_ns1__comparisonOperator
#define soap_write_ns1__comparisonOperator(soap, data)                         \
  (ICat3::soap_serialize_ns1__comparisonOperator(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put_ns1__comparisonOperator(           \
                                soap, data, "ns1:comparisonOperator", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__comparisonOperator *SOAP_FMAC4
soap_get_ns1__comparisonOperator(struct soap *, enum ns1__comparisonOperator *,
                                 const char *, const char *);

#ifndef soap_read_ns1__comparisonOperator
#define soap_read_ns1__comparisonOperator(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__comparisonOperator(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__parameterValueType
#define SOAP_TYPE_ICat3_ns1__parameterValueType (363)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_ns1__parameterValueType(struct soap *,
                                     enum ns1__parameterValueType *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__parameterValueType(struct soap *, const char *, int,
                                 const enum ns1__parameterValueType *,
                                 const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S
soap_ns1__parameterValueType2s(struct soap *, enum ns1__parameterValueType);
SOAP_FMAC3 enum ns1__parameterValueType *SOAP_FMAC4
soap_in_ns1__parameterValueType(struct soap *, const char *,
                                enum ns1__parameterValueType *, const char *);

SOAP_FMAC3S int SOAP_FMAC4S
soap_s2ns1__parameterValueType(struct soap *, const char *,
                               enum ns1__parameterValueType *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_ns1__parameterValueType(struct soap *,
                                 const enum ns1__parameterValueType *,
                                 const char *, const char *);

#ifndef soap_write_ns1__parameterValueType
#define soap_write_ns1__parameterValueType(soap, data)                         \
  (ICat3::soap_serialize_ns1__parameterValueType(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put_ns1__parameterValueType(           \
                                soap, data, "ns1:parameterValueType", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__parameterValueType *SOAP_FMAC4
soap_get_ns1__parameterValueType(struct soap *, enum ns1__parameterValueType *,
                                 const char *, const char *);

#ifndef soap_read_ns1__parameterValueType
#define soap_read_ns1__parameterValueType(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__parameterValueType(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__sampleInclude
#define SOAP_TYPE_ICat3_ns1__sampleInclude (361)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_ns1__sampleInclude(struct soap *, enum ns1__sampleInclude *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__sampleInclude(struct soap *, const char *, int,
                            const enum ns1__sampleInclude *, const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S
soap_ns1__sampleInclude2s(struct soap *, enum ns1__sampleInclude);
SOAP_FMAC3 enum ns1__sampleInclude *SOAP_FMAC4
soap_in_ns1__sampleInclude(struct soap *, const char *,
                           enum ns1__sampleInclude *, const char *);

SOAP_FMAC3S int SOAP_FMAC4S
soap_s2ns1__sampleInclude(struct soap *, const char *,
                          enum ns1__sampleInclude *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_ns1__sampleInclude(struct soap *, const enum ns1__sampleInclude *,
                            const char *, const char *);

#ifndef soap_write_ns1__sampleInclude
#define soap_write_ns1__sampleInclude(soap, data)                              \
  (ICat3::soap_serialize_ns1__sampleInclude(soap, data),                       \
   soap_begin_send(soap) || ICat3::soap_put_ns1__sampleInclude(                \
                                soap, data, "ns1:sampleInclude", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__sampleInclude *SOAP_FMAC4
soap_get_ns1__sampleInclude(struct soap *, enum ns1__sampleInclude *,
                            const char *, const char *);

#ifndef soap_read_ns1__sampleInclude
#define soap_read_ns1__sampleInclude(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__sampleInclude(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__restrictionAttributes
#define SOAP_TYPE_ICat3_ns1__restrictionAttributes (359)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_ns1__restrictionAttributes(struct soap *,
                                        enum ns1__restrictionAttributes *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__restrictionAttributes(struct soap *, const char *, int,
                                    const enum ns1__restrictionAttributes *,
                                    const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S
soap_ns1__restrictionAttributes2s(struct soap *,
                                  enum ns1__restrictionAttributes);
SOAP_FMAC3 enum ns1__restrictionAttributes *SOAP_FMAC4
soap_in_ns1__restrictionAttributes(struct soap *, const char *,
                                   enum ns1__restrictionAttributes *,
                                   const char *);

SOAP_FMAC3S int SOAP_FMAC4S
soap_s2ns1__restrictionAttributes(struct soap *, const char *,
                                  enum ns1__restrictionAttributes *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_ns1__restrictionAttributes(struct soap *,
                                    const enum ns1__restrictionAttributes *,
                                    const char *, const char *);

#ifndef soap_write_ns1__restrictionAttributes
#define soap_write_ns1__restrictionAttributes(soap, data)                      \
  (ICat3::soap_serialize_ns1__restrictionAttributes(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_ns1__restrictionAttributes(                             \
           soap, data, "ns1:restrictionAttributes", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__restrictionAttributes *SOAP_FMAC4
soap_get_ns1__restrictionAttributes(struct soap *,
                                    enum ns1__restrictionAttributes *,
                                    const char *, const char *);

#ifndef soap_read_ns1__restrictionAttributes
#define soap_read_ns1__restrictionAttributes(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__restrictionAttributes(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__investigationInclude
#define SOAP_TYPE_ICat3_ns1__investigationInclude (357)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_ns1__investigationInclude(struct soap *,
                                       enum ns1__investigationInclude *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__investigationInclude(struct soap *, const char *, int,
                                   const enum ns1__investigationInclude *,
                                   const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S
soap_ns1__investigationInclude2s(struct soap *, enum ns1__investigationInclude);
SOAP_FMAC3 enum ns1__investigationInclude *SOAP_FMAC4
soap_in_ns1__investigationInclude(struct soap *, const char *,
                                  enum ns1__investigationInclude *,
                                  const char *);

SOAP_FMAC3S int SOAP_FMAC4S
soap_s2ns1__investigationInclude(struct soap *, const char *,
                                 enum ns1__investigationInclude *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_ns1__investigationInclude(struct soap *,
                                   const enum ns1__investigationInclude *,
                                   const char *, const char *);

#ifndef soap_write_ns1__investigationInclude
#define soap_write_ns1__investigationInclude(soap, data)                       \
  (ICat3::soap_serialize_ns1__investigationInclude(soap, data),                \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_ns1__investigationInclude(                              \
           soap, data, "ns1:investigationInclude", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__investigationInclude *SOAP_FMAC4
soap_get_ns1__investigationInclude(struct soap *,
                                   enum ns1__investigationInclude *,
                                   const char *, const char *);

#ifndef soap_read_ns1__investigationInclude
#define soap_read_ns1__investigationInclude(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__investigationInclude(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__datasetInclude
#define SOAP_TYPE_ICat3_ns1__datasetInclude (355)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_ns1__datasetInclude(struct soap *, enum ns1__datasetInclude *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__datasetInclude(struct soap *, const char *, int,
                             const enum ns1__datasetInclude *, const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S
soap_ns1__datasetInclude2s(struct soap *, enum ns1__datasetInclude);
SOAP_FMAC3 enum ns1__datasetInclude *SOAP_FMAC4
soap_in_ns1__datasetInclude(struct soap *, const char *,
                            enum ns1__datasetInclude *, const char *);

SOAP_FMAC3S int SOAP_FMAC4S
soap_s2ns1__datasetInclude(struct soap *, const char *,
                           enum ns1__datasetInclude *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_ns1__datasetInclude(struct soap *, const enum ns1__datasetInclude *,
                             const char *, const char *);

#ifndef soap_write_ns1__datasetInclude
#define soap_write_ns1__datasetInclude(soap, data)                             \
  (ICat3::soap_serialize_ns1__datasetInclude(soap, data),                      \
   soap_begin_send(soap) || ICat3::soap_put_ns1__datasetInclude(               \
                                soap, data, "ns1:datasetInclude", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__datasetInclude *SOAP_FMAC4
soap_get_ns1__datasetInclude(struct soap *, enum ns1__datasetInclude *,
                             const char *, const char *);

#ifndef soap_read_ns1__datasetInclude
#define soap_read_ns1__datasetInclude(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__datasetInclude(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__datafileInclude
#define SOAP_TYPE_ICat3_ns1__datafileInclude (353)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_ns1__datafileInclude(struct soap *, enum ns1__datafileInclude *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__datafileInclude(struct soap *, const char *, int,
                              const enum ns1__datafileInclude *, const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S
soap_ns1__datafileInclude2s(struct soap *, enum ns1__datafileInclude);
SOAP_FMAC3 enum ns1__datafileInclude *SOAP_FMAC4
soap_in_ns1__datafileInclude(struct soap *, const char *,
                             enum ns1__datafileInclude *, const char *);

SOAP_FMAC3S int SOAP_FMAC4S
soap_s2ns1__datafileInclude(struct soap *, const char *,
                            enum ns1__datafileInclude *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_ns1__datafileInclude(struct soap *, const enum ns1__datafileInclude *,
                              const char *, const char *);

#ifndef soap_write_ns1__datafileInclude
#define soap_write_ns1__datafileInclude(soap, data)                            \
  (ICat3::soap_serialize_ns1__datafileInclude(soap, data),                     \
   soap_begin_send(soap) || ICat3::soap_put_ns1__datafileInclude(              \
                                soap, data, "ns1:datafileInclude", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__datafileInclude *SOAP_FMAC4
soap_get_ns1__datafileInclude(struct soap *, enum ns1__datafileInclude *,
                              const char *, const char *);

#ifndef soap_read_ns1__datafileInclude
#define soap_read_ns1__datafileInclude(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__datafileInclude(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__logicalOperator
#define SOAP_TYPE_ICat3_ns1__logicalOperator (351)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_ns1__logicalOperator(struct soap *, enum ns1__logicalOperator *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__logicalOperator(struct soap *, const char *, int,
                              const enum ns1__logicalOperator *, const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S
soap_ns1__logicalOperator2s(struct soap *, enum ns1__logicalOperator);
SOAP_FMAC3 enum ns1__logicalOperator *SOAP_FMAC4
soap_in_ns1__logicalOperator(struct soap *, const char *,
                             enum ns1__logicalOperator *, const char *);

SOAP_FMAC3S int SOAP_FMAC4S
soap_s2ns1__logicalOperator(struct soap *, const char *,
                            enum ns1__logicalOperator *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_ns1__logicalOperator(struct soap *, const enum ns1__logicalOperator *,
                              const char *, const char *);

#ifndef soap_write_ns1__logicalOperator
#define soap_write_ns1__logicalOperator(soap, data)                            \
  (ICat3::soap_serialize_ns1__logicalOperator(soap, data),                     \
   soap_begin_send(soap) || ICat3::soap_put_ns1__logicalOperator(              \
                                soap, data, "ns1:logicalOperator", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__logicalOperator *SOAP_FMAC4
soap_get_ns1__logicalOperator(struct soap *, enum ns1__logicalOperator *,
                              const char *, const char *);

#ifndef soap_read_ns1__logicalOperator
#define soap_read_ns1__logicalOperator(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__logicalOperator(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_bool
#define SOAP_TYPE_ICat3_bool (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap *, bool *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_bool(struct soap *, const char *, int, const bool *, const char *);

SOAP_FMAC3S const char *SOAP_FMAC4S soap_bool2s(struct soap *, bool);
SOAP_FMAC3 bool *SOAP_FMAC4
soap_in_bool(struct soap *, const char *, bool *, const char *);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap *, const char *, bool *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_bool(struct soap *, const bool *, const char *, const char *);

#ifndef soap_write_bool
#define soap_write_bool(soap, data)                                            \
  (ICat3::soap_serialize_bool(soap, data),                                     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_bool(soap, data, "boolean", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 bool *SOAP_FMAC4
soap_get_bool(struct soap *, bool *, const char *, const char *);

#ifndef soap_read_bool
#define soap_read_bool(soap, data)                                             \
  (soap_begin_recv(soap) || !ICat3::soap_get_bool(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_ns1__elementType_
#define SOAP_TYPE_ICat3_ns1__elementType_ (372)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__elementType_(struct soap *, const char *, int,
                           const ns1__elementType_ *, const char *);
SOAP_FMAC3 ns1__elementType_ *SOAP_FMAC4
soap_in_ns1__elementType_(struct soap *, const char *, ns1__elementType_ *,
                          const char *);

#ifndef soap_write_ns1__elementType_
#define soap_write_ns1__elementType_(soap, data)                               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:elementType", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__elementType_ *SOAP_FMAC4
soap_get_ns1__elementType_(struct soap *, ns1__elementType_ *, const char *,
                           const char *);

#ifndef soap_read_ns1__elementType_
#define soap_read_ns1__elementType_(soap, data)                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__elementType_(soap, data, NULL, NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__elementType_ *SOAP_FMAC2
soap_instantiate_ns1__elementType_(struct soap *, int, const char *,
                                   const char *, size_t *);

inline ns1__elementType_ *soap_new_ns1__elementType_(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__elementType_(soap, n, NULL, NULL, NULL);
}

inline ns1__elementType_ *
soap_new_req_ns1__elementType_(struct soap *soap,
                               enum ns1__elementType __item) {
  ns1__elementType_ *_p =
      soap_instantiate_ns1__elementType_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__elementType_::__item = __item;
  }
  return _p;
}

inline ns1__elementType_ *
soap_new_set_ns1__elementType_(struct soap *soap, enum ns1__elementType __item,
                               char *__item1) {
  ns1__elementType_ *_p =
      soap_instantiate_ns1__elementType_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__elementType_::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__elementType_(struct soap *soap,
                                          ns1__elementType_ *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__elementType_(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__parameterType_
#define SOAP_TYPE_ICat3_ns1__parameterType_ (370)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__parameterType_(struct soap *, const char *, int,
                             const ns1__parameterType_ *, const char *);
SOAP_FMAC3 ns1__parameterType_ *SOAP_FMAC4
soap_in_ns1__parameterType_(struct soap *, const char *, ns1__parameterType_ *,
                            const char *);

#ifndef soap_write_ns1__parameterType_
#define soap_write_ns1__parameterType_(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:parameterType", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterType_ *SOAP_FMAC4
soap_get_ns1__parameterType_(struct soap *, ns1__parameterType_ *, const char *,
                             const char *);

#ifndef soap_read_ns1__parameterType_
#define soap_read_ns1__parameterType_(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__parameterType_(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__parameterType_ *SOAP_FMAC2
soap_instantiate_ns1__parameterType_(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__parameterType_ *soap_new_ns1__parameterType_(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__parameterType_(soap, n, NULL, NULL, NULL);
}

inline ns1__parameterType_ *
soap_new_req_ns1__parameterType_(struct soap *soap,
                                 enum ns1__parameterType __item) {
  ns1__parameterType_ *_p =
      soap_instantiate_ns1__parameterType_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__parameterType_::__item = __item;
  }
  return _p;
}

inline ns1__parameterType_ *soap_new_set_ns1__parameterType_(
    struct soap *soap, enum ns1__parameterType __item, char *__item1) {
  ns1__parameterType_ *_p =
      soap_instantiate_ns1__parameterType_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__parameterType_::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__parameterType_(struct soap *soap,
                                            ns1__parameterType_ *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__parameterType_(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__keywordType_
#define SOAP_TYPE_ICat3_ns1__keywordType_ (368)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__keywordType_(struct soap *, const char *, int,
                           const ns1__keywordType_ *, const char *);
SOAP_FMAC3 ns1__keywordType_ *SOAP_FMAC4
soap_in_ns1__keywordType_(struct soap *, const char *, ns1__keywordType_ *,
                          const char *);

#ifndef soap_write_ns1__keywordType_
#define soap_write_ns1__keywordType_(soap, data)                               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:keywordType", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__keywordType_ *SOAP_FMAC4
soap_get_ns1__keywordType_(struct soap *, ns1__keywordType_ *, const char *,
                           const char *);

#ifndef soap_read_ns1__keywordType_
#define soap_read_ns1__keywordType_(soap, data)                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__keywordType_(soap, data, NULL, NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__keywordType_ *SOAP_FMAC2
soap_instantiate_ns1__keywordType_(struct soap *, int, const char *,
                                   const char *, size_t *);

inline ns1__keywordType_ *soap_new_ns1__keywordType_(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__keywordType_(soap, n, NULL, NULL, NULL);
}

inline ns1__keywordType_ *
soap_new_req_ns1__keywordType_(struct soap *soap,
                               enum ns1__keywordType __item) {
  ns1__keywordType_ *_p =
      soap_instantiate_ns1__keywordType_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__keywordType_::__item = __item;
  }
  return _p;
}

inline ns1__keywordType_ *
soap_new_set_ns1__keywordType_(struct soap *soap, enum ns1__keywordType __item,
                               char *__item1) {
  ns1__keywordType_ *_p =
      soap_instantiate_ns1__keywordType_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__keywordType_::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__keywordType_(struct soap *soap,
                                          ns1__keywordType_ *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__keywordType_(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__comparisonOperator_
#define SOAP_TYPE_ICat3_ns1__comparisonOperator_ (366)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__comparisonOperator_(struct soap *, const char *, int,
                                  const ns1__comparisonOperator_ *,
                                  const char *);
SOAP_FMAC3 ns1__comparisonOperator_ *SOAP_FMAC4
soap_in_ns1__comparisonOperator_(struct soap *, const char *,
                                 ns1__comparisonOperator_ *, const char *);

#ifndef soap_write_ns1__comparisonOperator_
#define soap_write_ns1__comparisonOperator_(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:comparisonOperator", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__comparisonOperator_ *SOAP_FMAC4
soap_get_ns1__comparisonOperator_(struct soap *, ns1__comparisonOperator_ *,
                                  const char *, const char *);

#ifndef soap_read_ns1__comparisonOperator_
#define soap_read_ns1__comparisonOperator_(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__comparisonOperator_(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__comparisonOperator_ *SOAP_FMAC2
soap_instantiate_ns1__comparisonOperator_(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__comparisonOperator_ *
soap_new_ns1__comparisonOperator_(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__comparisonOperator_(soap, n, NULL, NULL, NULL);
}

inline ns1__comparisonOperator_ *
soap_new_req_ns1__comparisonOperator_(struct soap *soap,
                                      enum ns1__comparisonOperator __item) {
  ns1__comparisonOperator_ *_p =
      soap_instantiate_ns1__comparisonOperator_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__comparisonOperator_::__item = __item;
  }
  return _p;
}

inline ns1__comparisonOperator_ *soap_new_set_ns1__comparisonOperator_(
    struct soap *soap, enum ns1__comparisonOperator __item, char *__item1) {
  ns1__comparisonOperator_ *_p =
      soap_instantiate_ns1__comparisonOperator_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__comparisonOperator_::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__comparisonOperator_(struct soap *soap,
                                                 ns1__comparisonOperator_ *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__comparisonOperator_(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__parameterValueType_
#define SOAP_TYPE_ICat3_ns1__parameterValueType_ (364)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__parameterValueType_(struct soap *, const char *, int,
                                  const ns1__parameterValueType_ *,
                                  const char *);
SOAP_FMAC3 ns1__parameterValueType_ *SOAP_FMAC4
soap_in_ns1__parameterValueType_(struct soap *, const char *,
                                 ns1__parameterValueType_ *, const char *);

#ifndef soap_write_ns1__parameterValueType_
#define soap_write_ns1__parameterValueType_(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:parameterValueType", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterValueType_ *SOAP_FMAC4
soap_get_ns1__parameterValueType_(struct soap *, ns1__parameterValueType_ *,
                                  const char *, const char *);

#ifndef soap_read_ns1__parameterValueType_
#define soap_read_ns1__parameterValueType_(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__parameterValueType_(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__parameterValueType_ *SOAP_FMAC2
soap_instantiate_ns1__parameterValueType_(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__parameterValueType_ *
soap_new_ns1__parameterValueType_(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__parameterValueType_(soap, n, NULL, NULL, NULL);
}

inline ns1__parameterValueType_ *
soap_new_req_ns1__parameterValueType_(struct soap *soap,
                                      enum ns1__parameterValueType __item) {
  ns1__parameterValueType_ *_p =
      soap_instantiate_ns1__parameterValueType_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__parameterValueType_::__item = __item;
  }
  return _p;
}

inline ns1__parameterValueType_ *soap_new_set_ns1__parameterValueType_(
    struct soap *soap, enum ns1__parameterValueType __item, char *__item1) {
  ns1__parameterValueType_ *_p =
      soap_instantiate_ns1__parameterValueType_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__parameterValueType_::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__parameterValueType_(struct soap *soap,
                                                 ns1__parameterValueType_ *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__parameterValueType_(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__sampleInclude_
#define SOAP_TYPE_ICat3_ns1__sampleInclude_ (362)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__sampleInclude_(struct soap *, const char *, int,
                             const ns1__sampleInclude_ *, const char *);
SOAP_FMAC3 ns1__sampleInclude_ *SOAP_FMAC4
soap_in_ns1__sampleInclude_(struct soap *, const char *, ns1__sampleInclude_ *,
                            const char *);

#ifndef soap_write_ns1__sampleInclude_
#define soap_write_ns1__sampleInclude_(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:sampleInclude", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__sampleInclude_ *SOAP_FMAC4
soap_get_ns1__sampleInclude_(struct soap *, ns1__sampleInclude_ *, const char *,
                             const char *);

#ifndef soap_read_ns1__sampleInclude_
#define soap_read_ns1__sampleInclude_(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__sampleInclude_(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__sampleInclude_ *SOAP_FMAC2
soap_instantiate_ns1__sampleInclude_(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__sampleInclude_ *soap_new_ns1__sampleInclude_(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__sampleInclude_(soap, n, NULL, NULL, NULL);
}

inline ns1__sampleInclude_ *
soap_new_req_ns1__sampleInclude_(struct soap *soap,
                                 enum ns1__sampleInclude __item) {
  ns1__sampleInclude_ *_p =
      soap_instantiate_ns1__sampleInclude_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__sampleInclude_::__item = __item;
  }
  return _p;
}

inline ns1__sampleInclude_ *soap_new_set_ns1__sampleInclude_(
    struct soap *soap, enum ns1__sampleInclude __item, char *__item1) {
  ns1__sampleInclude_ *_p =
      soap_instantiate_ns1__sampleInclude_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__sampleInclude_::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__sampleInclude_(struct soap *soap,
                                            ns1__sampleInclude_ *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__sampleInclude_(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__restrictionAttributes_
#define SOAP_TYPE_ICat3_ns1__restrictionAttributes_ (360)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__restrictionAttributes_(struct soap *, const char *, int,
                                     const ns1__restrictionAttributes_ *,
                                     const char *);
SOAP_FMAC3 ns1__restrictionAttributes_ *SOAP_FMAC4
soap_in_ns1__restrictionAttributes_(struct soap *, const char *,
                                    ns1__restrictionAttributes_ *,
                                    const char *);

#ifndef soap_write_ns1__restrictionAttributes_
#define soap_write_ns1__restrictionAttributes_(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:restrictionAttributes", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__restrictionAttributes_ *SOAP_FMAC4
soap_get_ns1__restrictionAttributes_(struct soap *,
                                     ns1__restrictionAttributes_ *,
                                     const char *, const char *);

#ifndef soap_read_ns1__restrictionAttributes_
#define soap_read_ns1__restrictionAttributes_(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__restrictionAttributes_(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__restrictionAttributes_ *SOAP_FMAC2
soap_instantiate_ns1__restrictionAttributes_(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__restrictionAttributes_ *
soap_new_ns1__restrictionAttributes_(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__restrictionAttributes_(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__restrictionAttributes_ *soap_new_req_ns1__restrictionAttributes_(
    struct soap *soap, enum ns1__restrictionAttributes __item) {
  ns1__restrictionAttributes_ *_p =
      soap_instantiate_ns1__restrictionAttributes_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__restrictionAttributes_::__item = __item;
  }
  return _p;
}

inline ns1__restrictionAttributes_ *soap_new_set_ns1__restrictionAttributes_(
    struct soap *soap, enum ns1__restrictionAttributes __item, char *__item1) {
  ns1__restrictionAttributes_ *_p =
      soap_instantiate_ns1__restrictionAttributes_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__restrictionAttributes_::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__restrictionAttributes_(struct soap *soap,
                                        ns1__restrictionAttributes_ *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__restrictionAttributes_(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__investigationInclude_
#define SOAP_TYPE_ICat3_ns1__investigationInclude_ (358)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__investigationInclude_(struct soap *, const char *, int,
                                    const ns1__investigationInclude_ *,
                                    const char *);
SOAP_FMAC3 ns1__investigationInclude_ *SOAP_FMAC4
soap_in_ns1__investigationInclude_(struct soap *, const char *,
                                   ns1__investigationInclude_ *, const char *);

#ifndef soap_write_ns1__investigationInclude_
#define soap_write_ns1__investigationInclude_(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:investigationInclude", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__investigationInclude_ *SOAP_FMAC4
soap_get_ns1__investigationInclude_(struct soap *, ns1__investigationInclude_ *,
                                    const char *, const char *);

#ifndef soap_read_ns1__investigationInclude_
#define soap_read_ns1__investigationInclude_(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__investigationInclude_(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__investigationInclude_ *SOAP_FMAC2
soap_instantiate_ns1__investigationInclude_(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__investigationInclude_ *
soap_new_ns1__investigationInclude_(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__investigationInclude_(soap, n, NULL, NULL, NULL);
}

inline ns1__investigationInclude_ *
soap_new_req_ns1__investigationInclude_(struct soap *soap,
                                        enum ns1__investigationInclude __item) {
  ns1__investigationInclude_ *_p =
      soap_instantiate_ns1__investigationInclude_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__investigationInclude_::__item = __item;
  }
  return _p;
}

inline ns1__investigationInclude_ *soap_new_set_ns1__investigationInclude_(
    struct soap *soap, enum ns1__investigationInclude __item, char *__item1) {
  ns1__investigationInclude_ *_p =
      soap_instantiate_ns1__investigationInclude_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__investigationInclude_::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__investigationInclude_(struct soap *soap,
                                       ns1__investigationInclude_ *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__investigationInclude_(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__datasetInclude_
#define SOAP_TYPE_ICat3_ns1__datasetInclude_ (356)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__datasetInclude_(struct soap *, const char *, int,
                              const ns1__datasetInclude_ *, const char *);
SOAP_FMAC3 ns1__datasetInclude_ *SOAP_FMAC4
soap_in_ns1__datasetInclude_(struct soap *, const char *,
                             ns1__datasetInclude_ *, const char *);

#ifndef soap_write_ns1__datasetInclude_
#define soap_write_ns1__datasetInclude_(soap, data)                            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:datasetInclude", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datasetInclude_ *SOAP_FMAC4
soap_get_ns1__datasetInclude_(struct soap *, ns1__datasetInclude_ *,
                              const char *, const char *);

#ifndef soap_read_ns1__datasetInclude_
#define soap_read_ns1__datasetInclude_(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__datasetInclude_(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__datasetInclude_ *SOAP_FMAC2
soap_instantiate_ns1__datasetInclude_(struct soap *, int, const char *,
                                      const char *, size_t *);

inline ns1__datasetInclude_ *soap_new_ns1__datasetInclude_(struct soap *soap,
                                                           int n = -1) {
  return soap_instantiate_ns1__datasetInclude_(soap, n, NULL, NULL, NULL);
}

inline ns1__datasetInclude_ *
soap_new_req_ns1__datasetInclude_(struct soap *soap,
                                  enum ns1__datasetInclude __item) {
  ns1__datasetInclude_ *_p =
      soap_instantiate_ns1__datasetInclude_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__datasetInclude_::__item = __item;
  }
  return _p;
}

inline ns1__datasetInclude_ *soap_new_set_ns1__datasetInclude_(
    struct soap *soap, enum ns1__datasetInclude __item, char *__item1) {
  ns1__datasetInclude_ *_p =
      soap_instantiate_ns1__datasetInclude_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__datasetInclude_::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__datasetInclude_(struct soap *soap,
                                             ns1__datasetInclude_ *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__datasetInclude_(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__datafileInclude_
#define SOAP_TYPE_ICat3_ns1__datafileInclude_ (354)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__datafileInclude_(struct soap *, const char *, int,
                               const ns1__datafileInclude_ *, const char *);
SOAP_FMAC3 ns1__datafileInclude_ *SOAP_FMAC4
soap_in_ns1__datafileInclude_(struct soap *, const char *,
                              ns1__datafileInclude_ *, const char *);

#ifndef soap_write_ns1__datafileInclude_
#define soap_write_ns1__datafileInclude_(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:datafileInclude", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datafileInclude_ *SOAP_FMAC4
soap_get_ns1__datafileInclude_(struct soap *, ns1__datafileInclude_ *,
                               const char *, const char *);

#ifndef soap_read_ns1__datafileInclude_
#define soap_read_ns1__datafileInclude_(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__datafileInclude_(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__datafileInclude_ *SOAP_FMAC2
soap_instantiate_ns1__datafileInclude_(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__datafileInclude_ *soap_new_ns1__datafileInclude_(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__datafileInclude_(soap, n, NULL, NULL, NULL);
}

inline ns1__datafileInclude_ *
soap_new_req_ns1__datafileInclude_(struct soap *soap,
                                   enum ns1__datafileInclude __item) {
  ns1__datafileInclude_ *_p =
      soap_instantiate_ns1__datafileInclude_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__datafileInclude_::__item = __item;
  }
  return _p;
}

inline ns1__datafileInclude_ *soap_new_set_ns1__datafileInclude_(
    struct soap *soap, enum ns1__datafileInclude __item, char *__item1) {
  ns1__datafileInclude_ *_p =
      soap_instantiate_ns1__datafileInclude_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__datafileInclude_::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__datafileInclude_(struct soap *soap,
                                              ns1__datafileInclude_ *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__datafileInclude_(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__logicalOperator_
#define SOAP_TYPE_ICat3_ns1__logicalOperator_ (352)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__logicalOperator_(struct soap *, const char *, int,
                               const ns1__logicalOperator_ *, const char *);
SOAP_FMAC3 ns1__logicalOperator_ *SOAP_FMAC4
soap_in_ns1__logicalOperator_(struct soap *, const char *,
                              ns1__logicalOperator_ *, const char *);

#ifndef soap_write_ns1__logicalOperator_
#define soap_write_ns1__logicalOperator_(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:logicalOperator", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__logicalOperator_ *SOAP_FMAC4
soap_get_ns1__logicalOperator_(struct soap *, ns1__logicalOperator_ *,
                               const char *, const char *);

#ifndef soap_read_ns1__logicalOperator_
#define soap_read_ns1__logicalOperator_(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__logicalOperator_(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__logicalOperator_ *SOAP_FMAC2
soap_instantiate_ns1__logicalOperator_(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__logicalOperator_ *soap_new_ns1__logicalOperator_(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__logicalOperator_(soap, n, NULL, NULL, NULL);
}

inline ns1__logicalOperator_ *
soap_new_req_ns1__logicalOperator_(struct soap *soap,
                                   enum ns1__logicalOperator __item) {
  ns1__logicalOperator_ *_p =
      soap_instantiate_ns1__logicalOperator_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__logicalOperator_::__item = __item;
  }
  return _p;
}

inline ns1__logicalOperator_ *soap_new_set_ns1__logicalOperator_(
    struct soap *soap, enum ns1__logicalOperator __item, char *__item1) {
  ns1__logicalOperator_ *_p =
      soap_instantiate_ns1__logicalOperator_(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__logicalOperator_::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__logicalOperator_(struct soap *soap,
                                              ns1__logicalOperator_ *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__logicalOperator_(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns3__NoSuchUserException
#define SOAP_TYPE_ICat3_ns3__NoSuchUserException (350)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns3__NoSuchUserException(struct soap *, const char *, int,
                                  const ns3__NoSuchUserException *,
                                  const char *);
SOAP_FMAC3 ns3__NoSuchUserException *SOAP_FMAC4
soap_in_ns3__NoSuchUserException(struct soap *, const char *,
                                 ns3__NoSuchUserException *, const char *);

#ifndef soap_write_ns3__NoSuchUserException
#define soap_write_ns3__NoSuchUserException(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns3:NoSuchUserException", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__NoSuchUserException *SOAP_FMAC4
soap_get_ns3__NoSuchUserException(struct soap *, ns3__NoSuchUserException *,
                                  const char *, const char *);

#ifndef soap_read_ns3__NoSuchUserException
#define soap_read_ns3__NoSuchUserException(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns3__NoSuchUserException(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns3__NoSuchUserException *SOAP_FMAC2
soap_instantiate_ns3__NoSuchUserException(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns3__NoSuchUserException *
soap_new_ns3__NoSuchUserException(struct soap *soap, int n = -1) {
  return soap_instantiate_ns3__NoSuchUserException(soap, n, NULL, NULL, NULL);
}

inline ns3__NoSuchUserException *
soap_new_req_ns3__NoSuchUserException(struct soap *soap) {
  ns3__NoSuchUserException *_p =
      soap_instantiate_ns3__NoSuchUserException(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns3__NoSuchUserException *
soap_new_set_ns3__NoSuchUserException(struct soap *soap, std::string *message,
                                      std::string *stackTraceAsString,
                                      std::string *uniqueId, char *__item1) {
  ns3__NoSuchUserException *_p =
      soap_instantiate_ns3__NoSuchUserException(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns3__NoSuchUserException::message = message;
    _p->ns3__NoSuchUserException::stackTraceAsString = stackTraceAsString;
    _p->ns3__NoSuchUserException::uniqueId = uniqueId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns3__NoSuchUserException(struct soap *soap,
                                                 ns3__NoSuchUserException *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns3__NoSuchUserException(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns3__getUserDetailsResponse
#define SOAP_TYPE_ICat3_ns3__getUserDetailsResponse (349)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns3__getUserDetailsResponse(struct soap *, const char *, int,
                                     const ns3__getUserDetailsResponse *,
                                     const char *);
SOAP_FMAC3 ns3__getUserDetailsResponse *SOAP_FMAC4
soap_in_ns3__getUserDetailsResponse(struct soap *, const char *,
                                    ns3__getUserDetailsResponse *,
                                    const char *);

#ifndef soap_write_ns3__getUserDetailsResponse
#define soap_write_ns3__getUserDetailsResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns3:getUserDetailsResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__getUserDetailsResponse *SOAP_FMAC4
soap_get_ns3__getUserDetailsResponse(struct soap *,
                                     ns3__getUserDetailsResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns3__getUserDetailsResponse
#define soap_read_ns3__getUserDetailsResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns3__getUserDetailsResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns3__getUserDetailsResponse *SOAP_FMAC2
soap_instantiate_ns3__getUserDetailsResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns3__getUserDetailsResponse *
soap_new_ns3__getUserDetailsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns3__getUserDetailsResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns3__getUserDetailsResponse *
soap_new_req_ns3__getUserDetailsResponse(struct soap *soap) {
  ns3__getUserDetailsResponse *_p =
      soap_instantiate_ns3__getUserDetailsResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns3__getUserDetailsResponse *soap_new_set_ns3__getUserDetailsResponse(
    struct soap *soap, ns1__userDetails *return_, char *__item1) {
  ns3__getUserDetailsResponse *_p =
      soap_instantiate_ns3__getUserDetailsResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns3__getUserDetailsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns3__getUserDetailsResponse(struct soap *soap,
                                        ns3__getUserDetailsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns3__getUserDetailsResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns3__getUserDetails
#define SOAP_TYPE_ICat3_ns3__getUserDetails (348)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns3__getUserDetails(struct soap *, const char *, int,
                             const ns3__getUserDetails *, const char *);
SOAP_FMAC3 ns3__getUserDetails *SOAP_FMAC4
soap_in_ns3__getUserDetails(struct soap *, const char *, ns3__getUserDetails *,
                            const char *);

#ifndef soap_write_ns3__getUserDetails
#define soap_write_ns3__getUserDetails(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns3:getUserDetails", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__getUserDetails *SOAP_FMAC4
soap_get_ns3__getUserDetails(struct soap *, ns3__getUserDetails *, const char *,
                             const char *);

#ifndef soap_read_ns3__getUserDetails
#define soap_read_ns3__getUserDetails(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns3__getUserDetails(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns3__getUserDetails *SOAP_FMAC2
soap_instantiate_ns3__getUserDetails(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns3__getUserDetails *soap_new_ns3__getUserDetails(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns3__getUserDetails(soap, n, NULL, NULL, NULL);
}

inline ns3__getUserDetails *
soap_new_req_ns3__getUserDetails(struct soap *soap) {
  ns3__getUserDetails *_p =
      soap_instantiate_ns3__getUserDetails(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns3__getUserDetails *
soap_new_set_ns3__getUserDetails(struct soap *soap, std::string *sessionId,
                                 std::string *usersName, char *__item1) {
  ns3__getUserDetails *_p =
      soap_instantiate_ns3__getUserDetails(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns3__getUserDetails::sessionId = sessionId;
    _p->ns3__getUserDetails::usersName = usersName;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns3__getUserDetails(struct soap *soap,
                                            ns3__getUserDetails *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns3__getUserDetails(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns3__ValidationException
#define SOAP_TYPE_ICat3_ns3__ValidationException (347)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns3__ValidationException(struct soap *, const char *, int,
                                  const ns3__ValidationException *,
                                  const char *);
SOAP_FMAC3 ns3__ValidationException *SOAP_FMAC4
soap_in_ns3__ValidationException(struct soap *, const char *,
                                 ns3__ValidationException *, const char *);

#ifndef soap_write_ns3__ValidationException
#define soap_write_ns3__ValidationException(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns3:ValidationException", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__ValidationException *SOAP_FMAC4
soap_get_ns3__ValidationException(struct soap *, ns3__ValidationException *,
                                  const char *, const char *);

#ifndef soap_read_ns3__ValidationException
#define soap_read_ns3__ValidationException(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns3__ValidationException(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns3__ValidationException *SOAP_FMAC2
soap_instantiate_ns3__ValidationException(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns3__ValidationException *
soap_new_ns3__ValidationException(struct soap *soap, int n = -1) {
  return soap_instantiate_ns3__ValidationException(soap, n, NULL, NULL, NULL);
}

inline ns3__ValidationException *
soap_new_req_ns3__ValidationException(struct soap *soap) {
  ns3__ValidationException *_p =
      soap_instantiate_ns3__ValidationException(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns3__ValidationException *
soap_new_set_ns3__ValidationException(struct soap *soap, std::string *message,
                                      std::string *stackTraceAsString,
                                      std::string *uniqueId, char *__item1) {
  ns3__ValidationException *_p =
      soap_instantiate_ns3__ValidationException(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns3__ValidationException::message = message;
    _p->ns3__ValidationException::stackTraceAsString = stackTraceAsString;
    _p->ns3__ValidationException::uniqueId = uniqueId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns3__ValidationException(struct soap *soap,
                                                 ns3__ValidationException *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns3__ValidationException(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns3__NoSuchObjectFoundException
#define SOAP_TYPE_ICat3_ns3__NoSuchObjectFoundException (346)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns3__NoSuchObjectFoundException(
    struct soap *, const char *, int, const ns3__NoSuchObjectFoundException *,
    const char *);
SOAP_FMAC3 ns3__NoSuchObjectFoundException *SOAP_FMAC4
soap_in_ns3__NoSuchObjectFoundException(struct soap *, const char *,
                                        ns3__NoSuchObjectFoundException *,
                                        const char *);

#ifndef soap_write_ns3__NoSuchObjectFoundException
#define soap_write_ns3__NoSuchObjectFoundException(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns3:NoSuchObjectFoundException", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__NoSuchObjectFoundException *SOAP_FMAC4
soap_get_ns3__NoSuchObjectFoundException(struct soap *,
                                         ns3__NoSuchObjectFoundException *,
                                         const char *, const char *);

#ifndef soap_read_ns3__NoSuchObjectFoundException
#define soap_read_ns3__NoSuchObjectFoundException(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns3__NoSuchObjectFoundException(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns3__NoSuchObjectFoundException *SOAP_FMAC2
soap_instantiate_ns3__NoSuchObjectFoundException(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns3__NoSuchObjectFoundException *
soap_new_ns3__NoSuchObjectFoundException(struct soap *soap, int n = -1) {
  return soap_instantiate_ns3__NoSuchObjectFoundException(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns3__NoSuchObjectFoundException *
soap_new_req_ns3__NoSuchObjectFoundException(struct soap *soap) {
  ns3__NoSuchObjectFoundException *_p =
      soap_instantiate_ns3__NoSuchObjectFoundException(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns3__NoSuchObjectFoundException *
soap_new_set_ns3__NoSuchObjectFoundException(struct soap *soap,
                                             std::string *message,
                                             std::string *stackTraceAsString,
                                             std::string *uniqueId,
                                             char *__item1) {
  ns3__NoSuchObjectFoundException *_p =
      soap_instantiate_ns3__NoSuchObjectFoundException(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns3__NoSuchObjectFoundException::message = message;
    _p->ns3__NoSuchObjectFoundException::stackTraceAsString =
        stackTraceAsString;
    _p->ns3__NoSuchObjectFoundException::uniqueId = uniqueId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns3__NoSuchObjectFoundException(
    struct soap *soap, ns3__NoSuchObjectFoundException *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns3__NoSuchObjectFoundException(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns3__SessionException
#define SOAP_TYPE_ICat3_ns3__SessionException (345)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns3__SessionException(struct soap *, const char *, int,
                               const ns3__SessionException *, const char *);
SOAP_FMAC3 ns3__SessionException *SOAP_FMAC4
soap_in_ns3__SessionException(struct soap *, const char *,
                              ns3__SessionException *, const char *);

#ifndef soap_write_ns3__SessionException
#define soap_write_ns3__SessionException(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns3:SessionException", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__SessionException *SOAP_FMAC4
soap_get_ns3__SessionException(struct soap *, ns3__SessionException *,
                               const char *, const char *);

#ifndef soap_read_ns3__SessionException
#define soap_read_ns3__SessionException(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns3__SessionException(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns3__SessionException *SOAP_FMAC2
soap_instantiate_ns3__SessionException(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns3__SessionException *soap_new_ns3__SessionException(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns3__SessionException(soap, n, NULL, NULL, NULL);
}

inline ns3__SessionException *
soap_new_req_ns3__SessionException(struct soap *soap) {
  ns3__SessionException *_p =
      soap_instantiate_ns3__SessionException(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns3__SessionException *
soap_new_set_ns3__SessionException(struct soap *soap, std::string *message,
                                   std::string *stackTraceAsString,
                                   std::string *uniqueId, char *__item1) {
  ns3__SessionException *_p =
      soap_instantiate_ns3__SessionException(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns3__SessionException::message = message;
    _p->ns3__SessionException::stackTraceAsString = stackTraceAsString;
    _p->ns3__SessionException::uniqueId = uniqueId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns3__SessionException(struct soap *soap,
                                              ns3__SessionException *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns3__SessionException(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByRestrictionComparasionResponse
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByRestrictionComparasionResponse \
  (344)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByRestrictionComparasionResponse *,
    const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestrictionComparasionResponse *SOAP_FMAC4
soap_in_ns1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByRestrictionComparasionResponse *, const char *);

#ifndef soap_write_ns1__searchInvestigationByRestrictionComparasionResponse
#define soap_write_ns1__searchInvestigationByRestrictionComparasionResponse(   \
    soap, data)                                                                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchInvestigationByRestrictionComparasionResponse",    \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestrictionComparasionResponse *SOAP_FMAC4
soap_get_ns1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *, ns1__searchInvestigationByRestrictionComparasionResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchInvestigationByRestrictionComparasionResponse
#define soap_read_ns1__searchInvestigationByRestrictionComparasionResponse(    \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_ns1__searchInvestigationByRestrictionComparasionResponse(  \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByRestrictionComparasionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchInvestigationByRestrictionComparasionResponse *
soap_new_ns1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByRestrictionComparasionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByRestrictionComparasionResponse *
soap_new_req_ns1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *soap) {
  ns1__searchInvestigationByRestrictionComparasionResponse *_p =
      soap_instantiate_ns1__searchInvestigationByRestrictionComparasionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByRestrictionComparasionResponse *
soap_new_set_ns1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchInvestigationByRestrictionComparasionResponse *_p =
      soap_instantiate_ns1__searchInvestigationByRestrictionComparasionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByRestrictionComparasionResponse::return_ =
        return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *soap,
    ns1__searchInvestigationByRestrictionComparasionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByRestrictionComparasion
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByRestrictionComparasion (343)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchInvestigationByRestrictionComparasion(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByRestrictionComparasion *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestrictionComparasion *SOAP_FMAC4
soap_in_ns1__searchInvestigationByRestrictionComparasion(
    struct soap *, const char *,
    ns1__searchInvestigationByRestrictionComparasion *, const char *);

#ifndef soap_write_ns1__searchInvestigationByRestrictionComparasion
#define soap_write_ns1__searchInvestigationByRestrictionComparasion(soap,      \
                                                                    data)      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchInvestigationByRestrictionComparasion", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestrictionComparasion *SOAP_FMAC4
soap_get_ns1__searchInvestigationByRestrictionComparasion(
    struct soap *, ns1__searchInvestigationByRestrictionComparasion *,
    const char *, const char *);

#ifndef soap_read_ns1__searchInvestigationByRestrictionComparasion
#define soap_read_ns1__searchInvestigationByRestrictionComparasion(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByRestrictionComparasion(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByRestrictionComparasion *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByRestrictionComparasion(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchInvestigationByRestrictionComparasion *
soap_new_ns1__searchInvestigationByRestrictionComparasion(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByRestrictionComparasion(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByRestrictionComparasion *
soap_new_req_ns1__searchInvestigationByRestrictionComparasion(
    struct soap *soap) {
  ns1__searchInvestigationByRestrictionComparasion *_p =
      soap_instantiate_ns1__searchInvestigationByRestrictionComparasion(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByRestrictionComparasion *
soap_new_set_ns1__searchInvestigationByRestrictionComparasion(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__restrictionComparisonCondition *> &restriction,
    char *__item1) {
  ns1__searchInvestigationByRestrictionComparasion *_p =
      soap_instantiate_ns1__searchInvestigationByRestrictionComparasion(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByRestrictionComparasion::sessionId = sessionId;
    _p->ns1__searchInvestigationByRestrictionComparasion::restriction =
        restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByRestrictionComparasion(
    struct soap *soap, ns1__searchInvestigationByRestrictionComparasion *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByRestrictionComparasion(struct soap *, int,
                                                           int, void *, size_t,
                                                           const void *,
                                                           size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getDatasetsResponse
#define SOAP_TYPE_ICat3_ns1__getDatasetsResponse (342)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getDatasetsResponse(struct soap *, const char *, int,
                                  const ns1__getDatasetsResponse *,
                                  const char *);
SOAP_FMAC3 ns1__getDatasetsResponse *SOAP_FMAC4
soap_in_ns1__getDatasetsResponse(struct soap *, const char *,
                                 ns1__getDatasetsResponse *, const char *);

#ifndef soap_write_ns1__getDatasetsResponse
#define soap_write_ns1__getDatasetsResponse(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getDatasetsResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatasetsResponse *SOAP_FMAC4
soap_get_ns1__getDatasetsResponse(struct soap *, ns1__getDatasetsResponse *,
                                  const char *, const char *);

#ifndef soap_read_ns1__getDatasetsResponse
#define soap_read_ns1__getDatasetsResponse(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getDatasetsResponse(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getDatasetsResponse *SOAP_FMAC2
soap_instantiate_ns1__getDatasetsResponse(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__getDatasetsResponse *
soap_new_ns1__getDatasetsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getDatasetsResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__getDatasetsResponse *
soap_new_req_ns1__getDatasetsResponse(struct soap *soap) {
  ns1__getDatasetsResponse *_p =
      soap_instantiate_ns1__getDatasetsResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getDatasetsResponse *soap_new_set_ns1__getDatasetsResponse(
    struct soap *soap, std::vector<ns1__dataset *> &return_, char *__item1) {
  ns1__getDatasetsResponse *_p =
      soap_instantiate_ns1__getDatasetsResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getDatasetsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getDatasetsResponse(struct soap *soap,
                                                 ns1__getDatasetsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getDatasetsResponse(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getDatasets
#define SOAP_TYPE_ICat3_ns1__getDatasets (341)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getDatasets(struct soap *, const char *, int,
                          const ns1__getDatasets *, const char *);
SOAP_FMAC3 ns1__getDatasets *SOAP_FMAC4
soap_in_ns1__getDatasets(struct soap *, const char *, ns1__getDatasets *,
                         const char *);

#ifndef soap_write_ns1__getDatasets
#define soap_write_ns1__getDatasets(soap, data)                                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:getDatasets", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatasets *SOAP_FMAC4
soap_get_ns1__getDatasets(struct soap *, ns1__getDatasets *, const char *,
                          const char *);

#ifndef soap_read_ns1__getDatasets
#define soap_read_ns1__getDatasets(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getDatasets(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getDatasets *SOAP_FMAC2
soap_instantiate_ns1__getDatasets(struct soap *, int, const char *,
                                  const char *, size_t *);

inline ns1__getDatasets *soap_new_ns1__getDatasets(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate_ns1__getDatasets(soap, n, NULL, NULL, NULL);
}

inline ns1__getDatasets *soap_new_req_ns1__getDatasets(struct soap *soap) {
  ns1__getDatasets *_p =
      soap_instantiate_ns1__getDatasets(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getDatasets *
soap_new_set_ns1__getDatasets(struct soap *soap, std::string *sessionId,
                              std::vector<LONG64> &datasetIds, char *__item1) {
  ns1__getDatasets *_p =
      soap_instantiate_ns1__getDatasets(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getDatasets::sessionId = sessionId;
    _p->ns1__getDatasets::datasetIds = datasetIds;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getDatasets(struct soap *soap,
                                         ns1__getDatasets *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getDatasets(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyDataFileParameterResponse
#define SOAP_TYPE_ICat3_ns1__modifyDataFileParameterResponse (340)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__modifyDataFileParameterResponse(
    struct soap *, const char *, int,
    const ns1__modifyDataFileParameterResponse *, const char *);
SOAP_FMAC3 ns1__modifyDataFileParameterResponse *SOAP_FMAC4
soap_in_ns1__modifyDataFileParameterResponse(
    struct soap *, const char *, ns1__modifyDataFileParameterResponse *,
    const char *);

#ifndef soap_write_ns1__modifyDataFileParameterResponse
#define soap_write_ns1__modifyDataFileParameterResponse(soap, data)            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyDataFileParameterResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataFileParameterResponse *SOAP_FMAC4
soap_get_ns1__modifyDataFileParameterResponse(
    struct soap *, ns1__modifyDataFileParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__modifyDataFileParameterResponse
#define soap_read_ns1__modifyDataFileParameterResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyDataFileParameterResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyDataFileParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__modifyDataFileParameterResponse(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline ns1__modifyDataFileParameterResponse *
soap_new_ns1__modifyDataFileParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyDataFileParameterResponse(soap, n, NULL,
                                                               NULL, NULL);
}

inline ns1__modifyDataFileParameterResponse *
soap_new_req_ns1__modifyDataFileParameterResponse(struct soap *soap) {
  ns1__modifyDataFileParameterResponse *_p =
      soap_instantiate_ns1__modifyDataFileParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyDataFileParameterResponse *
soap_new_set_ns1__modifyDataFileParameterResponse(struct soap *soap,
                                                  char *__item1) {
  ns1__modifyDataFileParameterResponse *_p =
      soap_instantiate_ns1__modifyDataFileParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__modifyDataFileParameterResponse(
    struct soap *soap, ns1__modifyDataFileParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyDataFileParameterResponse(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyDataFileParameter
#define SOAP_TYPE_ICat3_ns1__modifyDataFileParameter (339)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifyDataFileParameter(struct soap *, const char *, int,
                                      const ns1__modifyDataFileParameter *,
                                      const char *);
SOAP_FMAC3 ns1__modifyDataFileParameter *SOAP_FMAC4
soap_in_ns1__modifyDataFileParameter(struct soap *, const char *,
                                     ns1__modifyDataFileParameter *,
                                     const char *);

#ifndef soap_write_ns1__modifyDataFileParameter
#define soap_write_ns1__modifyDataFileParameter(soap, data)                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyDataFileParameter", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataFileParameter *SOAP_FMAC4
soap_get_ns1__modifyDataFileParameter(struct soap *,
                                      ns1__modifyDataFileParameter *,
                                      const char *, const char *);

#ifndef soap_read_ns1__modifyDataFileParameter
#define soap_read_ns1__modifyDataFileParameter(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyDataFileParameter(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyDataFileParameter *SOAP_FMAC2
soap_instantiate_ns1__modifyDataFileParameter(struct soap *, int, const char *,
                                              const char *, size_t *);

inline ns1__modifyDataFileParameter *
soap_new_ns1__modifyDataFileParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyDataFileParameter(soap, n, NULL, NULL,
                                                       NULL);
}

inline ns1__modifyDataFileParameter *
soap_new_req_ns1__modifyDataFileParameter(struct soap *soap) {
  ns1__modifyDataFileParameter *_p =
      soap_instantiate_ns1__modifyDataFileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyDataFileParameter *soap_new_set_ns1__modifyDataFileParameter(
    struct soap *soap, std::string *sessionId,
    ns1__datafileParameter *dataFileParameter, char *__item1) {
  ns1__modifyDataFileParameter *_p =
      soap_instantiate_ns1__modifyDataFileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__modifyDataFileParameter::sessionId = sessionId;
    _p->ns1__modifyDataFileParameter::dataFileParameter = dataFileParameter;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__modifyDataFileParameter(struct soap *soap,
                                         ns1__modifyDataFileParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyDataFileParameter(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listParametersResponse
#define SOAP_TYPE_ICat3_ns1__listParametersResponse (338)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listParametersResponse(struct soap *, const char *, int,
                                     const ns1__listParametersResponse *,
                                     const char *);
SOAP_FMAC3 ns1__listParametersResponse *SOAP_FMAC4
soap_in_ns1__listParametersResponse(struct soap *, const char *,
                                    ns1__listParametersResponse *,
                                    const char *);

#ifndef soap_write_ns1__listParametersResponse
#define soap_write_ns1__listParametersResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listParametersResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listParametersResponse *SOAP_FMAC4
soap_get_ns1__listParametersResponse(struct soap *,
                                     ns1__listParametersResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns1__listParametersResponse
#define soap_read_ns1__listParametersResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listParametersResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listParametersResponse *SOAP_FMAC2
soap_instantiate_ns1__listParametersResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__listParametersResponse *
soap_new_ns1__listParametersResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listParametersResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__listParametersResponse *
soap_new_req_ns1__listParametersResponse(struct soap *soap) {
  ns1__listParametersResponse *_p =
      soap_instantiate_ns1__listParametersResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listParametersResponse *soap_new_set_ns1__listParametersResponse(
    struct soap *soap, std::vector<ns1__parameter *> &return_, char *__item1) {
  ns1__listParametersResponse *_p =
      soap_instantiate_ns1__listParametersResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listParametersResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__listParametersResponse(struct soap *soap,
                                        ns1__listParametersResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listParametersResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listParameters
#define SOAP_TYPE_ICat3_ns1__listParameters (337)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listParameters(struct soap *, const char *, int,
                             const ns1__listParameters *, const char *);
SOAP_FMAC3 ns1__listParameters *SOAP_FMAC4
soap_in_ns1__listParameters(struct soap *, const char *, ns1__listParameters *,
                            const char *);

#ifndef soap_write_ns1__listParameters
#define soap_write_ns1__listParameters(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listParameters", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listParameters *SOAP_FMAC4
soap_get_ns1__listParameters(struct soap *, ns1__listParameters *, const char *,
                             const char *);

#ifndef soap_read_ns1__listParameters
#define soap_read_ns1__listParameters(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listParameters(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listParameters *SOAP_FMAC2
soap_instantiate_ns1__listParameters(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__listParameters *soap_new_ns1__listParameters(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__listParameters(soap, n, NULL, NULL, NULL);
}

inline ns1__listParameters *
soap_new_req_ns1__listParameters(struct soap *soap) {
  ns1__listParameters *_p =
      soap_instantiate_ns1__listParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listParameters *
soap_new_set_ns1__listParameters(struct soap *soap, std::string *sessionId,
                                 char *__item1) {
  ns1__listParameters *_p =
      soap_instantiate_ns1__listParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listParameters::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__listParameters(struct soap *soap,
                                            ns1__listParameters *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__listParameters(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByParameterComparisonResponse
#define SOAP_TYPE_ICat3_ns1__searchSampleByParameterComparisonResponse (336)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchSampleByParameterComparisonResponse(
    struct soap *, const char *, int,
    const ns1__searchSampleByParameterComparisonResponse *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterComparisonResponse *SOAP_FMAC4
soap_in_ns1__searchSampleByParameterComparisonResponse(
    struct soap *, const char *,
    ns1__searchSampleByParameterComparisonResponse *, const char *);

#ifndef soap_write_ns1__searchSampleByParameterComparisonResponse
#define soap_write_ns1__searchSampleByParameterComparisonResponse(soap, data)  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSampleByParameterComparisonResponse", \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterComparisonResponse *SOAP_FMAC4
soap_get_ns1__searchSampleByParameterComparisonResponse(
    struct soap *, ns1__searchSampleByParameterComparisonResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchSampleByParameterComparisonResponse
#define soap_read_ns1__searchSampleByParameterComparisonResponse(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByParameterComparisonResponse(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByParameterComparisonResponse *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByParameterComparisonResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchSampleByParameterComparisonResponse *
soap_new_ns1__searchSampleByParameterComparisonResponse(struct soap *soap,
                                                        int n = -1) {
  return soap_instantiate_ns1__searchSampleByParameterComparisonResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchSampleByParameterComparisonResponse *
soap_new_req_ns1__searchSampleByParameterComparisonResponse(struct soap *soap) {
  ns1__searchSampleByParameterComparisonResponse *_p =
      soap_instantiate_ns1__searchSampleByParameterComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByParameterComparisonResponse *
soap_new_set_ns1__searchSampleByParameterComparisonResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchSampleByParameterComparisonResponse *_p =
      soap_instantiate_ns1__searchSampleByParameterComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByParameterComparisonResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByParameterComparisonResponse(
    struct soap *soap, ns1__searchSampleByParameterComparisonResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByParameterComparisonResponse(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByParameterComparison
#define SOAP_TYPE_ICat3_ns1__searchSampleByParameterComparison (335)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchSampleByParameterComparison(
    struct soap *, const char *, int,
    const ns1__searchSampleByParameterComparison *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterComparison *SOAP_FMAC4
soap_in_ns1__searchSampleByParameterComparison(
    struct soap *, const char *, ns1__searchSampleByParameterComparison *,
    const char *);

#ifndef soap_write_ns1__searchSampleByParameterComparison
#define soap_write_ns1__searchSampleByParameterComparison(soap, data)          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchSampleByParameterComparison", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterComparison *SOAP_FMAC4
soap_get_ns1__searchSampleByParameterComparison(
    struct soap *, ns1__searchSampleByParameterComparison *, const char *,
    const char *);

#ifndef soap_read_ns1__searchSampleByParameterComparison
#define soap_read_ns1__searchSampleByParameterComparison(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByParameterComparison(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByParameterComparison *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByParameterComparison(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline ns1__searchSampleByParameterComparison *
soap_new_ns1__searchSampleByParameterComparison(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchSampleByParameterComparison(soap, n, NULL,
                                                                 NULL, NULL);
}

inline ns1__searchSampleByParameterComparison *
soap_new_req_ns1__searchSampleByParameterComparison(struct soap *soap) {
  ns1__searchSampleByParameterComparison *_p =
      soap_instantiate_ns1__searchSampleByParameterComparison(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByParameterComparison *
soap_new_set_ns1__searchSampleByParameterComparison(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__parameterComparisonCondition *> &comparison,
    char *__item1) {
  ns1__searchSampleByParameterComparison *_p =
      soap_instantiate_ns1__searchSampleByParameterComparison(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByParameterComparison::sessionId = sessionId;
    _p->ns1__searchSampleByParameterComparison::comparison = comparison;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByParameterComparison(
    struct soap *soap, ns1__searchSampleByParameterComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByParameterComparison(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteSampleParameterResponse
#define SOAP_TYPE_ICat3_ns1__deleteSampleParameterResponse (334)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__deleteSampleParameterResponse(
    struct soap *, const char *, int,
    const ns1__deleteSampleParameterResponse *, const char *);
SOAP_FMAC3 ns1__deleteSampleParameterResponse *SOAP_FMAC4
soap_in_ns1__deleteSampleParameterResponse(struct soap *, const char *,
                                           ns1__deleteSampleParameterResponse *,
                                           const char *);

#ifndef soap_write_ns1__deleteSampleParameterResponse
#define soap_write_ns1__deleteSampleParameterResponse(soap, data)              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteSampleParameterResponse", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteSampleParameterResponse *SOAP_FMAC4
soap_get_ns1__deleteSampleParameterResponse(
    struct soap *, ns1__deleteSampleParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__deleteSampleParameterResponse
#define soap_read_ns1__deleteSampleParameterResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteSampleParameterResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteSampleParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__deleteSampleParameterResponse(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline ns1__deleteSampleParameterResponse *
soap_new_ns1__deleteSampleParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteSampleParameterResponse(soap, n, NULL,
                                                             NULL, NULL);
}

inline ns1__deleteSampleParameterResponse *
soap_new_req_ns1__deleteSampleParameterResponse(struct soap *soap) {
  ns1__deleteSampleParameterResponse *_p =
      soap_instantiate_ns1__deleteSampleParameterResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteSampleParameterResponse *
soap_new_set_ns1__deleteSampleParameterResponse(struct soap *soap,
                                                char *__item1) {
  ns1__deleteSampleParameterResponse *_p =
      soap_instantiate_ns1__deleteSampleParameterResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteSampleParameterResponse(
    struct soap *soap, ns1__deleteSampleParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteSampleParameterResponse(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteSampleParameter
#define SOAP_TYPE_ICat3_ns1__deleteSampleParameter (333)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteSampleParameter(struct soap *, const char *, int,
                                    const ns1__deleteSampleParameter *,
                                    const char *);
SOAP_FMAC3 ns1__deleteSampleParameter *SOAP_FMAC4
soap_in_ns1__deleteSampleParameter(struct soap *, const char *,
                                   ns1__deleteSampleParameter *, const char *);

#ifndef soap_write_ns1__deleteSampleParameter
#define soap_write_ns1__deleteSampleParameter(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteSampleParameter", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteSampleParameter *SOAP_FMAC4
soap_get_ns1__deleteSampleParameter(struct soap *, ns1__deleteSampleParameter *,
                                    const char *, const char *);

#ifndef soap_read_ns1__deleteSampleParameter
#define soap_read_ns1__deleteSampleParameter(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteSampleParameter(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteSampleParameter *SOAP_FMAC2
soap_instantiate_ns1__deleteSampleParameter(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__deleteSampleParameter *
soap_new_ns1__deleteSampleParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteSampleParameter(soap, n, NULL, NULL, NULL);
}

inline ns1__deleteSampleParameter *
soap_new_req_ns1__deleteSampleParameter(struct soap *soap) {
  ns1__deleteSampleParameter *_p =
      soap_instantiate_ns1__deleteSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteSampleParameter *soap_new_set_ns1__deleteSampleParameter(
    struct soap *soap, std::string *sessionId,
    ns1__sampleParameterPK *sampleParameterPK, char *__item1) {
  ns1__deleteSampleParameter *_p =
      soap_instantiate_ns1__deleteSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__deleteSampleParameter::sessionId = sessionId;
    _p->ns1__deleteSampleParameter::sampleParameterPK = sampleParameterPK;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__deleteSampleParameter(struct soap *soap,
                                       ns1__deleteSampleParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteSampleParameter(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByRestrictionLogicalResponse
#define SOAP_TYPE_ICat3_ns1__searchSampleByRestrictionLogicalResponse (332)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchSampleByRestrictionLogicalResponse(
    struct soap *, const char *, int,
    const ns1__searchSampleByRestrictionLogicalResponse *, const char *);
SOAP_FMAC3 ns1__searchSampleByRestrictionLogicalResponse *SOAP_FMAC4
soap_in_ns1__searchSampleByRestrictionLogicalResponse(
    struct soap *, const char *,
    ns1__searchSampleByRestrictionLogicalResponse *, const char *);

#ifndef soap_write_ns1__searchSampleByRestrictionLogicalResponse
#define soap_write_ns1__searchSampleByRestrictionLogicalResponse(soap, data)   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSampleByRestrictionLogicalResponse",  \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestrictionLogicalResponse *SOAP_FMAC4
soap_get_ns1__searchSampleByRestrictionLogicalResponse(
    struct soap *, ns1__searchSampleByRestrictionLogicalResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchSampleByRestrictionLogicalResponse
#define soap_read_ns1__searchSampleByRestrictionLogicalResponse(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByRestrictionLogicalResponse(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByRestrictionLogicalResponse *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByRestrictionLogicalResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchSampleByRestrictionLogicalResponse *
soap_new_ns1__searchSampleByRestrictionLogicalResponse(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__searchSampleByRestrictionLogicalResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchSampleByRestrictionLogicalResponse *
soap_new_req_ns1__searchSampleByRestrictionLogicalResponse(struct soap *soap) {
  ns1__searchSampleByRestrictionLogicalResponse *_p =
      soap_instantiate_ns1__searchSampleByRestrictionLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByRestrictionLogicalResponse *
soap_new_set_ns1__searchSampleByRestrictionLogicalResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchSampleByRestrictionLogicalResponse *_p =
      soap_instantiate_ns1__searchSampleByRestrictionLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByRestrictionLogicalResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByRestrictionLogicalResponse(
    struct soap *soap, ns1__searchSampleByRestrictionLogicalResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByRestrictionLogicalResponse(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByRestrictionLogical
#define SOAP_TYPE_ICat3_ns1__searchSampleByRestrictionLogical (331)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchSampleByRestrictionLogical(
    struct soap *, const char *, int,
    const ns1__searchSampleByRestrictionLogical *, const char *);
SOAP_FMAC3 ns1__searchSampleByRestrictionLogical *SOAP_FMAC4
soap_in_ns1__searchSampleByRestrictionLogical(
    struct soap *, const char *, ns1__searchSampleByRestrictionLogical *,
    const char *);

#ifndef soap_write_ns1__searchSampleByRestrictionLogical
#define soap_write_ns1__searchSampleByRestrictionLogical(soap, data)           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSampleByRestrictionLogical", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestrictionLogical *SOAP_FMAC4
soap_get_ns1__searchSampleByRestrictionLogical(
    struct soap *, ns1__searchSampleByRestrictionLogical *, const char *,
    const char *);

#ifndef soap_read_ns1__searchSampleByRestrictionLogical
#define soap_read_ns1__searchSampleByRestrictionLogical(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByRestrictionLogical(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByRestrictionLogical *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByRestrictionLogical(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline ns1__searchSampleByRestrictionLogical *
soap_new_ns1__searchSampleByRestrictionLogical(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchSampleByRestrictionLogical(soap, n, NULL,
                                                                NULL, NULL);
}

inline ns1__searchSampleByRestrictionLogical *
soap_new_req_ns1__searchSampleByRestrictionLogical(struct soap *soap) {
  ns1__searchSampleByRestrictionLogical *_p =
      soap_instantiate_ns1__searchSampleByRestrictionLogical(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByRestrictionLogical *
soap_new_set_ns1__searchSampleByRestrictionLogical(
    struct soap *soap, std::string *sessionId,
    ns1__restrictionLogicalCondition *restriction, char *__item1) {
  ns1__searchSampleByRestrictionLogical *_p =
      soap_instantiate_ns1__searchSampleByRestrictionLogical(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByRestrictionLogical::sessionId = sessionId;
    _p->ns1__searchSampleByRestrictionLogical::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByRestrictionLogical(
    struct soap *soap, ns1__searchSampleByRestrictionLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByRestrictionLogical(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addDataFileParameterResponse
#define SOAP_TYPE_ICat3_ns1__addDataFileParameterResponse (330)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__addDataFileParameterResponse(
    struct soap *, const char *, int, const ns1__addDataFileParameterResponse *,
    const char *);
SOAP_FMAC3 ns1__addDataFileParameterResponse *SOAP_FMAC4
soap_in_ns1__addDataFileParameterResponse(struct soap *, const char *,
                                          ns1__addDataFileParameterResponse *,
                                          const char *);

#ifndef soap_write_ns1__addDataFileParameterResponse
#define soap_write_ns1__addDataFileParameterResponse(soap, data)               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addDataFileParameterResponse", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataFileParameterResponse *SOAP_FMAC4
soap_get_ns1__addDataFileParameterResponse(struct soap *,
                                           ns1__addDataFileParameterResponse *,
                                           const char *, const char *);

#ifndef soap_read_ns1__addDataFileParameterResponse
#define soap_read_ns1__addDataFileParameterResponse(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addDataFileParameterResponse(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addDataFileParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__addDataFileParameterResponse(struct soap *, int,
                                                   const char *, const char *,
                                                   size_t *);

inline ns1__addDataFileParameterResponse *
soap_new_ns1__addDataFileParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addDataFileParameterResponse(soap, n, NULL, NULL,
                                                            NULL);
}

inline ns1__addDataFileParameterResponse *
soap_new_req_ns1__addDataFileParameterResponse(struct soap *soap) {
  ns1__addDataFileParameterResponse *_p =
      soap_instantiate_ns1__addDataFileParameterResponse(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addDataFileParameterResponse *
soap_new_set_ns1__addDataFileParameterResponse(struct soap *soap,
                                               ns1__datafileParameter *return_,
                                               char *__item1) {
  ns1__addDataFileParameterResponse *_p =
      soap_instantiate_ns1__addDataFileParameterResponse(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addDataFileParameterResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addDataFileParameterResponse(
    struct soap *soap, ns1__addDataFileParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addDataFileParameterResponse(struct soap *, int, int, void *,
                                            size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addDataFileParameter
#define SOAP_TYPE_ICat3_ns1__addDataFileParameter (329)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addDataFileParameter(struct soap *, const char *, int,
                                   const ns1__addDataFileParameter *,
                                   const char *);
SOAP_FMAC3 ns1__addDataFileParameter *SOAP_FMAC4
soap_in_ns1__addDataFileParameter(struct soap *, const char *,
                                  ns1__addDataFileParameter *, const char *);

#ifndef soap_write_ns1__addDataFileParameter
#define soap_write_ns1__addDataFileParameter(soap, data)                       \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addDataFileParameter", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataFileParameter *SOAP_FMAC4
soap_get_ns1__addDataFileParameter(struct soap *, ns1__addDataFileParameter *,
                                   const char *, const char *);

#ifndef soap_read_ns1__addDataFileParameter
#define soap_read_ns1__addDataFileParameter(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addDataFileParameter(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addDataFileParameter *SOAP_FMAC2
soap_instantiate_ns1__addDataFileParameter(struct soap *, int, const char *,
                                           const char *, size_t *);

inline ns1__addDataFileParameter *
soap_new_ns1__addDataFileParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addDataFileParameter(soap, n, NULL, NULL, NULL);
}

inline ns1__addDataFileParameter *
soap_new_req_ns1__addDataFileParameter(struct soap *soap) {
  ns1__addDataFileParameter *_p =
      soap_instantiate_ns1__addDataFileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addDataFileParameter *soap_new_set_ns1__addDataFileParameter(
    struct soap *soap, std::string *sessionId,
    ns1__datafileParameter *dataFileParameter, LONG64 *datafileId,
    char *__item1) {
  ns1__addDataFileParameter *_p =
      soap_instantiate_ns1__addDataFileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addDataFileParameter::sessionId = sessionId;
    _p->ns1__addDataFileParameter::dataFileParameter = dataFileParameter;
    _p->ns1__addDataFileParameter::datafileId = datafileId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__addDataFileParameter(struct soap *soap,
                                      ns1__addDataFileParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addDataFileParameter(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetsBySampleResponse
#define SOAP_TYPE_ICat3_ns1__searchDatasetsBySampleResponse (328)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatasetsBySampleResponse(
    struct soap *, const char *, int,
    const ns1__searchDatasetsBySampleResponse *, const char *);
SOAP_FMAC3 ns1__searchDatasetsBySampleResponse *SOAP_FMAC4
soap_in_ns1__searchDatasetsBySampleResponse(
    struct soap *, const char *, ns1__searchDatasetsBySampleResponse *,
    const char *);

#ifndef soap_write_ns1__searchDatasetsBySampleResponse
#define soap_write_ns1__searchDatasetsBySampleResponse(soap, data)             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatasetsBySampleResponse", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetsBySampleResponse *SOAP_FMAC4
soap_get_ns1__searchDatasetsBySampleResponse(
    struct soap *, ns1__searchDatasetsBySampleResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatasetsBySampleResponse
#define soap_read_ns1__searchDatasetsBySampleResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetsBySampleResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetsBySampleResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetsBySampleResponse(struct soap *, int,
                                                     const char *, const char *,
                                                     size_t *);

inline ns1__searchDatasetsBySampleResponse *
soap_new_ns1__searchDatasetsBySampleResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatasetsBySampleResponse(soap, n, NULL,
                                                              NULL, NULL);
}

inline ns1__searchDatasetsBySampleResponse *
soap_new_req_ns1__searchDatasetsBySampleResponse(struct soap *soap) {
  ns1__searchDatasetsBySampleResponse *_p =
      soap_instantiate_ns1__searchDatasetsBySampleResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetsBySampleResponse *
soap_new_set_ns1__searchDatasetsBySampleResponse(
    struct soap *soap, std::vector<ns1__dataset *> &return_, char *__item1) {
  ns1__searchDatasetsBySampleResponse *_p =
      soap_instantiate_ns1__searchDatasetsBySampleResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetsBySampleResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetsBySampleResponse(
    struct soap *soap, ns1__searchDatasetsBySampleResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetsBySampleResponse(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetsBySample
#define SOAP_TYPE_ICat3_ns1__searchDatasetsBySample (327)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatasetsBySample(struct soap *, const char *, int,
                                     const ns1__searchDatasetsBySample *,
                                     const char *);
SOAP_FMAC3 ns1__searchDatasetsBySample *SOAP_FMAC4
soap_in_ns1__searchDatasetsBySample(struct soap *, const char *,
                                    ns1__searchDatasetsBySample *,
                                    const char *);

#ifndef soap_write_ns1__searchDatasetsBySample
#define soap_write_ns1__searchDatasetsBySample(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatasetsBySample", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetsBySample *SOAP_FMAC4
soap_get_ns1__searchDatasetsBySample(struct soap *,
                                     ns1__searchDatasetsBySample *,
                                     const char *, const char *);

#ifndef soap_read_ns1__searchDatasetsBySample
#define soap_read_ns1__searchDatasetsBySample(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetsBySample(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetsBySample *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetsBySample(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__searchDatasetsBySample *
soap_new_ns1__searchDatasetsBySample(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatasetsBySample(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__searchDatasetsBySample *
soap_new_req_ns1__searchDatasetsBySample(struct soap *soap) {
  ns1__searchDatasetsBySample *_p =
      soap_instantiate_ns1__searchDatasetsBySample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetsBySample *
soap_new_set_ns1__searchDatasetsBySample(struct soap *soap,
                                         std::string *sessionId,
                                         ns1__sample *sample, char *__item1) {
  ns1__searchDatasetsBySample *_p =
      soap_instantiate_ns1__searchDatasetsBySample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetsBySample::sessionId = sessionId;
    _p->ns1__searchDatasetsBySample::sample = sample;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchDatasetsBySample(struct soap *soap,
                                        ns1__searchDatasetsBySample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetsBySample(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__createInvestigationResponse
#define SOAP_TYPE_ICat3_ns1__createInvestigationResponse (326)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__createInvestigationResponse(
    struct soap *, const char *, int, const ns1__createInvestigationResponse *,
    const char *);
SOAP_FMAC3 ns1__createInvestigationResponse *SOAP_FMAC4
soap_in_ns1__createInvestigationResponse(struct soap *, const char *,
                                         ns1__createInvestigationResponse *,
                                         const char *);

#ifndef soap_write_ns1__createInvestigationResponse
#define soap_write_ns1__createInvestigationResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:createInvestigationResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createInvestigationResponse *SOAP_FMAC4
soap_get_ns1__createInvestigationResponse(struct soap *,
                                          ns1__createInvestigationResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__createInvestigationResponse
#define soap_read_ns1__createInvestigationResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__createInvestigationResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__createInvestigationResponse *SOAP_FMAC2
soap_instantiate_ns1__createInvestigationResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__createInvestigationResponse *
soap_new_ns1__createInvestigationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__createInvestigationResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__createInvestigationResponse *
soap_new_req_ns1__createInvestigationResponse(struct soap *soap) {
  ns1__createInvestigationResponse *_p =
      soap_instantiate_ns1__createInvestigationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__createInvestigationResponse *
soap_new_set_ns1__createInvestigationResponse(struct soap *soap,
                                              ns1__investigation *return_,
                                              char *__item1) {
  ns1__createInvestigationResponse *_p =
      soap_instantiate_ns1__createInvestigationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__createInvestigationResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__createInvestigationResponse(
    struct soap *soap, ns1__createInvestigationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__createInvestigationResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__createInvestigation
#define SOAP_TYPE_ICat3_ns1__createInvestigation (325)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__createInvestigation(struct soap *, const char *, int,
                                  const ns1__createInvestigation *,
                                  const char *);
SOAP_FMAC3 ns1__createInvestigation *SOAP_FMAC4
soap_in_ns1__createInvestigation(struct soap *, const char *,
                                 ns1__createInvestigation *, const char *);

#ifndef soap_write_ns1__createInvestigation
#define soap_write_ns1__createInvestigation(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:createInvestigation", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createInvestigation *SOAP_FMAC4
soap_get_ns1__createInvestigation(struct soap *, ns1__createInvestigation *,
                                  const char *, const char *);

#ifndef soap_read_ns1__createInvestigation
#define soap_read_ns1__createInvestigation(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__createInvestigation(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__createInvestigation *SOAP_FMAC2
soap_instantiate_ns1__createInvestigation(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__createInvestigation *
soap_new_ns1__createInvestigation(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__createInvestigation(soap, n, NULL, NULL, NULL);
}

inline ns1__createInvestigation *
soap_new_req_ns1__createInvestigation(struct soap *soap) {
  ns1__createInvestigation *_p =
      soap_instantiate_ns1__createInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__createInvestigation *
soap_new_set_ns1__createInvestigation(struct soap *soap, std::string *sessionId,
                                      ns1__investigation *ns1__investigation_,
                                      char *__item1) {
  ns1__createInvestigation *_p =
      soap_instantiate_ns1__createInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__createInvestigation::sessionId = sessionId;
    _p->ns1__createInvestigation::ns1__investigation_ = ns1__investigation_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__createInvestigation(struct soap *soap,
                                                 ns1__createInvestigation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__createInvestigation(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addPublicationResponse
#define SOAP_TYPE_ICat3_ns1__addPublicationResponse (324)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addPublicationResponse(struct soap *, const char *, int,
                                     const ns1__addPublicationResponse *,
                                     const char *);
SOAP_FMAC3 ns1__addPublicationResponse *SOAP_FMAC4
soap_in_ns1__addPublicationResponse(struct soap *, const char *,
                                    ns1__addPublicationResponse *,
                                    const char *);

#ifndef soap_write_ns1__addPublicationResponse
#define soap_write_ns1__addPublicationResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addPublicationResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addPublicationResponse *SOAP_FMAC4
soap_get_ns1__addPublicationResponse(struct soap *,
                                     ns1__addPublicationResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns1__addPublicationResponse
#define soap_read_ns1__addPublicationResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addPublicationResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addPublicationResponse *SOAP_FMAC2
soap_instantiate_ns1__addPublicationResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__addPublicationResponse *
soap_new_ns1__addPublicationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addPublicationResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__addPublicationResponse *
soap_new_req_ns1__addPublicationResponse(struct soap *soap) {
  ns1__addPublicationResponse *_p =
      soap_instantiate_ns1__addPublicationResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addPublicationResponse *soap_new_set_ns1__addPublicationResponse(
    struct soap *soap, ns1__publication *return_, char *__item1) {
  ns1__addPublicationResponse *_p =
      soap_instantiate_ns1__addPublicationResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addPublicationResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__addPublicationResponse(struct soap *soap,
                                        ns1__addPublicationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addPublicationResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addPublication
#define SOAP_TYPE_ICat3_ns1__addPublication (323)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addPublication(struct soap *, const char *, int,
                             const ns1__addPublication *, const char *);
SOAP_FMAC3 ns1__addPublication *SOAP_FMAC4
soap_in_ns1__addPublication(struct soap *, const char *, ns1__addPublication *,
                            const char *);

#ifndef soap_write_ns1__addPublication
#define soap_write_ns1__addPublication(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addPublication", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addPublication *SOAP_FMAC4
soap_get_ns1__addPublication(struct soap *, ns1__addPublication *, const char *,
                             const char *);

#ifndef soap_read_ns1__addPublication
#define soap_read_ns1__addPublication(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addPublication(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addPublication *SOAP_FMAC2
soap_instantiate_ns1__addPublication(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__addPublication *soap_new_ns1__addPublication(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__addPublication(soap, n, NULL, NULL, NULL);
}

inline ns1__addPublication *
soap_new_req_ns1__addPublication(struct soap *soap) {
  ns1__addPublication *_p =
      soap_instantiate_ns1__addPublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addPublication *
soap_new_set_ns1__addPublication(struct soap *soap, std::string *sessionId,
                                 ns1__publication *publication,
                                 LONG64 *investigationId, char *__item1) {
  ns1__addPublication *_p =
      soap_instantiate_ns1__addPublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addPublication::sessionId = sessionId;
    _p->ns1__addPublication::publication = publication;
    _p->ns1__addPublication::investigationId = investigationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addPublication(struct soap *soap,
                                            ns1__addPublication *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__addPublication(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteDataFileParameterResponse
#define SOAP_TYPE_ICat3_ns1__deleteDataFileParameterResponse (322)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__deleteDataFileParameterResponse(
    struct soap *, const char *, int,
    const ns1__deleteDataFileParameterResponse *, const char *);
SOAP_FMAC3 ns1__deleteDataFileParameterResponse *SOAP_FMAC4
soap_in_ns1__deleteDataFileParameterResponse(
    struct soap *, const char *, ns1__deleteDataFileParameterResponse *,
    const char *);

#ifndef soap_write_ns1__deleteDataFileParameterResponse
#define soap_write_ns1__deleteDataFileParameterResponse(soap, data)            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteDataFileParameterResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataFileParameterResponse *SOAP_FMAC4
soap_get_ns1__deleteDataFileParameterResponse(
    struct soap *, ns1__deleteDataFileParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__deleteDataFileParameterResponse
#define soap_read_ns1__deleteDataFileParameterResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteDataFileParameterResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteDataFileParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__deleteDataFileParameterResponse(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline ns1__deleteDataFileParameterResponse *
soap_new_ns1__deleteDataFileParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteDataFileParameterResponse(soap, n, NULL,
                                                               NULL, NULL);
}

inline ns1__deleteDataFileParameterResponse *
soap_new_req_ns1__deleteDataFileParameterResponse(struct soap *soap) {
  ns1__deleteDataFileParameterResponse *_p =
      soap_instantiate_ns1__deleteDataFileParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteDataFileParameterResponse *
soap_new_set_ns1__deleteDataFileParameterResponse(struct soap *soap,
                                                  char *__item1) {
  ns1__deleteDataFileParameterResponse *_p =
      soap_instantiate_ns1__deleteDataFileParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteDataFileParameterResponse(
    struct soap *soap, ns1__deleteDataFileParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteDataFileParameterResponse(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteDataFileParameter
#define SOAP_TYPE_ICat3_ns1__deleteDataFileParameter (321)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteDataFileParameter(struct soap *, const char *, int,
                                      const ns1__deleteDataFileParameter *,
                                      const char *);
SOAP_FMAC3 ns1__deleteDataFileParameter *SOAP_FMAC4
soap_in_ns1__deleteDataFileParameter(struct soap *, const char *,
                                     ns1__deleteDataFileParameter *,
                                     const char *);

#ifndef soap_write_ns1__deleteDataFileParameter
#define soap_write_ns1__deleteDataFileParameter(soap, data)                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteDataFileParameter", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataFileParameter *SOAP_FMAC4
soap_get_ns1__deleteDataFileParameter(struct soap *,
                                      ns1__deleteDataFileParameter *,
                                      const char *, const char *);

#ifndef soap_read_ns1__deleteDataFileParameter
#define soap_read_ns1__deleteDataFileParameter(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteDataFileParameter(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteDataFileParameter *SOAP_FMAC2
soap_instantiate_ns1__deleteDataFileParameter(struct soap *, int, const char *,
                                              const char *, size_t *);

inline ns1__deleteDataFileParameter *
soap_new_ns1__deleteDataFileParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteDataFileParameter(soap, n, NULL, NULL,
                                                       NULL);
}

inline ns1__deleteDataFileParameter *
soap_new_req_ns1__deleteDataFileParameter(struct soap *soap) {
  ns1__deleteDataFileParameter *_p =
      soap_instantiate_ns1__deleteDataFileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteDataFileParameter *soap_new_set_ns1__deleteDataFileParameter(
    struct soap *soap, std::string *sessionId,
    ns1__datafileParameterPK *datafileParameterPK, char *__item1) {
  ns1__deleteDataFileParameter *_p =
      soap_instantiate_ns1__deleteDataFileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__deleteDataFileParameter::sessionId = sessionId;
    _p->ns1__deleteDataFileParameter::datafileParameterPK = datafileParameterPK;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__deleteDataFileParameter(struct soap *soap,
                                         ns1__deleteDataFileParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteDataFileParameter(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getInvestigationResponse
#define SOAP_TYPE_ICat3_ns1__getInvestigationResponse (320)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getInvestigationResponse(struct soap *, const char *, int,
                                       const ns1__getInvestigationResponse *,
                                       const char *);
SOAP_FMAC3 ns1__getInvestigationResponse *SOAP_FMAC4
soap_in_ns1__getInvestigationResponse(struct soap *, const char *,
                                      ns1__getInvestigationResponse *,
                                      const char *);

#ifndef soap_write_ns1__getInvestigationResponse
#define soap_write_ns1__getInvestigationResponse(soap, data)                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getInvestigationResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationResponse *SOAP_FMAC4
soap_get_ns1__getInvestigationResponse(struct soap *,
                                       ns1__getInvestigationResponse *,
                                       const char *, const char *);

#ifndef soap_read_ns1__getInvestigationResponse
#define soap_read_ns1__getInvestigationResponse(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getInvestigationResponse(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getInvestigationResponse *SOAP_FMAC2
soap_instantiate_ns1__getInvestigationResponse(struct soap *, int, const char *,
                                               const char *, size_t *);

inline ns1__getInvestigationResponse *
soap_new_ns1__getInvestigationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getInvestigationResponse(soap, n, NULL, NULL,
                                                        NULL);
}

inline ns1__getInvestigationResponse *
soap_new_req_ns1__getInvestigationResponse(struct soap *soap) {
  ns1__getInvestigationResponse *_p =
      soap_instantiate_ns1__getInvestigationResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getInvestigationResponse *
soap_new_set_ns1__getInvestigationResponse(struct soap *soap,
                                           ns1__investigation *return_,
                                           char *__item1) {
  ns1__getInvestigationResponse *_p =
      soap_instantiate_ns1__getInvestigationResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getInvestigationResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getInvestigationResponse(struct soap *soap,
                                          ns1__getInvestigationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getInvestigationResponse(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getInvestigation
#define SOAP_TYPE_ICat3_ns1__getInvestigation (319)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getInvestigation(struct soap *, const char *, int,
                               const ns1__getInvestigation *, const char *);
SOAP_FMAC3 ns1__getInvestigation *SOAP_FMAC4
soap_in_ns1__getInvestigation(struct soap *, const char *,
                              ns1__getInvestigation *, const char *);

#ifndef soap_write_ns1__getInvestigation
#define soap_write_ns1__getInvestigation(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getInvestigation", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigation *SOAP_FMAC4
soap_get_ns1__getInvestigation(struct soap *, ns1__getInvestigation *,
                               const char *, const char *);

#ifndef soap_read_ns1__getInvestigation
#define soap_read_ns1__getInvestigation(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getInvestigation(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getInvestigation *SOAP_FMAC2
soap_instantiate_ns1__getInvestigation(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__getInvestigation *soap_new_ns1__getInvestigation(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__getInvestigation(soap, n, NULL, NULL, NULL);
}

inline ns1__getInvestigation *
soap_new_req_ns1__getInvestigation(struct soap *soap) {
  ns1__getInvestigation *_p =
      soap_instantiate_ns1__getInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getInvestigation *
soap_new_set_ns1__getInvestigation(struct soap *soap, std::string *sessionId,
                                   LONG64 *investigationId, char *__item1) {
  ns1__getInvestigation *_p =
      soap_instantiate_ns1__getInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getInvestigation::sessionId = sessionId;
    _p->ns1__getInvestigation::investigationId = investigationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getInvestigation(struct soap *soap,
                                              ns1__getInvestigation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getInvestigation(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getInvestigationIncludesResponse
#define SOAP_TYPE_ICat3_ns1__getInvestigationIncludesResponse (318)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getInvestigationIncludesResponse(
    struct soap *, const char *, int,
    const ns1__getInvestigationIncludesResponse *, const char *);
SOAP_FMAC3 ns1__getInvestigationIncludesResponse *SOAP_FMAC4
soap_in_ns1__getInvestigationIncludesResponse(
    struct soap *, const char *, ns1__getInvestigationIncludesResponse *,
    const char *);

#ifndef soap_write_ns1__getInvestigationIncludesResponse
#define soap_write_ns1__getInvestigationIncludesResponse(soap, data)           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getInvestigationIncludesResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationIncludesResponse *SOAP_FMAC4
soap_get_ns1__getInvestigationIncludesResponse(
    struct soap *, ns1__getInvestigationIncludesResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__getInvestigationIncludesResponse
#define soap_read_ns1__getInvestigationIncludesResponse(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getInvestigationIncludesResponse(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getInvestigationIncludesResponse *SOAP_FMAC2
soap_instantiate_ns1__getInvestigationIncludesResponse(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline ns1__getInvestigationIncludesResponse *
soap_new_ns1__getInvestigationIncludesResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getInvestigationIncludesResponse(soap, n, NULL,
                                                                NULL, NULL);
}

inline ns1__getInvestigationIncludesResponse *
soap_new_req_ns1__getInvestigationIncludesResponse(struct soap *soap) {
  ns1__getInvestigationIncludesResponse *_p =
      soap_instantiate_ns1__getInvestigationIncludesResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getInvestigationIncludesResponse *
soap_new_set_ns1__getInvestigationIncludesResponse(struct soap *soap,
                                                   ns1__investigation *return_,
                                                   char *__item1) {
  ns1__getInvestigationIncludesResponse *_p =
      soap_instantiate_ns1__getInvestigationIncludesResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getInvestigationIncludesResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getInvestigationIncludesResponse(
    struct soap *soap, ns1__getInvestigationIncludesResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getInvestigationIncludesResponse(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getInvestigationIncludes
#define SOAP_TYPE_ICat3_ns1__getInvestigationIncludes (317)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getInvestigationIncludes(struct soap *, const char *, int,
                                       const ns1__getInvestigationIncludes *,
                                       const char *);
SOAP_FMAC3 ns1__getInvestigationIncludes *SOAP_FMAC4
soap_in_ns1__getInvestigationIncludes(struct soap *, const char *,
                                      ns1__getInvestigationIncludes *,
                                      const char *);

#ifndef soap_write_ns1__getInvestigationIncludes
#define soap_write_ns1__getInvestigationIncludes(soap, data)                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getInvestigationIncludes", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationIncludes *SOAP_FMAC4
soap_get_ns1__getInvestigationIncludes(struct soap *,
                                       ns1__getInvestigationIncludes *,
                                       const char *, const char *);

#ifndef soap_read_ns1__getInvestigationIncludes
#define soap_read_ns1__getInvestigationIncludes(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getInvestigationIncludes(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getInvestigationIncludes *SOAP_FMAC2
soap_instantiate_ns1__getInvestigationIncludes(struct soap *, int, const char *,
                                               const char *, size_t *);

inline ns1__getInvestigationIncludes *
soap_new_ns1__getInvestigationIncludes(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getInvestigationIncludes(soap, n, NULL, NULL,
                                                        NULL);
}

inline ns1__getInvestigationIncludes *
soap_new_req_ns1__getInvestigationIncludes(struct soap *soap) {
  ns1__getInvestigationIncludes *_p =
      soap_instantiate_ns1__getInvestigationIncludes(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getInvestigationIncludes *
soap_new_set_ns1__getInvestigationIncludes(
    struct soap *soap, std::string *sessionId, LONG64 *investigationId,
    enum ns1__investigationInclude *investigationInclude, char *__item1) {
  ns1__getInvestigationIncludes *_p =
      soap_instantiate_ns1__getInvestigationIncludes(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getInvestigationIncludes::sessionId = sessionId;
    _p->ns1__getInvestigationIncludes::investigationId = investigationId;
    _p->ns1__getInvestigationIncludes::investigationInclude =
        investigationInclude;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getInvestigationIncludes(struct soap *soap,
                                          ns1__getInvestigationIncludes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getInvestigationIncludes(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyDataFileResponse
#define SOAP_TYPE_ICat3_ns1__modifyDataFileResponse (316)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifyDataFileResponse(struct soap *, const char *, int,
                                     const ns1__modifyDataFileResponse *,
                                     const char *);
SOAP_FMAC3 ns1__modifyDataFileResponse *SOAP_FMAC4
soap_in_ns1__modifyDataFileResponse(struct soap *, const char *,
                                    ns1__modifyDataFileResponse *,
                                    const char *);

#ifndef soap_write_ns1__modifyDataFileResponse
#define soap_write_ns1__modifyDataFileResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyDataFileResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataFileResponse *SOAP_FMAC4
soap_get_ns1__modifyDataFileResponse(struct soap *,
                                     ns1__modifyDataFileResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns1__modifyDataFileResponse
#define soap_read_ns1__modifyDataFileResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyDataFileResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyDataFileResponse *SOAP_FMAC2
soap_instantiate_ns1__modifyDataFileResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__modifyDataFileResponse *
soap_new_ns1__modifyDataFileResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyDataFileResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__modifyDataFileResponse *
soap_new_req_ns1__modifyDataFileResponse(struct soap *soap) {
  ns1__modifyDataFileResponse *_p =
      soap_instantiate_ns1__modifyDataFileResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyDataFileResponse *
soap_new_set_ns1__modifyDataFileResponse(struct soap *soap, char *__item1) {
  ns1__modifyDataFileResponse *_p =
      soap_instantiate_ns1__modifyDataFileResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__modifyDataFileResponse(struct soap *soap,
                                        ns1__modifyDataFileResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyDataFileResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyDataFile
#define SOAP_TYPE_ICat3_ns1__modifyDataFile (315)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifyDataFile(struct soap *, const char *, int,
                             const ns1__modifyDataFile *, const char *);
SOAP_FMAC3 ns1__modifyDataFile *SOAP_FMAC4
soap_in_ns1__modifyDataFile(struct soap *, const char *, ns1__modifyDataFile *,
                            const char *);

#ifndef soap_write_ns1__modifyDataFile
#define soap_write_ns1__modifyDataFile(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyDataFile", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataFile *SOAP_FMAC4
soap_get_ns1__modifyDataFile(struct soap *, ns1__modifyDataFile *, const char *,
                             const char *);

#ifndef soap_read_ns1__modifyDataFile
#define soap_read_ns1__modifyDataFile(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyDataFile(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyDataFile *SOAP_FMAC2
soap_instantiate_ns1__modifyDataFile(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__modifyDataFile *soap_new_ns1__modifyDataFile(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__modifyDataFile(soap, n, NULL, NULL, NULL);
}

inline ns1__modifyDataFile *
soap_new_req_ns1__modifyDataFile(struct soap *soap) {
  ns1__modifyDataFile *_p =
      soap_instantiate_ns1__modifyDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyDataFile *
soap_new_set_ns1__modifyDataFile(struct soap *soap, std::string *sessionId,
                                 ns1__datafile *dataFile, char *__item1) {
  ns1__modifyDataFile *_p =
      soap_instantiate_ns1__modifyDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__modifyDataFile::sessionId = sessionId;
    _p->ns1__modifyDataFile::dataFile = dataFile;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__modifyDataFile(struct soap *soap,
                                            ns1__modifyDataFile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__modifyDataFile(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getDatafileResponse
#define SOAP_TYPE_ICat3_ns1__getDatafileResponse (314)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getDatafileResponse(struct soap *, const char *, int,
                                  const ns1__getDatafileResponse *,
                                  const char *);
SOAP_FMAC3 ns1__getDatafileResponse *SOAP_FMAC4
soap_in_ns1__getDatafileResponse(struct soap *, const char *,
                                 ns1__getDatafileResponse *, const char *);

#ifndef soap_write_ns1__getDatafileResponse
#define soap_write_ns1__getDatafileResponse(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getDatafileResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatafileResponse *SOAP_FMAC4
soap_get_ns1__getDatafileResponse(struct soap *, ns1__getDatafileResponse *,
                                  const char *, const char *);

#ifndef soap_read_ns1__getDatafileResponse
#define soap_read_ns1__getDatafileResponse(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getDatafileResponse(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getDatafileResponse *SOAP_FMAC2
soap_instantiate_ns1__getDatafileResponse(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__getDatafileResponse *
soap_new_ns1__getDatafileResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getDatafileResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__getDatafileResponse *
soap_new_req_ns1__getDatafileResponse(struct soap *soap) {
  ns1__getDatafileResponse *_p =
      soap_instantiate_ns1__getDatafileResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getDatafileResponse *
soap_new_set_ns1__getDatafileResponse(struct soap *soap, ns1__datafile *return_,
                                      char *__item1) {
  ns1__getDatafileResponse *_p =
      soap_instantiate_ns1__getDatafileResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getDatafileResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getDatafileResponse(struct soap *soap,
                                                 ns1__getDatafileResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getDatafileResponse(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getDatafile
#define SOAP_TYPE_ICat3_ns1__getDatafile (313)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getDatafile(struct soap *, const char *, int,
                          const ns1__getDatafile *, const char *);
SOAP_FMAC3 ns1__getDatafile *SOAP_FMAC4
soap_in_ns1__getDatafile(struct soap *, const char *, ns1__getDatafile *,
                         const char *);

#ifndef soap_write_ns1__getDatafile
#define soap_write_ns1__getDatafile(soap, data)                                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:getDatafile", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatafile *SOAP_FMAC4
soap_get_ns1__getDatafile(struct soap *, ns1__getDatafile *, const char *,
                          const char *);

#ifndef soap_read_ns1__getDatafile
#define soap_read_ns1__getDatafile(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getDatafile(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getDatafile *SOAP_FMAC2
soap_instantiate_ns1__getDatafile(struct soap *, int, const char *,
                                  const char *, size_t *);

inline ns1__getDatafile *soap_new_ns1__getDatafile(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate_ns1__getDatafile(soap, n, NULL, NULL, NULL);
}

inline ns1__getDatafile *soap_new_req_ns1__getDatafile(struct soap *soap) {
  ns1__getDatafile *_p =
      soap_instantiate_ns1__getDatafile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getDatafile *soap_new_set_ns1__getDatafile(struct soap *soap,
                                                       std::string *sessionId,
                                                       LONG64 *datafileId,
                                                       char *__item1) {
  ns1__getDatafile *_p =
      soap_instantiate_ns1__getDatafile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getDatafile::sessionId = sessionId;
    _p->ns1__getDatafile::datafileId = datafileId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getDatafile(struct soap *soap,
                                         ns1__getDatafile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getDatafile(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__ICATAPIException
#define SOAP_TYPE_ICat3_ns1__ICATAPIException (312)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__ICATAPIException(struct soap *, const char *, int,
                               const ns1__ICATAPIException *, const char *);
SOAP_FMAC3 ns1__ICATAPIException *SOAP_FMAC4
soap_in_ns1__ICATAPIException(struct soap *, const char *,
                              ns1__ICATAPIException *, const char *);

#ifndef soap_write_ns1__ICATAPIException
#define soap_write_ns1__ICATAPIException(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:ICATAPIException", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__ICATAPIException *SOAP_FMAC4
soap_get_ns1__ICATAPIException(struct soap *, ns1__ICATAPIException *,
                               const char *, const char *);

#ifndef soap_read_ns1__ICATAPIException
#define soap_read_ns1__ICATAPIException(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__ICATAPIException(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__ICATAPIException *SOAP_FMAC2
soap_instantiate_ns1__ICATAPIException(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__ICATAPIException *soap_new_ns1__ICATAPIException(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__ICATAPIException(soap, n, NULL, NULL, NULL);
}

inline ns1__ICATAPIException *
soap_new_req_ns1__ICATAPIException(struct soap *soap) {
  ns1__ICATAPIException *_p =
      soap_instantiate_ns1__ICATAPIException(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__ICATAPIException *
soap_new_set_ns1__ICATAPIException(struct soap *soap, std::string *message,
                                   std::string *stackTraceAsString,
                                   std::string *uniqueId, char *__item1) {
  ns1__ICATAPIException *_p =
      soap_instantiate_ns1__ICATAPIException(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__ICATAPIException::message = message;
    _p->ns1__ICATAPIException::stackTraceAsString = stackTraceAsString;
    _p->ns1__ICATAPIException::uniqueId = uniqueId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__ICATAPIException(struct soap *soap,
                                              ns1__ICATAPIException *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__ICATAPIException(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__ingestMetadataResponse
#define SOAP_TYPE_ICat3_ns1__ingestMetadataResponse (311)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__ingestMetadataResponse(struct soap *, const char *, int,
                                     const ns1__ingestMetadataResponse *,
                                     const char *);
SOAP_FMAC3 ns1__ingestMetadataResponse *SOAP_FMAC4
soap_in_ns1__ingestMetadataResponse(struct soap *, const char *,
                                    ns1__ingestMetadataResponse *,
                                    const char *);

#ifndef soap_write_ns1__ingestMetadataResponse
#define soap_write_ns1__ingestMetadataResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:ingestMetadataResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__ingestMetadataResponse *SOAP_FMAC4
soap_get_ns1__ingestMetadataResponse(struct soap *,
                                     ns1__ingestMetadataResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns1__ingestMetadataResponse
#define soap_read_ns1__ingestMetadataResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__ingestMetadataResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__ingestMetadataResponse *SOAP_FMAC2
soap_instantiate_ns1__ingestMetadataResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__ingestMetadataResponse *
soap_new_ns1__ingestMetadataResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__ingestMetadataResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__ingestMetadataResponse *
soap_new_req_ns1__ingestMetadataResponse(struct soap *soap) {
  ns1__ingestMetadataResponse *_p =
      soap_instantiate_ns1__ingestMetadataResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__ingestMetadataResponse *soap_new_set_ns1__ingestMetadataResponse(
    struct soap *soap, std::vector<LONG64> &return_, char *__item1) {
  ns1__ingestMetadataResponse *_p =
      soap_instantiate_ns1__ingestMetadataResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__ingestMetadataResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__ingestMetadataResponse(struct soap *soap,
                                        ns1__ingestMetadataResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__ingestMetadataResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__ingestMetadata
#define SOAP_TYPE_ICat3_ns1__ingestMetadata (310)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__ingestMetadata(struct soap *, const char *, int,
                             const ns1__ingestMetadata *, const char *);
SOAP_FMAC3 ns1__ingestMetadata *SOAP_FMAC4
soap_in_ns1__ingestMetadata(struct soap *, const char *, ns1__ingestMetadata *,
                            const char *);

#ifndef soap_write_ns1__ingestMetadata
#define soap_write_ns1__ingestMetadata(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:ingestMetadata", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__ingestMetadata *SOAP_FMAC4
soap_get_ns1__ingestMetadata(struct soap *, ns1__ingestMetadata *, const char *,
                             const char *);

#ifndef soap_read_ns1__ingestMetadata
#define soap_read_ns1__ingestMetadata(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__ingestMetadata(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__ingestMetadata *SOAP_FMAC2
soap_instantiate_ns1__ingestMetadata(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__ingestMetadata *soap_new_ns1__ingestMetadata(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__ingestMetadata(soap, n, NULL, NULL, NULL);
}

inline ns1__ingestMetadata *
soap_new_req_ns1__ingestMetadata(struct soap *soap) {
  ns1__ingestMetadata *_p =
      soap_instantiate_ns1__ingestMetadata(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__ingestMetadata *
soap_new_set_ns1__ingestMetadata(struct soap *soap, std::string *sessionId,
                                 std::string *xml, char *__item1) {
  ns1__ingestMetadata *_p =
      soap_instantiate_ns1__ingestMetadata(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__ingestMetadata::sessionId = sessionId;
    _p->ns1__ingestMetadata::xml = xml;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__ingestMetadata(struct soap *soap,
                                            ns1__ingestMetadata *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ingestMetadata(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByRestrictionResponse
#define SOAP_TYPE_ICat3_ns1__searchDatasetByRestrictionResponse (309)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatasetByRestrictionResponse(
    struct soap *, const char *, int,
    const ns1__searchDatasetByRestrictionResponse *, const char *);
SOAP_FMAC3 ns1__searchDatasetByRestrictionResponse *SOAP_FMAC4
soap_in_ns1__searchDatasetByRestrictionResponse(
    struct soap *, const char *, ns1__searchDatasetByRestrictionResponse *,
    const char *);

#ifndef soap_write_ns1__searchDatasetByRestrictionResponse
#define soap_write_ns1__searchDatasetByRestrictionResponse(soap, data)         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchDatasetByRestrictionResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestrictionResponse *SOAP_FMAC4
soap_get_ns1__searchDatasetByRestrictionResponse(
    struct soap *, ns1__searchDatasetByRestrictionResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatasetByRestrictionResponse
#define soap_read_ns1__searchDatasetByRestrictionResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByRestrictionResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByRestrictionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByRestrictionResponse(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline ns1__searchDatasetByRestrictionResponse *
soap_new_ns1__searchDatasetByRestrictionResponse(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate_ns1__searchDatasetByRestrictionResponse(soap, n, NULL,
                                                                  NULL, NULL);
}

inline ns1__searchDatasetByRestrictionResponse *
soap_new_req_ns1__searchDatasetByRestrictionResponse(struct soap *soap) {
  ns1__searchDatasetByRestrictionResponse *_p =
      soap_instantiate_ns1__searchDatasetByRestrictionResponse(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByRestrictionResponse *
soap_new_set_ns1__searchDatasetByRestrictionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatasetByRestrictionResponse *_p =
      soap_instantiate_ns1__searchDatasetByRestrictionResponse(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByRestrictionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByRestrictionResponse(
    struct soap *soap, ns1__searchDatasetByRestrictionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByRestrictionResponse(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByRestriction
#define SOAP_TYPE_ICat3_ns1__searchDatasetByRestriction (308)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatasetByRestriction(
    struct soap *, const char *, int, const ns1__searchDatasetByRestriction *,
    const char *);
SOAP_FMAC3 ns1__searchDatasetByRestriction *SOAP_FMAC4
soap_in_ns1__searchDatasetByRestriction(struct soap *, const char *,
                                        ns1__searchDatasetByRestriction *,
                                        const char *);

#ifndef soap_write_ns1__searchDatasetByRestriction
#define soap_write_ns1__searchDatasetByRestriction(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatasetByRestriction", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestriction *SOAP_FMAC4
soap_get_ns1__searchDatasetByRestriction(struct soap *,
                                         ns1__searchDatasetByRestriction *,
                                         const char *, const char *);

#ifndef soap_read_ns1__searchDatasetByRestriction
#define soap_read_ns1__searchDatasetByRestriction(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByRestriction(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByRestriction *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByRestriction(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__searchDatasetByRestriction *
soap_new_ns1__searchDatasetByRestriction(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatasetByRestriction(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__searchDatasetByRestriction *
soap_new_req_ns1__searchDatasetByRestriction(struct soap *soap) {
  ns1__searchDatasetByRestriction *_p =
      soap_instantiate_ns1__searchDatasetByRestriction(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByRestriction *
soap_new_set_ns1__searchDatasetByRestriction(
    struct soap *soap, std::string *sessionId,
    ns1__restrictionCondition *restriction, char *__item1) {
  ns1__searchDatasetByRestriction *_p =
      soap_instantiate_ns1__searchDatasetByRestriction(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByRestriction::sessionId = sessionId;
    _p->ns1__searchDatasetByRestriction::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByRestriction(
    struct soap *soap, ns1__searchDatasetByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByRestriction(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listRolesResponse
#define SOAP_TYPE_ICat3_ns1__listRolesResponse (307)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listRolesResponse(struct soap *, const char *, int,
                                const ns1__listRolesResponse *, const char *);
SOAP_FMAC3 ns1__listRolesResponse *SOAP_FMAC4
soap_in_ns1__listRolesResponse(struct soap *, const char *,
                               ns1__listRolesResponse *, const char *);

#ifndef soap_write_ns1__listRolesResponse
#define soap_write_ns1__listRolesResponse(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listRolesResponse", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listRolesResponse *SOAP_FMAC4
soap_get_ns1__listRolesResponse(struct soap *, ns1__listRolesResponse *,
                                const char *, const char *);

#ifndef soap_read_ns1__listRolesResponse
#define soap_read_ns1__listRolesResponse(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listRolesResponse(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listRolesResponse *SOAP_FMAC2
soap_instantiate_ns1__listRolesResponse(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__listRolesResponse *
soap_new_ns1__listRolesResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listRolesResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__listRolesResponse *
soap_new_req_ns1__listRolesResponse(struct soap *soap) {
  ns1__listRolesResponse *_p =
      soap_instantiate_ns1__listRolesResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listRolesResponse *soap_new_set_ns1__listRolesResponse(
    struct soap *soap, std::vector<ns1__icatRole *> &return_, char *__item1) {
  ns1__listRolesResponse *_p =
      soap_instantiate_ns1__listRolesResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listRolesResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__listRolesResponse(struct soap *soap,
                                               ns1__listRolesResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listRolesResponse(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listRoles
#define SOAP_TYPE_ICat3_ns1__listRoles (306)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__listRoles(struct soap *, const char *,
                                                  int, const ns1__listRoles *,
                                                  const char *);
SOAP_FMAC3 ns1__listRoles *SOAP_FMAC4
soap_in_ns1__listRoles(struct soap *, const char *, ns1__listRoles *,
                       const char *);

#ifndef soap_write_ns1__listRoles
#define soap_write_ns1__listRoles(soap, data)                                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:listRoles", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listRoles *SOAP_FMAC4
soap_get_ns1__listRoles(struct soap *, ns1__listRoles *, const char *,
                        const char *);

#ifndef soap_read_ns1__listRoles
#define soap_read_ns1__listRoles(soap, data)                                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listRoles(soap, data, NULL, NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listRoles *SOAP_FMAC2
soap_instantiate_ns1__listRoles(struct soap *, int, const char *, const char *,
                                size_t *);

inline ns1__listRoles *soap_new_ns1__listRoles(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listRoles(soap, n, NULL, NULL, NULL);
}

inline ns1__listRoles *soap_new_req_ns1__listRoles(struct soap *soap) {
  ns1__listRoles *_p =
      soap_instantiate_ns1__listRoles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listRoles *soap_new_set_ns1__listRoles(struct soap *soap,
                                                   std::string *sessionId,
                                                   char *__item1) {
  ns1__listRoles *_p =
      soap_instantiate_ns1__listRoles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listRoles::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__listRoles(struct soap *soap, ns1__listRoles *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__listRoles(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__updateAuthorisationResponse
#define SOAP_TYPE_ICat3_ns1__updateAuthorisationResponse (305)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__updateAuthorisationResponse(
    struct soap *, const char *, int, const ns1__updateAuthorisationResponse *,
    const char *);
SOAP_FMAC3 ns1__updateAuthorisationResponse *SOAP_FMAC4
soap_in_ns1__updateAuthorisationResponse(struct soap *, const char *,
                                         ns1__updateAuthorisationResponse *,
                                         const char *);

#ifndef soap_write_ns1__updateAuthorisationResponse
#define soap_write_ns1__updateAuthorisationResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:updateAuthorisationResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__updateAuthorisationResponse *SOAP_FMAC4
soap_get_ns1__updateAuthorisationResponse(struct soap *,
                                          ns1__updateAuthorisationResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__updateAuthorisationResponse
#define soap_read_ns1__updateAuthorisationResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__updateAuthorisationResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__updateAuthorisationResponse *SOAP_FMAC2
soap_instantiate_ns1__updateAuthorisationResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__updateAuthorisationResponse *
soap_new_ns1__updateAuthorisationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__updateAuthorisationResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__updateAuthorisationResponse *
soap_new_req_ns1__updateAuthorisationResponse(struct soap *soap) {
  ns1__updateAuthorisationResponse *_p =
      soap_instantiate_ns1__updateAuthorisationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__updateAuthorisationResponse *
soap_new_set_ns1__updateAuthorisationResponse(struct soap *soap,
                                              char *__item1) {
  ns1__updateAuthorisationResponse *_p =
      soap_instantiate_ns1__updateAuthorisationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__updateAuthorisationResponse(
    struct soap *soap, ns1__updateAuthorisationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__updateAuthorisationResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__updateAuthorisation
#define SOAP_TYPE_ICat3_ns1__updateAuthorisation (304)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__updateAuthorisation(struct soap *, const char *, int,
                                  const ns1__updateAuthorisation *,
                                  const char *);
SOAP_FMAC3 ns1__updateAuthorisation *SOAP_FMAC4
soap_in_ns1__updateAuthorisation(struct soap *, const char *,
                                 ns1__updateAuthorisation *, const char *);

#ifndef soap_write_ns1__updateAuthorisation
#define soap_write_ns1__updateAuthorisation(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:updateAuthorisation", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__updateAuthorisation *SOAP_FMAC4
soap_get_ns1__updateAuthorisation(struct soap *, ns1__updateAuthorisation *,
                                  const char *, const char *);

#ifndef soap_read_ns1__updateAuthorisation
#define soap_read_ns1__updateAuthorisation(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__updateAuthorisation(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__updateAuthorisation *SOAP_FMAC2
soap_instantiate_ns1__updateAuthorisation(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__updateAuthorisation *
soap_new_ns1__updateAuthorisation(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__updateAuthorisation(soap, n, NULL, NULL, NULL);
}

inline ns1__updateAuthorisation *
soap_new_req_ns1__updateAuthorisation(struct soap *soap) {
  ns1__updateAuthorisation *_p =
      soap_instantiate_ns1__updateAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__updateAuthorisation *
soap_new_set_ns1__updateAuthorisation(struct soap *soap, std::string *sessionId,
                                      std::string *toChangetoRole,
                                      LONG64 *authorisationId, char *__item1) {
  ns1__updateAuthorisation *_p =
      soap_instantiate_ns1__updateAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__updateAuthorisation::sessionId = sessionId;
    _p->ns1__updateAuthorisation::toChangetoRole = toChangetoRole;
    _p->ns1__updateAuthorisation::authorisationId = authorisationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__updateAuthorisation(struct soap *soap,
                                                 ns1__updateAuthorisation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__updateAuthorisation(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getDatasetIncludesResponse
#define SOAP_TYPE_ICat3_ns1__getDatasetIncludesResponse (303)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getDatasetIncludesResponse(
    struct soap *, const char *, int, const ns1__getDatasetIncludesResponse *,
    const char *);
SOAP_FMAC3 ns1__getDatasetIncludesResponse *SOAP_FMAC4
soap_in_ns1__getDatasetIncludesResponse(struct soap *, const char *,
                                        ns1__getDatasetIncludesResponse *,
                                        const char *);

#ifndef soap_write_ns1__getDatasetIncludesResponse
#define soap_write_ns1__getDatasetIncludesResponse(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getDatasetIncludesResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatasetIncludesResponse *SOAP_FMAC4
soap_get_ns1__getDatasetIncludesResponse(struct soap *,
                                         ns1__getDatasetIncludesResponse *,
                                         const char *, const char *);

#ifndef soap_read_ns1__getDatasetIncludesResponse
#define soap_read_ns1__getDatasetIncludesResponse(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getDatasetIncludesResponse(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getDatasetIncludesResponse *SOAP_FMAC2
soap_instantiate_ns1__getDatasetIncludesResponse(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__getDatasetIncludesResponse *
soap_new_ns1__getDatasetIncludesResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getDatasetIncludesResponse(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__getDatasetIncludesResponse *
soap_new_req_ns1__getDatasetIncludesResponse(struct soap *soap) {
  ns1__getDatasetIncludesResponse *_p =
      soap_instantiate_ns1__getDatasetIncludesResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getDatasetIncludesResponse *
soap_new_set_ns1__getDatasetIncludesResponse(struct soap *soap,
                                             ns1__dataset *return_,
                                             char *__item1) {
  ns1__getDatasetIncludesResponse *_p =
      soap_instantiate_ns1__getDatasetIncludesResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getDatasetIncludesResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getDatasetIncludesResponse(
    struct soap *soap, ns1__getDatasetIncludesResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getDatasetIncludesResponse(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getDatasetIncludes
#define SOAP_TYPE_ICat3_ns1__getDatasetIncludes (302)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getDatasetIncludes(struct soap *, const char *, int,
                                 const ns1__getDatasetIncludes *, const char *);
SOAP_FMAC3 ns1__getDatasetIncludes *SOAP_FMAC4
soap_in_ns1__getDatasetIncludes(struct soap *, const char *,
                                ns1__getDatasetIncludes *, const char *);

#ifndef soap_write_ns1__getDatasetIncludes
#define soap_write_ns1__getDatasetIncludes(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getDatasetIncludes", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatasetIncludes *SOAP_FMAC4
soap_get_ns1__getDatasetIncludes(struct soap *, ns1__getDatasetIncludes *,
                                 const char *, const char *);

#ifndef soap_read_ns1__getDatasetIncludes
#define soap_read_ns1__getDatasetIncludes(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getDatasetIncludes(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getDatasetIncludes *SOAP_FMAC2
soap_instantiate_ns1__getDatasetIncludes(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__getDatasetIncludes *
soap_new_ns1__getDatasetIncludes(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getDatasetIncludes(soap, n, NULL, NULL, NULL);
}

inline ns1__getDatasetIncludes *
soap_new_req_ns1__getDatasetIncludes(struct soap *soap) {
  ns1__getDatasetIncludes *_p =
      soap_instantiate_ns1__getDatasetIncludes(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getDatasetIncludes *soap_new_set_ns1__getDatasetIncludes(
    struct soap *soap, std::string *sessionId, LONG64 *datasetId,
    enum ns1__datasetInclude *datasetInclude, char *__item1) {
  ns1__getDatasetIncludes *_p =
      soap_instantiate_ns1__getDatasetIncludes(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getDatasetIncludes::sessionId = sessionId;
    _p->ns1__getDatasetIncludes::datasetId = datasetId;
    _p->ns1__getDatasetIncludes::datasetInclude = datasetInclude;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getDatasetIncludes(struct soap *soap,
                                                ns1__getDatasetIncludes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getDatasetIncludes(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getDatasetResponse
#define SOAP_TYPE_ICat3_ns1__getDatasetResponse (301)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getDatasetResponse(struct soap *, const char *, int,
                                 const ns1__getDatasetResponse *, const char *);
SOAP_FMAC3 ns1__getDatasetResponse *SOAP_FMAC4
soap_in_ns1__getDatasetResponse(struct soap *, const char *,
                                ns1__getDatasetResponse *, const char *);

#ifndef soap_write_ns1__getDatasetResponse
#define soap_write_ns1__getDatasetResponse(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getDatasetResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatasetResponse *SOAP_FMAC4
soap_get_ns1__getDatasetResponse(struct soap *, ns1__getDatasetResponse *,
                                 const char *, const char *);

#ifndef soap_read_ns1__getDatasetResponse
#define soap_read_ns1__getDatasetResponse(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getDatasetResponse(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getDatasetResponse *SOAP_FMAC2
soap_instantiate_ns1__getDatasetResponse(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__getDatasetResponse *
soap_new_ns1__getDatasetResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getDatasetResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__getDatasetResponse *
soap_new_req_ns1__getDatasetResponse(struct soap *soap) {
  ns1__getDatasetResponse *_p =
      soap_instantiate_ns1__getDatasetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getDatasetResponse *
soap_new_set_ns1__getDatasetResponse(struct soap *soap, ns1__dataset *return_,
                                     char *__item1) {
  ns1__getDatasetResponse *_p =
      soap_instantiate_ns1__getDatasetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getDatasetResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getDatasetResponse(struct soap *soap,
                                                ns1__getDatasetResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getDatasetResponse(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getDataset
#define SOAP_TYPE_ICat3_ns1__getDataset (300)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getDataset(struct soap *, const char *,
                                                   int, const ns1__getDataset *,
                                                   const char *);
SOAP_FMAC3 ns1__getDataset *SOAP_FMAC4
soap_in_ns1__getDataset(struct soap *, const char *, ns1__getDataset *,
                        const char *);

#ifndef soap_write_ns1__getDataset
#define soap_write_ns1__getDataset(soap, data)                                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:getDataset", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDataset *SOAP_FMAC4
soap_get_ns1__getDataset(struct soap *, ns1__getDataset *, const char *,
                         const char *);

#ifndef soap_read_ns1__getDataset
#define soap_read_ns1__getDataset(soap, data)                                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getDataset(soap, data, NULL, NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getDataset *SOAP_FMAC2
soap_instantiate_ns1__getDataset(struct soap *, int, const char *, const char *,
                                 size_t *);

inline ns1__getDataset *soap_new_ns1__getDataset(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate_ns1__getDataset(soap, n, NULL, NULL, NULL);
}

inline ns1__getDataset *soap_new_req_ns1__getDataset(struct soap *soap) {
  ns1__getDataset *_p =
      soap_instantiate_ns1__getDataset(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getDataset *soap_new_set_ns1__getDataset(struct soap *soap,
                                                     std::string *sessionId,
                                                     LONG64 *datasetId,
                                                     char *__item1) {
  ns1__getDataset *_p =
      soap_instantiate_ns1__getDataset(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getDataset::sessionId = sessionId;
    _p->ns1__getDataset::datasetId = datasetId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getDataset(struct soap *soap, ns1__getDataset *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getDataset(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteAuthorisationResponse
#define SOAP_TYPE_ICat3_ns1__deleteAuthorisationResponse (299)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__deleteAuthorisationResponse(
    struct soap *, const char *, int, const ns1__deleteAuthorisationResponse *,
    const char *);
SOAP_FMAC3 ns1__deleteAuthorisationResponse *SOAP_FMAC4
soap_in_ns1__deleteAuthorisationResponse(struct soap *, const char *,
                                         ns1__deleteAuthorisationResponse *,
                                         const char *);

#ifndef soap_write_ns1__deleteAuthorisationResponse
#define soap_write_ns1__deleteAuthorisationResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteAuthorisationResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteAuthorisationResponse *SOAP_FMAC4
soap_get_ns1__deleteAuthorisationResponse(struct soap *,
                                          ns1__deleteAuthorisationResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__deleteAuthorisationResponse
#define soap_read_ns1__deleteAuthorisationResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteAuthorisationResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteAuthorisationResponse *SOAP_FMAC2
soap_instantiate_ns1__deleteAuthorisationResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__deleteAuthorisationResponse *
soap_new_ns1__deleteAuthorisationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteAuthorisationResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__deleteAuthorisationResponse *
soap_new_req_ns1__deleteAuthorisationResponse(struct soap *soap) {
  ns1__deleteAuthorisationResponse *_p =
      soap_instantiate_ns1__deleteAuthorisationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteAuthorisationResponse *
soap_new_set_ns1__deleteAuthorisationResponse(struct soap *soap,
                                              char *__item1) {
  ns1__deleteAuthorisationResponse *_p =
      soap_instantiate_ns1__deleteAuthorisationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteAuthorisationResponse(
    struct soap *soap, ns1__deleteAuthorisationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteAuthorisationResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteAuthorisation
#define SOAP_TYPE_ICat3_ns1__deleteAuthorisation (298)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteAuthorisation(struct soap *, const char *, int,
                                  const ns1__deleteAuthorisation *,
                                  const char *);
SOAP_FMAC3 ns1__deleteAuthorisation *SOAP_FMAC4
soap_in_ns1__deleteAuthorisation(struct soap *, const char *,
                                 ns1__deleteAuthorisation *, const char *);

#ifndef soap_write_ns1__deleteAuthorisation
#define soap_write_ns1__deleteAuthorisation(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteAuthorisation", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteAuthorisation *SOAP_FMAC4
soap_get_ns1__deleteAuthorisation(struct soap *, ns1__deleteAuthorisation *,
                                  const char *, const char *);

#ifndef soap_read_ns1__deleteAuthorisation
#define soap_read_ns1__deleteAuthorisation(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteAuthorisation(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteAuthorisation *SOAP_FMAC2
soap_instantiate_ns1__deleteAuthorisation(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__deleteAuthorisation *
soap_new_ns1__deleteAuthorisation(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteAuthorisation(soap, n, NULL, NULL, NULL);
}

inline ns1__deleteAuthorisation *
soap_new_req_ns1__deleteAuthorisation(struct soap *soap) {
  ns1__deleteAuthorisation *_p =
      soap_instantiate_ns1__deleteAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteAuthorisation *
soap_new_set_ns1__deleteAuthorisation(struct soap *soap, std::string *sessionId,
                                      LONG64 *authorisationId, char *__item1) {
  ns1__deleteAuthorisation *_p =
      soap_instantiate_ns1__deleteAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__deleteAuthorisation::sessionId = sessionId;
    _p->ns1__deleteAuthorisation::authorisationId = authorisationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteAuthorisation(struct soap *soap,
                                                 ns1__deleteAuthorisation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteAuthorisation(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deletePublicationResponse
#define SOAP_TYPE_ICat3_ns1__deletePublicationResponse (297)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deletePublicationResponse(struct soap *, const char *, int,
                                        const ns1__deletePublicationResponse *,
                                        const char *);
SOAP_FMAC3 ns1__deletePublicationResponse *SOAP_FMAC4
soap_in_ns1__deletePublicationResponse(struct soap *, const char *,
                                       ns1__deletePublicationResponse *,
                                       const char *);

#ifndef soap_write_ns1__deletePublicationResponse
#define soap_write_ns1__deletePublicationResponse(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deletePublicationResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deletePublicationResponse *SOAP_FMAC4
soap_get_ns1__deletePublicationResponse(struct soap *,
                                        ns1__deletePublicationResponse *,
                                        const char *, const char *);

#ifndef soap_read_ns1__deletePublicationResponse
#define soap_read_ns1__deletePublicationResponse(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deletePublicationResponse(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deletePublicationResponse *SOAP_FMAC2
soap_instantiate_ns1__deletePublicationResponse(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__deletePublicationResponse *
soap_new_ns1__deletePublicationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deletePublicationResponse(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__deletePublicationResponse *
soap_new_req_ns1__deletePublicationResponse(struct soap *soap) {
  ns1__deletePublicationResponse *_p =
      soap_instantiate_ns1__deletePublicationResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deletePublicationResponse *
soap_new_set_ns1__deletePublicationResponse(struct soap *soap, char *__item1) {
  ns1__deletePublicationResponse *_p =
      soap_instantiate_ns1__deletePublicationResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__deletePublicationResponse(struct soap *soap,
                                           ns1__deletePublicationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deletePublicationResponse(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deletePublication
#define SOAP_TYPE_ICat3_ns1__deletePublication (296)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deletePublication(struct soap *, const char *, int,
                                const ns1__deletePublication *, const char *);
SOAP_FMAC3 ns1__deletePublication *SOAP_FMAC4
soap_in_ns1__deletePublication(struct soap *, const char *,
                               ns1__deletePublication *, const char *);

#ifndef soap_write_ns1__deletePublication
#define soap_write_ns1__deletePublication(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deletePublication", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deletePublication *SOAP_FMAC4
soap_get_ns1__deletePublication(struct soap *, ns1__deletePublication *,
                                const char *, const char *);

#ifndef soap_read_ns1__deletePublication
#define soap_read_ns1__deletePublication(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deletePublication(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deletePublication *SOAP_FMAC2
soap_instantiate_ns1__deletePublication(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__deletePublication *
soap_new_ns1__deletePublication(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deletePublication(soap, n, NULL, NULL, NULL);
}

inline ns1__deletePublication *
soap_new_req_ns1__deletePublication(struct soap *soap) {
  ns1__deletePublication *_p =
      soap_instantiate_ns1__deletePublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deletePublication *
soap_new_set_ns1__deletePublication(struct soap *soap, std::string *sessionId,
                                    LONG64 *publicationId, char *__item1) {
  ns1__deletePublication *_p =
      soap_instantiate_ns1__deletePublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__deletePublication::sessionId = sessionId;
    _p->ns1__deletePublication::publicationId = publicationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deletePublication(struct soap *soap,
                                               ns1__deletePublication *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deletePublication(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__loginResponse
#define SOAP_TYPE_ICat3_ns1__loginResponse (295)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__loginResponse(struct soap *, const char *, int,
                            const ns1__loginResponse *, const char *);
SOAP_FMAC3 ns1__loginResponse *SOAP_FMAC4
soap_in_ns1__loginResponse(struct soap *, const char *, ns1__loginResponse *,
                           const char *);

#ifndef soap_write_ns1__loginResponse
#define soap_write_ns1__loginResponse(soap, data)                              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:loginResponse", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__loginResponse *SOAP_FMAC4
soap_get_ns1__loginResponse(struct soap *, ns1__loginResponse *, const char *,
                            const char *);

#ifndef soap_read_ns1__loginResponse
#define soap_read_ns1__loginResponse(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__loginResponse(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__loginResponse *SOAP_FMAC2
soap_instantiate_ns1__loginResponse(struct soap *, int, const char *,
                                    const char *, size_t *);

inline ns1__loginResponse *soap_new_ns1__loginResponse(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__loginResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__loginResponse *soap_new_req_ns1__loginResponse(struct soap *soap) {
  ns1__loginResponse *_p =
      soap_instantiate_ns1__loginResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__loginResponse *soap_new_set_ns1__loginResponse(struct soap *soap,
                                                           std::string *return_,
                                                           char *__item1) {
  ns1__loginResponse *_p =
      soap_instantiate_ns1__loginResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__loginResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__loginResponse(struct soap *soap,
                                           ns1__loginResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__loginResponse(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__login
#define SOAP_TYPE_ICat3_ns1__login (294)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__login(struct soap *, const char *, int,
                                              const ns1__login *, const char *);
SOAP_FMAC3 ns1__login *SOAP_FMAC4
soap_in_ns1__login(struct soap *, const char *, ns1__login *, const char *);

#ifndef soap_write_ns1__login
#define soap_write_ns1__login(soap, data)                                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:login", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__login *SOAP_FMAC4
soap_get_ns1__login(struct soap *, ns1__login *, const char *, const char *);

#ifndef soap_read_ns1__login
#define soap_read_ns1__login(soap, data)                                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__login(soap, data, NULL, NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__login *SOAP_FMAC2
soap_instantiate_ns1__login(struct soap *, int, const char *, const char *,
                            size_t *);

inline ns1__login *soap_new_ns1__login(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__login(soap, n, NULL, NULL, NULL);
}

inline ns1__login *soap_new_req_ns1__login(struct soap *soap) {
  ns1__login *_p = soap_instantiate_ns1__login(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__login *soap_new_set_ns1__login(struct soap *soap,
                                           std::string *username,
                                           std::string *password,
                                           char *__item1) {
  ns1__login *_p = soap_instantiate_ns1__login(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__login::username = username;
    _p->ns1__login::password = password;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__login(struct soap *soap, ns1__login *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__login(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__loginLifetimeResponse
#define SOAP_TYPE_ICat3_ns1__loginLifetimeResponse (293)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__loginLifetimeResponse(struct soap *, const char *, int,
                                    const ns1__loginLifetimeResponse *,
                                    const char *);
SOAP_FMAC3 ns1__loginLifetimeResponse *SOAP_FMAC4
soap_in_ns1__loginLifetimeResponse(struct soap *, const char *,
                                   ns1__loginLifetimeResponse *, const char *);

#ifndef soap_write_ns1__loginLifetimeResponse
#define soap_write_ns1__loginLifetimeResponse(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:loginLifetimeResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__loginLifetimeResponse *SOAP_FMAC4
soap_get_ns1__loginLifetimeResponse(struct soap *, ns1__loginLifetimeResponse *,
                                    const char *, const char *);

#ifndef soap_read_ns1__loginLifetimeResponse
#define soap_read_ns1__loginLifetimeResponse(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__loginLifetimeResponse(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__loginLifetimeResponse *SOAP_FMAC2
soap_instantiate_ns1__loginLifetimeResponse(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__loginLifetimeResponse *
soap_new_ns1__loginLifetimeResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__loginLifetimeResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__loginLifetimeResponse *
soap_new_req_ns1__loginLifetimeResponse(struct soap *soap) {
  ns1__loginLifetimeResponse *_p =
      soap_instantiate_ns1__loginLifetimeResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__loginLifetimeResponse *
soap_new_set_ns1__loginLifetimeResponse(struct soap *soap, std::string *return_,
                                        char *__item1) {
  ns1__loginLifetimeResponse *_p =
      soap_instantiate_ns1__loginLifetimeResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__loginLifetimeResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__loginLifetimeResponse(struct soap *soap,
                                       ns1__loginLifetimeResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__loginLifetimeResponse(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__loginLifetime
#define SOAP_TYPE_ICat3_ns1__loginLifetime (292)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__loginLifetime(struct soap *, const char *, int,
                            const ns1__loginLifetime *, const char *);
SOAP_FMAC3 ns1__loginLifetime *SOAP_FMAC4
soap_in_ns1__loginLifetime(struct soap *, const char *, ns1__loginLifetime *,
                           const char *);

#ifndef soap_write_ns1__loginLifetime
#define soap_write_ns1__loginLifetime(soap, data)                              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:loginLifetime", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__loginLifetime *SOAP_FMAC4
soap_get_ns1__loginLifetime(struct soap *, ns1__loginLifetime *, const char *,
                            const char *);

#ifndef soap_read_ns1__loginLifetime
#define soap_read_ns1__loginLifetime(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__loginLifetime(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__loginLifetime *SOAP_FMAC2
soap_instantiate_ns1__loginLifetime(struct soap *, int, const char *,
                                    const char *, size_t *);

inline ns1__loginLifetime *soap_new_ns1__loginLifetime(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__loginLifetime(soap, n, NULL, NULL, NULL);
}

inline ns1__loginLifetime *soap_new_req_ns1__loginLifetime(struct soap *soap,
                                                           int lifetime) {
  ns1__loginLifetime *_p =
      soap_instantiate_ns1__loginLifetime(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__loginLifetime::lifetime = lifetime;
  }
  return _p;
}

inline ns1__loginLifetime *
soap_new_set_ns1__loginLifetime(struct soap *soap, std::string *username,
                                std::string *password, int lifetime,
                                char *__item1) {
  ns1__loginLifetime *_p =
      soap_instantiate_ns1__loginLifetime(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__loginLifetime::username = username;
    _p->ns1__loginLifetime::password = password;
    _p->ns1__loginLifetime::lifetime = lifetime;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__loginLifetime(struct soap *soap,
                                           ns1__loginLifetime *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__loginLifetime(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getParameterByUnitsResponse
#define SOAP_TYPE_ICat3_ns1__getParameterByUnitsResponse (291)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getParameterByUnitsResponse(
    struct soap *, const char *, int, const ns1__getParameterByUnitsResponse *,
    const char *);
SOAP_FMAC3 ns1__getParameterByUnitsResponse *SOAP_FMAC4
soap_in_ns1__getParameterByUnitsResponse(struct soap *, const char *,
                                         ns1__getParameterByUnitsResponse *,
                                         const char *);

#ifndef soap_write_ns1__getParameterByUnitsResponse
#define soap_write_ns1__getParameterByUnitsResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getParameterByUnitsResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByUnitsResponse *SOAP_FMAC4
soap_get_ns1__getParameterByUnitsResponse(struct soap *,
                                          ns1__getParameterByUnitsResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__getParameterByUnitsResponse
#define soap_read_ns1__getParameterByUnitsResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getParameterByUnitsResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getParameterByUnitsResponse *SOAP_FMAC2
soap_instantiate_ns1__getParameterByUnitsResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__getParameterByUnitsResponse *
soap_new_ns1__getParameterByUnitsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getParameterByUnitsResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__getParameterByUnitsResponse *
soap_new_req_ns1__getParameterByUnitsResponse(struct soap *soap) {
  ns1__getParameterByUnitsResponse *_p =
      soap_instantiate_ns1__getParameterByUnitsResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getParameterByUnitsResponse *
soap_new_set_ns1__getParameterByUnitsResponse(
    struct soap *soap, std::vector<ns1__parameter *> &return_, char *__item1) {
  ns1__getParameterByUnitsResponse *_p =
      soap_instantiate_ns1__getParameterByUnitsResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getParameterByUnitsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getParameterByUnitsResponse(
    struct soap *soap, ns1__getParameterByUnitsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getParameterByUnitsResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getParameterByUnits
#define SOAP_TYPE_ICat3_ns1__getParameterByUnits (290)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getParameterByUnits(struct soap *, const char *, int,
                                  const ns1__getParameterByUnits *,
                                  const char *);
SOAP_FMAC3 ns1__getParameterByUnits *SOAP_FMAC4
soap_in_ns1__getParameterByUnits(struct soap *, const char *,
                                 ns1__getParameterByUnits *, const char *);

#ifndef soap_write_ns1__getParameterByUnits
#define soap_write_ns1__getParameterByUnits(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getParameterByUnits", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByUnits *SOAP_FMAC4
soap_get_ns1__getParameterByUnits(struct soap *, ns1__getParameterByUnits *,
                                  const char *, const char *);

#ifndef soap_read_ns1__getParameterByUnits
#define soap_read_ns1__getParameterByUnits(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getParameterByUnits(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getParameterByUnits *SOAP_FMAC2
soap_instantiate_ns1__getParameterByUnits(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__getParameterByUnits *
soap_new_ns1__getParameterByUnits(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getParameterByUnits(soap, n, NULL, NULL, NULL);
}

inline ns1__getParameterByUnits *
soap_new_req_ns1__getParameterByUnits(struct soap *soap) {
  ns1__getParameterByUnits *_p =
      soap_instantiate_ns1__getParameterByUnits(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getParameterByUnits *
soap_new_set_ns1__getParameterByUnits(struct soap *soap, std::string *sessionId,
                                      std::string *units, char *__item1) {
  ns1__getParameterByUnits *_p =
      soap_instantiate_ns1__getParameterByUnits(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getParameterByUnits::sessionId = sessionId;
    _p->ns1__getParameterByUnits::units = units;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getParameterByUnits(struct soap *soap,
                                                 ns1__getParameterByUnits *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getParameterByUnits(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addSampleResponse
#define SOAP_TYPE_ICat3_ns1__addSampleResponse (289)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addSampleResponse(struct soap *, const char *, int,
                                const ns1__addSampleResponse *, const char *);
SOAP_FMAC3 ns1__addSampleResponse *SOAP_FMAC4
soap_in_ns1__addSampleResponse(struct soap *, const char *,
                               ns1__addSampleResponse *, const char *);

#ifndef soap_write_ns1__addSampleResponse
#define soap_write_ns1__addSampleResponse(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addSampleResponse", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addSampleResponse *SOAP_FMAC4
soap_get_ns1__addSampleResponse(struct soap *, ns1__addSampleResponse *,
                                const char *, const char *);

#ifndef soap_read_ns1__addSampleResponse
#define soap_read_ns1__addSampleResponse(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addSampleResponse(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addSampleResponse *SOAP_FMAC2
soap_instantiate_ns1__addSampleResponse(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__addSampleResponse *
soap_new_ns1__addSampleResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addSampleResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__addSampleResponse *
soap_new_req_ns1__addSampleResponse(struct soap *soap) {
  ns1__addSampleResponse *_p =
      soap_instantiate_ns1__addSampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addSampleResponse *
soap_new_set_ns1__addSampleResponse(struct soap *soap, ns1__sample *return_,
                                    char *__item1) {
  ns1__addSampleResponse *_p =
      soap_instantiate_ns1__addSampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addSampleResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addSampleResponse(struct soap *soap,
                                               ns1__addSampleResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addSampleResponse(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addSample
#define SOAP_TYPE_ICat3_ns1__addSample (288)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__addSample(struct soap *, const char *,
                                                  int, const ns1__addSample *,
                                                  const char *);
SOAP_FMAC3 ns1__addSample *SOAP_FMAC4
soap_in_ns1__addSample(struct soap *, const char *, ns1__addSample *,
                       const char *);

#ifndef soap_write_ns1__addSample
#define soap_write_ns1__addSample(soap, data)                                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:addSample", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addSample *SOAP_FMAC4
soap_get_ns1__addSample(struct soap *, ns1__addSample *, const char *,
                        const char *);

#ifndef soap_read_ns1__addSample
#define soap_read_ns1__addSample(soap, data)                                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addSample(soap, data, NULL, NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addSample *SOAP_FMAC2
soap_instantiate_ns1__addSample(struct soap *, int, const char *, const char *,
                                size_t *);

inline ns1__addSample *soap_new_ns1__addSample(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addSample(soap, n, NULL, NULL, NULL);
}

inline ns1__addSample *soap_new_req_ns1__addSample(struct soap *soap) {
  ns1__addSample *_p =
      soap_instantiate_ns1__addSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addSample *soap_new_set_ns1__addSample(struct soap *soap,
                                                   std::string *sessionId,
                                                   ns1__sample *sample,
                                                   LONG64 *investigationId,
                                                   char *__item1) {
  ns1__addSample *_p =
      soap_instantiate_ns1__addSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addSample::sessionId = sessionId;
    _p->ns1__addSample::sample = sample;
    _p->ns1__addSample::investigationId = investigationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addSample(struct soap *soap, ns1__addSample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__addSample(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addAuthorisationResponse
#define SOAP_TYPE_ICat3_ns1__addAuthorisationResponse (287)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addAuthorisationResponse(struct soap *, const char *, int,
                                       const ns1__addAuthorisationResponse *,
                                       const char *);
SOAP_FMAC3 ns1__addAuthorisationResponse *SOAP_FMAC4
soap_in_ns1__addAuthorisationResponse(struct soap *, const char *,
                                      ns1__addAuthorisationResponse *,
                                      const char *);

#ifndef soap_write_ns1__addAuthorisationResponse
#define soap_write_ns1__addAuthorisationResponse(soap, data)                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addAuthorisationResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addAuthorisationResponse *SOAP_FMAC4
soap_get_ns1__addAuthorisationResponse(struct soap *,
                                       ns1__addAuthorisationResponse *,
                                       const char *, const char *);

#ifndef soap_read_ns1__addAuthorisationResponse
#define soap_read_ns1__addAuthorisationResponse(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addAuthorisationResponse(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addAuthorisationResponse *SOAP_FMAC2
soap_instantiate_ns1__addAuthorisationResponse(struct soap *, int, const char *,
                                               const char *, size_t *);

inline ns1__addAuthorisationResponse *
soap_new_ns1__addAuthorisationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addAuthorisationResponse(soap, n, NULL, NULL,
                                                        NULL);
}

inline ns1__addAuthorisationResponse *
soap_new_req_ns1__addAuthorisationResponse(struct soap *soap) {
  ns1__addAuthorisationResponse *_p =
      soap_instantiate_ns1__addAuthorisationResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addAuthorisationResponse *
soap_new_set_ns1__addAuthorisationResponse(struct soap *soap,
                                           ns1__icatAuthorisation *return_,
                                           char *__item1) {
  ns1__addAuthorisationResponse *_p =
      soap_instantiate_ns1__addAuthorisationResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addAuthorisationResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__addAuthorisationResponse(struct soap *soap,
                                          ns1__addAuthorisationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addAuthorisationResponse(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addAuthorisation
#define SOAP_TYPE_ICat3_ns1__addAuthorisation (286)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addAuthorisation(struct soap *, const char *, int,
                               const ns1__addAuthorisation *, const char *);
SOAP_FMAC3 ns1__addAuthorisation *SOAP_FMAC4
soap_in_ns1__addAuthorisation(struct soap *, const char *,
                              ns1__addAuthorisation *, const char *);

#ifndef soap_write_ns1__addAuthorisation
#define soap_write_ns1__addAuthorisation(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addAuthorisation", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addAuthorisation *SOAP_FMAC4
soap_get_ns1__addAuthorisation(struct soap *, ns1__addAuthorisation *,
                               const char *, const char *);

#ifndef soap_read_ns1__addAuthorisation
#define soap_read_ns1__addAuthorisation(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addAuthorisation(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addAuthorisation *SOAP_FMAC2
soap_instantiate_ns1__addAuthorisation(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__addAuthorisation *soap_new_ns1__addAuthorisation(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__addAuthorisation(soap, n, NULL, NULL, NULL);
}

inline ns1__addAuthorisation *
soap_new_req_ns1__addAuthorisation(struct soap *soap) {
  ns1__addAuthorisation *_p =
      soap_instantiate_ns1__addAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addAuthorisation *soap_new_set_ns1__addAuthorisation(
    struct soap *soap, std::string *sessionId, std::string *toAddFedId,
    std::string *toAddRole, LONG64 *elementId,
    enum ns1__elementType *elementType, char *__item1) {
  ns1__addAuthorisation *_p =
      soap_instantiate_ns1__addAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addAuthorisation::sessionId = sessionId;
    _p->ns1__addAuthorisation::toAddFedId = toAddFedId;
    _p->ns1__addAuthorisation::toAddRole = toAddRole;
    _p->ns1__addAuthorisation::elementId = elementId;
    _p->ns1__addAuthorisation::elementType = elementType;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addAuthorisation(struct soap *soap,
                                              ns1__addAuthorisation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addAuthorisation(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__createDataFilesResponse
#define SOAP_TYPE_ICat3_ns1__createDataFilesResponse (285)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__createDataFilesResponse(struct soap *, const char *, int,
                                      const ns1__createDataFilesResponse *,
                                      const char *);
SOAP_FMAC3 ns1__createDataFilesResponse *SOAP_FMAC4
soap_in_ns1__createDataFilesResponse(struct soap *, const char *,
                                     ns1__createDataFilesResponse *,
                                     const char *);

#ifndef soap_write_ns1__createDataFilesResponse
#define soap_write_ns1__createDataFilesResponse(soap, data)                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:createDataFilesResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataFilesResponse *SOAP_FMAC4
soap_get_ns1__createDataFilesResponse(struct soap *,
                                      ns1__createDataFilesResponse *,
                                      const char *, const char *);

#ifndef soap_read_ns1__createDataFilesResponse
#define soap_read_ns1__createDataFilesResponse(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__createDataFilesResponse(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__createDataFilesResponse *SOAP_FMAC2
soap_instantiate_ns1__createDataFilesResponse(struct soap *, int, const char *,
                                              const char *, size_t *);

inline ns1__createDataFilesResponse *
soap_new_ns1__createDataFilesResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__createDataFilesResponse(soap, n, NULL, NULL,
                                                       NULL);
}

inline ns1__createDataFilesResponse *
soap_new_req_ns1__createDataFilesResponse(struct soap *soap) {
  ns1__createDataFilesResponse *_p =
      soap_instantiate_ns1__createDataFilesResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__createDataFilesResponse *soap_new_set_ns1__createDataFilesResponse(
    struct soap *soap, std::vector<ns1__datafile *> &return_, char *__item1) {
  ns1__createDataFilesResponse *_p =
      soap_instantiate_ns1__createDataFilesResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__createDataFilesResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__createDataFilesResponse(struct soap *soap,
                                         ns1__createDataFilesResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__createDataFilesResponse(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__createDataFiles
#define SOAP_TYPE_ICat3_ns1__createDataFiles (284)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__createDataFiles(struct soap *, const char *, int,
                              const ns1__createDataFiles *, const char *);
SOAP_FMAC3 ns1__createDataFiles *SOAP_FMAC4
soap_in_ns1__createDataFiles(struct soap *, const char *,
                             ns1__createDataFiles *, const char *);

#ifndef soap_write_ns1__createDataFiles
#define soap_write_ns1__createDataFiles(soap, data)                            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:createDataFiles", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataFiles *SOAP_FMAC4
soap_get_ns1__createDataFiles(struct soap *, ns1__createDataFiles *,
                              const char *, const char *);

#ifndef soap_read_ns1__createDataFiles
#define soap_read_ns1__createDataFiles(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__createDataFiles(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__createDataFiles *SOAP_FMAC2
soap_instantiate_ns1__createDataFiles(struct soap *, int, const char *,
                                      const char *, size_t *);

inline ns1__createDataFiles *soap_new_ns1__createDataFiles(struct soap *soap,
                                                           int n = -1) {
  return soap_instantiate_ns1__createDataFiles(soap, n, NULL, NULL, NULL);
}

inline ns1__createDataFiles *
soap_new_req_ns1__createDataFiles(struct soap *soap) {
  ns1__createDataFiles *_p =
      soap_instantiate_ns1__createDataFiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__createDataFiles *
soap_new_set_ns1__createDataFiles(struct soap *soap, std::string *sessionId,
                                  std::vector<ns1__datafile *> &dataFiles,
                                  LONG64 *datasetId, char *__item1) {
  ns1__createDataFiles *_p =
      soap_instantiate_ns1__createDataFiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__createDataFiles::sessionId = sessionId;
    _p->ns1__createDataFiles::dataFiles = dataFiles;
    _p->ns1__createDataFiles::datasetId = datasetId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__createDataFiles(struct soap *soap,
                                             ns1__createDataFiles *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__createDataFiles(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addDataSetParameterResponse
#define SOAP_TYPE_ICat3_ns1__addDataSetParameterResponse (283)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__addDataSetParameterResponse(
    struct soap *, const char *, int, const ns1__addDataSetParameterResponse *,
    const char *);
SOAP_FMAC3 ns1__addDataSetParameterResponse *SOAP_FMAC4
soap_in_ns1__addDataSetParameterResponse(struct soap *, const char *,
                                         ns1__addDataSetParameterResponse *,
                                         const char *);

#ifndef soap_write_ns1__addDataSetParameterResponse
#define soap_write_ns1__addDataSetParameterResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addDataSetParameterResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataSetParameterResponse *SOAP_FMAC4
soap_get_ns1__addDataSetParameterResponse(struct soap *,
                                          ns1__addDataSetParameterResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__addDataSetParameterResponse
#define soap_read_ns1__addDataSetParameterResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addDataSetParameterResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addDataSetParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__addDataSetParameterResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__addDataSetParameterResponse *
soap_new_ns1__addDataSetParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addDataSetParameterResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__addDataSetParameterResponse *
soap_new_req_ns1__addDataSetParameterResponse(struct soap *soap) {
  ns1__addDataSetParameterResponse *_p =
      soap_instantiate_ns1__addDataSetParameterResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addDataSetParameterResponse *
soap_new_set_ns1__addDataSetParameterResponse(struct soap *soap,
                                              ns1__datasetParameter *return_,
                                              char *__item1) {
  ns1__addDataSetParameterResponse *_p =
      soap_instantiate_ns1__addDataSetParameterResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addDataSetParameterResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addDataSetParameterResponse(
    struct soap *soap, ns1__addDataSetParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addDataSetParameterResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addDataSetParameter
#define SOAP_TYPE_ICat3_ns1__addDataSetParameter (282)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addDataSetParameter(struct soap *, const char *, int,
                                  const ns1__addDataSetParameter *,
                                  const char *);
SOAP_FMAC3 ns1__addDataSetParameter *SOAP_FMAC4
soap_in_ns1__addDataSetParameter(struct soap *, const char *,
                                 ns1__addDataSetParameter *, const char *);

#ifndef soap_write_ns1__addDataSetParameter
#define soap_write_ns1__addDataSetParameter(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addDataSetParameter", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataSetParameter *SOAP_FMAC4
soap_get_ns1__addDataSetParameter(struct soap *, ns1__addDataSetParameter *,
                                  const char *, const char *);

#ifndef soap_read_ns1__addDataSetParameter
#define soap_read_ns1__addDataSetParameter(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addDataSetParameter(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addDataSetParameter *SOAP_FMAC2
soap_instantiate_ns1__addDataSetParameter(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__addDataSetParameter *
soap_new_ns1__addDataSetParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addDataSetParameter(soap, n, NULL, NULL, NULL);
}

inline ns1__addDataSetParameter *
soap_new_req_ns1__addDataSetParameter(struct soap *soap) {
  ns1__addDataSetParameter *_p =
      soap_instantiate_ns1__addDataSetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addDataSetParameter *
soap_new_set_ns1__addDataSetParameter(struct soap *soap, std::string *sessionId,
                                      ns1__datasetParameter *dataSetParameter,
                                      LONG64 *datasetId, char *__item1) {
  ns1__addDataSetParameter *_p =
      soap_instantiate_ns1__addDataSetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addDataSetParameter::sessionId = sessionId;
    _p->ns1__addDataSetParameter::dataSetParameter = dataSetParameter;
    _p->ns1__addDataSetParameter::datasetId = datasetId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addDataSetParameter(struct soap *soap,
                                                 ns1__addDataSetParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addDataSetParameter(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyInvestigatorResponse
#define SOAP_TYPE_ICat3_ns1__modifyInvestigatorResponse (281)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__modifyInvestigatorResponse(
    struct soap *, const char *, int, const ns1__modifyInvestigatorResponse *,
    const char *);
SOAP_FMAC3 ns1__modifyInvestigatorResponse *SOAP_FMAC4
soap_in_ns1__modifyInvestigatorResponse(struct soap *, const char *,
                                        ns1__modifyInvestigatorResponse *,
                                        const char *);

#ifndef soap_write_ns1__modifyInvestigatorResponse
#define soap_write_ns1__modifyInvestigatorResponse(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyInvestigatorResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyInvestigatorResponse *SOAP_FMAC4
soap_get_ns1__modifyInvestigatorResponse(struct soap *,
                                         ns1__modifyInvestigatorResponse *,
                                         const char *, const char *);

#ifndef soap_read_ns1__modifyInvestigatorResponse
#define soap_read_ns1__modifyInvestigatorResponse(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyInvestigatorResponse(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyInvestigatorResponse *SOAP_FMAC2
soap_instantiate_ns1__modifyInvestigatorResponse(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__modifyInvestigatorResponse *
soap_new_ns1__modifyInvestigatorResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyInvestigatorResponse(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__modifyInvestigatorResponse *
soap_new_req_ns1__modifyInvestigatorResponse(struct soap *soap) {
  ns1__modifyInvestigatorResponse *_p =
      soap_instantiate_ns1__modifyInvestigatorResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyInvestigatorResponse *
soap_new_set_ns1__modifyInvestigatorResponse(struct soap *soap, char *__item1) {
  ns1__modifyInvestigatorResponse *_p =
      soap_instantiate_ns1__modifyInvestigatorResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__modifyInvestigatorResponse(
    struct soap *soap, ns1__modifyInvestigatorResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyInvestigatorResponse(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyInvestigator
#define SOAP_TYPE_ICat3_ns1__modifyInvestigator (280)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifyInvestigator(struct soap *, const char *, int,
                                 const ns1__modifyInvestigator *, const char *);
SOAP_FMAC3 ns1__modifyInvestigator *SOAP_FMAC4
soap_in_ns1__modifyInvestigator(struct soap *, const char *,
                                ns1__modifyInvestigator *, const char *);

#ifndef soap_write_ns1__modifyInvestigator
#define soap_write_ns1__modifyInvestigator(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyInvestigator", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyInvestigator *SOAP_FMAC4
soap_get_ns1__modifyInvestigator(struct soap *, ns1__modifyInvestigator *,
                                 const char *, const char *);

#ifndef soap_read_ns1__modifyInvestigator
#define soap_read_ns1__modifyInvestigator(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyInvestigator(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyInvestigator *SOAP_FMAC2
soap_instantiate_ns1__modifyInvestigator(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__modifyInvestigator *
soap_new_ns1__modifyInvestigator(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyInvestigator(soap, n, NULL, NULL, NULL);
}

inline ns1__modifyInvestigator *
soap_new_req_ns1__modifyInvestigator(struct soap *soap) {
  ns1__modifyInvestigator *_p =
      soap_instantiate_ns1__modifyInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyInvestigator *
soap_new_set_ns1__modifyInvestigator(struct soap *soap, std::string *sessionId,
                                     ns1__investigator *ns1__investigator_,
                                     char *__item1) {
  ns1__modifyInvestigator *_p =
      soap_instantiate_ns1__modifyInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__modifyInvestigator::sessionId = sessionId;
    _p->ns1__modifyInvestigator::ns1__investigator_ = ns1__investigator_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__modifyInvestigator(struct soap *soap,
                                                ns1__modifyInvestigator *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyInvestigator(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifySampleParameterResponse
#define SOAP_TYPE_ICat3_ns1__modifySampleParameterResponse (279)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__modifySampleParameterResponse(
    struct soap *, const char *, int,
    const ns1__modifySampleParameterResponse *, const char *);
SOAP_FMAC3 ns1__modifySampleParameterResponse *SOAP_FMAC4
soap_in_ns1__modifySampleParameterResponse(struct soap *, const char *,
                                           ns1__modifySampleParameterResponse *,
                                           const char *);

#ifndef soap_write_ns1__modifySampleParameterResponse
#define soap_write_ns1__modifySampleParameterResponse(soap, data)              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifySampleParameterResponse", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifySampleParameterResponse *SOAP_FMAC4
soap_get_ns1__modifySampleParameterResponse(
    struct soap *, ns1__modifySampleParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__modifySampleParameterResponse
#define soap_read_ns1__modifySampleParameterResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifySampleParameterResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifySampleParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__modifySampleParameterResponse(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline ns1__modifySampleParameterResponse *
soap_new_ns1__modifySampleParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifySampleParameterResponse(soap, n, NULL,
                                                             NULL, NULL);
}

inline ns1__modifySampleParameterResponse *
soap_new_req_ns1__modifySampleParameterResponse(struct soap *soap) {
  ns1__modifySampleParameterResponse *_p =
      soap_instantiate_ns1__modifySampleParameterResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifySampleParameterResponse *
soap_new_set_ns1__modifySampleParameterResponse(struct soap *soap,
                                                char *__item1) {
  ns1__modifySampleParameterResponse *_p =
      soap_instantiate_ns1__modifySampleParameterResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__modifySampleParameterResponse(
    struct soap *soap, ns1__modifySampleParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifySampleParameterResponse(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifySampleParameter
#define SOAP_TYPE_ICat3_ns1__modifySampleParameter (278)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifySampleParameter(struct soap *, const char *, int,
                                    const ns1__modifySampleParameter *,
                                    const char *);
SOAP_FMAC3 ns1__modifySampleParameter *SOAP_FMAC4
soap_in_ns1__modifySampleParameter(struct soap *, const char *,
                                   ns1__modifySampleParameter *, const char *);

#ifndef soap_write_ns1__modifySampleParameter
#define soap_write_ns1__modifySampleParameter(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifySampleParameter", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifySampleParameter *SOAP_FMAC4
soap_get_ns1__modifySampleParameter(struct soap *, ns1__modifySampleParameter *,
                                    const char *, const char *);

#ifndef soap_read_ns1__modifySampleParameter
#define soap_read_ns1__modifySampleParameter(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifySampleParameter(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifySampleParameter *SOAP_FMAC2
soap_instantiate_ns1__modifySampleParameter(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__modifySampleParameter *
soap_new_ns1__modifySampleParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifySampleParameter(soap, n, NULL, NULL, NULL);
}

inline ns1__modifySampleParameter *
soap_new_req_ns1__modifySampleParameter(struct soap *soap) {
  ns1__modifySampleParameter *_p =
      soap_instantiate_ns1__modifySampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifySampleParameter *soap_new_set_ns1__modifySampleParameter(
    struct soap *soap, std::string *sessionId,
    ns1__sampleParameter *sampleParameter, char *__item1) {
  ns1__modifySampleParameter *_p =
      soap_instantiate_ns1__modifySampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__modifySampleParameter::sessionId = sessionId;
    _p->ns1__modifySampleParameter::sampleParameter = sampleParameter;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__modifySampleParameter(struct soap *soap,
                                       ns1__modifySampleParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifySampleParameter(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listDatafileFormatsResponse
#define SOAP_TYPE_ICat3_ns1__listDatafileFormatsResponse (277)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__listDatafileFormatsResponse(
    struct soap *, const char *, int, const ns1__listDatafileFormatsResponse *,
    const char *);
SOAP_FMAC3 ns1__listDatafileFormatsResponse *SOAP_FMAC4
soap_in_ns1__listDatafileFormatsResponse(struct soap *, const char *,
                                         ns1__listDatafileFormatsResponse *,
                                         const char *);

#ifndef soap_write_ns1__listDatafileFormatsResponse
#define soap_write_ns1__listDatafileFormatsResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listDatafileFormatsResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatafileFormatsResponse *SOAP_FMAC4
soap_get_ns1__listDatafileFormatsResponse(struct soap *,
                                          ns1__listDatafileFormatsResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__listDatafileFormatsResponse
#define soap_read_ns1__listDatafileFormatsResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listDatafileFormatsResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listDatafileFormatsResponse *SOAP_FMAC2
soap_instantiate_ns1__listDatafileFormatsResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__listDatafileFormatsResponse *
soap_new_ns1__listDatafileFormatsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listDatafileFormatsResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__listDatafileFormatsResponse *
soap_new_req_ns1__listDatafileFormatsResponse(struct soap *soap) {
  ns1__listDatafileFormatsResponse *_p =
      soap_instantiate_ns1__listDatafileFormatsResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listDatafileFormatsResponse *
soap_new_set_ns1__listDatafileFormatsResponse(
    struct soap *soap, std::vector<ns1__datafileFormat *> &return_,
    char *__item1) {
  ns1__listDatafileFormatsResponse *_p =
      soap_instantiate_ns1__listDatafileFormatsResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listDatafileFormatsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__listDatafileFormatsResponse(
    struct soap *soap, ns1__listDatafileFormatsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listDatafileFormatsResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listDatafileFormats
#define SOAP_TYPE_ICat3_ns1__listDatafileFormats (276)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listDatafileFormats(struct soap *, const char *, int,
                                  const ns1__listDatafileFormats *,
                                  const char *);
SOAP_FMAC3 ns1__listDatafileFormats *SOAP_FMAC4
soap_in_ns1__listDatafileFormats(struct soap *, const char *,
                                 ns1__listDatafileFormats *, const char *);

#ifndef soap_write_ns1__listDatafileFormats
#define soap_write_ns1__listDatafileFormats(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listDatafileFormats", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatafileFormats *SOAP_FMAC4
soap_get_ns1__listDatafileFormats(struct soap *, ns1__listDatafileFormats *,
                                  const char *, const char *);

#ifndef soap_read_ns1__listDatafileFormats
#define soap_read_ns1__listDatafileFormats(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listDatafileFormats(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listDatafileFormats *SOAP_FMAC2
soap_instantiate_ns1__listDatafileFormats(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__listDatafileFormats *
soap_new_ns1__listDatafileFormats(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listDatafileFormats(soap, n, NULL, NULL, NULL);
}

inline ns1__listDatafileFormats *
soap_new_req_ns1__listDatafileFormats(struct soap *soap) {
  ns1__listDatafileFormats *_p =
      soap_instantiate_ns1__listDatafileFormats(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listDatafileFormats *
soap_new_set_ns1__listDatafileFormats(struct soap *soap, std::string *sessionId,
                                      char *__item1) {
  ns1__listDatafileFormats *_p =
      soap_instantiate_ns1__listDatafileFormats(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listDatafileFormats::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__listDatafileFormats(struct soap *soap,
                                                 ns1__listDatafileFormats *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listDatafileFormats(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterResponse
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterResponse (275)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchInvestigationByParameterResponse(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByParameterResponse *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterResponse *SOAP_FMAC4
soap_in_ns1__searchInvestigationByParameterResponse(
    struct soap *, const char *, ns1__searchInvestigationByParameterResponse *,
    const char *);

#ifndef soap_write_ns1__searchInvestigationByParameterResponse
#define soap_write_ns1__searchInvestigationByParameterResponse(soap, data)     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchInvestigationByParameterResponse",    \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterResponse *SOAP_FMAC4
soap_get_ns1__searchInvestigationByParameterResponse(
    struct soap *, ns1__searchInvestigationByParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchInvestigationByParameterResponse
#define soap_read_ns1__searchInvestigationByParameterResponse(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByParameterResponse(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByParameterResponse(struct soap *, int,
                                                             const char *,
                                                             const char *,
                                                             size_t *);

inline ns1__searchInvestigationByParameterResponse *
soap_new_ns1__searchInvestigationByParameterResponse(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByParameterResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByParameterResponse *
soap_new_req_ns1__searchInvestigationByParameterResponse(struct soap *soap) {
  ns1__searchInvestigationByParameterResponse *_p =
      soap_instantiate_ns1__searchInvestigationByParameterResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByParameterResponse *
soap_new_set_ns1__searchInvestigationByParameterResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchInvestigationByParameterResponse *_p =
      soap_instantiate_ns1__searchInvestigationByParameterResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByParameterResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByParameterResponse(
    struct soap *soap, ns1__searchInvestigationByParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByParameterResponse(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByParameter
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByParameter (274)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchInvestigationByParameter(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByParameter *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameter *SOAP_FMAC4
soap_in_ns1__searchInvestigationByParameter(
    struct soap *, const char *, ns1__searchInvestigationByParameter *,
    const char *);

#ifndef soap_write_ns1__searchInvestigationByParameter
#define soap_write_ns1__searchInvestigationByParameter(soap, data)             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchInvestigationByParameter", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameter *SOAP_FMAC4
soap_get_ns1__searchInvestigationByParameter(
    struct soap *, ns1__searchInvestigationByParameter *, const char *,
    const char *);

#ifndef soap_read_ns1__searchInvestigationByParameter
#define soap_read_ns1__searchInvestigationByParameter(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByParameter(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByParameter *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByParameter(struct soap *, int,
                                                     const char *, const char *,
                                                     size_t *);

inline ns1__searchInvestigationByParameter *
soap_new_ns1__searchInvestigationByParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByParameter(soap, n, NULL,
                                                              NULL, NULL);
}

inline ns1__searchInvestigationByParameter *
soap_new_req_ns1__searchInvestigationByParameter(struct soap *soap) {
  ns1__searchInvestigationByParameter *_p =
      soap_instantiate_ns1__searchInvestigationByParameter(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByParameter *
soap_new_set_ns1__searchInvestigationByParameter(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__parameterSearch *> &parameters, char *__item1) {
  ns1__searchInvestigationByParameter *_p =
      soap_instantiate_ns1__searchInvestigationByParameter(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByParameter::sessionId = sessionId;
    _p->ns1__searchInvestigationByParameter::parameters = parameters;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByParameter(
    struct soap *soap, ns1__searchInvestigationByParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByParameter(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByAdvancedResponse
#define SOAP_TYPE_ICat3_ns1__searchByAdvancedResponse (273)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchByAdvancedResponse(struct soap *, const char *, int,
                                       const ns1__searchByAdvancedResponse *,
                                       const char *);
SOAP_FMAC3 ns1__searchByAdvancedResponse *SOAP_FMAC4
soap_in_ns1__searchByAdvancedResponse(struct soap *, const char *,
                                      ns1__searchByAdvancedResponse *,
                                      const char *);

#ifndef soap_write_ns1__searchByAdvancedResponse
#define soap_write_ns1__searchByAdvancedResponse(soap, data)                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByAdvancedResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByAdvancedResponse *SOAP_FMAC4
soap_get_ns1__searchByAdvancedResponse(struct soap *,
                                       ns1__searchByAdvancedResponse *,
                                       const char *, const char *);

#ifndef soap_read_ns1__searchByAdvancedResponse
#define soap_read_ns1__searchByAdvancedResponse(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByAdvancedResponse(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByAdvancedResponse *SOAP_FMAC2
soap_instantiate_ns1__searchByAdvancedResponse(struct soap *, int, const char *,
                                               const char *, size_t *);

inline ns1__searchByAdvancedResponse *
soap_new_ns1__searchByAdvancedResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByAdvancedResponse(soap, n, NULL, NULL,
                                                        NULL);
}

inline ns1__searchByAdvancedResponse *
soap_new_req_ns1__searchByAdvancedResponse(struct soap *soap) {
  ns1__searchByAdvancedResponse *_p =
      soap_instantiate_ns1__searchByAdvancedResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByAdvancedResponse *
soap_new_set_ns1__searchByAdvancedResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__searchByAdvancedResponse *_p =
      soap_instantiate_ns1__searchByAdvancedResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByAdvancedResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchByAdvancedResponse(struct soap *soap,
                                          ns1__searchByAdvancedResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByAdvancedResponse(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByAdvanced
#define SOAP_TYPE_ICat3_ns1__searchByAdvanced (272)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchByAdvanced(struct soap *, const char *, int,
                               const ns1__searchByAdvanced *, const char *);
SOAP_FMAC3 ns1__searchByAdvanced *SOAP_FMAC4
soap_in_ns1__searchByAdvanced(struct soap *, const char *,
                              ns1__searchByAdvanced *, const char *);

#ifndef soap_write_ns1__searchByAdvanced
#define soap_write_ns1__searchByAdvanced(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByAdvanced", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByAdvanced *SOAP_FMAC4
soap_get_ns1__searchByAdvanced(struct soap *, ns1__searchByAdvanced *,
                               const char *, const char *);

#ifndef soap_read_ns1__searchByAdvanced
#define soap_read_ns1__searchByAdvanced(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByAdvanced(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByAdvanced *SOAP_FMAC2
soap_instantiate_ns1__searchByAdvanced(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__searchByAdvanced *soap_new_ns1__searchByAdvanced(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__searchByAdvanced(soap, n, NULL, NULL, NULL);
}

inline ns1__searchByAdvanced *
soap_new_req_ns1__searchByAdvanced(struct soap *soap) {
  ns1__searchByAdvanced *_p =
      soap_instantiate_ns1__searchByAdvanced(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByAdvanced *soap_new_set_ns1__searchByAdvanced(
    struct soap *soap, std::string *sessionId,
    ns1__advancedSearchDetails *advancedSearchDetails, char *__item1) {
  ns1__searchByAdvanced *_p =
      soap_instantiate_ns1__searchByAdvanced(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByAdvanced::sessionId = sessionId;
    _p->ns1__searchByAdvanced::advancedSearchDetails = advancedSearchDetails;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByAdvanced(struct soap *soap,
                                              ns1__searchByAdvanced *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByAdvanced(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByAdvancedPaginationResponse
#define SOAP_TYPE_ICat3_ns1__searchByAdvancedPaginationResponse (271)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchByAdvancedPaginationResponse(
    struct soap *, const char *, int,
    const ns1__searchByAdvancedPaginationResponse *, const char *);
SOAP_FMAC3 ns1__searchByAdvancedPaginationResponse *SOAP_FMAC4
soap_in_ns1__searchByAdvancedPaginationResponse(
    struct soap *, const char *, ns1__searchByAdvancedPaginationResponse *,
    const char *);

#ifndef soap_write_ns1__searchByAdvancedPaginationResponse
#define soap_write_ns1__searchByAdvancedPaginationResponse(soap, data)         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchByAdvancedPaginationResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByAdvancedPaginationResponse *SOAP_FMAC4
soap_get_ns1__searchByAdvancedPaginationResponse(
    struct soap *, ns1__searchByAdvancedPaginationResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchByAdvancedPaginationResponse
#define soap_read_ns1__searchByAdvancedPaginationResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByAdvancedPaginationResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByAdvancedPaginationResponse *SOAP_FMAC2
soap_instantiate_ns1__searchByAdvancedPaginationResponse(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline ns1__searchByAdvancedPaginationResponse *
soap_new_ns1__searchByAdvancedPaginationResponse(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate_ns1__searchByAdvancedPaginationResponse(soap, n, NULL,
                                                                  NULL, NULL);
}

inline ns1__searchByAdvancedPaginationResponse *
soap_new_req_ns1__searchByAdvancedPaginationResponse(struct soap *soap) {
  ns1__searchByAdvancedPaginationResponse *_p =
      soap_instantiate_ns1__searchByAdvancedPaginationResponse(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByAdvancedPaginationResponse *
soap_new_set_ns1__searchByAdvancedPaginationResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__searchByAdvancedPaginationResponse *_p =
      soap_instantiate_ns1__searchByAdvancedPaginationResponse(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByAdvancedPaginationResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByAdvancedPaginationResponse(
    struct soap *soap, ns1__searchByAdvancedPaginationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByAdvancedPaginationResponse(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_ns1__advancedSearchDetails
#define SOAP_TYPE_ICat3_ns1__advancedSearchDetails (270)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__advancedSearchDetails(struct soap *, const char *, int,
                                    const ns1__advancedSearchDetails *,
                                    const char *);
SOAP_FMAC3 ns1__advancedSearchDetails *SOAP_FMAC4
soap_in_ns1__advancedSearchDetails(struct soap *, const char *,
                                   ns1__advancedSearchDetails *, const char *);

#ifndef soap_write_ns1__advancedSearchDetails
#define soap_write_ns1__advancedSearchDetails(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:advancedSearchDetails", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__advancedSearchDetails *SOAP_FMAC4
soap_get_ns1__advancedSearchDetails(struct soap *, ns1__advancedSearchDetails *,
                                    const char *, const char *);

#ifndef soap_read_ns1__advancedSearchDetails
#define soap_read_ns1__advancedSearchDetails(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__advancedSearchDetails(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__advancedSearchDetails *SOAP_FMAC2
soap_instantiate_ns1__advancedSearchDetails(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__advancedSearchDetails *
soap_new_ns1__advancedSearchDetails(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__advancedSearchDetails(soap, n, NULL, NULL, NULL);
}

inline ns1__advancedSearchDetails *
soap_new_req_ns1__advancedSearchDetails(struct soap *soap, bool caseSensitive) {
  ns1__advancedSearchDetails *_p =
      soap_instantiate_ns1__advancedSearchDetails(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__advancedSearchDetails::caseSensitive = caseSensitive;
  }
  return _p;
}

inline ns1__advancedSearchDetails *soap_new_set_ns1__advancedSearchDetails(
    struct soap *soap, std::string *backCatalogueInvestigatorString,
    bool caseSensitive, std::string *datafileName, time_t *dateRangeEnd,
    time_t *dateRangeStart, std::string *experimentNumber, LONG64 *grantId,
    std::vector<std::string> &instruments, std::string *investigationAbstract,
    enum ns1__investigationInclude *investigationInclude,
    std::string *investigationName, std::string *investigationType,
    std::vector<std::string> &investigators, std::vector<std::string> &keywords,
    double *runEnd, double *runStart, std::string *sampleName,
    std::string *visitId, char *__item1) {
  ns1__advancedSearchDetails *_p =
      soap_instantiate_ns1__advancedSearchDetails(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__advancedSearchDetails::backCatalogueInvestigatorString =
        backCatalogueInvestigatorString;
    _p->ns1__advancedSearchDetails::caseSensitive = caseSensitive;
    _p->ns1__advancedSearchDetails::datafileName = datafileName;
    _p->ns1__advancedSearchDetails::dateRangeEnd = dateRangeEnd;
    _p->ns1__advancedSearchDetails::dateRangeStart = dateRangeStart;
    _p->ns1__advancedSearchDetails::experimentNumber = experimentNumber;
    _p->ns1__advancedSearchDetails::grantId = grantId;
    _p->ns1__advancedSearchDetails::instruments = instruments;
    _p->ns1__advancedSearchDetails::investigationAbstract =
        investigationAbstract;
    _p->ns1__advancedSearchDetails::investigationInclude = investigationInclude;
    _p->ns1__advancedSearchDetails::investigationName = investigationName;
    _p->ns1__advancedSearchDetails::investigationType = investigationType;
    _p->ns1__advancedSearchDetails::investigators = investigators;
    _p->ns1__advancedSearchDetails::keywords = keywords;
    _p->ns1__advancedSearchDetails::runEnd = runEnd;
    _p->ns1__advancedSearchDetails::runStart = runStart;
    _p->ns1__advancedSearchDetails::sampleName = sampleName;
    _p->ns1__advancedSearchDetails::visitId = visitId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__advancedSearchDetails(struct soap *soap,
                                       ns1__advancedSearchDetails *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__advancedSearchDetails(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByAdvancedPagination
#define SOAP_TYPE_ICat3_ns1__searchByAdvancedPagination (269)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchByAdvancedPagination(
    struct soap *, const char *, int, const ns1__searchByAdvancedPagination *,
    const char *);
SOAP_FMAC3 ns1__searchByAdvancedPagination *SOAP_FMAC4
soap_in_ns1__searchByAdvancedPagination(struct soap *, const char *,
                                        ns1__searchByAdvancedPagination *,
                                        const char *);

#ifndef soap_write_ns1__searchByAdvancedPagination
#define soap_write_ns1__searchByAdvancedPagination(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByAdvancedPagination", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByAdvancedPagination *SOAP_FMAC4
soap_get_ns1__searchByAdvancedPagination(struct soap *,
                                         ns1__searchByAdvancedPagination *,
                                         const char *, const char *);

#ifndef soap_read_ns1__searchByAdvancedPagination
#define soap_read_ns1__searchByAdvancedPagination(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByAdvancedPagination(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByAdvancedPagination *SOAP_FMAC2
soap_instantiate_ns1__searchByAdvancedPagination(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__searchByAdvancedPagination *
soap_new_ns1__searchByAdvancedPagination(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByAdvancedPagination(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__searchByAdvancedPagination *
soap_new_req_ns1__searchByAdvancedPagination(struct soap *soap, int startIndex,
                                             int numberOfResults) {
  ns1__searchByAdvancedPagination *_p =
      soap_instantiate_ns1__searchByAdvancedPagination(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByAdvancedPagination::startIndex = startIndex;
    _p->ns1__searchByAdvancedPagination::numberOfResults = numberOfResults;
  }
  return _p;
}

inline ns1__searchByAdvancedPagination *
soap_new_set_ns1__searchByAdvancedPagination(
    struct soap *soap, std::string *sessionId,
    ns1__advancedSearchDetails *advancedSearchDetails, int startIndex,
    int numberOfResults, char *__item1) {
  ns1__searchByAdvancedPagination *_p =
      soap_instantiate_ns1__searchByAdvancedPagination(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByAdvancedPagination::sessionId = sessionId;
    _p->ns1__searchByAdvancedPagination::advancedSearchDetails =
        advancedSearchDetails;
    _p->ns1__searchByAdvancedPagination::startIndex = startIndex;
    _p->ns1__searchByAdvancedPagination::numberOfResults = numberOfResults;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByAdvancedPagination(
    struct soap *soap, ns1__searchByAdvancedPagination *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByAdvancedPagination(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByParameterComparisonResponse
#define SOAP_TYPE_ICat3_ns1__searchDatafileByParameterComparisonResponse (268)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatafileByParameterComparisonResponse(
    struct soap *, const char *, int,
    const ns1__searchDatafileByParameterComparisonResponse *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterComparisonResponse *SOAP_FMAC4
soap_in_ns1__searchDatafileByParameterComparisonResponse(
    struct soap *, const char *,
    ns1__searchDatafileByParameterComparisonResponse *, const char *);

#ifndef soap_write_ns1__searchDatafileByParameterComparisonResponse
#define soap_write_ns1__searchDatafileByParameterComparisonResponse(soap,      \
                                                                    data)      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchDatafileByParameterComparisonResponse", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterComparisonResponse *SOAP_FMAC4
soap_get_ns1__searchDatafileByParameterComparisonResponse(
    struct soap *, ns1__searchDatafileByParameterComparisonResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchDatafileByParameterComparisonResponse
#define soap_read_ns1__searchDatafileByParameterComparisonResponse(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByParameterComparisonResponse(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByParameterComparisonResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByParameterComparisonResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchDatafileByParameterComparisonResponse *
soap_new_ns1__searchDatafileByParameterComparisonResponse(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate_ns1__searchDatafileByParameterComparisonResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatafileByParameterComparisonResponse *
soap_new_req_ns1__searchDatafileByParameterComparisonResponse(
    struct soap *soap) {
  ns1__searchDatafileByParameterComparisonResponse *_p =
      soap_instantiate_ns1__searchDatafileByParameterComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByParameterComparisonResponse *
soap_new_set_ns1__searchDatafileByParameterComparisonResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatafileByParameterComparisonResponse *_p =
      soap_instantiate_ns1__searchDatafileByParameterComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByParameterComparisonResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByParameterComparisonResponse(
    struct soap *soap, ns1__searchDatafileByParameterComparisonResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByParameterComparisonResponse(struct soap *, int,
                                                           int, void *, size_t,
                                                           const void *,
                                                           size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByParameterComparison
#define SOAP_TYPE_ICat3_ns1__searchDatafileByParameterComparison (267)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatafileByParameterComparison(
    struct soap *, const char *, int,
    const ns1__searchDatafileByParameterComparison *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterComparison *SOAP_FMAC4
soap_in_ns1__searchDatafileByParameterComparison(
    struct soap *, const char *, ns1__searchDatafileByParameterComparison *,
    const char *);

#ifndef soap_write_ns1__searchDatafileByParameterComparison
#define soap_write_ns1__searchDatafileByParameterComparison(soap, data)        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatafileByParameterComparison",       \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterComparison *SOAP_FMAC4
soap_get_ns1__searchDatafileByParameterComparison(
    struct soap *, ns1__searchDatafileByParameterComparison *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatafileByParameterComparison
#define soap_read_ns1__searchDatafileByParameterComparison(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByParameterComparison(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByParameterComparison *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByParameterComparison(struct soap *, int,
                                                          const char *,
                                                          const char *,
                                                          size_t *);

inline ns1__searchDatafileByParameterComparison *
soap_new_ns1__searchDatafileByParameterComparison(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate_ns1__searchDatafileByParameterComparison(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatafileByParameterComparison *
soap_new_req_ns1__searchDatafileByParameterComparison(struct soap *soap) {
  ns1__searchDatafileByParameterComparison *_p =
      soap_instantiate_ns1__searchDatafileByParameterComparison(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByParameterComparison *
soap_new_set_ns1__searchDatafileByParameterComparison(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__parameterComparisonCondition *> &comparison,
    char *__item1) {
  ns1__searchDatafileByParameterComparison *_p =
      soap_instantiate_ns1__searchDatafileByParameterComparison(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByParameterComparison::sessionId = sessionId;
    _p->ns1__searchDatafileByParameterComparison::comparison = comparison;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByParameterComparison(
    struct soap *soap, ns1__searchDatafileByParameterComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByParameterComparison(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByRunNumberResponse
#define SOAP_TYPE_ICat3_ns1__searchByRunNumberResponse (266)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchByRunNumberResponse(struct soap *, const char *, int,
                                        const ns1__searchByRunNumberResponse *,
                                        const char *);
SOAP_FMAC3 ns1__searchByRunNumberResponse *SOAP_FMAC4
soap_in_ns1__searchByRunNumberResponse(struct soap *, const char *,
                                       ns1__searchByRunNumberResponse *,
                                       const char *);

#ifndef soap_write_ns1__searchByRunNumberResponse
#define soap_write_ns1__searchByRunNumberResponse(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByRunNumberResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByRunNumberResponse *SOAP_FMAC4
soap_get_ns1__searchByRunNumberResponse(struct soap *,
                                        ns1__searchByRunNumberResponse *,
                                        const char *, const char *);

#ifndef soap_read_ns1__searchByRunNumberResponse
#define soap_read_ns1__searchByRunNumberResponse(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByRunNumberResponse(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByRunNumberResponse *SOAP_FMAC2
soap_instantiate_ns1__searchByRunNumberResponse(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__searchByRunNumberResponse *
soap_new_ns1__searchByRunNumberResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByRunNumberResponse(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__searchByRunNumberResponse *
soap_new_req_ns1__searchByRunNumberResponse(struct soap *soap) {
  ns1__searchByRunNumberResponse *_p =
      soap_instantiate_ns1__searchByRunNumberResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByRunNumberResponse *
soap_new_set_ns1__searchByRunNumberResponse(
    struct soap *soap, std::vector<ns1__datafile *> &return_, char *__item1) {
  ns1__searchByRunNumberResponse *_p =
      soap_instantiate_ns1__searchByRunNumberResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByRunNumberResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchByRunNumberResponse(struct soap *soap,
                                           ns1__searchByRunNumberResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByRunNumberResponse(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByRunNumber
#define SOAP_TYPE_ICat3_ns1__searchByRunNumber (265)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchByRunNumber(struct soap *, const char *, int,
                                const ns1__searchByRunNumber *, const char *);
SOAP_FMAC3 ns1__searchByRunNumber *SOAP_FMAC4
soap_in_ns1__searchByRunNumber(struct soap *, const char *,
                               ns1__searchByRunNumber *, const char *);

#ifndef soap_write_ns1__searchByRunNumber
#define soap_write_ns1__searchByRunNumber(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByRunNumber", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByRunNumber *SOAP_FMAC4
soap_get_ns1__searchByRunNumber(struct soap *, ns1__searchByRunNumber *,
                                const char *, const char *);

#ifndef soap_read_ns1__searchByRunNumber
#define soap_read_ns1__searchByRunNumber(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByRunNumber(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByRunNumber *SOAP_FMAC2
soap_instantiate_ns1__searchByRunNumber(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__searchByRunNumber *
soap_new_ns1__searchByRunNumber(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByRunNumber(soap, n, NULL, NULL, NULL);
}

inline ns1__searchByRunNumber *
soap_new_req_ns1__searchByRunNumber(struct soap *soap, float startRun,
                                    float endRun) {
  ns1__searchByRunNumber *_p =
      soap_instantiate_ns1__searchByRunNumber(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByRunNumber::startRun = startRun;
    _p->ns1__searchByRunNumber::endRun = endRun;
  }
  return _p;
}

inline ns1__searchByRunNumber *
soap_new_set_ns1__searchByRunNumber(struct soap *soap, std::string *sessionId,
                                    std::vector<std::string> &instruments,
                                    float startRun, float endRun,
                                    char *__item1) {
  ns1__searchByRunNumber *_p =
      soap_instantiate_ns1__searchByRunNumber(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByRunNumber::sessionId = sessionId;
    _p->ns1__searchByRunNumber::instruments = instruments;
    _p->ns1__searchByRunNumber::startRun = startRun;
    _p->ns1__searchByRunNumber::endRun = endRun;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByRunNumber(struct soap *soap,
                                               ns1__searchByRunNumber *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByRunNumber(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByRunNumberPaginationResponse
#define SOAP_TYPE_ICat3_ns1__searchByRunNumberPaginationResponse (264)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchByRunNumberPaginationResponse(
    struct soap *, const char *, int,
    const ns1__searchByRunNumberPaginationResponse *, const char *);
SOAP_FMAC3 ns1__searchByRunNumberPaginationResponse *SOAP_FMAC4
soap_in_ns1__searchByRunNumberPaginationResponse(
    struct soap *, const char *, ns1__searchByRunNumberPaginationResponse *,
    const char *);

#ifndef soap_write_ns1__searchByRunNumberPaginationResponse
#define soap_write_ns1__searchByRunNumberPaginationResponse(soap, data)        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByRunNumberPaginationResponse",       \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByRunNumberPaginationResponse *SOAP_FMAC4
soap_get_ns1__searchByRunNumberPaginationResponse(
    struct soap *, ns1__searchByRunNumberPaginationResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchByRunNumberPaginationResponse
#define soap_read_ns1__searchByRunNumberPaginationResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByRunNumberPaginationResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByRunNumberPaginationResponse *SOAP_FMAC2
soap_instantiate_ns1__searchByRunNumberPaginationResponse(struct soap *, int,
                                                          const char *,
                                                          const char *,
                                                          size_t *);

inline ns1__searchByRunNumberPaginationResponse *
soap_new_ns1__searchByRunNumberPaginationResponse(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate_ns1__searchByRunNumberPaginationResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchByRunNumberPaginationResponse *
soap_new_req_ns1__searchByRunNumberPaginationResponse(struct soap *soap) {
  ns1__searchByRunNumberPaginationResponse *_p =
      soap_instantiate_ns1__searchByRunNumberPaginationResponse(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByRunNumberPaginationResponse *
soap_new_set_ns1__searchByRunNumberPaginationResponse(
    struct soap *soap, std::vector<ns1__datafile *> &return_, char *__item1) {
  ns1__searchByRunNumberPaginationResponse *_p =
      soap_instantiate_ns1__searchByRunNumberPaginationResponse(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByRunNumberPaginationResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByRunNumberPaginationResponse(
    struct soap *soap, ns1__searchByRunNumberPaginationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByRunNumberPaginationResponse(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByRunNumberPagination
#define SOAP_TYPE_ICat3_ns1__searchByRunNumberPagination (263)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchByRunNumberPagination(
    struct soap *, const char *, int, const ns1__searchByRunNumberPagination *,
    const char *);
SOAP_FMAC3 ns1__searchByRunNumberPagination *SOAP_FMAC4
soap_in_ns1__searchByRunNumberPagination(struct soap *, const char *,
                                         ns1__searchByRunNumberPagination *,
                                         const char *);

#ifndef soap_write_ns1__searchByRunNumberPagination
#define soap_write_ns1__searchByRunNumberPagination(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByRunNumberPagination", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByRunNumberPagination *SOAP_FMAC4
soap_get_ns1__searchByRunNumberPagination(struct soap *,
                                          ns1__searchByRunNumberPagination *,
                                          const char *, const char *);

#ifndef soap_read_ns1__searchByRunNumberPagination
#define soap_read_ns1__searchByRunNumberPagination(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByRunNumberPagination(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByRunNumberPagination *SOAP_FMAC2
soap_instantiate_ns1__searchByRunNumberPagination(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__searchByRunNumberPagination *
soap_new_ns1__searchByRunNumberPagination(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByRunNumberPagination(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__searchByRunNumberPagination *
soap_new_req_ns1__searchByRunNumberPagination(struct soap *soap, float startRun,
                                              float endRun, int startIndex,
                                              int numberOfResults) {
  ns1__searchByRunNumberPagination *_p =
      soap_instantiate_ns1__searchByRunNumberPagination(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByRunNumberPagination::startRun = startRun;
    _p->ns1__searchByRunNumberPagination::endRun = endRun;
    _p->ns1__searchByRunNumberPagination::startIndex = startIndex;
    _p->ns1__searchByRunNumberPagination::numberOfResults = numberOfResults;
  }
  return _p;
}

inline ns1__searchByRunNumberPagination *
soap_new_set_ns1__searchByRunNumberPagination(
    struct soap *soap, std::string *sessionId,
    std::vector<std::string> &instruments, float startRun, float endRun,
    int startIndex, int numberOfResults, char *__item1) {
  ns1__searchByRunNumberPagination *_p =
      soap_instantiate_ns1__searchByRunNumberPagination(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByRunNumberPagination::sessionId = sessionId;
    _p->ns1__searchByRunNumberPagination::instruments = instruments;
    _p->ns1__searchByRunNumberPagination::startRun = startRun;
    _p->ns1__searchByRunNumberPagination::endRun = endRun;
    _p->ns1__searchByRunNumberPagination::startIndex = startIndex;
    _p->ns1__searchByRunNumberPagination::numberOfResults = numberOfResults;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByRunNumberPagination(
    struct soap *soap, ns1__searchByRunNumberPagination *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByRunNumberPagination(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addDataSetParametersResponse
#define SOAP_TYPE_ICat3_ns1__addDataSetParametersResponse (262)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__addDataSetParametersResponse(
    struct soap *, const char *, int, const ns1__addDataSetParametersResponse *,
    const char *);
SOAP_FMAC3 ns1__addDataSetParametersResponse *SOAP_FMAC4
soap_in_ns1__addDataSetParametersResponse(struct soap *, const char *,
                                          ns1__addDataSetParametersResponse *,
                                          const char *);

#ifndef soap_write_ns1__addDataSetParametersResponse
#define soap_write_ns1__addDataSetParametersResponse(soap, data)               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addDataSetParametersResponse", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataSetParametersResponse *SOAP_FMAC4
soap_get_ns1__addDataSetParametersResponse(struct soap *,
                                           ns1__addDataSetParametersResponse *,
                                           const char *, const char *);

#ifndef soap_read_ns1__addDataSetParametersResponse
#define soap_read_ns1__addDataSetParametersResponse(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addDataSetParametersResponse(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addDataSetParametersResponse *SOAP_FMAC2
soap_instantiate_ns1__addDataSetParametersResponse(struct soap *, int,
                                                   const char *, const char *,
                                                   size_t *);

inline ns1__addDataSetParametersResponse *
soap_new_ns1__addDataSetParametersResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addDataSetParametersResponse(soap, n, NULL, NULL,
                                                            NULL);
}

inline ns1__addDataSetParametersResponse *
soap_new_req_ns1__addDataSetParametersResponse(struct soap *soap) {
  ns1__addDataSetParametersResponse *_p =
      soap_instantiate_ns1__addDataSetParametersResponse(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addDataSetParametersResponse *
soap_new_set_ns1__addDataSetParametersResponse(
    struct soap *soap, std::vector<ns1__datasetParameter *> &return_,
    char *__item1) {
  ns1__addDataSetParametersResponse *_p =
      soap_instantiate_ns1__addDataSetParametersResponse(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addDataSetParametersResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addDataSetParametersResponse(
    struct soap *soap, ns1__addDataSetParametersResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addDataSetParametersResponse(struct soap *, int, int, void *,
                                            size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addDataSetParameters
#define SOAP_TYPE_ICat3_ns1__addDataSetParameters (261)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addDataSetParameters(struct soap *, const char *, int,
                                   const ns1__addDataSetParameters *,
                                   const char *);
SOAP_FMAC3 ns1__addDataSetParameters *SOAP_FMAC4
soap_in_ns1__addDataSetParameters(struct soap *, const char *,
                                  ns1__addDataSetParameters *, const char *);

#ifndef soap_write_ns1__addDataSetParameters
#define soap_write_ns1__addDataSetParameters(soap, data)                       \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addDataSetParameters", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataSetParameters *SOAP_FMAC4
soap_get_ns1__addDataSetParameters(struct soap *, ns1__addDataSetParameters *,
                                   const char *, const char *);

#ifndef soap_read_ns1__addDataSetParameters
#define soap_read_ns1__addDataSetParameters(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addDataSetParameters(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addDataSetParameters *SOAP_FMAC2
soap_instantiate_ns1__addDataSetParameters(struct soap *, int, const char *,
                                           const char *, size_t *);

inline ns1__addDataSetParameters *
soap_new_ns1__addDataSetParameters(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addDataSetParameters(soap, n, NULL, NULL, NULL);
}

inline ns1__addDataSetParameters *
soap_new_req_ns1__addDataSetParameters(struct soap *soap) {
  ns1__addDataSetParameters *_p =
      soap_instantiate_ns1__addDataSetParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addDataSetParameters *soap_new_set_ns1__addDataSetParameters(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__datasetParameter *> &dataSetParameters, LONG64 *datasetId,
    char *__item1) {
  ns1__addDataSetParameters *_p =
      soap_instantiate_ns1__addDataSetParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addDataSetParameters::sessionId = sessionId;
    _p->ns1__addDataSetParameters::dataSetParameters = dataSetParameters;
    _p->ns1__addDataSetParameters::datasetId = datasetId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__addDataSetParameters(struct soap *soap,
                                      ns1__addDataSetParameters *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addDataSetParameters(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteKeywordResponse
#define SOAP_TYPE_ICat3_ns1__deleteKeywordResponse (260)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteKeywordResponse(struct soap *, const char *, int,
                                    const ns1__deleteKeywordResponse *,
                                    const char *);
SOAP_FMAC3 ns1__deleteKeywordResponse *SOAP_FMAC4
soap_in_ns1__deleteKeywordResponse(struct soap *, const char *,
                                   ns1__deleteKeywordResponse *, const char *);

#ifndef soap_write_ns1__deleteKeywordResponse
#define soap_write_ns1__deleteKeywordResponse(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteKeywordResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteKeywordResponse *SOAP_FMAC4
soap_get_ns1__deleteKeywordResponse(struct soap *, ns1__deleteKeywordResponse *,
                                    const char *, const char *);

#ifndef soap_read_ns1__deleteKeywordResponse
#define soap_read_ns1__deleteKeywordResponse(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteKeywordResponse(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteKeywordResponse *SOAP_FMAC2
soap_instantiate_ns1__deleteKeywordResponse(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__deleteKeywordResponse *
soap_new_ns1__deleteKeywordResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteKeywordResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__deleteKeywordResponse *
soap_new_req_ns1__deleteKeywordResponse(struct soap *soap) {
  ns1__deleteKeywordResponse *_p =
      soap_instantiate_ns1__deleteKeywordResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteKeywordResponse *
soap_new_set_ns1__deleteKeywordResponse(struct soap *soap, char *__item1) {
  ns1__deleteKeywordResponse *_p =
      soap_instantiate_ns1__deleteKeywordResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__deleteKeywordResponse(struct soap *soap,
                                       ns1__deleteKeywordResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteKeywordResponse(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteKeyword
#define SOAP_TYPE_ICat3_ns1__deleteKeyword (259)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteKeyword(struct soap *, const char *, int,
                            const ns1__deleteKeyword *, const char *);
SOAP_FMAC3 ns1__deleteKeyword *SOAP_FMAC4
soap_in_ns1__deleteKeyword(struct soap *, const char *, ns1__deleteKeyword *,
                           const char *);

#ifndef soap_write_ns1__deleteKeyword
#define soap_write_ns1__deleteKeyword(soap, data)                              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteKeyword", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteKeyword *SOAP_FMAC4
soap_get_ns1__deleteKeyword(struct soap *, ns1__deleteKeyword *, const char *,
                            const char *);

#ifndef soap_read_ns1__deleteKeyword
#define soap_read_ns1__deleteKeyword(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteKeyword(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteKeyword *SOAP_FMAC2
soap_instantiate_ns1__deleteKeyword(struct soap *, int, const char *,
                                    const char *, size_t *);

inline ns1__deleteKeyword *soap_new_ns1__deleteKeyword(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__deleteKeyword(soap, n, NULL, NULL, NULL);
}

inline ns1__deleteKeyword *soap_new_req_ns1__deleteKeyword(struct soap *soap) {
  ns1__deleteKeyword *_p =
      soap_instantiate_ns1__deleteKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteKeyword *
soap_new_set_ns1__deleteKeyword(struct soap *soap, std::string *sessionId,
                                ns1__keywordPK *keywordPK, char *__item1) {
  ns1__deleteKeyword *_p =
      soap_instantiate_ns1__deleteKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__deleteKeyword::sessionId = sessionId;
    _p->ns1__deleteKeyword::keywordPK = keywordPK;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteKeyword(struct soap *soap,
                                           ns1__deleteKeyword *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__deleteKeyword(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByParameterResponse
#define SOAP_TYPE_ICat3_ns1__searchDatasetByParameterResponse (258)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatasetByParameterResponse(
    struct soap *, const char *, int,
    const ns1__searchDatasetByParameterResponse *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterResponse *SOAP_FMAC4
soap_in_ns1__searchDatasetByParameterResponse(
    struct soap *, const char *, ns1__searchDatasetByParameterResponse *,
    const char *);

#ifndef soap_write_ns1__searchDatasetByParameterResponse
#define soap_write_ns1__searchDatasetByParameterResponse(soap, data)           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatasetByParameterResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterResponse *SOAP_FMAC4
soap_get_ns1__searchDatasetByParameterResponse(
    struct soap *, ns1__searchDatasetByParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatasetByParameterResponse
#define soap_read_ns1__searchDatasetByParameterResponse(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByParameterResponse(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByParameterResponse(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline ns1__searchDatasetByParameterResponse *
soap_new_ns1__searchDatasetByParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatasetByParameterResponse(soap, n, NULL,
                                                                NULL, NULL);
}

inline ns1__searchDatasetByParameterResponse *
soap_new_req_ns1__searchDatasetByParameterResponse(struct soap *soap) {
  ns1__searchDatasetByParameterResponse *_p =
      soap_instantiate_ns1__searchDatasetByParameterResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByParameterResponse *
soap_new_set_ns1__searchDatasetByParameterResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatasetByParameterResponse *_p =
      soap_instantiate_ns1__searchDatasetByParameterResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByParameterResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByParameterResponse(
    struct soap *soap, ns1__searchDatasetByParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByParameterResponse(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByParameter
#define SOAP_TYPE_ICat3_ns1__searchDatasetByParameter (257)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatasetByParameter(struct soap *, const char *, int,
                                       const ns1__searchDatasetByParameter *,
                                       const char *);
SOAP_FMAC3 ns1__searchDatasetByParameter *SOAP_FMAC4
soap_in_ns1__searchDatasetByParameter(struct soap *, const char *,
                                      ns1__searchDatasetByParameter *,
                                      const char *);

#ifndef soap_write_ns1__searchDatasetByParameter
#define soap_write_ns1__searchDatasetByParameter(soap, data)                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatasetByParameter", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameter *SOAP_FMAC4
soap_get_ns1__searchDatasetByParameter(struct soap *,
                                       ns1__searchDatasetByParameter *,
                                       const char *, const char *);

#ifndef soap_read_ns1__searchDatasetByParameter
#define soap_read_ns1__searchDatasetByParameter(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByParameter(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByParameter *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByParameter(struct soap *, int, const char *,
                                               const char *, size_t *);

inline ns1__searchDatasetByParameter *
soap_new_ns1__searchDatasetByParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatasetByParameter(soap, n, NULL, NULL,
                                                        NULL);
}

inline ns1__searchDatasetByParameter *
soap_new_req_ns1__searchDatasetByParameter(struct soap *soap) {
  ns1__searchDatasetByParameter *_p =
      soap_instantiate_ns1__searchDatasetByParameter(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByParameter *
soap_new_set_ns1__searchDatasetByParameter(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__parameterSearch *> &parameters, char *__item1) {
  ns1__searchDatasetByParameter *_p =
      soap_instantiate_ns1__searchDatasetByParameter(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByParameter::sessionId = sessionId;
    _p->ns1__searchDatasetByParameter::parameters = parameters;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchDatasetByParameter(struct soap *soap,
                                          ns1__searchDatasetByParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByParameter(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteSampleResponse
#define SOAP_TYPE_ICat3_ns1__deleteSampleResponse (256)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteSampleResponse(struct soap *, const char *, int,
                                   const ns1__deleteSampleResponse *,
                                   const char *);
SOAP_FMAC3 ns1__deleteSampleResponse *SOAP_FMAC4
soap_in_ns1__deleteSampleResponse(struct soap *, const char *,
                                  ns1__deleteSampleResponse *, const char *);

#ifndef soap_write_ns1__deleteSampleResponse
#define soap_write_ns1__deleteSampleResponse(soap, data)                       \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteSampleResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteSampleResponse *SOAP_FMAC4
soap_get_ns1__deleteSampleResponse(struct soap *, ns1__deleteSampleResponse *,
                                   const char *, const char *);

#ifndef soap_read_ns1__deleteSampleResponse
#define soap_read_ns1__deleteSampleResponse(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteSampleResponse(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteSampleResponse *SOAP_FMAC2
soap_instantiate_ns1__deleteSampleResponse(struct soap *, int, const char *,
                                           const char *, size_t *);

inline ns1__deleteSampleResponse *
soap_new_ns1__deleteSampleResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteSampleResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__deleteSampleResponse *
soap_new_req_ns1__deleteSampleResponse(struct soap *soap) {
  ns1__deleteSampleResponse *_p =
      soap_instantiate_ns1__deleteSampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteSampleResponse *
soap_new_set_ns1__deleteSampleResponse(struct soap *soap, char *__item1) {
  ns1__deleteSampleResponse *_p =
      soap_instantiate_ns1__deleteSampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__deleteSampleResponse(struct soap *soap,
                                      ns1__deleteSampleResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteSampleResponse(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteSample
#define SOAP_TYPE_ICat3_ns1__deleteSample (255)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteSample(struct soap *, const char *, int,
                           const ns1__deleteSample *, const char *);
SOAP_FMAC3 ns1__deleteSample *SOAP_FMAC4
soap_in_ns1__deleteSample(struct soap *, const char *, ns1__deleteSample *,
                          const char *);

#ifndef soap_write_ns1__deleteSample
#define soap_write_ns1__deleteSample(soap, data)                               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteSample", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteSample *SOAP_FMAC4
soap_get_ns1__deleteSample(struct soap *, ns1__deleteSample *, const char *,
                           const char *);

#ifndef soap_read_ns1__deleteSample
#define soap_read_ns1__deleteSample(soap, data)                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteSample(soap, data, NULL, NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteSample *SOAP_FMAC2
soap_instantiate_ns1__deleteSample(struct soap *, int, const char *,
                                   const char *, size_t *);

inline ns1__deleteSample *soap_new_ns1__deleteSample(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__deleteSample(soap, n, NULL, NULL, NULL);
}

inline ns1__deleteSample *soap_new_req_ns1__deleteSample(struct soap *soap) {
  ns1__deleteSample *_p =
      soap_instantiate_ns1__deleteSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteSample *soap_new_set_ns1__deleteSample(struct soap *soap,
                                                         std::string *sessionId,
                                                         LONG64 *sampleId,
                                                         char *__item1) {
  ns1__deleteSample *_p =
      soap_instantiate_ns1__deleteSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__deleteSample::sessionId = sessionId;
    _p->ns1__deleteSample::sampleId = sampleId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteSample(struct soap *soap,
                                          ns1__deleteSample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__deleteSample(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listDatasetStatusResponse
#define SOAP_TYPE_ICat3_ns1__listDatasetStatusResponse (254)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listDatasetStatusResponse(struct soap *, const char *, int,
                                        const ns1__listDatasetStatusResponse *,
                                        const char *);
SOAP_FMAC3 ns1__listDatasetStatusResponse *SOAP_FMAC4
soap_in_ns1__listDatasetStatusResponse(struct soap *, const char *,
                                       ns1__listDatasetStatusResponse *,
                                       const char *);

#ifndef soap_write_ns1__listDatasetStatusResponse
#define soap_write_ns1__listDatasetStatusResponse(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listDatasetStatusResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatasetStatusResponse *SOAP_FMAC4
soap_get_ns1__listDatasetStatusResponse(struct soap *,
                                        ns1__listDatasetStatusResponse *,
                                        const char *, const char *);

#ifndef soap_read_ns1__listDatasetStatusResponse
#define soap_read_ns1__listDatasetStatusResponse(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listDatasetStatusResponse(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listDatasetStatusResponse *SOAP_FMAC2
soap_instantiate_ns1__listDatasetStatusResponse(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__listDatasetStatusResponse *
soap_new_ns1__listDatasetStatusResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listDatasetStatusResponse(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__listDatasetStatusResponse *
soap_new_req_ns1__listDatasetStatusResponse(struct soap *soap) {
  ns1__listDatasetStatusResponse *_p =
      soap_instantiate_ns1__listDatasetStatusResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listDatasetStatusResponse *
soap_new_set_ns1__listDatasetStatusResponse(struct soap *soap,
                                            std::vector<std::string> &return_,
                                            char *__item1) {
  ns1__listDatasetStatusResponse *_p =
      soap_instantiate_ns1__listDatasetStatusResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listDatasetStatusResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__listDatasetStatusResponse(struct soap *soap,
                                           ns1__listDatasetStatusResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listDatasetStatusResponse(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listDatasetStatus
#define SOAP_TYPE_ICat3_ns1__listDatasetStatus (253)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listDatasetStatus(struct soap *, const char *, int,
                                const ns1__listDatasetStatus *, const char *);
SOAP_FMAC3 ns1__listDatasetStatus *SOAP_FMAC4
soap_in_ns1__listDatasetStatus(struct soap *, const char *,
                               ns1__listDatasetStatus *, const char *);

#ifndef soap_write_ns1__listDatasetStatus
#define soap_write_ns1__listDatasetStatus(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listDatasetStatus", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatasetStatus *SOAP_FMAC4
soap_get_ns1__listDatasetStatus(struct soap *, ns1__listDatasetStatus *,
                                const char *, const char *);

#ifndef soap_read_ns1__listDatasetStatus
#define soap_read_ns1__listDatasetStatus(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listDatasetStatus(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listDatasetStatus *SOAP_FMAC2
soap_instantiate_ns1__listDatasetStatus(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__listDatasetStatus *
soap_new_ns1__listDatasetStatus(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listDatasetStatus(soap, n, NULL, NULL, NULL);
}

inline ns1__listDatasetStatus *
soap_new_req_ns1__listDatasetStatus(struct soap *soap) {
  ns1__listDatasetStatus *_p =
      soap_instantiate_ns1__listDatasetStatus(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listDatasetStatus *
soap_new_set_ns1__listDatasetStatus(struct soap *soap, std::string *sessionId,
                                    char *__item1) {
  ns1__listDatasetStatus *_p =
      soap_instantiate_ns1__listDatasetStatus(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listDatasetStatus::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__listDatasetStatus(struct soap *soap,
                                               ns1__listDatasetStatus *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listDatasetStatus(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyInvestigationResponse
#define SOAP_TYPE_ICat3_ns1__modifyInvestigationResponse (252)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__modifyInvestigationResponse(
    struct soap *, const char *, int, const ns1__modifyInvestigationResponse *,
    const char *);
SOAP_FMAC3 ns1__modifyInvestigationResponse *SOAP_FMAC4
soap_in_ns1__modifyInvestigationResponse(struct soap *, const char *,
                                         ns1__modifyInvestigationResponse *,
                                         const char *);

#ifndef soap_write_ns1__modifyInvestigationResponse
#define soap_write_ns1__modifyInvestigationResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyInvestigationResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyInvestigationResponse *SOAP_FMAC4
soap_get_ns1__modifyInvestigationResponse(struct soap *,
                                          ns1__modifyInvestigationResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__modifyInvestigationResponse
#define soap_read_ns1__modifyInvestigationResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyInvestigationResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyInvestigationResponse *SOAP_FMAC2
soap_instantiate_ns1__modifyInvestigationResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__modifyInvestigationResponse *
soap_new_ns1__modifyInvestigationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyInvestigationResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__modifyInvestigationResponse *
soap_new_req_ns1__modifyInvestigationResponse(struct soap *soap) {
  ns1__modifyInvestigationResponse *_p =
      soap_instantiate_ns1__modifyInvestigationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyInvestigationResponse *
soap_new_set_ns1__modifyInvestigationResponse(struct soap *soap,
                                              char *__item1) {
  ns1__modifyInvestigationResponse *_p =
      soap_instantiate_ns1__modifyInvestigationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__modifyInvestigationResponse(
    struct soap *soap, ns1__modifyInvestigationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyInvestigationResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyInvestigation
#define SOAP_TYPE_ICat3_ns1__modifyInvestigation (251)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifyInvestigation(struct soap *, const char *, int,
                                  const ns1__modifyInvestigation *,
                                  const char *);
SOAP_FMAC3 ns1__modifyInvestigation *SOAP_FMAC4
soap_in_ns1__modifyInvestigation(struct soap *, const char *,
                                 ns1__modifyInvestigation *, const char *);

#ifndef soap_write_ns1__modifyInvestigation
#define soap_write_ns1__modifyInvestigation(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyInvestigation", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyInvestigation *SOAP_FMAC4
soap_get_ns1__modifyInvestigation(struct soap *, ns1__modifyInvestigation *,
                                  const char *, const char *);

#ifndef soap_read_ns1__modifyInvestigation
#define soap_read_ns1__modifyInvestigation(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyInvestigation(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyInvestigation *SOAP_FMAC2
soap_instantiate_ns1__modifyInvestigation(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__modifyInvestigation *
soap_new_ns1__modifyInvestigation(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyInvestigation(soap, n, NULL, NULL, NULL);
}

inline ns1__modifyInvestigation *
soap_new_req_ns1__modifyInvestigation(struct soap *soap) {
  ns1__modifyInvestigation *_p =
      soap_instantiate_ns1__modifyInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyInvestigation *
soap_new_set_ns1__modifyInvestigation(struct soap *soap, std::string *sessionId,
                                      ns1__investigation *investigaion,
                                      char *__item1) {
  ns1__modifyInvestigation *_p =
      soap_instantiate_ns1__modifyInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__modifyInvestigation::sessionId = sessionId;
    _p->ns1__modifyInvestigation::investigaion = investigaion;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__modifyInvestigation(struct soap *soap,
                                                 ns1__modifyInvestigation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyInvestigation(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__icatAuthorisation
#define SOAP_TYPE_ICat3_ns1__icatAuthorisation (250)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__icatAuthorisation(struct soap *, const char *, int,
                                const ns1__icatAuthorisation *, const char *);
SOAP_FMAC3 ns1__icatAuthorisation *SOAP_FMAC4
soap_in_ns1__icatAuthorisation(struct soap *, const char *,
                               ns1__icatAuthorisation *, const char *);

#ifndef soap_write_ns1__icatAuthorisation
#define soap_write_ns1__icatAuthorisation(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:icatAuthorisation", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__icatAuthorisation *SOAP_FMAC4
soap_get_ns1__icatAuthorisation(struct soap *, ns1__icatAuthorisation *,
                                const char *, const char *);

#ifndef soap_read_ns1__icatAuthorisation
#define soap_read_ns1__icatAuthorisation(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__icatAuthorisation(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__icatAuthorisation *SOAP_FMAC2
soap_instantiate_ns1__icatAuthorisation(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__icatAuthorisation *
soap_new_ns1__icatAuthorisation(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__icatAuthorisation(soap, n, NULL, NULL, NULL);
}

inline ns1__icatAuthorisation *soap_new_req_ns1__icatAuthorisation(
    struct soap *soap, bool facilityAcquiredData1, bool selected1) {
  ns1__icatAuthorisation *_p =
      soap_instantiate_ns1__icatAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__icatAuthorisation *soap_new_set_ns1__icatAuthorisation(
    struct soap *soap, LONG64 *elementId, enum ns1__elementType *elementType,
    LONG64 *id, ns1__icatRole *role, LONG64 *userChildRecord,
    std::string *userId, bool facilityAcquiredData1, ns1__icatRole *icatRole1,
    bool selected1, std::string *uniqueId1, char *__item2) {
  ns1__icatAuthorisation *_p =
      soap_instantiate_ns1__icatAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__icatAuthorisation::elementId = elementId;
    _p->ns1__icatAuthorisation::elementType = elementType;
    _p->ns1__icatAuthorisation::id = id;
    _p->ns1__icatAuthorisation::role = role;
    _p->ns1__icatAuthorisation::userChildRecord = userChildRecord;
    _p->ns1__icatAuthorisation::userId = userId;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__icatAuthorisation(struct soap *soap,
                                               ns1__icatAuthorisation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__icatAuthorisation(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getAuthorisationsResponse
#define SOAP_TYPE_ICat3_ns1__getAuthorisationsResponse (249)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getAuthorisationsResponse(struct soap *, const char *, int,
                                        const ns1__getAuthorisationsResponse *,
                                        const char *);
SOAP_FMAC3 ns1__getAuthorisationsResponse *SOAP_FMAC4
soap_in_ns1__getAuthorisationsResponse(struct soap *, const char *,
                                       ns1__getAuthorisationsResponse *,
                                       const char *);

#ifndef soap_write_ns1__getAuthorisationsResponse
#define soap_write_ns1__getAuthorisationsResponse(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getAuthorisationsResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAuthorisationsResponse *SOAP_FMAC4
soap_get_ns1__getAuthorisationsResponse(struct soap *,
                                        ns1__getAuthorisationsResponse *,
                                        const char *, const char *);

#ifndef soap_read_ns1__getAuthorisationsResponse
#define soap_read_ns1__getAuthorisationsResponse(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getAuthorisationsResponse(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getAuthorisationsResponse *SOAP_FMAC2
soap_instantiate_ns1__getAuthorisationsResponse(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__getAuthorisationsResponse *
soap_new_ns1__getAuthorisationsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getAuthorisationsResponse(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__getAuthorisationsResponse *
soap_new_req_ns1__getAuthorisationsResponse(struct soap *soap) {
  ns1__getAuthorisationsResponse *_p =
      soap_instantiate_ns1__getAuthorisationsResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getAuthorisationsResponse *
soap_new_set_ns1__getAuthorisationsResponse(
    struct soap *soap, std::vector<ns1__icatAuthorisation *> &return_,
    char *__item1) {
  ns1__getAuthorisationsResponse *_p =
      soap_instantiate_ns1__getAuthorisationsResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getAuthorisationsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getAuthorisationsResponse(struct soap *soap,
                                           ns1__getAuthorisationsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getAuthorisationsResponse(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getAuthorisations
#define SOAP_TYPE_ICat3_ns1__getAuthorisations (248)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getAuthorisations(struct soap *, const char *, int,
                                const ns1__getAuthorisations *, const char *);
SOAP_FMAC3 ns1__getAuthorisations *SOAP_FMAC4
soap_in_ns1__getAuthorisations(struct soap *, const char *,
                               ns1__getAuthorisations *, const char *);

#ifndef soap_write_ns1__getAuthorisations
#define soap_write_ns1__getAuthorisations(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getAuthorisations", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAuthorisations *SOAP_FMAC4
soap_get_ns1__getAuthorisations(struct soap *, ns1__getAuthorisations *,
                                const char *, const char *);

#ifndef soap_read_ns1__getAuthorisations
#define soap_read_ns1__getAuthorisations(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getAuthorisations(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getAuthorisations *SOAP_FMAC2
soap_instantiate_ns1__getAuthorisations(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__getAuthorisations *
soap_new_ns1__getAuthorisations(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getAuthorisations(soap, n, NULL, NULL, NULL);
}

inline ns1__getAuthorisations *
soap_new_req_ns1__getAuthorisations(struct soap *soap) {
  ns1__getAuthorisations *_p =
      soap_instantiate_ns1__getAuthorisations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getAuthorisations *soap_new_set_ns1__getAuthorisations(
    struct soap *soap, std::string *sessionId, LONG64 *elementId,
    enum ns1__elementType *elementType, char *__item1) {
  ns1__getAuthorisations *_p =
      soap_instantiate_ns1__getAuthorisations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getAuthorisations::sessionId = sessionId;
    _p->ns1__getAuthorisations::elementId = elementId;
    _p->ns1__getAuthorisations::elementType = elementType;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getAuthorisations(struct soap *soap,
                                               ns1__getAuthorisations *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getAuthorisations(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addKeywordResponse
#define SOAP_TYPE_ICat3_ns1__addKeywordResponse (247)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addKeywordResponse(struct soap *, const char *, int,
                                 const ns1__addKeywordResponse *, const char *);
SOAP_FMAC3 ns1__addKeywordResponse *SOAP_FMAC4
soap_in_ns1__addKeywordResponse(struct soap *, const char *,
                                ns1__addKeywordResponse *, const char *);

#ifndef soap_write_ns1__addKeywordResponse
#define soap_write_ns1__addKeywordResponse(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addKeywordResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addKeywordResponse *SOAP_FMAC4
soap_get_ns1__addKeywordResponse(struct soap *, ns1__addKeywordResponse *,
                                 const char *, const char *);

#ifndef soap_read_ns1__addKeywordResponse
#define soap_read_ns1__addKeywordResponse(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addKeywordResponse(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addKeywordResponse *SOAP_FMAC2
soap_instantiate_ns1__addKeywordResponse(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__addKeywordResponse *
soap_new_ns1__addKeywordResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addKeywordResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__addKeywordResponse *
soap_new_req_ns1__addKeywordResponse(struct soap *soap) {
  ns1__addKeywordResponse *_p =
      soap_instantiate_ns1__addKeywordResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addKeywordResponse *
soap_new_set_ns1__addKeywordResponse(struct soap *soap, ns1__keyword *return_,
                                     char *__item1) {
  ns1__addKeywordResponse *_p =
      soap_instantiate_ns1__addKeywordResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addKeywordResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addKeywordResponse(struct soap *soap,
                                                ns1__addKeywordResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addKeywordResponse(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addKeyword
#define SOAP_TYPE_ICat3_ns1__addKeyword (246)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__addKeyword(struct soap *, const char *,
                                                   int, const ns1__addKeyword *,
                                                   const char *);
SOAP_FMAC3 ns1__addKeyword *SOAP_FMAC4
soap_in_ns1__addKeyword(struct soap *, const char *, ns1__addKeyword *,
                        const char *);

#ifndef soap_write_ns1__addKeyword
#define soap_write_ns1__addKeyword(soap, data)                                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:addKeyword", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addKeyword *SOAP_FMAC4
soap_get_ns1__addKeyword(struct soap *, ns1__addKeyword *, const char *,
                         const char *);

#ifndef soap_read_ns1__addKeyword
#define soap_read_ns1__addKeyword(soap, data)                                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addKeyword(soap, data, NULL, NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addKeyword *SOAP_FMAC2
soap_instantiate_ns1__addKeyword(struct soap *, int, const char *, const char *,
                                 size_t *);

inline ns1__addKeyword *soap_new_ns1__addKeyword(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate_ns1__addKeyword(soap, n, NULL, NULL, NULL);
}

inline ns1__addKeyword *soap_new_req_ns1__addKeyword(struct soap *soap) {
  ns1__addKeyword *_p =
      soap_instantiate_ns1__addKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addKeyword *soap_new_set_ns1__addKeyword(struct soap *soap,
                                                     std::string *sessionId,
                                                     ns1__keyword *keyword,
                                                     LONG64 *investigationId,
                                                     char *__item1) {
  ns1__addKeyword *_p =
      soap_instantiate_ns1__addKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addKeyword::sessionId = sessionId;
    _p->ns1__addKeyword::keyword = keyword;
    _p->ns1__addKeyword::investigationId = investigationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addKeyword(struct soap *soap, ns1__addKeyword *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__addKeyword(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByRestrictionComparisonResponse
#define SOAP_TYPE_ICat3_ns1__searchDatasetByRestrictionComparisonResponse (245)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatasetByRestrictionComparisonResponse(
    struct soap *, const char *, int,
    const ns1__searchDatasetByRestrictionComparisonResponse *, const char *);
SOAP_FMAC3 ns1__searchDatasetByRestrictionComparisonResponse *SOAP_FMAC4
soap_in_ns1__searchDatasetByRestrictionComparisonResponse(
    struct soap *, const char *,
    ns1__searchDatasetByRestrictionComparisonResponse *, const char *);

#ifndef soap_write_ns1__searchDatasetByRestrictionComparisonResponse
#define soap_write_ns1__searchDatasetByRestrictionComparisonResponse(soap,     \
                                                                     data)     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchDatasetByRestrictionComparisonResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestrictionComparisonResponse *SOAP_FMAC4
soap_get_ns1__searchDatasetByRestrictionComparisonResponse(
    struct soap *, ns1__searchDatasetByRestrictionComparisonResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchDatasetByRestrictionComparisonResponse
#define soap_read_ns1__searchDatasetByRestrictionComparisonResponse(soap,      \
                                                                    data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByRestrictionComparisonResponse(     \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByRestrictionComparisonResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByRestrictionComparisonResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchDatasetByRestrictionComparisonResponse *
soap_new_ns1__searchDatasetByRestrictionComparisonResponse(struct soap *soap,
                                                           int n = -1) {
  return soap_instantiate_ns1__searchDatasetByRestrictionComparisonResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatasetByRestrictionComparisonResponse *
soap_new_req_ns1__searchDatasetByRestrictionComparisonResponse(
    struct soap *soap) {
  ns1__searchDatasetByRestrictionComparisonResponse *_p =
      soap_instantiate_ns1__searchDatasetByRestrictionComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByRestrictionComparisonResponse *
soap_new_set_ns1__searchDatasetByRestrictionComparisonResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatasetByRestrictionComparisonResponse *_p =
      soap_instantiate_ns1__searchDatasetByRestrictionComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByRestrictionComparisonResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByRestrictionComparisonResponse(
    struct soap *soap, ns1__searchDatasetByRestrictionComparisonResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByRestrictionComparisonResponse(struct soap *, int,
                                                            int, void *, size_t,
                                                            const void *,
                                                            size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByRestrictionComparison
#define SOAP_TYPE_ICat3_ns1__searchDatasetByRestrictionComparison (244)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatasetByRestrictionComparison(
    struct soap *, const char *, int,
    const ns1__searchDatasetByRestrictionComparison *, const char *);
SOAP_FMAC3 ns1__searchDatasetByRestrictionComparison *SOAP_FMAC4
soap_in_ns1__searchDatasetByRestrictionComparison(
    struct soap *, const char *, ns1__searchDatasetByRestrictionComparison *,
    const char *);

#ifndef soap_write_ns1__searchDatasetByRestrictionComparison
#define soap_write_ns1__searchDatasetByRestrictionComparison(soap, data)       \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatasetByRestrictionComparison",      \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestrictionComparison *SOAP_FMAC4
soap_get_ns1__searchDatasetByRestrictionComparison(
    struct soap *, ns1__searchDatasetByRestrictionComparison *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatasetByRestrictionComparison
#define soap_read_ns1__searchDatasetByRestrictionComparison(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByRestrictionComparison(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByRestrictionComparison *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByRestrictionComparison(struct soap *, int,
                                                           const char *,
                                                           const char *,
                                                           size_t *);

inline ns1__searchDatasetByRestrictionComparison *
soap_new_ns1__searchDatasetByRestrictionComparison(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate_ns1__searchDatasetByRestrictionComparison(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatasetByRestrictionComparison *
soap_new_req_ns1__searchDatasetByRestrictionComparison(struct soap *soap) {
  ns1__searchDatasetByRestrictionComparison *_p =
      soap_instantiate_ns1__searchDatasetByRestrictionComparison(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByRestrictionComparison *
soap_new_set_ns1__searchDatasetByRestrictionComparison(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__restrictionComparisonCondition *> &restriction,
    char *__item1) {
  ns1__searchDatasetByRestrictionComparison *_p =
      soap_instantiate_ns1__searchDatasetByRestrictionComparison(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByRestrictionComparison::sessionId = sessionId;
    _p->ns1__searchDatasetByRestrictionComparison::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByRestrictionComparison(
    struct soap *soap, ns1__searchDatasetByRestrictionComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByRestrictionComparison(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByParameterLogicalResponse
#define SOAP_TYPE_ICat3_ns1__searchSampleByParameterLogicalResponse (243)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchSampleByParameterLogicalResponse(
    struct soap *, const char *, int,
    const ns1__searchSampleByParameterLogicalResponse *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterLogicalResponse *SOAP_FMAC4
soap_in_ns1__searchSampleByParameterLogicalResponse(
    struct soap *, const char *, ns1__searchSampleByParameterLogicalResponse *,
    const char *);

#ifndef soap_write_ns1__searchSampleByParameterLogicalResponse
#define soap_write_ns1__searchSampleByParameterLogicalResponse(soap, data)     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSampleByParameterLogicalResponse",    \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterLogicalResponse *SOAP_FMAC4
soap_get_ns1__searchSampleByParameterLogicalResponse(
    struct soap *, ns1__searchSampleByParameterLogicalResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchSampleByParameterLogicalResponse
#define soap_read_ns1__searchSampleByParameterLogicalResponse(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByParameterLogicalResponse(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByParameterLogicalResponse *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByParameterLogicalResponse(struct soap *, int,
                                                             const char *,
                                                             const char *,
                                                             size_t *);

inline ns1__searchSampleByParameterLogicalResponse *
soap_new_ns1__searchSampleByParameterLogicalResponse(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__searchSampleByParameterLogicalResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchSampleByParameterLogicalResponse *
soap_new_req_ns1__searchSampleByParameterLogicalResponse(struct soap *soap) {
  ns1__searchSampleByParameterLogicalResponse *_p =
      soap_instantiate_ns1__searchSampleByParameterLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByParameterLogicalResponse *
soap_new_set_ns1__searchSampleByParameterLogicalResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchSampleByParameterLogicalResponse *_p =
      soap_instantiate_ns1__searchSampleByParameterLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByParameterLogicalResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByParameterLogicalResponse(
    struct soap *soap, ns1__searchSampleByParameterLogicalResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByParameterLogicalResponse(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByParameterLogical
#define SOAP_TYPE_ICat3_ns1__searchSampleByParameterLogical (242)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchSampleByParameterLogical(
    struct soap *, const char *, int,
    const ns1__searchSampleByParameterLogical *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterLogical *SOAP_FMAC4
soap_in_ns1__searchSampleByParameterLogical(
    struct soap *, const char *, ns1__searchSampleByParameterLogical *,
    const char *);

#ifndef soap_write_ns1__searchSampleByParameterLogical
#define soap_write_ns1__searchSampleByParameterLogical(soap, data)             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSampleByParameterLogical", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterLogical *SOAP_FMAC4
soap_get_ns1__searchSampleByParameterLogical(
    struct soap *, ns1__searchSampleByParameterLogical *, const char *,
    const char *);

#ifndef soap_read_ns1__searchSampleByParameterLogical
#define soap_read_ns1__searchSampleByParameterLogical(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByParameterLogical(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByParameterLogical *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByParameterLogical(struct soap *, int,
                                                     const char *, const char *,
                                                     size_t *);

inline ns1__searchSampleByParameterLogical *
soap_new_ns1__searchSampleByParameterLogical(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchSampleByParameterLogical(soap, n, NULL,
                                                              NULL, NULL);
}

inline ns1__searchSampleByParameterLogical *
soap_new_req_ns1__searchSampleByParameterLogical(struct soap *soap) {
  ns1__searchSampleByParameterLogical *_p =
      soap_instantiate_ns1__searchSampleByParameterLogical(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByParameterLogical *
soap_new_set_ns1__searchSampleByParameterLogical(
    struct soap *soap, std::string *sessionId,
    ns1__parameterLogicalCondition *logicalCondition, char *__item1) {
  ns1__searchSampleByParameterLogical *_p =
      soap_instantiate_ns1__searchSampleByParameterLogical(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByParameterLogical::sessionId = sessionId;
    _p->ns1__searchSampleByParameterLogical::logicalCondition =
        logicalCondition;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByParameterLogical(
    struct soap *soap, ns1__searchSampleByParameterLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByParameterLogical(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeDataSetResponse
#define SOAP_TYPE_ICat3_ns1__removeDataSetResponse (241)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeDataSetResponse(struct soap *, const char *, int,
                                    const ns1__removeDataSetResponse *,
                                    const char *);
SOAP_FMAC3 ns1__removeDataSetResponse *SOAP_FMAC4
soap_in_ns1__removeDataSetResponse(struct soap *, const char *,
                                   ns1__removeDataSetResponse *, const char *);

#ifndef soap_write_ns1__removeDataSetResponse
#define soap_write_ns1__removeDataSetResponse(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeDataSetResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataSetResponse *SOAP_FMAC4
soap_get_ns1__removeDataSetResponse(struct soap *, ns1__removeDataSetResponse *,
                                    const char *, const char *);

#ifndef soap_read_ns1__removeDataSetResponse
#define soap_read_ns1__removeDataSetResponse(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeDataSetResponse(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeDataSetResponse *SOAP_FMAC2
soap_instantiate_ns1__removeDataSetResponse(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__removeDataSetResponse *
soap_new_ns1__removeDataSetResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeDataSetResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__removeDataSetResponse *
soap_new_req_ns1__removeDataSetResponse(struct soap *soap) {
  ns1__removeDataSetResponse *_p =
      soap_instantiate_ns1__removeDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeDataSetResponse *
soap_new_set_ns1__removeDataSetResponse(struct soap *soap, char *__item1) {
  ns1__removeDataSetResponse *_p =
      soap_instantiate_ns1__removeDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__removeDataSetResponse(struct soap *soap,
                                       ns1__removeDataSetResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeDataSetResponse(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeDataSet
#define SOAP_TYPE_ICat3_ns1__removeDataSet (240)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeDataSet(struct soap *, const char *, int,
                            const ns1__removeDataSet *, const char *);
SOAP_FMAC3 ns1__removeDataSet *SOAP_FMAC4
soap_in_ns1__removeDataSet(struct soap *, const char *, ns1__removeDataSet *,
                           const char *);

#ifndef soap_write_ns1__removeDataSet
#define soap_write_ns1__removeDataSet(soap, data)                              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeDataSet", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataSet *SOAP_FMAC4
soap_get_ns1__removeDataSet(struct soap *, ns1__removeDataSet *, const char *,
                            const char *);

#ifndef soap_read_ns1__removeDataSet
#define soap_read_ns1__removeDataSet(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeDataSet(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeDataSet *SOAP_FMAC2
soap_instantiate_ns1__removeDataSet(struct soap *, int, const char *,
                                    const char *, size_t *);

inline ns1__removeDataSet *soap_new_ns1__removeDataSet(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__removeDataSet(soap, n, NULL, NULL, NULL);
}

inline ns1__removeDataSet *soap_new_req_ns1__removeDataSet(struct soap *soap) {
  ns1__removeDataSet *_p =
      soap_instantiate_ns1__removeDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeDataSet *
soap_new_set_ns1__removeDataSet(struct soap *soap, std::string *sessionId,
                                LONG64 *dataSetId, char *__item1) {
  ns1__removeDataSet *_p =
      soap_instantiate_ns1__removeDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__removeDataSet::sessionId = sessionId;
    _p->ns1__removeDataSet::dataSetId = dataSetId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeDataSet(struct soap *soap,
                                           ns1__removeDataSet *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__removeDataSet(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyDataSetParameterResponse
#define SOAP_TYPE_ICat3_ns1__modifyDataSetParameterResponse (239)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__modifyDataSetParameterResponse(
    struct soap *, const char *, int,
    const ns1__modifyDataSetParameterResponse *, const char *);
SOAP_FMAC3 ns1__modifyDataSetParameterResponse *SOAP_FMAC4
soap_in_ns1__modifyDataSetParameterResponse(
    struct soap *, const char *, ns1__modifyDataSetParameterResponse *,
    const char *);

#ifndef soap_write_ns1__modifyDataSetParameterResponse
#define soap_write_ns1__modifyDataSetParameterResponse(soap, data)             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyDataSetParameterResponse", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataSetParameterResponse *SOAP_FMAC4
soap_get_ns1__modifyDataSetParameterResponse(
    struct soap *, ns1__modifyDataSetParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__modifyDataSetParameterResponse
#define soap_read_ns1__modifyDataSetParameterResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyDataSetParameterResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyDataSetParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__modifyDataSetParameterResponse(struct soap *, int,
                                                     const char *, const char *,
                                                     size_t *);

inline ns1__modifyDataSetParameterResponse *
soap_new_ns1__modifyDataSetParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyDataSetParameterResponse(soap, n, NULL,
                                                              NULL, NULL);
}

inline ns1__modifyDataSetParameterResponse *
soap_new_req_ns1__modifyDataSetParameterResponse(struct soap *soap) {
  ns1__modifyDataSetParameterResponse *_p =
      soap_instantiate_ns1__modifyDataSetParameterResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyDataSetParameterResponse *
soap_new_set_ns1__modifyDataSetParameterResponse(struct soap *soap,
                                                 char *__item1) {
  ns1__modifyDataSetParameterResponse *_p =
      soap_instantiate_ns1__modifyDataSetParameterResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__modifyDataSetParameterResponse(
    struct soap *soap, ns1__modifyDataSetParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyDataSetParameterResponse(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyDataSetParameter
#define SOAP_TYPE_ICat3_ns1__modifyDataSetParameter (238)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifyDataSetParameter(struct soap *, const char *, int,
                                     const ns1__modifyDataSetParameter *,
                                     const char *);
SOAP_FMAC3 ns1__modifyDataSetParameter *SOAP_FMAC4
soap_in_ns1__modifyDataSetParameter(struct soap *, const char *,
                                    ns1__modifyDataSetParameter *,
                                    const char *);

#ifndef soap_write_ns1__modifyDataSetParameter
#define soap_write_ns1__modifyDataSetParameter(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyDataSetParameter", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataSetParameter *SOAP_FMAC4
soap_get_ns1__modifyDataSetParameter(struct soap *,
                                     ns1__modifyDataSetParameter *,
                                     const char *, const char *);

#ifndef soap_read_ns1__modifyDataSetParameter
#define soap_read_ns1__modifyDataSetParameter(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyDataSetParameter(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyDataSetParameter *SOAP_FMAC2
soap_instantiate_ns1__modifyDataSetParameter(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__modifyDataSetParameter *
soap_new_ns1__modifyDataSetParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyDataSetParameter(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__modifyDataSetParameter *
soap_new_req_ns1__modifyDataSetParameter(struct soap *soap) {
  ns1__modifyDataSetParameter *_p =
      soap_instantiate_ns1__modifyDataSetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyDataSetParameter *soap_new_set_ns1__modifyDataSetParameter(
    struct soap *soap, std::string *sessionId,
    ns1__datasetParameter *dataSetParameter, char *__item1) {
  ns1__modifyDataSetParameter *_p =
      soap_instantiate_ns1__modifyDataSetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__modifyDataSetParameter::sessionId = sessionId;
    _p->ns1__modifyDataSetParameter::dataSetParameter = dataSetParameter;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__modifyDataSetParameter(struct soap *soap,
                                        ns1__modifyDataSetParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyDataSetParameter(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listInvestigationTypesResponse
#define SOAP_TYPE_ICat3_ns1__listInvestigationTypesResponse (237)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__listInvestigationTypesResponse(
    struct soap *, const char *, int,
    const ns1__listInvestigationTypesResponse *, const char *);
SOAP_FMAC3 ns1__listInvestigationTypesResponse *SOAP_FMAC4
soap_in_ns1__listInvestigationTypesResponse(
    struct soap *, const char *, ns1__listInvestigationTypesResponse *,
    const char *);

#ifndef soap_write_ns1__listInvestigationTypesResponse
#define soap_write_ns1__listInvestigationTypesResponse(soap, data)             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listInvestigationTypesResponse", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listInvestigationTypesResponse *SOAP_FMAC4
soap_get_ns1__listInvestigationTypesResponse(
    struct soap *, ns1__listInvestigationTypesResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__listInvestigationTypesResponse
#define soap_read_ns1__listInvestigationTypesResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listInvestigationTypesResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listInvestigationTypesResponse *SOAP_FMAC2
soap_instantiate_ns1__listInvestigationTypesResponse(struct soap *, int,
                                                     const char *, const char *,
                                                     size_t *);

inline ns1__listInvestigationTypesResponse *
soap_new_ns1__listInvestigationTypesResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listInvestigationTypesResponse(soap, n, NULL,
                                                              NULL, NULL);
}

inline ns1__listInvestigationTypesResponse *
soap_new_req_ns1__listInvestigationTypesResponse(struct soap *soap) {
  ns1__listInvestigationTypesResponse *_p =
      soap_instantiate_ns1__listInvestigationTypesResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listInvestigationTypesResponse *
soap_new_set_ns1__listInvestigationTypesResponse(
    struct soap *soap, std::vector<std::string> &return_, char *__item1) {
  ns1__listInvestigationTypesResponse *_p =
      soap_instantiate_ns1__listInvestigationTypesResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listInvestigationTypesResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__listInvestigationTypesResponse(
    struct soap *soap, ns1__listInvestigationTypesResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listInvestigationTypesResponse(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listInvestigationTypes
#define SOAP_TYPE_ICat3_ns1__listInvestigationTypes (236)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listInvestigationTypes(struct soap *, const char *, int,
                                     const ns1__listInvestigationTypes *,
                                     const char *);
SOAP_FMAC3 ns1__listInvestigationTypes *SOAP_FMAC4
soap_in_ns1__listInvestigationTypes(struct soap *, const char *,
                                    ns1__listInvestigationTypes *,
                                    const char *);

#ifndef soap_write_ns1__listInvestigationTypes
#define soap_write_ns1__listInvestigationTypes(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listInvestigationTypes", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listInvestigationTypes *SOAP_FMAC4
soap_get_ns1__listInvestigationTypes(struct soap *,
                                     ns1__listInvestigationTypes *,
                                     const char *, const char *);

#ifndef soap_read_ns1__listInvestigationTypes
#define soap_read_ns1__listInvestigationTypes(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listInvestigationTypes(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listInvestigationTypes *SOAP_FMAC2
soap_instantiate_ns1__listInvestigationTypes(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__listInvestigationTypes *
soap_new_ns1__listInvestigationTypes(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listInvestigationTypes(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__listInvestigationTypes *
soap_new_req_ns1__listInvestigationTypes(struct soap *soap) {
  ns1__listInvestigationTypes *_p =
      soap_instantiate_ns1__listInvestigationTypes(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listInvestigationTypes *soap_new_set_ns1__listInvestigationTypes(
    struct soap *soap, std::string *sessionId, char *__item1) {
  ns1__listInvestigationTypes *_p =
      soap_instantiate_ns1__listInvestigationTypes(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listInvestigationTypes::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__listInvestigationTypes(struct soap *soap,
                                        ns1__listInvestigationTypes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listInvestigationTypes(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getKeywordsForUserResponse
#define SOAP_TYPE_ICat3_ns1__getKeywordsForUserResponse (235)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getKeywordsForUserResponse(
    struct soap *, const char *, int, const ns1__getKeywordsForUserResponse *,
    const char *);
SOAP_FMAC3 ns1__getKeywordsForUserResponse *SOAP_FMAC4
soap_in_ns1__getKeywordsForUserResponse(struct soap *, const char *,
                                        ns1__getKeywordsForUserResponse *,
                                        const char *);

#ifndef soap_write_ns1__getKeywordsForUserResponse
#define soap_write_ns1__getKeywordsForUserResponse(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getKeywordsForUserResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserResponse *SOAP_FMAC4
soap_get_ns1__getKeywordsForUserResponse(struct soap *,
                                         ns1__getKeywordsForUserResponse *,
                                         const char *, const char *);

#ifndef soap_read_ns1__getKeywordsForUserResponse
#define soap_read_ns1__getKeywordsForUserResponse(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getKeywordsForUserResponse(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getKeywordsForUserResponse *SOAP_FMAC2
soap_instantiate_ns1__getKeywordsForUserResponse(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__getKeywordsForUserResponse *
soap_new_ns1__getKeywordsForUserResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getKeywordsForUserResponse(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__getKeywordsForUserResponse *
soap_new_req_ns1__getKeywordsForUserResponse(struct soap *soap) {
  ns1__getKeywordsForUserResponse *_p =
      soap_instantiate_ns1__getKeywordsForUserResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getKeywordsForUserResponse *
soap_new_set_ns1__getKeywordsForUserResponse(struct soap *soap,
                                             std::vector<std::string> &return_,
                                             char *__item1) {
  ns1__getKeywordsForUserResponse *_p =
      soap_instantiate_ns1__getKeywordsForUserResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getKeywordsForUserResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getKeywordsForUserResponse(
    struct soap *soap, ns1__getKeywordsForUserResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getKeywordsForUserResponse(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getKeywordsForUser
#define SOAP_TYPE_ICat3_ns1__getKeywordsForUser (234)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getKeywordsForUser(struct soap *, const char *, int,
                                 const ns1__getKeywordsForUser *, const char *);
SOAP_FMAC3 ns1__getKeywordsForUser *SOAP_FMAC4
soap_in_ns1__getKeywordsForUser(struct soap *, const char *,
                                ns1__getKeywordsForUser *, const char *);

#ifndef soap_write_ns1__getKeywordsForUser
#define soap_write_ns1__getKeywordsForUser(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getKeywordsForUser", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUser *SOAP_FMAC4
soap_get_ns1__getKeywordsForUser(struct soap *, ns1__getKeywordsForUser *,
                                 const char *, const char *);

#ifndef soap_read_ns1__getKeywordsForUser
#define soap_read_ns1__getKeywordsForUser(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getKeywordsForUser(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getKeywordsForUser *SOAP_FMAC2
soap_instantiate_ns1__getKeywordsForUser(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__getKeywordsForUser *
soap_new_ns1__getKeywordsForUser(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getKeywordsForUser(soap, n, NULL, NULL, NULL);
}

inline ns1__getKeywordsForUser *
soap_new_req_ns1__getKeywordsForUser(struct soap *soap) {
  ns1__getKeywordsForUser *_p =
      soap_instantiate_ns1__getKeywordsForUser(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getKeywordsForUser *
soap_new_set_ns1__getKeywordsForUser(struct soap *soap, std::string *sessionId,
                                     char *__item1) {
  ns1__getKeywordsForUser *_p =
      soap_instantiate_ns1__getKeywordsForUser(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getKeywordsForUser::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getKeywordsForUser(struct soap *soap,
                                                ns1__getKeywordsForUser *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getKeywordsForUser(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getKeywordsForUserStartWithMaxResponse
#define SOAP_TYPE_ICat3_ns1__getKeywordsForUserStartWithMaxResponse (233)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getKeywordsForUserStartWithMaxResponse(
    struct soap *, const char *, int,
    const ns1__getKeywordsForUserStartWithMaxResponse *, const char *);
SOAP_FMAC3 ns1__getKeywordsForUserStartWithMaxResponse *SOAP_FMAC4
soap_in_ns1__getKeywordsForUserStartWithMaxResponse(
    struct soap *, const char *, ns1__getKeywordsForUserStartWithMaxResponse *,
    const char *);

#ifndef soap_write_ns1__getKeywordsForUserStartWithMaxResponse
#define soap_write_ns1__getKeywordsForUserStartWithMaxResponse(soap, data)     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getKeywordsForUserStartWithMaxResponse",    \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserStartWithMaxResponse *SOAP_FMAC4
soap_get_ns1__getKeywordsForUserStartWithMaxResponse(
    struct soap *, ns1__getKeywordsForUserStartWithMaxResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__getKeywordsForUserStartWithMaxResponse
#define soap_read_ns1__getKeywordsForUserStartWithMaxResponse(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getKeywordsForUserStartWithMaxResponse(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getKeywordsForUserStartWithMaxResponse *SOAP_FMAC2
soap_instantiate_ns1__getKeywordsForUserStartWithMaxResponse(struct soap *, int,
                                                             const char *,
                                                             const char *,
                                                             size_t *);

inline ns1__getKeywordsForUserStartWithMaxResponse *
soap_new_ns1__getKeywordsForUserStartWithMaxResponse(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__getKeywordsForUserStartWithMaxResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__getKeywordsForUserStartWithMaxResponse *
soap_new_req_ns1__getKeywordsForUserStartWithMaxResponse(struct soap *soap) {
  ns1__getKeywordsForUserStartWithMaxResponse *_p =
      soap_instantiate_ns1__getKeywordsForUserStartWithMaxResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getKeywordsForUserStartWithMaxResponse *
soap_new_set_ns1__getKeywordsForUserStartWithMaxResponse(
    struct soap *soap, std::vector<std::string> &return_, char *__item1) {
  ns1__getKeywordsForUserStartWithMaxResponse *_p =
      soap_instantiate_ns1__getKeywordsForUserStartWithMaxResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getKeywordsForUserStartWithMaxResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getKeywordsForUserStartWithMaxResponse(
    struct soap *soap, ns1__getKeywordsForUserStartWithMaxResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getKeywordsForUserStartWithMaxResponse(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getKeywordsForUserStartWithMax
#define SOAP_TYPE_ICat3_ns1__getKeywordsForUserStartWithMax (232)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getKeywordsForUserStartWithMax(
    struct soap *, const char *, int,
    const ns1__getKeywordsForUserStartWithMax *, const char *);
SOAP_FMAC3 ns1__getKeywordsForUserStartWithMax *SOAP_FMAC4
soap_in_ns1__getKeywordsForUserStartWithMax(
    struct soap *, const char *, ns1__getKeywordsForUserStartWithMax *,
    const char *);

#ifndef soap_write_ns1__getKeywordsForUserStartWithMax
#define soap_write_ns1__getKeywordsForUserStartWithMax(soap, data)             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getKeywordsForUserStartWithMax", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserStartWithMax *SOAP_FMAC4
soap_get_ns1__getKeywordsForUserStartWithMax(
    struct soap *, ns1__getKeywordsForUserStartWithMax *, const char *,
    const char *);

#ifndef soap_read_ns1__getKeywordsForUserStartWithMax
#define soap_read_ns1__getKeywordsForUserStartWithMax(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getKeywordsForUserStartWithMax(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getKeywordsForUserStartWithMax *SOAP_FMAC2
soap_instantiate_ns1__getKeywordsForUserStartWithMax(struct soap *, int,
                                                     const char *, const char *,
                                                     size_t *);

inline ns1__getKeywordsForUserStartWithMax *
soap_new_ns1__getKeywordsForUserStartWithMax(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getKeywordsForUserStartWithMax(soap, n, NULL,
                                                              NULL, NULL);
}

inline ns1__getKeywordsForUserStartWithMax *
soap_new_req_ns1__getKeywordsForUserStartWithMax(struct soap *soap,
                                                 int numberReturned) {
  ns1__getKeywordsForUserStartWithMax *_p =
      soap_instantiate_ns1__getKeywordsForUserStartWithMax(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getKeywordsForUserStartWithMax::numberReturned = numberReturned;
  }
  return _p;
}

inline ns1__getKeywordsForUserStartWithMax *
soap_new_set_ns1__getKeywordsForUserStartWithMax(struct soap *soap,
                                                 std::string *sessionId,
                                                 std::string *startKeyword,
                                                 int numberReturned,
                                                 char *__item1) {
  ns1__getKeywordsForUserStartWithMax *_p =
      soap_instantiate_ns1__getKeywordsForUserStartWithMax(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getKeywordsForUserStartWithMax::sessionId = sessionId;
    _p->ns1__getKeywordsForUserStartWithMax::startKeyword = startKeyword;
    _p->ns1__getKeywordsForUserStartWithMax::numberReturned = numberReturned;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getKeywordsForUserStartWithMax(
    struct soap *soap, ns1__getKeywordsForUserStartWithMax *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getKeywordsForUserStartWithMax(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getKeywordsForUserMaxResponse
#define SOAP_TYPE_ICat3_ns1__getKeywordsForUserMaxResponse (231)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getKeywordsForUserMaxResponse(
    struct soap *, const char *, int,
    const ns1__getKeywordsForUserMaxResponse *, const char *);
SOAP_FMAC3 ns1__getKeywordsForUserMaxResponse *SOAP_FMAC4
soap_in_ns1__getKeywordsForUserMaxResponse(struct soap *, const char *,
                                           ns1__getKeywordsForUserMaxResponse *,
                                           const char *);

#ifndef soap_write_ns1__getKeywordsForUserMaxResponse
#define soap_write_ns1__getKeywordsForUserMaxResponse(soap, data)              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getKeywordsForUserMaxResponse", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserMaxResponse *SOAP_FMAC4
soap_get_ns1__getKeywordsForUserMaxResponse(
    struct soap *, ns1__getKeywordsForUserMaxResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__getKeywordsForUserMaxResponse
#define soap_read_ns1__getKeywordsForUserMaxResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getKeywordsForUserMaxResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getKeywordsForUserMaxResponse *SOAP_FMAC2
soap_instantiate_ns1__getKeywordsForUserMaxResponse(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline ns1__getKeywordsForUserMaxResponse *
soap_new_ns1__getKeywordsForUserMaxResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getKeywordsForUserMaxResponse(soap, n, NULL,
                                                             NULL, NULL);
}

inline ns1__getKeywordsForUserMaxResponse *
soap_new_req_ns1__getKeywordsForUserMaxResponse(struct soap *soap) {
  ns1__getKeywordsForUserMaxResponse *_p =
      soap_instantiate_ns1__getKeywordsForUserMaxResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getKeywordsForUserMaxResponse *
soap_new_set_ns1__getKeywordsForUserMaxResponse(
    struct soap *soap, std::vector<std::string> &return_, char *__item1) {
  ns1__getKeywordsForUserMaxResponse *_p =
      soap_instantiate_ns1__getKeywordsForUserMaxResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getKeywordsForUserMaxResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getKeywordsForUserMaxResponse(
    struct soap *soap, ns1__getKeywordsForUserMaxResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getKeywordsForUserMaxResponse(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getKeywordsForUserMax
#define SOAP_TYPE_ICat3_ns1__getKeywordsForUserMax (230)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getKeywordsForUserMax(struct soap *, const char *, int,
                                    const ns1__getKeywordsForUserMax *,
                                    const char *);
SOAP_FMAC3 ns1__getKeywordsForUserMax *SOAP_FMAC4
soap_in_ns1__getKeywordsForUserMax(struct soap *, const char *,
                                   ns1__getKeywordsForUserMax *, const char *);

#ifndef soap_write_ns1__getKeywordsForUserMax
#define soap_write_ns1__getKeywordsForUserMax(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getKeywordsForUserMax", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserMax *SOAP_FMAC4
soap_get_ns1__getKeywordsForUserMax(struct soap *, ns1__getKeywordsForUserMax *,
                                    const char *, const char *);

#ifndef soap_read_ns1__getKeywordsForUserMax
#define soap_read_ns1__getKeywordsForUserMax(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getKeywordsForUserMax(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getKeywordsForUserMax *SOAP_FMAC2
soap_instantiate_ns1__getKeywordsForUserMax(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__getKeywordsForUserMax *
soap_new_ns1__getKeywordsForUserMax(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getKeywordsForUserMax(soap, n, NULL, NULL, NULL);
}

inline ns1__getKeywordsForUserMax *
soap_new_req_ns1__getKeywordsForUserMax(struct soap *soap, int numberReturned) {
  ns1__getKeywordsForUserMax *_p =
      soap_instantiate_ns1__getKeywordsForUserMax(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getKeywordsForUserMax::numberReturned = numberReturned;
  }
  return _p;
}

inline ns1__getKeywordsForUserMax *
soap_new_set_ns1__getKeywordsForUserMax(struct soap *soap,
                                        std::string *sessionId,
                                        int numberReturned, char *__item1) {
  ns1__getKeywordsForUserMax *_p =
      soap_instantiate_ns1__getKeywordsForUserMax(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getKeywordsForUserMax::sessionId = sessionId;
    _p->ns1__getKeywordsForUserMax::numberReturned = numberReturned;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getKeywordsForUserMax(struct soap *soap,
                                       ns1__getKeywordsForUserMax *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getKeywordsForUserMax(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getKeywordsForUserTypeResponse
#define SOAP_TYPE_ICat3_ns1__getKeywordsForUserTypeResponse (229)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getKeywordsForUserTypeResponse(
    struct soap *, const char *, int,
    const ns1__getKeywordsForUserTypeResponse *, const char *);
SOAP_FMAC3 ns1__getKeywordsForUserTypeResponse *SOAP_FMAC4
soap_in_ns1__getKeywordsForUserTypeResponse(
    struct soap *, const char *, ns1__getKeywordsForUserTypeResponse *,
    const char *);

#ifndef soap_write_ns1__getKeywordsForUserTypeResponse
#define soap_write_ns1__getKeywordsForUserTypeResponse(soap, data)             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getKeywordsForUserTypeResponse", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserTypeResponse *SOAP_FMAC4
soap_get_ns1__getKeywordsForUserTypeResponse(
    struct soap *, ns1__getKeywordsForUserTypeResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__getKeywordsForUserTypeResponse
#define soap_read_ns1__getKeywordsForUserTypeResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getKeywordsForUserTypeResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getKeywordsForUserTypeResponse *SOAP_FMAC2
soap_instantiate_ns1__getKeywordsForUserTypeResponse(struct soap *, int,
                                                     const char *, const char *,
                                                     size_t *);

inline ns1__getKeywordsForUserTypeResponse *
soap_new_ns1__getKeywordsForUserTypeResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getKeywordsForUserTypeResponse(soap, n, NULL,
                                                              NULL, NULL);
}

inline ns1__getKeywordsForUserTypeResponse *
soap_new_req_ns1__getKeywordsForUserTypeResponse(struct soap *soap) {
  ns1__getKeywordsForUserTypeResponse *_p =
      soap_instantiate_ns1__getKeywordsForUserTypeResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getKeywordsForUserTypeResponse *
soap_new_set_ns1__getKeywordsForUserTypeResponse(
    struct soap *soap, std::vector<std::string> &return_, char *__item1) {
  ns1__getKeywordsForUserTypeResponse *_p =
      soap_instantiate_ns1__getKeywordsForUserTypeResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getKeywordsForUserTypeResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getKeywordsForUserTypeResponse(
    struct soap *soap, ns1__getKeywordsForUserTypeResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getKeywordsForUserTypeResponse(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getKeywordsForUserType
#define SOAP_TYPE_ICat3_ns1__getKeywordsForUserType (228)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getKeywordsForUserType(struct soap *, const char *, int,
                                     const ns1__getKeywordsForUserType *,
                                     const char *);
SOAP_FMAC3 ns1__getKeywordsForUserType *SOAP_FMAC4
soap_in_ns1__getKeywordsForUserType(struct soap *, const char *,
                                    ns1__getKeywordsForUserType *,
                                    const char *);

#ifndef soap_write_ns1__getKeywordsForUserType
#define soap_write_ns1__getKeywordsForUserType(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getKeywordsForUserType", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserType *SOAP_FMAC4
soap_get_ns1__getKeywordsForUserType(struct soap *,
                                     ns1__getKeywordsForUserType *,
                                     const char *, const char *);

#ifndef soap_read_ns1__getKeywordsForUserType
#define soap_read_ns1__getKeywordsForUserType(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getKeywordsForUserType(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getKeywordsForUserType *SOAP_FMAC2
soap_instantiate_ns1__getKeywordsForUserType(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__getKeywordsForUserType *
soap_new_ns1__getKeywordsForUserType(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getKeywordsForUserType(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__getKeywordsForUserType *
soap_new_req_ns1__getKeywordsForUserType(struct soap *soap) {
  ns1__getKeywordsForUserType *_p =
      soap_instantiate_ns1__getKeywordsForUserType(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getKeywordsForUserType *soap_new_set_ns1__getKeywordsForUserType(
    struct soap *soap, std::string *sessionId,
    enum ns1__keywordType *keywordType, char *__item1) {
  ns1__getKeywordsForUserType *_p =
      soap_instantiate_ns1__getKeywordsForUserType(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getKeywordsForUserType::sessionId = sessionId;
    _p->ns1__getKeywordsForUserType::keywordType = keywordType;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getKeywordsForUserType(struct soap *soap,
                                        ns1__getKeywordsForUserType *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getKeywordsForUserType(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getParameterByNameResponse
#define SOAP_TYPE_ICat3_ns1__getParameterByNameResponse (227)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getParameterByNameResponse(
    struct soap *, const char *, int, const ns1__getParameterByNameResponse *,
    const char *);
SOAP_FMAC3 ns1__getParameterByNameResponse *SOAP_FMAC4
soap_in_ns1__getParameterByNameResponse(struct soap *, const char *,
                                        ns1__getParameterByNameResponse *,
                                        const char *);

#ifndef soap_write_ns1__getParameterByNameResponse
#define soap_write_ns1__getParameterByNameResponse(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getParameterByNameResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByNameResponse *SOAP_FMAC4
soap_get_ns1__getParameterByNameResponse(struct soap *,
                                         ns1__getParameterByNameResponse *,
                                         const char *, const char *);

#ifndef soap_read_ns1__getParameterByNameResponse
#define soap_read_ns1__getParameterByNameResponse(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getParameterByNameResponse(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getParameterByNameResponse *SOAP_FMAC2
soap_instantiate_ns1__getParameterByNameResponse(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__getParameterByNameResponse *
soap_new_ns1__getParameterByNameResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getParameterByNameResponse(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__getParameterByNameResponse *
soap_new_req_ns1__getParameterByNameResponse(struct soap *soap) {
  ns1__getParameterByNameResponse *_p =
      soap_instantiate_ns1__getParameterByNameResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getParameterByNameResponse *
soap_new_set_ns1__getParameterByNameResponse(
    struct soap *soap, std::vector<ns1__parameter *> &return_, char *__item1) {
  ns1__getParameterByNameResponse *_p =
      soap_instantiate_ns1__getParameterByNameResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getParameterByNameResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getParameterByNameResponse(
    struct soap *soap, ns1__getParameterByNameResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getParameterByNameResponse(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getParameterByName
#define SOAP_TYPE_ICat3_ns1__getParameterByName (226)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getParameterByName(struct soap *, const char *, int,
                                 const ns1__getParameterByName *, const char *);
SOAP_FMAC3 ns1__getParameterByName *SOAP_FMAC4
soap_in_ns1__getParameterByName(struct soap *, const char *,
                                ns1__getParameterByName *, const char *);

#ifndef soap_write_ns1__getParameterByName
#define soap_write_ns1__getParameterByName(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getParameterByName", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByName *SOAP_FMAC4
soap_get_ns1__getParameterByName(struct soap *, ns1__getParameterByName *,
                                 const char *, const char *);

#ifndef soap_read_ns1__getParameterByName
#define soap_read_ns1__getParameterByName(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getParameterByName(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getParameterByName *SOAP_FMAC2
soap_instantiate_ns1__getParameterByName(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__getParameterByName *
soap_new_ns1__getParameterByName(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getParameterByName(soap, n, NULL, NULL, NULL);
}

inline ns1__getParameterByName *
soap_new_req_ns1__getParameterByName(struct soap *soap) {
  ns1__getParameterByName *_p =
      soap_instantiate_ns1__getParameterByName(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getParameterByName *
soap_new_set_ns1__getParameterByName(struct soap *soap, std::string *sessionId,
                                     std::string *name, char *__item1) {
  ns1__getParameterByName *_p =
      soap_instantiate_ns1__getParameterByName(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getParameterByName::sessionId = sessionId;
    _p->ns1__getParameterByName::name = name;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getParameterByName(struct soap *soap,
                                                ns1__getParameterByName *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getParameterByName(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__downloadDatafileResponse
#define SOAP_TYPE_ICat3_ns1__downloadDatafileResponse (225)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__downloadDatafileResponse(struct soap *, const char *, int,
                                       const ns1__downloadDatafileResponse *,
                                       const char *);
SOAP_FMAC3 ns1__downloadDatafileResponse *SOAP_FMAC4
soap_in_ns1__downloadDatafileResponse(struct soap *, const char *,
                                      ns1__downloadDatafileResponse *,
                                      const char *);

#ifndef soap_write_ns1__downloadDatafileResponse
#define soap_write_ns1__downloadDatafileResponse(soap, data)                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:downloadDatafileResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDatafileResponse *SOAP_FMAC4
soap_get_ns1__downloadDatafileResponse(struct soap *,
                                       ns1__downloadDatafileResponse *,
                                       const char *, const char *);

#ifndef soap_read_ns1__downloadDatafileResponse
#define soap_read_ns1__downloadDatafileResponse(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__downloadDatafileResponse(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__downloadDatafileResponse *SOAP_FMAC2
soap_instantiate_ns1__downloadDatafileResponse(struct soap *, int, const char *,
                                               const char *, size_t *);

inline ns1__downloadDatafileResponse *
soap_new_ns1__downloadDatafileResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__downloadDatafileResponse(soap, n, NULL, NULL,
                                                        NULL);
}

inline ns1__downloadDatafileResponse *
soap_new_req_ns1__downloadDatafileResponse(struct soap *soap) {
  ns1__downloadDatafileResponse *_p =
      soap_instantiate_ns1__downloadDatafileResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__downloadDatafileResponse *
soap_new_set_ns1__downloadDatafileResponse(struct soap *soap, std::string *URL,
                                           char *__item1) {
  ns1__downloadDatafileResponse *_p =
      soap_instantiate_ns1__downloadDatafileResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__downloadDatafileResponse::URL = URL;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__downloadDatafileResponse(struct soap *soap,
                                          ns1__downloadDatafileResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__downloadDatafileResponse(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__downloadDatafile
#define SOAP_TYPE_ICat3_ns1__downloadDatafile (224)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__downloadDatafile(struct soap *, const char *, int,
                               const ns1__downloadDatafile *, const char *);
SOAP_FMAC3 ns1__downloadDatafile *SOAP_FMAC4
soap_in_ns1__downloadDatafile(struct soap *, const char *,
                              ns1__downloadDatafile *, const char *);

#ifndef soap_write_ns1__downloadDatafile
#define soap_write_ns1__downloadDatafile(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:downloadDatafile", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDatafile *SOAP_FMAC4
soap_get_ns1__downloadDatafile(struct soap *, ns1__downloadDatafile *,
                               const char *, const char *);

#ifndef soap_read_ns1__downloadDatafile
#define soap_read_ns1__downloadDatafile(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__downloadDatafile(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__downloadDatafile *SOAP_FMAC2
soap_instantiate_ns1__downloadDatafile(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__downloadDatafile *soap_new_ns1__downloadDatafile(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__downloadDatafile(soap, n, NULL, NULL, NULL);
}

inline ns1__downloadDatafile *
soap_new_req_ns1__downloadDatafile(struct soap *soap) {
  ns1__downloadDatafile *_p =
      soap_instantiate_ns1__downloadDatafile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__downloadDatafile *
soap_new_set_ns1__downloadDatafile(struct soap *soap, std::string *sessionId,
                                   LONG64 *datafileId, char *__item1) {
  ns1__downloadDatafile *_p =
      soap_instantiate_ns1__downloadDatafile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__downloadDatafile::sessionId = sessionId;
    _p->ns1__downloadDatafile::datafileId = datafileId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__downloadDatafile(struct soap *soap,
                                              ns1__downloadDatafile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__downloadDatafile(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__setDataSetSampleResponse
#define SOAP_TYPE_ICat3_ns1__setDataSetSampleResponse (223)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__setDataSetSampleResponse(struct soap *, const char *, int,
                                       const ns1__setDataSetSampleResponse *,
                                       const char *);
SOAP_FMAC3 ns1__setDataSetSampleResponse *SOAP_FMAC4
soap_in_ns1__setDataSetSampleResponse(struct soap *, const char *,
                                      ns1__setDataSetSampleResponse *,
                                      const char *);

#ifndef soap_write_ns1__setDataSetSampleResponse
#define soap_write_ns1__setDataSetSampleResponse(soap, data)                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:setDataSetSampleResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__setDataSetSampleResponse *SOAP_FMAC4
soap_get_ns1__setDataSetSampleResponse(struct soap *,
                                       ns1__setDataSetSampleResponse *,
                                       const char *, const char *);

#ifndef soap_read_ns1__setDataSetSampleResponse
#define soap_read_ns1__setDataSetSampleResponse(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__setDataSetSampleResponse(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__setDataSetSampleResponse *SOAP_FMAC2
soap_instantiate_ns1__setDataSetSampleResponse(struct soap *, int, const char *,
                                               const char *, size_t *);

inline ns1__setDataSetSampleResponse *
soap_new_ns1__setDataSetSampleResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__setDataSetSampleResponse(soap, n, NULL, NULL,
                                                        NULL);
}

inline ns1__setDataSetSampleResponse *
soap_new_req_ns1__setDataSetSampleResponse(struct soap *soap) {
  ns1__setDataSetSampleResponse *_p =
      soap_instantiate_ns1__setDataSetSampleResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__setDataSetSampleResponse *
soap_new_set_ns1__setDataSetSampleResponse(struct soap *soap, char *__item1) {
  ns1__setDataSetSampleResponse *_p =
      soap_instantiate_ns1__setDataSetSampleResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__setDataSetSampleResponse(struct soap *soap,
                                          ns1__setDataSetSampleResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__setDataSetSampleResponse(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__setDataSetSample
#define SOAP_TYPE_ICat3_ns1__setDataSetSample (222)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__setDataSetSample(struct soap *, const char *, int,
                               const ns1__setDataSetSample *, const char *);
SOAP_FMAC3 ns1__setDataSetSample *SOAP_FMAC4
soap_in_ns1__setDataSetSample(struct soap *, const char *,
                              ns1__setDataSetSample *, const char *);

#ifndef soap_write_ns1__setDataSetSample
#define soap_write_ns1__setDataSetSample(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:setDataSetSample", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__setDataSetSample *SOAP_FMAC4
soap_get_ns1__setDataSetSample(struct soap *, ns1__setDataSetSample *,
                               const char *, const char *);

#ifndef soap_read_ns1__setDataSetSample
#define soap_read_ns1__setDataSetSample(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__setDataSetSample(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__setDataSetSample *SOAP_FMAC2
soap_instantiate_ns1__setDataSetSample(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__setDataSetSample *soap_new_ns1__setDataSetSample(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__setDataSetSample(soap, n, NULL, NULL, NULL);
}

inline ns1__setDataSetSample *
soap_new_req_ns1__setDataSetSample(struct soap *soap) {
  ns1__setDataSetSample *_p =
      soap_instantiate_ns1__setDataSetSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__setDataSetSample *
soap_new_set_ns1__setDataSetSample(struct soap *soap, std::string *sessionId,
                                   LONG64 *sampleId, LONG64 *datafileId,
                                   char *__item1) {
  ns1__setDataSetSample *_p =
      soap_instantiate_ns1__setDataSetSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__setDataSetSample::sessionId = sessionId;
    _p->ns1__setDataSetSample::sampleId = sampleId;
    _p->ns1__setDataSetSample::datafileId = datafileId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__setDataSetSample(struct soap *soap,
                                              ns1__setDataSetSample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__setDataSetSample(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteDataSetParameterResponse
#define SOAP_TYPE_ICat3_ns1__deleteDataSetParameterResponse (221)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__deleteDataSetParameterResponse(
    struct soap *, const char *, int,
    const ns1__deleteDataSetParameterResponse *, const char *);
SOAP_FMAC3 ns1__deleteDataSetParameterResponse *SOAP_FMAC4
soap_in_ns1__deleteDataSetParameterResponse(
    struct soap *, const char *, ns1__deleteDataSetParameterResponse *,
    const char *);

#ifndef soap_write_ns1__deleteDataSetParameterResponse
#define soap_write_ns1__deleteDataSetParameterResponse(soap, data)             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteDataSetParameterResponse", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataSetParameterResponse *SOAP_FMAC4
soap_get_ns1__deleteDataSetParameterResponse(
    struct soap *, ns1__deleteDataSetParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__deleteDataSetParameterResponse
#define soap_read_ns1__deleteDataSetParameterResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteDataSetParameterResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteDataSetParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__deleteDataSetParameterResponse(struct soap *, int,
                                                     const char *, const char *,
                                                     size_t *);

inline ns1__deleteDataSetParameterResponse *
soap_new_ns1__deleteDataSetParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteDataSetParameterResponse(soap, n, NULL,
                                                              NULL, NULL);
}

inline ns1__deleteDataSetParameterResponse *
soap_new_req_ns1__deleteDataSetParameterResponse(struct soap *soap) {
  ns1__deleteDataSetParameterResponse *_p =
      soap_instantiate_ns1__deleteDataSetParameterResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteDataSetParameterResponse *
soap_new_set_ns1__deleteDataSetParameterResponse(struct soap *soap,
                                                 char *__item1) {
  ns1__deleteDataSetParameterResponse *_p =
      soap_instantiate_ns1__deleteDataSetParameterResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteDataSetParameterResponse(
    struct soap *soap, ns1__deleteDataSetParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteDataSetParameterResponse(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteDataSetParameter
#define SOAP_TYPE_ICat3_ns1__deleteDataSetParameter (220)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteDataSetParameter(struct soap *, const char *, int,
                                     const ns1__deleteDataSetParameter *,
                                     const char *);
SOAP_FMAC3 ns1__deleteDataSetParameter *SOAP_FMAC4
soap_in_ns1__deleteDataSetParameter(struct soap *, const char *,
                                    ns1__deleteDataSetParameter *,
                                    const char *);

#ifndef soap_write_ns1__deleteDataSetParameter
#define soap_write_ns1__deleteDataSetParameter(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteDataSetParameter", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataSetParameter *SOAP_FMAC4
soap_get_ns1__deleteDataSetParameter(struct soap *,
                                     ns1__deleteDataSetParameter *,
                                     const char *, const char *);

#ifndef soap_read_ns1__deleteDataSetParameter
#define soap_read_ns1__deleteDataSetParameter(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteDataSetParameter(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteDataSetParameter *SOAP_FMAC2
soap_instantiate_ns1__deleteDataSetParameter(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__deleteDataSetParameter *
soap_new_ns1__deleteDataSetParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteDataSetParameter(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__deleteDataSetParameter *
soap_new_req_ns1__deleteDataSetParameter(struct soap *soap) {
  ns1__deleteDataSetParameter *_p =
      soap_instantiate_ns1__deleteDataSetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteDataSetParameter *soap_new_set_ns1__deleteDataSetParameter(
    struct soap *soap, std::string *sessionId,
    ns1__datasetParameterPK *datasetParameterPK, char *__item1) {
  ns1__deleteDataSetParameter *_p =
      soap_instantiate_ns1__deleteDataSetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__deleteDataSetParameter::sessionId = sessionId;
    _p->ns1__deleteDataSetParameter::datasetParameterPK = datasetParameterPK;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__deleteDataSetParameter(struct soap *soap,
                                        ns1__deleteDataSetParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteDataSetParameter(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeSampleParameterResponse
#define SOAP_TYPE_ICat3_ns1__removeSampleParameterResponse (219)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__removeSampleParameterResponse(
    struct soap *, const char *, int,
    const ns1__removeSampleParameterResponse *, const char *);
SOAP_FMAC3 ns1__removeSampleParameterResponse *SOAP_FMAC4
soap_in_ns1__removeSampleParameterResponse(struct soap *, const char *,
                                           ns1__removeSampleParameterResponse *,
                                           const char *);

#ifndef soap_write_ns1__removeSampleParameterResponse
#define soap_write_ns1__removeSampleParameterResponse(soap, data)              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeSampleParameterResponse", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeSampleParameterResponse *SOAP_FMAC4
soap_get_ns1__removeSampleParameterResponse(
    struct soap *, ns1__removeSampleParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__removeSampleParameterResponse
#define soap_read_ns1__removeSampleParameterResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeSampleParameterResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeSampleParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__removeSampleParameterResponse(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline ns1__removeSampleParameterResponse *
soap_new_ns1__removeSampleParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeSampleParameterResponse(soap, n, NULL,
                                                             NULL, NULL);
}

inline ns1__removeSampleParameterResponse *
soap_new_req_ns1__removeSampleParameterResponse(struct soap *soap) {
  ns1__removeSampleParameterResponse *_p =
      soap_instantiate_ns1__removeSampleParameterResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeSampleParameterResponse *
soap_new_set_ns1__removeSampleParameterResponse(struct soap *soap,
                                                char *__item1) {
  ns1__removeSampleParameterResponse *_p =
      soap_instantiate_ns1__removeSampleParameterResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeSampleParameterResponse(
    struct soap *soap, ns1__removeSampleParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeSampleParameterResponse(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeSampleParameter
#define SOAP_TYPE_ICat3_ns1__removeSampleParameter (218)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeSampleParameter(struct soap *, const char *, int,
                                    const ns1__removeSampleParameter *,
                                    const char *);
SOAP_FMAC3 ns1__removeSampleParameter *SOAP_FMAC4
soap_in_ns1__removeSampleParameter(struct soap *, const char *,
                                   ns1__removeSampleParameter *, const char *);

#ifndef soap_write_ns1__removeSampleParameter
#define soap_write_ns1__removeSampleParameter(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeSampleParameter", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeSampleParameter *SOAP_FMAC4
soap_get_ns1__removeSampleParameter(struct soap *, ns1__removeSampleParameter *,
                                    const char *, const char *);

#ifndef soap_read_ns1__removeSampleParameter
#define soap_read_ns1__removeSampleParameter(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeSampleParameter(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeSampleParameter *SOAP_FMAC2
soap_instantiate_ns1__removeSampleParameter(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__removeSampleParameter *
soap_new_ns1__removeSampleParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeSampleParameter(soap, n, NULL, NULL, NULL);
}

inline ns1__removeSampleParameter *
soap_new_req_ns1__removeSampleParameter(struct soap *soap) {
  ns1__removeSampleParameter *_p =
      soap_instantiate_ns1__removeSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeSampleParameter *soap_new_set_ns1__removeSampleParameter(
    struct soap *soap, std::string *sessionId,
    ns1__sampleParameterPK *sampleParameterPK, char *__item1) {
  ns1__removeSampleParameter *_p =
      soap_instantiate_ns1__removeSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__removeSampleParameter::sessionId = sessionId;
    _p->ns1__removeSampleParameter::sampleParameterPK = sampleParameterPK;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__removeSampleParameter(struct soap *soap,
                                       ns1__removeSampleParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeSampleParameter(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByRestrictionLogicalResponse
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByRestrictionLogicalResponse   \
  (217)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByRestrictionLogicalResponse *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestrictionLogicalResponse *SOAP_FMAC4
soap_in_ns1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByRestrictionLogicalResponse *, const char *);

#ifndef soap_write_ns1__searchInvestigationByRestrictionLogicalResponse
#define soap_write_ns1__searchInvestigationByRestrictionLogicalResponse(soap,  \
                                                                        data)  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap,                                                  \
                        "ns1:searchInvestigationByRestrictionLogicalResponse", \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestrictionLogicalResponse *SOAP_FMAC4
soap_get_ns1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *, ns1__searchInvestigationByRestrictionLogicalResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchInvestigationByRestrictionLogicalResponse
#define soap_read_ns1__searchInvestigationByRestrictionLogicalResponse(soap,   \
                                                                       data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByRestrictionLogicalResponse(  \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByRestrictionLogicalResponse *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchInvestigationByRestrictionLogicalResponse *
soap_new_ns1__searchInvestigationByRestrictionLogicalResponse(struct soap *soap,
                                                              int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByRestrictionLogicalResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByRestrictionLogicalResponse *
soap_new_req_ns1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *soap) {
  ns1__searchInvestigationByRestrictionLogicalResponse *_p =
      soap_instantiate_ns1__searchInvestigationByRestrictionLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByRestrictionLogicalResponse *
soap_new_set_ns1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchInvestigationByRestrictionLogicalResponse *_p =
      soap_instantiate_ns1__searchInvestigationByRestrictionLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByRestrictionLogicalResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *soap,
    ns1__searchInvestigationByRestrictionLogicalResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByRestrictionLogical
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByRestrictionLogical (216)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchInvestigationByRestrictionLogical(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByRestrictionLogical *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestrictionLogical *SOAP_FMAC4
soap_in_ns1__searchInvestigationByRestrictionLogical(
    struct soap *, const char *, ns1__searchInvestigationByRestrictionLogical *,
    const char *);

#ifndef soap_write_ns1__searchInvestigationByRestrictionLogical
#define soap_write_ns1__searchInvestigationByRestrictionLogical(soap, data)    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchInvestigationByRestrictionLogical",   \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestrictionLogical *SOAP_FMAC4
soap_get_ns1__searchInvestigationByRestrictionLogical(
    struct soap *, ns1__searchInvestigationByRestrictionLogical *, const char *,
    const char *);

#ifndef soap_read_ns1__searchInvestigationByRestrictionLogical
#define soap_read_ns1__searchInvestigationByRestrictionLogical(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByRestrictionLogical(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByRestrictionLogical *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByRestrictionLogical(struct soap *,
                                                              int, const char *,
                                                              const char *,
                                                              size_t *);

inline ns1__searchInvestigationByRestrictionLogical *
soap_new_ns1__searchInvestigationByRestrictionLogical(struct soap *soap,
                                                      int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByRestrictionLogical(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByRestrictionLogical *
soap_new_req_ns1__searchInvestigationByRestrictionLogical(struct soap *soap) {
  ns1__searchInvestigationByRestrictionLogical *_p =
      soap_instantiate_ns1__searchInvestigationByRestrictionLogical(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByRestrictionLogical *
soap_new_set_ns1__searchInvestigationByRestrictionLogical(
    struct soap *soap, std::string *sessionId,
    ns1__restrictionLogicalCondition *restriction, char *__item1) {
  ns1__searchInvestigationByRestrictionLogical *_p =
      soap_instantiate_ns1__searchInvestigationByRestrictionLogical(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByRestrictionLogical::sessionId = sessionId;
    _p->ns1__searchInvestigationByRestrictionLogical::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByRestrictionLogical(
    struct soap *soap, ns1__searchInvestigationByRestrictionLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByRestrictionLogical(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByParameterRestrictionResponse
#define SOAP_TYPE_ICat3_ns1__searchDatafileByParameterRestrictionResponse (215)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatafileByParameterRestrictionResponse(
    struct soap *, const char *, int,
    const ns1__searchDatafileByParameterRestrictionResponse *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterRestrictionResponse *SOAP_FMAC4
soap_in_ns1__searchDatafileByParameterRestrictionResponse(
    struct soap *, const char *,
    ns1__searchDatafileByParameterRestrictionResponse *, const char *);

#ifndef soap_write_ns1__searchDatafileByParameterRestrictionResponse
#define soap_write_ns1__searchDatafileByParameterRestrictionResponse(soap,     \
                                                                     data)     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchDatafileByParameterRestrictionResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterRestrictionResponse *SOAP_FMAC4
soap_get_ns1__searchDatafileByParameterRestrictionResponse(
    struct soap *, ns1__searchDatafileByParameterRestrictionResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchDatafileByParameterRestrictionResponse
#define soap_read_ns1__searchDatafileByParameterRestrictionResponse(soap,      \
                                                                    data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByParameterRestrictionResponse(     \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByParameterRestrictionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByParameterRestrictionResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchDatafileByParameterRestrictionResponse *
soap_new_ns1__searchDatafileByParameterRestrictionResponse(struct soap *soap,
                                                           int n = -1) {
  return soap_instantiate_ns1__searchDatafileByParameterRestrictionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatafileByParameterRestrictionResponse *
soap_new_req_ns1__searchDatafileByParameterRestrictionResponse(
    struct soap *soap) {
  ns1__searchDatafileByParameterRestrictionResponse *_p =
      soap_instantiate_ns1__searchDatafileByParameterRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByParameterRestrictionResponse *
soap_new_set_ns1__searchDatafileByParameterRestrictionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatafileByParameterRestrictionResponse *_p =
      soap_instantiate_ns1__searchDatafileByParameterRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByParameterRestrictionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByParameterRestrictionResponse(
    struct soap *soap, ns1__searchDatafileByParameterRestrictionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByParameterRestrictionResponse(struct soap *, int,
                                                            int, void *, size_t,
                                                            const void *,
                                                            size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByParameterRestriction
#define SOAP_TYPE_ICat3_ns1__searchDatafileByParameterRestriction (214)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatafileByParameterRestriction(
    struct soap *, const char *, int,
    const ns1__searchDatafileByParameterRestriction *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterRestriction *SOAP_FMAC4
soap_in_ns1__searchDatafileByParameterRestriction(
    struct soap *, const char *, ns1__searchDatafileByParameterRestriction *,
    const char *);

#ifndef soap_write_ns1__searchDatafileByParameterRestriction
#define soap_write_ns1__searchDatafileByParameterRestriction(soap, data)       \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatafileByParameterRestriction",      \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterRestriction *SOAP_FMAC4
soap_get_ns1__searchDatafileByParameterRestriction(
    struct soap *, ns1__searchDatafileByParameterRestriction *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatafileByParameterRestriction
#define soap_read_ns1__searchDatafileByParameterRestriction(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByParameterRestriction(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByParameterRestriction *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByParameterRestriction(struct soap *, int,
                                                           const char *,
                                                           const char *,
                                                           size_t *);

inline ns1__searchDatafileByParameterRestriction *
soap_new_ns1__searchDatafileByParameterRestriction(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate_ns1__searchDatafileByParameterRestriction(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatafileByParameterRestriction *
soap_new_req_ns1__searchDatafileByParameterRestriction(struct soap *soap) {
  ns1__searchDatafileByParameterRestriction *_p =
      soap_instantiate_ns1__searchDatafileByParameterRestriction(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByParameterRestriction *
soap_new_set_ns1__searchDatafileByParameterRestriction(
    struct soap *soap, std::string *sessionId,
    ns1__parameterCondition *parameterCondition,
    ns1__restrictionCondition *restrictions, char *__item1) {
  ns1__searchDatafileByParameterRestriction *_p =
      soap_instantiate_ns1__searchDatafileByParameterRestriction(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByParameterRestriction::sessionId = sessionId;
    _p->ns1__searchDatafileByParameterRestriction::parameterCondition =
        parameterCondition;
    _p->ns1__searchDatafileByParameterRestriction::restrictions = restrictions;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByParameterRestriction(
    struct soap *soap, ns1__searchDatafileByParameterRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByParameterRestriction(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__createDataSetResponse
#define SOAP_TYPE_ICat3_ns1__createDataSetResponse (213)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__createDataSetResponse(struct soap *, const char *, int,
                                    const ns1__createDataSetResponse *,
                                    const char *);
SOAP_FMAC3 ns1__createDataSetResponse *SOAP_FMAC4
soap_in_ns1__createDataSetResponse(struct soap *, const char *,
                                   ns1__createDataSetResponse *, const char *);

#ifndef soap_write_ns1__createDataSetResponse
#define soap_write_ns1__createDataSetResponse(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:createDataSetResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataSetResponse *SOAP_FMAC4
soap_get_ns1__createDataSetResponse(struct soap *, ns1__createDataSetResponse *,
                                    const char *, const char *);

#ifndef soap_read_ns1__createDataSetResponse
#define soap_read_ns1__createDataSetResponse(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__createDataSetResponse(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__createDataSetResponse *SOAP_FMAC2
soap_instantiate_ns1__createDataSetResponse(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__createDataSetResponse *
soap_new_ns1__createDataSetResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__createDataSetResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__createDataSetResponse *
soap_new_req_ns1__createDataSetResponse(struct soap *soap) {
  ns1__createDataSetResponse *_p =
      soap_instantiate_ns1__createDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__createDataSetResponse *
soap_new_set_ns1__createDataSetResponse(struct soap *soap,
                                        ns1__dataset *return_, char *__item1) {
  ns1__createDataSetResponse *_p =
      soap_instantiate_ns1__createDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__createDataSetResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__createDataSetResponse(struct soap *soap,
                                       ns1__createDataSetResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__createDataSetResponse(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__createDataSet
#define SOAP_TYPE_ICat3_ns1__createDataSet (212)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__createDataSet(struct soap *, const char *, int,
                            const ns1__createDataSet *, const char *);
SOAP_FMAC3 ns1__createDataSet *SOAP_FMAC4
soap_in_ns1__createDataSet(struct soap *, const char *, ns1__createDataSet *,
                           const char *);

#ifndef soap_write_ns1__createDataSet
#define soap_write_ns1__createDataSet(soap, data)                              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:createDataSet", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataSet *SOAP_FMAC4
soap_get_ns1__createDataSet(struct soap *, ns1__createDataSet *, const char *,
                            const char *);

#ifndef soap_read_ns1__createDataSet
#define soap_read_ns1__createDataSet(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__createDataSet(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__createDataSet *SOAP_FMAC2
soap_instantiate_ns1__createDataSet(struct soap *, int, const char *,
                                    const char *, size_t *);

inline ns1__createDataSet *soap_new_ns1__createDataSet(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__createDataSet(soap, n, NULL, NULL, NULL);
}

inline ns1__createDataSet *soap_new_req_ns1__createDataSet(struct soap *soap) {
  ns1__createDataSet *_p =
      soap_instantiate_ns1__createDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__createDataSet *
soap_new_set_ns1__createDataSet(struct soap *soap, std::string *sessionId,
                                ns1__dataset *dataSet, LONG64 *investigationId,
                                char *__item1) {
  ns1__createDataSet *_p =
      soap_instantiate_ns1__createDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__createDataSet::sessionId = sessionId;
    _p->ns1__createDataSet::dataSet = dataSet;
    _p->ns1__createDataSet::investigationId = investigationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__createDataSet(struct soap *soap,
                                           ns1__createDataSet *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__createDataSet(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByParameterLogicalResponse
#define SOAP_TYPE_ICat3_ns1__searchDatafileByParameterLogicalResponse (211)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatafileByParameterLogicalResponse(
    struct soap *, const char *, int,
    const ns1__searchDatafileByParameterLogicalResponse *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterLogicalResponse *SOAP_FMAC4
soap_in_ns1__searchDatafileByParameterLogicalResponse(
    struct soap *, const char *,
    ns1__searchDatafileByParameterLogicalResponse *, const char *);

#ifndef soap_write_ns1__searchDatafileByParameterLogicalResponse
#define soap_write_ns1__searchDatafileByParameterLogicalResponse(soap, data)   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatafileByParameterLogicalResponse",  \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterLogicalResponse *SOAP_FMAC4
soap_get_ns1__searchDatafileByParameterLogicalResponse(
    struct soap *, ns1__searchDatafileByParameterLogicalResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchDatafileByParameterLogicalResponse
#define soap_read_ns1__searchDatafileByParameterLogicalResponse(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByParameterLogicalResponse(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByParameterLogicalResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByParameterLogicalResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchDatafileByParameterLogicalResponse *
soap_new_ns1__searchDatafileByParameterLogicalResponse(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__searchDatafileByParameterLogicalResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatafileByParameterLogicalResponse *
soap_new_req_ns1__searchDatafileByParameterLogicalResponse(struct soap *soap) {
  ns1__searchDatafileByParameterLogicalResponse *_p =
      soap_instantiate_ns1__searchDatafileByParameterLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByParameterLogicalResponse *
soap_new_set_ns1__searchDatafileByParameterLogicalResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatafileByParameterLogicalResponse *_p =
      soap_instantiate_ns1__searchDatafileByParameterLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByParameterLogicalResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByParameterLogicalResponse(
    struct soap *soap, ns1__searchDatafileByParameterLogicalResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByParameterLogicalResponse(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByParameterLogical
#define SOAP_TYPE_ICat3_ns1__searchDatafileByParameterLogical (210)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatafileByParameterLogical(
    struct soap *, const char *, int,
    const ns1__searchDatafileByParameterLogical *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterLogical *SOAP_FMAC4
soap_in_ns1__searchDatafileByParameterLogical(
    struct soap *, const char *, ns1__searchDatafileByParameterLogical *,
    const char *);

#ifndef soap_write_ns1__searchDatafileByParameterLogical
#define soap_write_ns1__searchDatafileByParameterLogical(soap, data)           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatafileByParameterLogical", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterLogical *SOAP_FMAC4
soap_get_ns1__searchDatafileByParameterLogical(
    struct soap *, ns1__searchDatafileByParameterLogical *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatafileByParameterLogical
#define soap_read_ns1__searchDatafileByParameterLogical(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByParameterLogical(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByParameterLogical *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByParameterLogical(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline ns1__searchDatafileByParameterLogical *
soap_new_ns1__searchDatafileByParameterLogical(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatafileByParameterLogical(soap, n, NULL,
                                                                NULL, NULL);
}

inline ns1__searchDatafileByParameterLogical *
soap_new_req_ns1__searchDatafileByParameterLogical(struct soap *soap) {
  ns1__searchDatafileByParameterLogical *_p =
      soap_instantiate_ns1__searchDatafileByParameterLogical(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByParameterLogical *
soap_new_set_ns1__searchDatafileByParameterLogical(
    struct soap *soap, std::string *sessionId,
    ns1__parameterLogicalCondition *logicalCondition, char *__item1) {
  ns1__searchDatafileByParameterLogical *_p =
      soap_instantiate_ns1__searchDatafileByParameterLogical(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByParameterLogical::sessionId = sessionId;
    _p->ns1__searchDatafileByParameterLogical::logicalCondition =
        logicalCondition;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByParameterLogical(
    struct soap *soap, ns1__searchDatafileByParameterLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByParameterLogical(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addInvestigatorResponse
#define SOAP_TYPE_ICat3_ns1__addInvestigatorResponse (209)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addInvestigatorResponse(struct soap *, const char *, int,
                                      const ns1__addInvestigatorResponse *,
                                      const char *);
SOAP_FMAC3 ns1__addInvestigatorResponse *SOAP_FMAC4
soap_in_ns1__addInvestigatorResponse(struct soap *, const char *,
                                     ns1__addInvestigatorResponse *,
                                     const char *);

#ifndef soap_write_ns1__addInvestigatorResponse
#define soap_write_ns1__addInvestigatorResponse(soap, data)                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addInvestigatorResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addInvestigatorResponse *SOAP_FMAC4
soap_get_ns1__addInvestigatorResponse(struct soap *,
                                      ns1__addInvestigatorResponse *,
                                      const char *, const char *);

#ifndef soap_read_ns1__addInvestigatorResponse
#define soap_read_ns1__addInvestigatorResponse(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addInvestigatorResponse(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addInvestigatorResponse *SOAP_FMAC2
soap_instantiate_ns1__addInvestigatorResponse(struct soap *, int, const char *,
                                              const char *, size_t *);

inline ns1__addInvestigatorResponse *
soap_new_ns1__addInvestigatorResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addInvestigatorResponse(soap, n, NULL, NULL,
                                                       NULL);
}

inline ns1__addInvestigatorResponse *
soap_new_req_ns1__addInvestigatorResponse(struct soap *soap) {
  ns1__addInvestigatorResponse *_p =
      soap_instantiate_ns1__addInvestigatorResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addInvestigatorResponse *soap_new_set_ns1__addInvestigatorResponse(
    struct soap *soap, ns1__investigator *return_, char *__item1) {
  ns1__addInvestigatorResponse *_p =
      soap_instantiate_ns1__addInvestigatorResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addInvestigatorResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__addInvestigatorResponse(struct soap *soap,
                                         ns1__addInvestigatorResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addInvestigatorResponse(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addInvestigator
#define SOAP_TYPE_ICat3_ns1__addInvestigator (208)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addInvestigator(struct soap *, const char *, int,
                              const ns1__addInvestigator *, const char *);
SOAP_FMAC3 ns1__addInvestigator *SOAP_FMAC4
soap_in_ns1__addInvestigator(struct soap *, const char *,
                             ns1__addInvestigator *, const char *);

#ifndef soap_write_ns1__addInvestigator
#define soap_write_ns1__addInvestigator(soap, data)                            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addInvestigator", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addInvestigator *SOAP_FMAC4
soap_get_ns1__addInvestigator(struct soap *, ns1__addInvestigator *,
                              const char *, const char *);

#ifndef soap_read_ns1__addInvestigator
#define soap_read_ns1__addInvestigator(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addInvestigator(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addInvestigator *SOAP_FMAC2
soap_instantiate_ns1__addInvestigator(struct soap *, int, const char *,
                                      const char *, size_t *);

inline ns1__addInvestigator *soap_new_ns1__addInvestigator(struct soap *soap,
                                                           int n = -1) {
  return soap_instantiate_ns1__addInvestigator(soap, n, NULL, NULL, NULL);
}

inline ns1__addInvestigator *
soap_new_req_ns1__addInvestigator(struct soap *soap) {
  ns1__addInvestigator *_p =
      soap_instantiate_ns1__addInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addInvestigator *
soap_new_set_ns1__addInvestigator(struct soap *soap, std::string *sessionId,
                                  ns1__investigator *ns1__investigator_,
                                  LONG64 *investigationId, char *__item1) {
  ns1__addInvestigator *_p =
      soap_instantiate_ns1__addInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addInvestigator::sessionId = sessionId;
    _p->ns1__addInvestigator::ns1__investigator_ = ns1__investigator_;
    _p->ns1__addInvestigator::investigationId = investigationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addInvestigator(struct soap *soap,
                                             ns1__addInvestigator *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__addInvestigator(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteInvestigatorResponse
#define SOAP_TYPE_ICat3_ns1__deleteInvestigatorResponse (207)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__deleteInvestigatorResponse(
    struct soap *, const char *, int, const ns1__deleteInvestigatorResponse *,
    const char *);
SOAP_FMAC3 ns1__deleteInvestigatorResponse *SOAP_FMAC4
soap_in_ns1__deleteInvestigatorResponse(struct soap *, const char *,
                                        ns1__deleteInvestigatorResponse *,
                                        const char *);

#ifndef soap_write_ns1__deleteInvestigatorResponse
#define soap_write_ns1__deleteInvestigatorResponse(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteInvestigatorResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteInvestigatorResponse *SOAP_FMAC4
soap_get_ns1__deleteInvestigatorResponse(struct soap *,
                                         ns1__deleteInvestigatorResponse *,
                                         const char *, const char *);

#ifndef soap_read_ns1__deleteInvestigatorResponse
#define soap_read_ns1__deleteInvestigatorResponse(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteInvestigatorResponse(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteInvestigatorResponse *SOAP_FMAC2
soap_instantiate_ns1__deleteInvestigatorResponse(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__deleteInvestigatorResponse *
soap_new_ns1__deleteInvestigatorResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteInvestigatorResponse(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__deleteInvestigatorResponse *
soap_new_req_ns1__deleteInvestigatorResponse(struct soap *soap) {
  ns1__deleteInvestigatorResponse *_p =
      soap_instantiate_ns1__deleteInvestigatorResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteInvestigatorResponse *
soap_new_set_ns1__deleteInvestigatorResponse(struct soap *soap, char *__item1) {
  ns1__deleteInvestigatorResponse *_p =
      soap_instantiate_ns1__deleteInvestigatorResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteInvestigatorResponse(
    struct soap *soap, ns1__deleteInvestigatorResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteInvestigatorResponse(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteInvestigator
#define SOAP_TYPE_ICat3_ns1__deleteInvestigator (206)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteInvestigator(struct soap *, const char *, int,
                                 const ns1__deleteInvestigator *, const char *);
SOAP_FMAC3 ns1__deleteInvestigator *SOAP_FMAC4
soap_in_ns1__deleteInvestigator(struct soap *, const char *,
                                ns1__deleteInvestigator *, const char *);

#ifndef soap_write_ns1__deleteInvestigator
#define soap_write_ns1__deleteInvestigator(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteInvestigator", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteInvestigator *SOAP_FMAC4
soap_get_ns1__deleteInvestigator(struct soap *, ns1__deleteInvestigator *,
                                 const char *, const char *);

#ifndef soap_read_ns1__deleteInvestigator
#define soap_read_ns1__deleteInvestigator(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteInvestigator(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteInvestigator *SOAP_FMAC2
soap_instantiate_ns1__deleteInvestigator(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__deleteInvestigator *
soap_new_ns1__deleteInvestigator(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteInvestigator(soap, n, NULL, NULL, NULL);
}

inline ns1__deleteInvestigator *
soap_new_req_ns1__deleteInvestigator(struct soap *soap) {
  ns1__deleteInvestigator *_p =
      soap_instantiate_ns1__deleteInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteInvestigator *
soap_new_set_ns1__deleteInvestigator(struct soap *soap, std::string *sessionId,
                                     ns1__investigatorPK *investigatorPK,
                                     char *__item1) {
  ns1__deleteInvestigator *_p =
      soap_instantiate_ns1__deleteInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__deleteInvestigator::sessionId = sessionId;
    _p->ns1__deleteInvestigator::investigatorPK = investigatorPK;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteInvestigator(struct soap *soap,
                                                ns1__deleteInvestigator *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteInvestigator(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByRestrictionResponse
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByRestrictionResponse (205)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchInvestigationByRestrictionResponse(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByRestrictionResponse *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestrictionResponse *SOAP_FMAC4
soap_in_ns1__searchInvestigationByRestrictionResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByRestrictionResponse *, const char *);

#ifndef soap_write_ns1__searchInvestigationByRestrictionResponse
#define soap_write_ns1__searchInvestigationByRestrictionResponse(soap, data)   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchInvestigationByRestrictionResponse",  \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestrictionResponse *SOAP_FMAC4
soap_get_ns1__searchInvestigationByRestrictionResponse(
    struct soap *, ns1__searchInvestigationByRestrictionResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchInvestigationByRestrictionResponse
#define soap_read_ns1__searchInvestigationByRestrictionResponse(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByRestrictionResponse(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByRestrictionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByRestrictionResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchInvestigationByRestrictionResponse *
soap_new_ns1__searchInvestigationByRestrictionResponse(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByRestrictionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByRestrictionResponse *
soap_new_req_ns1__searchInvestigationByRestrictionResponse(struct soap *soap) {
  ns1__searchInvestigationByRestrictionResponse *_p =
      soap_instantiate_ns1__searchInvestigationByRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByRestrictionResponse *
soap_new_set_ns1__searchInvestigationByRestrictionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchInvestigationByRestrictionResponse *_p =
      soap_instantiate_ns1__searchInvestigationByRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByRestrictionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByRestrictionResponse(
    struct soap *soap, ns1__searchInvestigationByRestrictionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByRestrictionResponse(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByRestriction
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByRestriction (204)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchInvestigationByRestriction(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByRestriction *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestriction *SOAP_FMAC4
soap_in_ns1__searchInvestigationByRestriction(
    struct soap *, const char *, ns1__searchInvestigationByRestriction *,
    const char *);

#ifndef soap_write_ns1__searchInvestigationByRestriction
#define soap_write_ns1__searchInvestigationByRestriction(soap, data)           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchInvestigationByRestriction", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestriction *SOAP_FMAC4
soap_get_ns1__searchInvestigationByRestriction(
    struct soap *, ns1__searchInvestigationByRestriction *, const char *,
    const char *);

#ifndef soap_read_ns1__searchInvestigationByRestriction
#define soap_read_ns1__searchInvestigationByRestriction(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByRestriction(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByRestriction *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByRestriction(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline ns1__searchInvestigationByRestriction *
soap_new_ns1__searchInvestigationByRestriction(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByRestriction(soap, n, NULL,
                                                                NULL, NULL);
}

inline ns1__searchInvestigationByRestriction *
soap_new_req_ns1__searchInvestigationByRestriction(struct soap *soap) {
  ns1__searchInvestigationByRestriction *_p =
      soap_instantiate_ns1__searchInvestigationByRestriction(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByRestriction *
soap_new_set_ns1__searchInvestigationByRestriction(
    struct soap *soap, std::string *sessionId,
    ns1__restrictionCondition *restriction, char *__item1) {
  ns1__searchInvestigationByRestriction *_p =
      soap_instantiate_ns1__searchInvestigationByRestriction(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByRestriction::sessionId = sessionId;
    _p->ns1__searchInvestigationByRestriction::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByRestriction(
    struct soap *soap, ns1__searchInvestigationByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByRestriction(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getICATAPIVersionResponse
#define SOAP_TYPE_ICat3_ns1__getICATAPIVersionResponse (203)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getICATAPIVersionResponse(struct soap *, const char *, int,
                                        const ns1__getICATAPIVersionResponse *,
                                        const char *);
SOAP_FMAC3 ns1__getICATAPIVersionResponse *SOAP_FMAC4
soap_in_ns1__getICATAPIVersionResponse(struct soap *, const char *,
                                       ns1__getICATAPIVersionResponse *,
                                       const char *);

#ifndef soap_write_ns1__getICATAPIVersionResponse
#define soap_write_ns1__getICATAPIVersionResponse(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getICATAPIVersionResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getICATAPIVersionResponse *SOAP_FMAC4
soap_get_ns1__getICATAPIVersionResponse(struct soap *,
                                        ns1__getICATAPIVersionResponse *,
                                        const char *, const char *);

#ifndef soap_read_ns1__getICATAPIVersionResponse
#define soap_read_ns1__getICATAPIVersionResponse(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getICATAPIVersionResponse(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getICATAPIVersionResponse *SOAP_FMAC2
soap_instantiate_ns1__getICATAPIVersionResponse(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__getICATAPIVersionResponse *
soap_new_ns1__getICATAPIVersionResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getICATAPIVersionResponse(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__getICATAPIVersionResponse *
soap_new_req_ns1__getICATAPIVersionResponse(struct soap *soap) {
  ns1__getICATAPIVersionResponse *_p =
      soap_instantiate_ns1__getICATAPIVersionResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getICATAPIVersionResponse *
soap_new_set_ns1__getICATAPIVersionResponse(struct soap *soap,
                                            std::string *return_,
                                            char *__item1) {
  ns1__getICATAPIVersionResponse *_p =
      soap_instantiate_ns1__getICATAPIVersionResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getICATAPIVersionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getICATAPIVersionResponse(struct soap *soap,
                                           ns1__getICATAPIVersionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getICATAPIVersionResponse(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getICATAPIVersion
#define SOAP_TYPE_ICat3_ns1__getICATAPIVersion (202)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getICATAPIVersion(struct soap *, const char *, int,
                                const ns1__getICATAPIVersion *, const char *);
SOAP_FMAC3 ns1__getICATAPIVersion *SOAP_FMAC4
soap_in_ns1__getICATAPIVersion(struct soap *, const char *,
                               ns1__getICATAPIVersion *, const char *);

#ifndef soap_write_ns1__getICATAPIVersion
#define soap_write_ns1__getICATAPIVersion(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getICATAPIVersion", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getICATAPIVersion *SOAP_FMAC4
soap_get_ns1__getICATAPIVersion(struct soap *, ns1__getICATAPIVersion *,
                                const char *, const char *);

#ifndef soap_read_ns1__getICATAPIVersion
#define soap_read_ns1__getICATAPIVersion(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getICATAPIVersion(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getICATAPIVersion *SOAP_FMAC2
soap_instantiate_ns1__getICATAPIVersion(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__getICATAPIVersion *
soap_new_ns1__getICATAPIVersion(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getICATAPIVersion(soap, n, NULL, NULL, NULL);
}

inline ns1__getICATAPIVersion *
soap_new_req_ns1__getICATAPIVersion(struct soap *soap) {
  ns1__getICATAPIVersion *_p =
      soap_instantiate_ns1__getICATAPIVersion(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getICATAPIVersion *
soap_new_set_ns1__getICATAPIVersion(struct soap *soap, std::string *sessionId,
                                    char *__item1) {
  ns1__getICATAPIVersion *_p =
      soap_instantiate_ns1__getICATAPIVersion(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getICATAPIVersion::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getICATAPIVersion(struct soap *soap,
                                               ns1__getICATAPIVersion *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getICATAPIVersion(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getDatafilesResponse
#define SOAP_TYPE_ICat3_ns1__getDatafilesResponse (201)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getDatafilesResponse(struct soap *, const char *, int,
                                   const ns1__getDatafilesResponse *,
                                   const char *);
SOAP_FMAC3 ns1__getDatafilesResponse *SOAP_FMAC4
soap_in_ns1__getDatafilesResponse(struct soap *, const char *,
                                  ns1__getDatafilesResponse *, const char *);

#ifndef soap_write_ns1__getDatafilesResponse
#define soap_write_ns1__getDatafilesResponse(soap, data)                       \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getDatafilesResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatafilesResponse *SOAP_FMAC4
soap_get_ns1__getDatafilesResponse(struct soap *, ns1__getDatafilesResponse *,
                                   const char *, const char *);

#ifndef soap_read_ns1__getDatafilesResponse
#define soap_read_ns1__getDatafilesResponse(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getDatafilesResponse(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getDatafilesResponse *SOAP_FMAC2
soap_instantiate_ns1__getDatafilesResponse(struct soap *, int, const char *,
                                           const char *, size_t *);

inline ns1__getDatafilesResponse *
soap_new_ns1__getDatafilesResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getDatafilesResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__getDatafilesResponse *
soap_new_req_ns1__getDatafilesResponse(struct soap *soap) {
  ns1__getDatafilesResponse *_p =
      soap_instantiate_ns1__getDatafilesResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getDatafilesResponse *soap_new_set_ns1__getDatafilesResponse(
    struct soap *soap, std::vector<ns1__datafile *> &return_, char *__item1) {
  ns1__getDatafilesResponse *_p =
      soap_instantiate_ns1__getDatafilesResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getDatafilesResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getDatafilesResponse(struct soap *soap,
                                      ns1__getDatafilesResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getDatafilesResponse(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getDatafiles
#define SOAP_TYPE_ICat3_ns1__getDatafiles (200)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getDatafiles(struct soap *, const char *, int,
                           const ns1__getDatafiles *, const char *);
SOAP_FMAC3 ns1__getDatafiles *SOAP_FMAC4
soap_in_ns1__getDatafiles(struct soap *, const char *, ns1__getDatafiles *,
                          const char *);

#ifndef soap_write_ns1__getDatafiles
#define soap_write_ns1__getDatafiles(soap, data)                               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getDatafiles", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatafiles *SOAP_FMAC4
soap_get_ns1__getDatafiles(struct soap *, ns1__getDatafiles *, const char *,
                           const char *);

#ifndef soap_read_ns1__getDatafiles
#define soap_read_ns1__getDatafiles(soap, data)                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getDatafiles(soap, data, NULL, NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getDatafiles *SOAP_FMAC2
soap_instantiate_ns1__getDatafiles(struct soap *, int, const char *,
                                   const char *, size_t *);

inline ns1__getDatafiles *soap_new_ns1__getDatafiles(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__getDatafiles(soap, n, NULL, NULL, NULL);
}

inline ns1__getDatafiles *soap_new_req_ns1__getDatafiles(struct soap *soap) {
  ns1__getDatafiles *_p =
      soap_instantiate_ns1__getDatafiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getDatafiles *
soap_new_set_ns1__getDatafiles(struct soap *soap, std::string *sessionId,
                               std::vector<LONG64> &datafileIds,
                               char *__item1) {
  ns1__getDatafiles *_p =
      soap_instantiate_ns1__getDatafiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getDatafiles::sessionId = sessionId;
    _p->ns1__getDatafiles::datafileIds = datafileIds;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getDatafiles(struct soap *soap,
                                          ns1__getDatafiles *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getDatafiles(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__isSessionValidResponse
#define SOAP_TYPE_ICat3_ns1__isSessionValidResponse (199)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__isSessionValidResponse(struct soap *, const char *, int,
                                     const ns1__isSessionValidResponse *,
                                     const char *);
SOAP_FMAC3 ns1__isSessionValidResponse *SOAP_FMAC4
soap_in_ns1__isSessionValidResponse(struct soap *, const char *,
                                    ns1__isSessionValidResponse *,
                                    const char *);

#ifndef soap_write_ns1__isSessionValidResponse
#define soap_write_ns1__isSessionValidResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:isSessionValidResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__isSessionValidResponse *SOAP_FMAC4
soap_get_ns1__isSessionValidResponse(struct soap *,
                                     ns1__isSessionValidResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns1__isSessionValidResponse
#define soap_read_ns1__isSessionValidResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__isSessionValidResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__isSessionValidResponse *SOAP_FMAC2
soap_instantiate_ns1__isSessionValidResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__isSessionValidResponse *
soap_new_ns1__isSessionValidResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__isSessionValidResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__isSessionValidResponse *
soap_new_req_ns1__isSessionValidResponse(struct soap *soap, bool return_) {
  ns1__isSessionValidResponse *_p =
      soap_instantiate_ns1__isSessionValidResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__isSessionValidResponse::return_ = return_;
  }
  return _p;
}

inline ns1__isSessionValidResponse *
soap_new_set_ns1__isSessionValidResponse(struct soap *soap, bool return_,
                                         char *__item1) {
  ns1__isSessionValidResponse *_p =
      soap_instantiate_ns1__isSessionValidResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__isSessionValidResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__isSessionValidResponse(struct soap *soap,
                                        ns1__isSessionValidResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__isSessionValidResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__isSessionValid
#define SOAP_TYPE_ICat3_ns1__isSessionValid (198)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__isSessionValid(struct soap *, const char *, int,
                             const ns1__isSessionValid *, const char *);
SOAP_FMAC3 ns1__isSessionValid *SOAP_FMAC4
soap_in_ns1__isSessionValid(struct soap *, const char *, ns1__isSessionValid *,
                            const char *);

#ifndef soap_write_ns1__isSessionValid
#define soap_write_ns1__isSessionValid(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:isSessionValid", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__isSessionValid *SOAP_FMAC4
soap_get_ns1__isSessionValid(struct soap *, ns1__isSessionValid *, const char *,
                             const char *);

#ifndef soap_read_ns1__isSessionValid
#define soap_read_ns1__isSessionValid(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__isSessionValid(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__isSessionValid *SOAP_FMAC2
soap_instantiate_ns1__isSessionValid(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__isSessionValid *soap_new_ns1__isSessionValid(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__isSessionValid(soap, n, NULL, NULL, NULL);
}

inline ns1__isSessionValid *
soap_new_req_ns1__isSessionValid(struct soap *soap) {
  ns1__isSessionValid *_p =
      soap_instantiate_ns1__isSessionValid(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__isSessionValid *
soap_new_set_ns1__isSessionValid(struct soap *soap, std::string *sessionId,
                                 char *__item1) {
  ns1__isSessionValid *_p =
      soap_instantiate_ns1__isSessionValid(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__isSessionValid::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__isSessionValid(struct soap *soap,
                                            ns1__isSessionValid *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__isSessionValid(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterComparisonResponse
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterComparisonResponse  \
  (197)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchInvestigationByParameterComparisonResponse(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByParameterComparisonResponse *,
    const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterComparisonResponse *SOAP_FMAC4
soap_in_ns1__searchInvestigationByParameterComparisonResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterComparisonResponse *, const char *);

#ifndef soap_write_ns1__searchInvestigationByParameterComparisonResponse
#define soap_write_ns1__searchInvestigationByParameterComparisonResponse(soap, \
                                                                         data) \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchInvestigationByParameterComparisonResponse",       \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterComparisonResponse *SOAP_FMAC4
soap_get_ns1__searchInvestigationByParameterComparisonResponse(
    struct soap *, ns1__searchInvestigationByParameterComparisonResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchInvestigationByParameterComparisonResponse
#define soap_read_ns1__searchInvestigationByParameterComparisonResponse(soap,  \
                                                                        data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByParameterComparisonResponse( \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByParameterComparisonResponse *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByParameterComparisonResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchInvestigationByParameterComparisonResponse *
soap_new_ns1__searchInvestigationByParameterComparisonResponse(
    struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByParameterComparisonResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByParameterComparisonResponse *
soap_new_req_ns1__searchInvestigationByParameterComparisonResponse(
    struct soap *soap) {
  ns1__searchInvestigationByParameterComparisonResponse *_p =
      soap_instantiate_ns1__searchInvestigationByParameterComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByParameterComparisonResponse *
soap_new_set_ns1__searchInvestigationByParameterComparisonResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchInvestigationByParameterComparisonResponse *_p =
      soap_instantiate_ns1__searchInvestigationByParameterComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByParameterComparisonResponse::return_ =
        return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByParameterComparisonResponse(
    struct soap *soap,
    ns1__searchInvestigationByParameterComparisonResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByParameterComparisonResponse(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterComparison
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterComparison (196)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchInvestigationByParameterComparison(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByParameterComparison *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterComparison *SOAP_FMAC4
soap_in_ns1__searchInvestigationByParameterComparison(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterComparison *, const char *);

#ifndef soap_write_ns1__searchInvestigationByParameterComparison
#define soap_write_ns1__searchInvestigationByParameterComparison(soap, data)   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchInvestigationByParameterComparison",  \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterComparison *SOAP_FMAC4
soap_get_ns1__searchInvestigationByParameterComparison(
    struct soap *, ns1__searchInvestigationByParameterComparison *,
    const char *, const char *);

#ifndef soap_read_ns1__searchInvestigationByParameterComparison
#define soap_read_ns1__searchInvestigationByParameterComparison(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByParameterComparison(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByParameterComparison *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByParameterComparison(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchInvestigationByParameterComparison *
soap_new_ns1__searchInvestigationByParameterComparison(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByParameterComparison(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByParameterComparison *
soap_new_req_ns1__searchInvestigationByParameterComparison(struct soap *soap) {
  ns1__searchInvestigationByParameterComparison *_p =
      soap_instantiate_ns1__searchInvestigationByParameterComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByParameterComparison *
soap_new_set_ns1__searchInvestigationByParameterComparison(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__parameterComparisonCondition *> &comparisionCondition,
    char *__item1) {
  ns1__searchInvestigationByParameterComparison *_p =
      soap_instantiate_ns1__searchInvestigationByParameterComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByParameterComparison::sessionId = sessionId;
    _p->ns1__searchInvestigationByParameterComparison::comparisionCondition =
        comparisionCondition;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByParameterComparison(
    struct soap *soap, ns1__searchInvestigationByParameterComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByParameterComparison(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteDataSetResponse
#define SOAP_TYPE_ICat3_ns1__deleteDataSetResponse (195)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteDataSetResponse(struct soap *, const char *, int,
                                    const ns1__deleteDataSetResponse *,
                                    const char *);
SOAP_FMAC3 ns1__deleteDataSetResponse *SOAP_FMAC4
soap_in_ns1__deleteDataSetResponse(struct soap *, const char *,
                                   ns1__deleteDataSetResponse *, const char *);

#ifndef soap_write_ns1__deleteDataSetResponse
#define soap_write_ns1__deleteDataSetResponse(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteDataSetResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataSetResponse *SOAP_FMAC4
soap_get_ns1__deleteDataSetResponse(struct soap *, ns1__deleteDataSetResponse *,
                                    const char *, const char *);

#ifndef soap_read_ns1__deleteDataSetResponse
#define soap_read_ns1__deleteDataSetResponse(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteDataSetResponse(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteDataSetResponse *SOAP_FMAC2
soap_instantiate_ns1__deleteDataSetResponse(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__deleteDataSetResponse *
soap_new_ns1__deleteDataSetResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteDataSetResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__deleteDataSetResponse *
soap_new_req_ns1__deleteDataSetResponse(struct soap *soap) {
  ns1__deleteDataSetResponse *_p =
      soap_instantiate_ns1__deleteDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteDataSetResponse *
soap_new_set_ns1__deleteDataSetResponse(struct soap *soap, char *__item1) {
  ns1__deleteDataSetResponse *_p =
      soap_instantiate_ns1__deleteDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__deleteDataSetResponse(struct soap *soap,
                                       ns1__deleteDataSetResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteDataSetResponse(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteDataSet
#define SOAP_TYPE_ICat3_ns1__deleteDataSet (194)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteDataSet(struct soap *, const char *, int,
                            const ns1__deleteDataSet *, const char *);
SOAP_FMAC3 ns1__deleteDataSet *SOAP_FMAC4
soap_in_ns1__deleteDataSet(struct soap *, const char *, ns1__deleteDataSet *,
                           const char *);

#ifndef soap_write_ns1__deleteDataSet
#define soap_write_ns1__deleteDataSet(soap, data)                              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteDataSet", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataSet *SOAP_FMAC4
soap_get_ns1__deleteDataSet(struct soap *, ns1__deleteDataSet *, const char *,
                            const char *);

#ifndef soap_read_ns1__deleteDataSet
#define soap_read_ns1__deleteDataSet(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteDataSet(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteDataSet *SOAP_FMAC2
soap_instantiate_ns1__deleteDataSet(struct soap *, int, const char *,
                                    const char *, size_t *);

inline ns1__deleteDataSet *soap_new_ns1__deleteDataSet(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__deleteDataSet(soap, n, NULL, NULL, NULL);
}

inline ns1__deleteDataSet *soap_new_req_ns1__deleteDataSet(struct soap *soap) {
  ns1__deleteDataSet *_p =
      soap_instantiate_ns1__deleteDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteDataSet *
soap_new_set_ns1__deleteDataSet(struct soap *soap, std::string *sessionId,
                                LONG64 *dataSetId, char *__item1) {
  ns1__deleteDataSet *_p =
      soap_instantiate_ns1__deleteDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__deleteDataSet::sessionId = sessionId;
    _p->ns1__deleteDataSet::dataSetId = dataSetId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteDataSet(struct soap *soap,
                                           ns1__deleteDataSet *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__deleteDataSet(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getInvestigationsResponse
#define SOAP_TYPE_ICat3_ns1__getInvestigationsResponse (193)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getInvestigationsResponse(struct soap *, const char *, int,
                                        const ns1__getInvestigationsResponse *,
                                        const char *);
SOAP_FMAC3 ns1__getInvestigationsResponse *SOAP_FMAC4
soap_in_ns1__getInvestigationsResponse(struct soap *, const char *,
                                       ns1__getInvestigationsResponse *,
                                       const char *);

#ifndef soap_write_ns1__getInvestigationsResponse
#define soap_write_ns1__getInvestigationsResponse(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getInvestigationsResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationsResponse *SOAP_FMAC4
soap_get_ns1__getInvestigationsResponse(struct soap *,
                                        ns1__getInvestigationsResponse *,
                                        const char *, const char *);

#ifndef soap_read_ns1__getInvestigationsResponse
#define soap_read_ns1__getInvestigationsResponse(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getInvestigationsResponse(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getInvestigationsResponse *SOAP_FMAC2
soap_instantiate_ns1__getInvestigationsResponse(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__getInvestigationsResponse *
soap_new_ns1__getInvestigationsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getInvestigationsResponse(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__getInvestigationsResponse *
soap_new_req_ns1__getInvestigationsResponse(struct soap *soap) {
  ns1__getInvestigationsResponse *_p =
      soap_instantiate_ns1__getInvestigationsResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getInvestigationsResponse *
soap_new_set_ns1__getInvestigationsResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__getInvestigationsResponse *_p =
      soap_instantiate_ns1__getInvestigationsResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getInvestigationsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getInvestigationsResponse(struct soap *soap,
                                           ns1__getInvestigationsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getInvestigationsResponse(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getInvestigations
#define SOAP_TYPE_ICat3_ns1__getInvestigations (192)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getInvestigations(struct soap *, const char *, int,
                                const ns1__getInvestigations *, const char *);
SOAP_FMAC3 ns1__getInvestigations *SOAP_FMAC4
soap_in_ns1__getInvestigations(struct soap *, const char *,
                               ns1__getInvestigations *, const char *);

#ifndef soap_write_ns1__getInvestigations
#define soap_write_ns1__getInvestigations(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getInvestigations", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigations *SOAP_FMAC4
soap_get_ns1__getInvestigations(struct soap *, ns1__getInvestigations *,
                                const char *, const char *);

#ifndef soap_read_ns1__getInvestigations
#define soap_read_ns1__getInvestigations(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getInvestigations(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getInvestigations *SOAP_FMAC2
soap_instantiate_ns1__getInvestigations(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__getInvestigations *
soap_new_ns1__getInvestigations(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getInvestigations(soap, n, NULL, NULL, NULL);
}

inline ns1__getInvestigations *
soap_new_req_ns1__getInvestigations(struct soap *soap) {
  ns1__getInvestigations *_p =
      soap_instantiate_ns1__getInvestigations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getInvestigations *
soap_new_set_ns1__getInvestigations(struct soap *soap, std::string *userId,
                                    std::vector<LONG64> &investigationIds,
                                    char *__item1) {
  ns1__getInvestigations *_p =
      soap_instantiate_ns1__getInvestigations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getInvestigations::userId = userId;
    _p->ns1__getInvestigations::investigationIds = investigationIds;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getInvestigations(struct soap *soap,
                                               ns1__getInvestigations *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getInvestigations(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getInvestigationsIncludesResponse
#define SOAP_TYPE_ICat3_ns1__getInvestigationsIncludesResponse (191)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getInvestigationsIncludesResponse(
    struct soap *, const char *, int,
    const ns1__getInvestigationsIncludesResponse *, const char *);
SOAP_FMAC3 ns1__getInvestigationsIncludesResponse *SOAP_FMAC4
soap_in_ns1__getInvestigationsIncludesResponse(
    struct soap *, const char *, ns1__getInvestigationsIncludesResponse *,
    const char *);

#ifndef soap_write_ns1__getInvestigationsIncludesResponse
#define soap_write_ns1__getInvestigationsIncludesResponse(soap, data)          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:getInvestigationsIncludesResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationsIncludesResponse *SOAP_FMAC4
soap_get_ns1__getInvestigationsIncludesResponse(
    struct soap *, ns1__getInvestigationsIncludesResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__getInvestigationsIncludesResponse
#define soap_read_ns1__getInvestigationsIncludesResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getInvestigationsIncludesResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getInvestigationsIncludesResponse *SOAP_FMAC2
soap_instantiate_ns1__getInvestigationsIncludesResponse(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline ns1__getInvestigationsIncludesResponse *
soap_new_ns1__getInvestigationsIncludesResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getInvestigationsIncludesResponse(soap, n, NULL,
                                                                 NULL, NULL);
}

inline ns1__getInvestigationsIncludesResponse *
soap_new_req_ns1__getInvestigationsIncludesResponse(struct soap *soap) {
  ns1__getInvestigationsIncludesResponse *_p =
      soap_instantiate_ns1__getInvestigationsIncludesResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getInvestigationsIncludesResponse *
soap_new_set_ns1__getInvestigationsIncludesResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__getInvestigationsIncludesResponse *_p =
      soap_instantiate_ns1__getInvestigationsIncludesResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getInvestigationsIncludesResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getInvestigationsIncludesResponse(
    struct soap *soap, ns1__getInvestigationsIncludesResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getInvestigationsIncludesResponse(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getInvestigationsIncludes
#define SOAP_TYPE_ICat3_ns1__getInvestigationsIncludes (190)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getInvestigationsIncludes(struct soap *, const char *, int,
                                        const ns1__getInvestigationsIncludes *,
                                        const char *);
SOAP_FMAC3 ns1__getInvestigationsIncludes *SOAP_FMAC4
soap_in_ns1__getInvestigationsIncludes(struct soap *, const char *,
                                       ns1__getInvestigationsIncludes *,
                                       const char *);

#ifndef soap_write_ns1__getInvestigationsIncludes
#define soap_write_ns1__getInvestigationsIncludes(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getInvestigationsIncludes", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationsIncludes *SOAP_FMAC4
soap_get_ns1__getInvestigationsIncludes(struct soap *,
                                        ns1__getInvestigationsIncludes *,
                                        const char *, const char *);

#ifndef soap_read_ns1__getInvestigationsIncludes
#define soap_read_ns1__getInvestigationsIncludes(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getInvestigationsIncludes(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getInvestigationsIncludes *SOAP_FMAC2
soap_instantiate_ns1__getInvestigationsIncludes(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__getInvestigationsIncludes *
soap_new_ns1__getInvestigationsIncludes(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getInvestigationsIncludes(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__getInvestigationsIncludes *
soap_new_req_ns1__getInvestigationsIncludes(struct soap *soap) {
  ns1__getInvestigationsIncludes *_p =
      soap_instantiate_ns1__getInvestigationsIncludes(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getInvestigationsIncludes *
soap_new_set_ns1__getInvestigationsIncludes(
    struct soap *soap, std::string *userId,
    std::vector<LONG64> &investigationIds,
    enum ns1__investigationInclude *investigationInclude, char *__item1) {
  ns1__getInvestigationsIncludes *_p =
      soap_instantiate_ns1__getInvestigationsIncludes(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getInvestigationsIncludes::userId = userId;
    _p->ns1__getInvestigationsIncludes::investigationIds = investigationIds;
    _p->ns1__getInvestigationsIncludes::investigationInclude =
        investigationInclude;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getInvestigationsIncludes(struct soap *soap,
                                           ns1__getInvestigationsIncludes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getInvestigationsIncludes(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByParameterResponse
#define SOAP_TYPE_ICat3_ns1__searchSampleByParameterResponse (189)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchSampleByParameterResponse(
    struct soap *, const char *, int,
    const ns1__searchSampleByParameterResponse *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterResponse *SOAP_FMAC4
soap_in_ns1__searchSampleByParameterResponse(
    struct soap *, const char *, ns1__searchSampleByParameterResponse *,
    const char *);

#ifndef soap_write_ns1__searchSampleByParameterResponse
#define soap_write_ns1__searchSampleByParameterResponse(soap, data)            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSampleByParameterResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterResponse *SOAP_FMAC4
soap_get_ns1__searchSampleByParameterResponse(
    struct soap *, ns1__searchSampleByParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchSampleByParameterResponse
#define soap_read_ns1__searchSampleByParameterResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByParameterResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByParameterResponse(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline ns1__searchSampleByParameterResponse *
soap_new_ns1__searchSampleByParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchSampleByParameterResponse(soap, n, NULL,
                                                               NULL, NULL);
}

inline ns1__searchSampleByParameterResponse *
soap_new_req_ns1__searchSampleByParameterResponse(struct soap *soap) {
  ns1__searchSampleByParameterResponse *_p =
      soap_instantiate_ns1__searchSampleByParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByParameterResponse *
soap_new_set_ns1__searchSampleByParameterResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchSampleByParameterResponse *_p =
      soap_instantiate_ns1__searchSampleByParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByParameterResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByParameterResponse(
    struct soap *soap, ns1__searchSampleByParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByParameterResponse(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByParameter
#define SOAP_TYPE_ICat3_ns1__searchSampleByParameter (188)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchSampleByParameter(struct soap *, const char *, int,
                                      const ns1__searchSampleByParameter *,
                                      const char *);
SOAP_FMAC3 ns1__searchSampleByParameter *SOAP_FMAC4
soap_in_ns1__searchSampleByParameter(struct soap *, const char *,
                                     ns1__searchSampleByParameter *,
                                     const char *);

#ifndef soap_write_ns1__searchSampleByParameter
#define soap_write_ns1__searchSampleByParameter(soap, data)                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSampleByParameter", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameter *SOAP_FMAC4
soap_get_ns1__searchSampleByParameter(struct soap *,
                                      ns1__searchSampleByParameter *,
                                      const char *, const char *);

#ifndef soap_read_ns1__searchSampleByParameter
#define soap_read_ns1__searchSampleByParameter(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByParameter(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByParameter *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByParameter(struct soap *, int, const char *,
                                              const char *, size_t *);

inline ns1__searchSampleByParameter *
soap_new_ns1__searchSampleByParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchSampleByParameter(soap, n, NULL, NULL,
                                                       NULL);
}

inline ns1__searchSampleByParameter *
soap_new_req_ns1__searchSampleByParameter(struct soap *soap) {
  ns1__searchSampleByParameter *_p =
      soap_instantiate_ns1__searchSampleByParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByParameter *soap_new_set_ns1__searchSampleByParameter(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__parameterSearch *> &parameters, char *__item1) {
  ns1__searchSampleByParameter *_p =
      soap_instantiate_ns1__searchSampleByParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByParameter::sessionId = sessionId;
    _p->ns1__searchSampleByParameter::parameters = parameters;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchSampleByParameter(struct soap *soap,
                                         ns1__searchSampleByParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByParameter(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByParameterConditionResponse
#define SOAP_TYPE_ICat3_ns1__searchDatasetByParameterConditionResponse (187)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatasetByParameterConditionResponse(
    struct soap *, const char *, int,
    const ns1__searchDatasetByParameterConditionResponse *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterConditionResponse *SOAP_FMAC4
soap_in_ns1__searchDatasetByParameterConditionResponse(
    struct soap *, const char *,
    ns1__searchDatasetByParameterConditionResponse *, const char *);

#ifndef soap_write_ns1__searchDatasetByParameterConditionResponse
#define soap_write_ns1__searchDatasetByParameterConditionResponse(soap, data)  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatasetByParameterConditionResponse", \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterConditionResponse *SOAP_FMAC4
soap_get_ns1__searchDatasetByParameterConditionResponse(
    struct soap *, ns1__searchDatasetByParameterConditionResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchDatasetByParameterConditionResponse
#define soap_read_ns1__searchDatasetByParameterConditionResponse(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByParameterConditionResponse(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByParameterConditionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByParameterConditionResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchDatasetByParameterConditionResponse *
soap_new_ns1__searchDatasetByParameterConditionResponse(struct soap *soap,
                                                        int n = -1) {
  return soap_instantiate_ns1__searchDatasetByParameterConditionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatasetByParameterConditionResponse *
soap_new_req_ns1__searchDatasetByParameterConditionResponse(struct soap *soap) {
  ns1__searchDatasetByParameterConditionResponse *_p =
      soap_instantiate_ns1__searchDatasetByParameterConditionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByParameterConditionResponse *
soap_new_set_ns1__searchDatasetByParameterConditionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatasetByParameterConditionResponse *_p =
      soap_instantiate_ns1__searchDatasetByParameterConditionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByParameterConditionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByParameterConditionResponse(
    struct soap *soap, ns1__searchDatasetByParameterConditionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByParameterConditionResponse(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByParameterCondition
#define SOAP_TYPE_ICat3_ns1__searchDatasetByParameterCondition (186)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatasetByParameterCondition(
    struct soap *, const char *, int,
    const ns1__searchDatasetByParameterCondition *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterCondition *SOAP_FMAC4
soap_in_ns1__searchDatasetByParameterCondition(
    struct soap *, const char *, ns1__searchDatasetByParameterCondition *,
    const char *);

#ifndef soap_write_ns1__searchDatasetByParameterCondition
#define soap_write_ns1__searchDatasetByParameterCondition(soap, data)          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchDatasetByParameterCondition", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterCondition *SOAP_FMAC4
soap_get_ns1__searchDatasetByParameterCondition(
    struct soap *, ns1__searchDatasetByParameterCondition *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatasetByParameterCondition
#define soap_read_ns1__searchDatasetByParameterCondition(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByParameterCondition(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByParameterCondition *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByParameterCondition(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline ns1__searchDatasetByParameterCondition *
soap_new_ns1__searchDatasetByParameterCondition(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatasetByParameterCondition(soap, n, NULL,
                                                                 NULL, NULL);
}

inline ns1__searchDatasetByParameterCondition *
soap_new_req_ns1__searchDatasetByParameterCondition(struct soap *soap) {
  ns1__searchDatasetByParameterCondition *_p =
      soap_instantiate_ns1__searchDatasetByParameterCondition(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByParameterCondition *
soap_new_set_ns1__searchDatasetByParameterCondition(
    struct soap *soap, std::string *sessionId,
    ns1__parameterCondition *logicalCondition, char *__item1) {
  ns1__searchDatasetByParameterCondition *_p =
      soap_instantiate_ns1__searchDatasetByParameterCondition(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByParameterCondition::sessionId = sessionId;
    _p->ns1__searchDatasetByParameterCondition::logicalCondition =
        logicalCondition;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByParameterCondition(
    struct soap *soap, ns1__searchDatasetByParameterCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByParameterCondition(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeDataFileParameterResponse
#define SOAP_TYPE_ICat3_ns1__removeDataFileParameterResponse (185)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__removeDataFileParameterResponse(
    struct soap *, const char *, int,
    const ns1__removeDataFileParameterResponse *, const char *);
SOAP_FMAC3 ns1__removeDataFileParameterResponse *SOAP_FMAC4
soap_in_ns1__removeDataFileParameterResponse(
    struct soap *, const char *, ns1__removeDataFileParameterResponse *,
    const char *);

#ifndef soap_write_ns1__removeDataFileParameterResponse
#define soap_write_ns1__removeDataFileParameterResponse(soap, data)            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeDataFileParameterResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataFileParameterResponse *SOAP_FMAC4
soap_get_ns1__removeDataFileParameterResponse(
    struct soap *, ns1__removeDataFileParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__removeDataFileParameterResponse
#define soap_read_ns1__removeDataFileParameterResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeDataFileParameterResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeDataFileParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__removeDataFileParameterResponse(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline ns1__removeDataFileParameterResponse *
soap_new_ns1__removeDataFileParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeDataFileParameterResponse(soap, n, NULL,
                                                               NULL, NULL);
}

inline ns1__removeDataFileParameterResponse *
soap_new_req_ns1__removeDataFileParameterResponse(struct soap *soap) {
  ns1__removeDataFileParameterResponse *_p =
      soap_instantiate_ns1__removeDataFileParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeDataFileParameterResponse *
soap_new_set_ns1__removeDataFileParameterResponse(struct soap *soap,
                                                  char *__item1) {
  ns1__removeDataFileParameterResponse *_p =
      soap_instantiate_ns1__removeDataFileParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeDataFileParameterResponse(
    struct soap *soap, ns1__removeDataFileParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeDataFileParameterResponse(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeDataFileParameter
#define SOAP_TYPE_ICat3_ns1__removeDataFileParameter (184)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeDataFileParameter(struct soap *, const char *, int,
                                      const ns1__removeDataFileParameter *,
                                      const char *);
SOAP_FMAC3 ns1__removeDataFileParameter *SOAP_FMAC4
soap_in_ns1__removeDataFileParameter(struct soap *, const char *,
                                     ns1__removeDataFileParameter *,
                                     const char *);

#ifndef soap_write_ns1__removeDataFileParameter
#define soap_write_ns1__removeDataFileParameter(soap, data)                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeDataFileParameter", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataFileParameter *SOAP_FMAC4
soap_get_ns1__removeDataFileParameter(struct soap *,
                                      ns1__removeDataFileParameter *,
                                      const char *, const char *);

#ifndef soap_read_ns1__removeDataFileParameter
#define soap_read_ns1__removeDataFileParameter(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeDataFileParameter(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeDataFileParameter *SOAP_FMAC2
soap_instantiate_ns1__removeDataFileParameter(struct soap *, int, const char *,
                                              const char *, size_t *);

inline ns1__removeDataFileParameter *
soap_new_ns1__removeDataFileParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeDataFileParameter(soap, n, NULL, NULL,
                                                       NULL);
}

inline ns1__removeDataFileParameter *
soap_new_req_ns1__removeDataFileParameter(struct soap *soap) {
  ns1__removeDataFileParameter *_p =
      soap_instantiate_ns1__removeDataFileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeDataFileParameter *soap_new_set_ns1__removeDataFileParameter(
    struct soap *soap, std::string *sessionId,
    ns1__datafileParameterPK *datafileParameterPK, char *__item1) {
  ns1__removeDataFileParameter *_p =
      soap_instantiate_ns1__removeDataFileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__removeDataFileParameter::sessionId = sessionId;
    _p->ns1__removeDataFileParameter::datafileParameterPK = datafileParameterPK;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__removeDataFileParameter(struct soap *soap,
                                         ns1__removeDataFileParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeDataFileParameter(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByParameterLogicalResponse
#define SOAP_TYPE_ICat3_ns1__searchDatasetByParameterLogicalResponse (183)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatasetByParameterLogicalResponse(
    struct soap *, const char *, int,
    const ns1__searchDatasetByParameterLogicalResponse *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterLogicalResponse *SOAP_FMAC4
soap_in_ns1__searchDatasetByParameterLogicalResponse(
    struct soap *, const char *, ns1__searchDatasetByParameterLogicalResponse *,
    const char *);

#ifndef soap_write_ns1__searchDatasetByParameterLogicalResponse
#define soap_write_ns1__searchDatasetByParameterLogicalResponse(soap, data)    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatasetByParameterLogicalResponse",   \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterLogicalResponse *SOAP_FMAC4
soap_get_ns1__searchDatasetByParameterLogicalResponse(
    struct soap *, ns1__searchDatasetByParameterLogicalResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatasetByParameterLogicalResponse
#define soap_read_ns1__searchDatasetByParameterLogicalResponse(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByParameterLogicalResponse(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByParameterLogicalResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByParameterLogicalResponse(struct soap *,
                                                              int, const char *,
                                                              const char *,
                                                              size_t *);

inline ns1__searchDatasetByParameterLogicalResponse *
soap_new_ns1__searchDatasetByParameterLogicalResponse(struct soap *soap,
                                                      int n = -1) {
  return soap_instantiate_ns1__searchDatasetByParameterLogicalResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatasetByParameterLogicalResponse *
soap_new_req_ns1__searchDatasetByParameterLogicalResponse(struct soap *soap) {
  ns1__searchDatasetByParameterLogicalResponse *_p =
      soap_instantiate_ns1__searchDatasetByParameterLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByParameterLogicalResponse *
soap_new_set_ns1__searchDatasetByParameterLogicalResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatasetByParameterLogicalResponse *_p =
      soap_instantiate_ns1__searchDatasetByParameterLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByParameterLogicalResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByParameterLogicalResponse(
    struct soap *soap, ns1__searchDatasetByParameterLogicalResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByParameterLogicalResponse(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByParameterLogical
#define SOAP_TYPE_ICat3_ns1__searchDatasetByParameterLogical (182)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatasetByParameterLogical(
    struct soap *, const char *, int,
    const ns1__searchDatasetByParameterLogical *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterLogical *SOAP_FMAC4
soap_in_ns1__searchDatasetByParameterLogical(
    struct soap *, const char *, ns1__searchDatasetByParameterLogical *,
    const char *);

#ifndef soap_write_ns1__searchDatasetByParameterLogical
#define soap_write_ns1__searchDatasetByParameterLogical(soap, data)            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatasetByParameterLogical", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterLogical *SOAP_FMAC4
soap_get_ns1__searchDatasetByParameterLogical(
    struct soap *, ns1__searchDatasetByParameterLogical *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatasetByParameterLogical
#define soap_read_ns1__searchDatasetByParameterLogical(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByParameterLogical(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByParameterLogical *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByParameterLogical(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline ns1__searchDatasetByParameterLogical *
soap_new_ns1__searchDatasetByParameterLogical(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatasetByParameterLogical(soap, n, NULL,
                                                               NULL, NULL);
}

inline ns1__searchDatasetByParameterLogical *
soap_new_req_ns1__searchDatasetByParameterLogical(struct soap *soap) {
  ns1__searchDatasetByParameterLogical *_p =
      soap_instantiate_ns1__searchDatasetByParameterLogical(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByParameterLogical *
soap_new_set_ns1__searchDatasetByParameterLogical(
    struct soap *soap, std::string *sessionId,
    ns1__parameterLogicalCondition *logicalCondition, char *__item1) {
  ns1__searchDatasetByParameterLogical *_p =
      soap_instantiate_ns1__searchDatasetByParameterLogical(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByParameterLogical::sessionId = sessionId;
    _p->ns1__searchDatasetByParameterLogical::logicalCondition =
        logicalCondition;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByParameterLogical(
    struct soap *soap, ns1__searchDatasetByParameterLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByParameterLogical(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByUserIDPaginationResponse
#define SOAP_TYPE_ICat3_ns1__searchByUserIDPaginationResponse (181)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchByUserIDPaginationResponse(
    struct soap *, const char *, int,
    const ns1__searchByUserIDPaginationResponse *, const char *);
SOAP_FMAC3 ns1__searchByUserIDPaginationResponse *SOAP_FMAC4
soap_in_ns1__searchByUserIDPaginationResponse(
    struct soap *, const char *, ns1__searchByUserIDPaginationResponse *,
    const char *);

#ifndef soap_write_ns1__searchByUserIDPaginationResponse
#define soap_write_ns1__searchByUserIDPaginationResponse(soap, data)           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByUserIDPaginationResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserIDPaginationResponse *SOAP_FMAC4
soap_get_ns1__searchByUserIDPaginationResponse(
    struct soap *, ns1__searchByUserIDPaginationResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchByUserIDPaginationResponse
#define soap_read_ns1__searchByUserIDPaginationResponse(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByUserIDPaginationResponse(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByUserIDPaginationResponse *SOAP_FMAC2
soap_instantiate_ns1__searchByUserIDPaginationResponse(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline ns1__searchByUserIDPaginationResponse *
soap_new_ns1__searchByUserIDPaginationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByUserIDPaginationResponse(soap, n, NULL,
                                                                NULL, NULL);
}

inline ns1__searchByUserIDPaginationResponse *
soap_new_req_ns1__searchByUserIDPaginationResponse(struct soap *soap) {
  ns1__searchByUserIDPaginationResponse *_p =
      soap_instantiate_ns1__searchByUserIDPaginationResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByUserIDPaginationResponse *
soap_new_set_ns1__searchByUserIDPaginationResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__searchByUserIDPaginationResponse *_p =
      soap_instantiate_ns1__searchByUserIDPaginationResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByUserIDPaginationResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByUserIDPaginationResponse(
    struct soap *soap, ns1__searchByUserIDPaginationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByUserIDPaginationResponse(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByUserIDPagination
#define SOAP_TYPE_ICat3_ns1__searchByUserIDPagination (180)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchByUserIDPagination(struct soap *, const char *, int,
                                       const ns1__searchByUserIDPagination *,
                                       const char *);
SOAP_FMAC3 ns1__searchByUserIDPagination *SOAP_FMAC4
soap_in_ns1__searchByUserIDPagination(struct soap *, const char *,
                                      ns1__searchByUserIDPagination *,
                                      const char *);

#ifndef soap_write_ns1__searchByUserIDPagination
#define soap_write_ns1__searchByUserIDPagination(soap, data)                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByUserIDPagination", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserIDPagination *SOAP_FMAC4
soap_get_ns1__searchByUserIDPagination(struct soap *,
                                       ns1__searchByUserIDPagination *,
                                       const char *, const char *);

#ifndef soap_read_ns1__searchByUserIDPagination
#define soap_read_ns1__searchByUserIDPagination(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByUserIDPagination(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByUserIDPagination *SOAP_FMAC2
soap_instantiate_ns1__searchByUserIDPagination(struct soap *, int, const char *,
                                               const char *, size_t *);

inline ns1__searchByUserIDPagination *
soap_new_ns1__searchByUserIDPagination(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByUserIDPagination(soap, n, NULL, NULL,
                                                        NULL);
}

inline ns1__searchByUserIDPagination *
soap_new_req_ns1__searchByUserIDPagination(struct soap *soap, int startIndex,
                                           int numberOfResults) {
  ns1__searchByUserIDPagination *_p =
      soap_instantiate_ns1__searchByUserIDPagination(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByUserIDPagination::startIndex = startIndex;
    _p->ns1__searchByUserIDPagination::numberOfResults = numberOfResults;
  }
  return _p;
}

inline ns1__searchByUserIDPagination *
soap_new_set_ns1__searchByUserIDPagination(struct soap *soap,
                                           std::string *sessionId,
                                           std::string *userSearch,
                                           int startIndex, int numberOfResults,
                                           char *__item1) {
  ns1__searchByUserIDPagination *_p =
      soap_instantiate_ns1__searchByUserIDPagination(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByUserIDPagination::sessionId = sessionId;
    _p->ns1__searchByUserIDPagination::userSearch = userSearch;
    _p->ns1__searchByUserIDPagination::startIndex = startIndex;
    _p->ns1__searchByUserIDPagination::numberOfResults = numberOfResults;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchByUserIDPagination(struct soap *soap,
                                          ns1__searchByUserIDPagination *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByUserIDPagination(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByUserIDResponse
#define SOAP_TYPE_ICat3_ns1__searchByUserIDResponse (179)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchByUserIDResponse(struct soap *, const char *, int,
                                     const ns1__searchByUserIDResponse *,
                                     const char *);
SOAP_FMAC3 ns1__searchByUserIDResponse *SOAP_FMAC4
soap_in_ns1__searchByUserIDResponse(struct soap *, const char *,
                                    ns1__searchByUserIDResponse *,
                                    const char *);

#ifndef soap_write_ns1__searchByUserIDResponse
#define soap_write_ns1__searchByUserIDResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByUserIDResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserIDResponse *SOAP_FMAC4
soap_get_ns1__searchByUserIDResponse(struct soap *,
                                     ns1__searchByUserIDResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns1__searchByUserIDResponse
#define soap_read_ns1__searchByUserIDResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByUserIDResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByUserIDResponse *SOAP_FMAC2
soap_instantiate_ns1__searchByUserIDResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__searchByUserIDResponse *
soap_new_ns1__searchByUserIDResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByUserIDResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__searchByUserIDResponse *
soap_new_req_ns1__searchByUserIDResponse(struct soap *soap) {
  ns1__searchByUserIDResponse *_p =
      soap_instantiate_ns1__searchByUserIDResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByUserIDResponse *soap_new_set_ns1__searchByUserIDResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__searchByUserIDResponse *_p =
      soap_instantiate_ns1__searchByUserIDResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByUserIDResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchByUserIDResponse(struct soap *soap,
                                        ns1__searchByUserIDResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByUserIDResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByUserID
#define SOAP_TYPE_ICat3_ns1__searchByUserID (178)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchByUserID(struct soap *, const char *, int,
                             const ns1__searchByUserID *, const char *);
SOAP_FMAC3 ns1__searchByUserID *SOAP_FMAC4
soap_in_ns1__searchByUserID(struct soap *, const char *, ns1__searchByUserID *,
                            const char *);

#ifndef soap_write_ns1__searchByUserID
#define soap_write_ns1__searchByUserID(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByUserID", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserID *SOAP_FMAC4
soap_get_ns1__searchByUserID(struct soap *, ns1__searchByUserID *, const char *,
                             const char *);

#ifndef soap_read_ns1__searchByUserID
#define soap_read_ns1__searchByUserID(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByUserID(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByUserID *SOAP_FMAC2
soap_instantiate_ns1__searchByUserID(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__searchByUserID *soap_new_ns1__searchByUserID(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__searchByUserID(soap, n, NULL, NULL, NULL);
}

inline ns1__searchByUserID *
soap_new_req_ns1__searchByUserID(struct soap *soap) {
  ns1__searchByUserID *_p =
      soap_instantiate_ns1__searchByUserID(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByUserID *
soap_new_set_ns1__searchByUserID(struct soap *soap, std::string *sessionId,
                                 std::string *userSearch, char *__item1) {
  ns1__searchByUserID *_p =
      soap_instantiate_ns1__searchByUserID(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByUserID::sessionId = sessionId;
    _p->ns1__searchByUserID::userSearch = userSearch;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByUserID(struct soap *soap,
                                            ns1__searchByUserID *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__searchByUserID(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyPublicationResponse
#define SOAP_TYPE_ICat3_ns1__modifyPublicationResponse (177)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifyPublicationResponse(struct soap *, const char *, int,
                                        const ns1__modifyPublicationResponse *,
                                        const char *);
SOAP_FMAC3 ns1__modifyPublicationResponse *SOAP_FMAC4
soap_in_ns1__modifyPublicationResponse(struct soap *, const char *,
                                       ns1__modifyPublicationResponse *,
                                       const char *);

#ifndef soap_write_ns1__modifyPublicationResponse
#define soap_write_ns1__modifyPublicationResponse(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyPublicationResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyPublicationResponse *SOAP_FMAC4
soap_get_ns1__modifyPublicationResponse(struct soap *,
                                        ns1__modifyPublicationResponse *,
                                        const char *, const char *);

#ifndef soap_read_ns1__modifyPublicationResponse
#define soap_read_ns1__modifyPublicationResponse(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyPublicationResponse(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyPublicationResponse *SOAP_FMAC2
soap_instantiate_ns1__modifyPublicationResponse(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__modifyPublicationResponse *
soap_new_ns1__modifyPublicationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyPublicationResponse(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__modifyPublicationResponse *
soap_new_req_ns1__modifyPublicationResponse(struct soap *soap) {
  ns1__modifyPublicationResponse *_p =
      soap_instantiate_ns1__modifyPublicationResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyPublicationResponse *
soap_new_set_ns1__modifyPublicationResponse(struct soap *soap, char *__item1) {
  ns1__modifyPublicationResponse *_p =
      soap_instantiate_ns1__modifyPublicationResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__modifyPublicationResponse(struct soap *soap,
                                           ns1__modifyPublicationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyPublicationResponse(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyPublication
#define SOAP_TYPE_ICat3_ns1__modifyPublication (176)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifyPublication(struct soap *, const char *, int,
                                const ns1__modifyPublication *, const char *);
SOAP_FMAC3 ns1__modifyPublication *SOAP_FMAC4
soap_in_ns1__modifyPublication(struct soap *, const char *,
                               ns1__modifyPublication *, const char *);

#ifndef soap_write_ns1__modifyPublication
#define soap_write_ns1__modifyPublication(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyPublication", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyPublication *SOAP_FMAC4
soap_get_ns1__modifyPublication(struct soap *, ns1__modifyPublication *,
                                const char *, const char *);

#ifndef soap_read_ns1__modifyPublication
#define soap_read_ns1__modifyPublication(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyPublication(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyPublication *SOAP_FMAC2
soap_instantiate_ns1__modifyPublication(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__modifyPublication *
soap_new_ns1__modifyPublication(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyPublication(soap, n, NULL, NULL, NULL);
}

inline ns1__modifyPublication *
soap_new_req_ns1__modifyPublication(struct soap *soap) {
  ns1__modifyPublication *_p =
      soap_instantiate_ns1__modifyPublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyPublication *
soap_new_set_ns1__modifyPublication(struct soap *soap, std::string *sessionId,
                                    ns1__publication *publication,
                                    char *__item1) {
  ns1__modifyPublication *_p =
      soap_instantiate_ns1__modifyPublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__modifyPublication::sessionId = sessionId;
    _p->ns1__modifyPublication::publication = publication;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__modifyPublication(struct soap *soap,
                                               ns1__modifyPublication *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyPublication(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterRestrictionResponse
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterRestrictionResponse \
  (175)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchInvestigationByParameterRestrictionResponse(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByParameterRestrictionResponse *,
    const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterRestrictionResponse *SOAP_FMAC4
soap_in_ns1__searchInvestigationByParameterRestrictionResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterRestrictionResponse *, const char *);

#ifndef soap_write_ns1__searchInvestigationByParameterRestrictionResponse
#define soap_write_ns1__searchInvestigationByParameterRestrictionResponse(     \
    soap, data)                                                                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchInvestigationByParameterRestrictionResponse",      \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterRestrictionResponse *SOAP_FMAC4
soap_get_ns1__searchInvestigationByParameterRestrictionResponse(
    struct soap *, ns1__searchInvestigationByParameterRestrictionResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchInvestigationByParameterRestrictionResponse
#define soap_read_ns1__searchInvestigationByParameterRestrictionResponse(soap, \
                                                                         data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_ns1__searchInvestigationByParameterRestrictionResponse(    \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByParameterRestrictionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByParameterRestrictionResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchInvestigationByParameterRestrictionResponse *
soap_new_ns1__searchInvestigationByParameterRestrictionResponse(
    struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByParameterRestrictionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByParameterRestrictionResponse *
soap_new_req_ns1__searchInvestigationByParameterRestrictionResponse(
    struct soap *soap) {
  ns1__searchInvestigationByParameterRestrictionResponse *_p =
      soap_instantiate_ns1__searchInvestigationByParameterRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByParameterRestrictionResponse *
soap_new_set_ns1__searchInvestigationByParameterRestrictionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchInvestigationByParameterRestrictionResponse *_p =
      soap_instantiate_ns1__searchInvestigationByParameterRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByParameterRestrictionResponse::return_ =
        return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByParameterRestrictionResponse(
    struct soap *soap,
    ns1__searchInvestigationByParameterRestrictionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByParameterRestrictionResponse(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterRestriction
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterRestriction (174)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchInvestigationByParameterRestriction(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByParameterRestriction *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterRestriction *SOAP_FMAC4
soap_in_ns1__searchInvestigationByParameterRestriction(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterRestriction *, const char *);

#ifndef soap_write_ns1__searchInvestigationByParameterRestriction
#define soap_write_ns1__searchInvestigationByParameterRestriction(soap, data)  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchInvestigationByParameterRestriction", \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterRestriction *SOAP_FMAC4
soap_get_ns1__searchInvestigationByParameterRestriction(
    struct soap *, ns1__searchInvestigationByParameterRestriction *,
    const char *, const char *);

#ifndef soap_read_ns1__searchInvestigationByParameterRestriction
#define soap_read_ns1__searchInvestigationByParameterRestriction(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByParameterRestriction(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByParameterRestriction *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByParameterRestriction(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchInvestigationByParameterRestriction *
soap_new_ns1__searchInvestigationByParameterRestriction(struct soap *soap,
                                                        int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByParameterRestriction(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByParameterRestriction *
soap_new_req_ns1__searchInvestigationByParameterRestriction(struct soap *soap) {
  ns1__searchInvestigationByParameterRestriction *_p =
      soap_instantiate_ns1__searchInvestigationByParameterRestriction(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByParameterRestriction *
soap_new_set_ns1__searchInvestigationByParameterRestriction(
    struct soap *soap, std::string *sessionId,
    ns1__parameterCondition *parameterCondition,
    ns1__restrictionCondition *restriction, char *__item1) {
  ns1__searchInvestigationByParameterRestriction *_p =
      soap_instantiate_ns1__searchInvestigationByParameterRestriction(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByParameterRestriction::sessionId = sessionId;
    _p->ns1__searchInvestigationByParameterRestriction::parameterCondition =
        parameterCondition;
    _p->ns1__searchInvestigationByParameterRestriction::restriction =
        restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByParameterRestriction(
    struct soap *soap, ns1__searchInvestigationByParameterRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByParameterRestriction(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByParameterConditionResponse
#define SOAP_TYPE_ICat3_ns1__searchSampleByParameterConditionResponse (173)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchSampleByParameterConditionResponse(
    struct soap *, const char *, int,
    const ns1__searchSampleByParameterConditionResponse *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterConditionResponse *SOAP_FMAC4
soap_in_ns1__searchSampleByParameterConditionResponse(
    struct soap *, const char *,
    ns1__searchSampleByParameterConditionResponse *, const char *);

#ifndef soap_write_ns1__searchSampleByParameterConditionResponse
#define soap_write_ns1__searchSampleByParameterConditionResponse(soap, data)   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSampleByParameterConditionResponse",  \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterConditionResponse *SOAP_FMAC4
soap_get_ns1__searchSampleByParameterConditionResponse(
    struct soap *, ns1__searchSampleByParameterConditionResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchSampleByParameterConditionResponse
#define soap_read_ns1__searchSampleByParameterConditionResponse(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByParameterConditionResponse(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByParameterConditionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByParameterConditionResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchSampleByParameterConditionResponse *
soap_new_ns1__searchSampleByParameterConditionResponse(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__searchSampleByParameterConditionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchSampleByParameterConditionResponse *
soap_new_req_ns1__searchSampleByParameterConditionResponse(struct soap *soap) {
  ns1__searchSampleByParameterConditionResponse *_p =
      soap_instantiate_ns1__searchSampleByParameterConditionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByParameterConditionResponse *
soap_new_set_ns1__searchSampleByParameterConditionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchSampleByParameterConditionResponse *_p =
      soap_instantiate_ns1__searchSampleByParameterConditionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByParameterConditionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByParameterConditionResponse(
    struct soap *soap, ns1__searchSampleByParameterConditionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByParameterConditionResponse(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByParameterCondition
#define SOAP_TYPE_ICat3_ns1__searchSampleByParameterCondition (172)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchSampleByParameterCondition(
    struct soap *, const char *, int,
    const ns1__searchSampleByParameterCondition *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterCondition *SOAP_FMAC4
soap_in_ns1__searchSampleByParameterCondition(
    struct soap *, const char *, ns1__searchSampleByParameterCondition *,
    const char *);

#ifndef soap_write_ns1__searchSampleByParameterCondition
#define soap_write_ns1__searchSampleByParameterCondition(soap, data)           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSampleByParameterCondition", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterCondition *SOAP_FMAC4
soap_get_ns1__searchSampleByParameterCondition(
    struct soap *, ns1__searchSampleByParameterCondition *, const char *,
    const char *);

#ifndef soap_read_ns1__searchSampleByParameterCondition
#define soap_read_ns1__searchSampleByParameterCondition(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByParameterCondition(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByParameterCondition *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByParameterCondition(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline ns1__searchSampleByParameterCondition *
soap_new_ns1__searchSampleByParameterCondition(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchSampleByParameterCondition(soap, n, NULL,
                                                                NULL, NULL);
}

inline ns1__searchSampleByParameterCondition *
soap_new_req_ns1__searchSampleByParameterCondition(struct soap *soap) {
  ns1__searchSampleByParameterCondition *_p =
      soap_instantiate_ns1__searchSampleByParameterCondition(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByParameterCondition *
soap_new_set_ns1__searchSampleByParameterCondition(
    struct soap *soap, std::string *sessionId,
    ns1__parameterCondition *logicalCondition, char *__item1) {
  ns1__searchSampleByParameterCondition *_p =
      soap_instantiate_ns1__searchSampleByParameterCondition(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByParameterCondition::sessionId = sessionId;
    _p->ns1__searchSampleByParameterCondition::logicalCondition =
        logicalCondition;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByParameterCondition(
    struct soap *soap, ns1__searchSampleByParameterCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByParameterCondition(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeDataSetParameterResponse
#define SOAP_TYPE_ICat3_ns1__removeDataSetParameterResponse (171)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__removeDataSetParameterResponse(
    struct soap *, const char *, int,
    const ns1__removeDataSetParameterResponse *, const char *);
SOAP_FMAC3 ns1__removeDataSetParameterResponse *SOAP_FMAC4
soap_in_ns1__removeDataSetParameterResponse(
    struct soap *, const char *, ns1__removeDataSetParameterResponse *,
    const char *);

#ifndef soap_write_ns1__removeDataSetParameterResponse
#define soap_write_ns1__removeDataSetParameterResponse(soap, data)             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeDataSetParameterResponse", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataSetParameterResponse *SOAP_FMAC4
soap_get_ns1__removeDataSetParameterResponse(
    struct soap *, ns1__removeDataSetParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__removeDataSetParameterResponse
#define soap_read_ns1__removeDataSetParameterResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeDataSetParameterResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeDataSetParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__removeDataSetParameterResponse(struct soap *, int,
                                                     const char *, const char *,
                                                     size_t *);

inline ns1__removeDataSetParameterResponse *
soap_new_ns1__removeDataSetParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeDataSetParameterResponse(soap, n, NULL,
                                                              NULL, NULL);
}

inline ns1__removeDataSetParameterResponse *
soap_new_req_ns1__removeDataSetParameterResponse(struct soap *soap) {
  ns1__removeDataSetParameterResponse *_p =
      soap_instantiate_ns1__removeDataSetParameterResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeDataSetParameterResponse *
soap_new_set_ns1__removeDataSetParameterResponse(struct soap *soap,
                                                 char *__item1) {
  ns1__removeDataSetParameterResponse *_p =
      soap_instantiate_ns1__removeDataSetParameterResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeDataSetParameterResponse(
    struct soap *soap, ns1__removeDataSetParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeDataSetParameterResponse(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeDataSetParameter
#define SOAP_TYPE_ICat3_ns1__removeDataSetParameter (170)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeDataSetParameter(struct soap *, const char *, int,
                                     const ns1__removeDataSetParameter *,
                                     const char *);
SOAP_FMAC3 ns1__removeDataSetParameter *SOAP_FMAC4
soap_in_ns1__removeDataSetParameter(struct soap *, const char *,
                                    ns1__removeDataSetParameter *,
                                    const char *);

#ifndef soap_write_ns1__removeDataSetParameter
#define soap_write_ns1__removeDataSetParameter(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeDataSetParameter", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataSetParameter *SOAP_FMAC4
soap_get_ns1__removeDataSetParameter(struct soap *,
                                     ns1__removeDataSetParameter *,
                                     const char *, const char *);

#ifndef soap_read_ns1__removeDataSetParameter
#define soap_read_ns1__removeDataSetParameter(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeDataSetParameter(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeDataSetParameter *SOAP_FMAC2
soap_instantiate_ns1__removeDataSetParameter(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__removeDataSetParameter *
soap_new_ns1__removeDataSetParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeDataSetParameter(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__removeDataSetParameter *
soap_new_req_ns1__removeDataSetParameter(struct soap *soap) {
  ns1__removeDataSetParameter *_p =
      soap_instantiate_ns1__removeDataSetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeDataSetParameter *soap_new_set_ns1__removeDataSetParameter(
    struct soap *soap, std::string *sessionId,
    ns1__datasetParameterPK *datasetParameterPK, char *__item1) {
  ns1__removeDataSetParameter *_p =
      soap_instantiate_ns1__removeDataSetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__removeDataSetParameter::sessionId = sessionId;
    _p->ns1__removeDataSetParameter::datasetParameterPK = datasetParameterPK;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__removeDataSetParameter(struct soap *soap,
                                        ns1__removeDataSetParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeDataSetParameter(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByParameterRestrictionResponse
#define SOAP_TYPE_ICat3_ns1__searchSampleByParameterRestrictionResponse (169)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchSampleByParameterRestrictionResponse(
    struct soap *, const char *, int,
    const ns1__searchSampleByParameterRestrictionResponse *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterRestrictionResponse *SOAP_FMAC4
soap_in_ns1__searchSampleByParameterRestrictionResponse(
    struct soap *, const char *,
    ns1__searchSampleByParameterRestrictionResponse *, const char *);

#ifndef soap_write_ns1__searchSampleByParameterRestrictionResponse
#define soap_write_ns1__searchSampleByParameterRestrictionResponse(soap, data) \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchSampleByParameterRestrictionResponse", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterRestrictionResponse *SOAP_FMAC4
soap_get_ns1__searchSampleByParameterRestrictionResponse(
    struct soap *, ns1__searchSampleByParameterRestrictionResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchSampleByParameterRestrictionResponse
#define soap_read_ns1__searchSampleByParameterRestrictionResponse(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByParameterRestrictionResponse(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByParameterRestrictionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByParameterRestrictionResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchSampleByParameterRestrictionResponse *
soap_new_ns1__searchSampleByParameterRestrictionResponse(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__searchSampleByParameterRestrictionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchSampleByParameterRestrictionResponse *
soap_new_req_ns1__searchSampleByParameterRestrictionResponse(
    struct soap *soap) {
  ns1__searchSampleByParameterRestrictionResponse *_p =
      soap_instantiate_ns1__searchSampleByParameterRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByParameterRestrictionResponse *
soap_new_set_ns1__searchSampleByParameterRestrictionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchSampleByParameterRestrictionResponse *_p =
      soap_instantiate_ns1__searchSampleByParameterRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByParameterRestrictionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByParameterRestrictionResponse(
    struct soap *soap, ns1__searchSampleByParameterRestrictionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByParameterRestrictionResponse(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByParameterRestriction
#define SOAP_TYPE_ICat3_ns1__searchSampleByParameterRestriction (168)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchSampleByParameterRestriction(
    struct soap *, const char *, int,
    const ns1__searchSampleByParameterRestriction *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterRestriction *SOAP_FMAC4
soap_in_ns1__searchSampleByParameterRestriction(
    struct soap *, const char *, ns1__searchSampleByParameterRestriction *,
    const char *);

#ifndef soap_write_ns1__searchSampleByParameterRestriction
#define soap_write_ns1__searchSampleByParameterRestriction(soap, data)         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchSampleByParameterRestriction", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterRestriction *SOAP_FMAC4
soap_get_ns1__searchSampleByParameterRestriction(
    struct soap *, ns1__searchSampleByParameterRestriction *, const char *,
    const char *);

#ifndef soap_read_ns1__searchSampleByParameterRestriction
#define soap_read_ns1__searchSampleByParameterRestriction(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByParameterRestriction(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByParameterRestriction *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByParameterRestriction(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline ns1__searchSampleByParameterRestriction *
soap_new_ns1__searchSampleByParameterRestriction(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate_ns1__searchSampleByParameterRestriction(soap, n, NULL,
                                                                  NULL, NULL);
}

inline ns1__searchSampleByParameterRestriction *
soap_new_req_ns1__searchSampleByParameterRestriction(struct soap *soap) {
  ns1__searchSampleByParameterRestriction *_p =
      soap_instantiate_ns1__searchSampleByParameterRestriction(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByParameterRestriction *
soap_new_set_ns1__searchSampleByParameterRestriction(
    struct soap *soap, std::string *sessionId,
    ns1__parameterCondition *parameterCondition,
    ns1__restrictionCondition *restrictions, char *__item1) {
  ns1__searchSampleByParameterRestriction *_p =
      soap_instantiate_ns1__searchSampleByParameterRestriction(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByParameterRestriction::sessionId = sessionId;
    _p->ns1__searchSampleByParameterRestriction::parameterCondition =
        parameterCondition;
    _p->ns1__searchSampleByParameterRestriction::restrictions = restrictions;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByParameterRestriction(
    struct soap *soap, ns1__searchSampleByParameterRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByParameterRestriction(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getMyInvestigationsIncludesPaginationResponse
#define SOAP_TYPE_ICat3_ns1__getMyInvestigationsIncludesPaginationResponse (167)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *, const char *, int,
    const ns1__getMyInvestigationsIncludesPaginationResponse *, const char *);
SOAP_FMAC3 ns1__getMyInvestigationsIncludesPaginationResponse *SOAP_FMAC4
soap_in_ns1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *, const char *,
    ns1__getMyInvestigationsIncludesPaginationResponse *, const char *);

#ifndef soap_write_ns1__getMyInvestigationsIncludesPaginationResponse
#define soap_write_ns1__getMyInvestigationsIncludesPaginationResponse(soap,    \
                                                                      data)    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:getMyInvestigationsIncludesPaginationResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigationsIncludesPaginationResponse *SOAP_FMAC4
soap_get_ns1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *, ns1__getMyInvestigationsIncludesPaginationResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__getMyInvestigationsIncludesPaginationResponse
#define soap_read_ns1__getMyInvestigationsIncludesPaginationResponse(soap,     \
                                                                     data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getMyInvestigationsIncludesPaginationResponse(    \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getMyInvestigationsIncludesPaginationResponse *SOAP_FMAC2
soap_instantiate_ns1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__getMyInvestigationsIncludesPaginationResponse *
soap_new_ns1__getMyInvestigationsIncludesPaginationResponse(struct soap *soap,
                                                            int n = -1) {
  return soap_instantiate_ns1__getMyInvestigationsIncludesPaginationResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__getMyInvestigationsIncludesPaginationResponse *
soap_new_req_ns1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *soap) {
  ns1__getMyInvestigationsIncludesPaginationResponse *_p =
      soap_instantiate_ns1__getMyInvestigationsIncludesPaginationResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getMyInvestigationsIncludesPaginationResponse *
soap_new_set_ns1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__getMyInvestigationsIncludesPaginationResponse *_p =
      soap_instantiate_ns1__getMyInvestigationsIncludesPaginationResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getMyInvestigationsIncludesPaginationResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *soap, ns1__getMyInvestigationsIncludesPaginationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getMyInvestigationsIncludesPagination
#define SOAP_TYPE_ICat3_ns1__getMyInvestigationsIncludesPagination (166)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getMyInvestigationsIncludesPagination(
    struct soap *, const char *, int,
    const ns1__getMyInvestigationsIncludesPagination *, const char *);
SOAP_FMAC3 ns1__getMyInvestigationsIncludesPagination *SOAP_FMAC4
soap_in_ns1__getMyInvestigationsIncludesPagination(
    struct soap *, const char *, ns1__getMyInvestigationsIncludesPagination *,
    const char *);

#ifndef soap_write_ns1__getMyInvestigationsIncludesPagination
#define soap_write_ns1__getMyInvestigationsIncludesPagination(soap, data)      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getMyInvestigationsIncludesPagination",     \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigationsIncludesPagination *SOAP_FMAC4
soap_get_ns1__getMyInvestigationsIncludesPagination(
    struct soap *, ns1__getMyInvestigationsIncludesPagination *, const char *,
    const char *);

#ifndef soap_read_ns1__getMyInvestigationsIncludesPagination
#define soap_read_ns1__getMyInvestigationsIncludesPagination(soap, data)       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getMyInvestigationsIncludesPagination(            \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getMyInvestigationsIncludesPagination *SOAP_FMAC2
soap_instantiate_ns1__getMyInvestigationsIncludesPagination(struct soap *, int,
                                                            const char *,
                                                            const char *,
                                                            size_t *);

inline ns1__getMyInvestigationsIncludesPagination *
soap_new_ns1__getMyInvestigationsIncludesPagination(struct soap *soap,
                                                    int n = -1) {
  return soap_instantiate_ns1__getMyInvestigationsIncludesPagination(
      soap, n, NULL, NULL, NULL);
}

inline ns1__getMyInvestigationsIncludesPagination *
soap_new_req_ns1__getMyInvestigationsIncludesPagination(struct soap *soap,
                                                        int startIndex,
                                                        int numberOfResults) {
  ns1__getMyInvestigationsIncludesPagination *_p =
      soap_instantiate_ns1__getMyInvestigationsIncludesPagination(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getMyInvestigationsIncludesPagination::startIndex = startIndex;
    _p->ns1__getMyInvestigationsIncludesPagination::numberOfResults =
        numberOfResults;
  }
  return _p;
}

inline ns1__getMyInvestigationsIncludesPagination *
soap_new_set_ns1__getMyInvestigationsIncludesPagination(
    struct soap *soap, std::string *sessionId,
    enum ns1__investigationInclude *investigationInclude, int startIndex,
    int numberOfResults, char *__item1) {
  ns1__getMyInvestigationsIncludesPagination *_p =
      soap_instantiate_ns1__getMyInvestigationsIncludesPagination(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getMyInvestigationsIncludesPagination::sessionId = sessionId;
    _p->ns1__getMyInvestigationsIncludesPagination::investigationInclude =
        investigationInclude;
    _p->ns1__getMyInvestigationsIncludesPagination::startIndex = startIndex;
    _p->ns1__getMyInvestigationsIncludesPagination::numberOfResults =
        numberOfResults;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getMyInvestigationsIncludesPagination(
    struct soap *soap, ns1__getMyInvestigationsIncludesPagination *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getMyInvestigationsIncludesPagination(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getMyInvestigationsIncludesResponse
#define SOAP_TYPE_ICat3_ns1__getMyInvestigationsIncludesResponse (165)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getMyInvestigationsIncludesResponse(
    struct soap *, const char *, int,
    const ns1__getMyInvestigationsIncludesResponse *, const char *);
SOAP_FMAC3 ns1__getMyInvestigationsIncludesResponse *SOAP_FMAC4
soap_in_ns1__getMyInvestigationsIncludesResponse(
    struct soap *, const char *, ns1__getMyInvestigationsIncludesResponse *,
    const char *);

#ifndef soap_write_ns1__getMyInvestigationsIncludesResponse
#define soap_write_ns1__getMyInvestigationsIncludesResponse(soap, data)        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getMyInvestigationsIncludesResponse",       \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigationsIncludesResponse *SOAP_FMAC4
soap_get_ns1__getMyInvestigationsIncludesResponse(
    struct soap *, ns1__getMyInvestigationsIncludesResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__getMyInvestigationsIncludesResponse
#define soap_read_ns1__getMyInvestigationsIncludesResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getMyInvestigationsIncludesResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getMyInvestigationsIncludesResponse *SOAP_FMAC2
soap_instantiate_ns1__getMyInvestigationsIncludesResponse(struct soap *, int,
                                                          const char *,
                                                          const char *,
                                                          size_t *);

inline ns1__getMyInvestigationsIncludesResponse *
soap_new_ns1__getMyInvestigationsIncludesResponse(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate_ns1__getMyInvestigationsIncludesResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__getMyInvestigationsIncludesResponse *
soap_new_req_ns1__getMyInvestigationsIncludesResponse(struct soap *soap) {
  ns1__getMyInvestigationsIncludesResponse *_p =
      soap_instantiate_ns1__getMyInvestigationsIncludesResponse(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getMyInvestigationsIncludesResponse *
soap_new_set_ns1__getMyInvestigationsIncludesResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__getMyInvestigationsIncludesResponse *_p =
      soap_instantiate_ns1__getMyInvestigationsIncludesResponse(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getMyInvestigationsIncludesResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getMyInvestigationsIncludesResponse(
    struct soap *soap, ns1__getMyInvestigationsIncludesResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getMyInvestigationsIncludesResponse(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getMyInvestigationsIncludes
#define SOAP_TYPE_ICat3_ns1__getMyInvestigationsIncludes (164)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getMyInvestigationsIncludes(
    struct soap *, const char *, int, const ns1__getMyInvestigationsIncludes *,
    const char *);
SOAP_FMAC3 ns1__getMyInvestigationsIncludes *SOAP_FMAC4
soap_in_ns1__getMyInvestigationsIncludes(struct soap *, const char *,
                                         ns1__getMyInvestigationsIncludes *,
                                         const char *);

#ifndef soap_write_ns1__getMyInvestigationsIncludes
#define soap_write_ns1__getMyInvestigationsIncludes(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getMyInvestigationsIncludes", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigationsIncludes *SOAP_FMAC4
soap_get_ns1__getMyInvestigationsIncludes(struct soap *,
                                          ns1__getMyInvestigationsIncludes *,
                                          const char *, const char *);

#ifndef soap_read_ns1__getMyInvestigationsIncludes
#define soap_read_ns1__getMyInvestigationsIncludes(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getMyInvestigationsIncludes(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getMyInvestigationsIncludes *SOAP_FMAC2
soap_instantiate_ns1__getMyInvestigationsIncludes(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__getMyInvestigationsIncludes *
soap_new_ns1__getMyInvestigationsIncludes(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getMyInvestigationsIncludes(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__getMyInvestigationsIncludes *
soap_new_req_ns1__getMyInvestigationsIncludes(struct soap *soap) {
  ns1__getMyInvestigationsIncludes *_p =
      soap_instantiate_ns1__getMyInvestigationsIncludes(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getMyInvestigationsIncludes *
soap_new_set_ns1__getMyInvestigationsIncludes(
    struct soap *soap, std::string *sessionId,
    enum ns1__investigationInclude *investigationInclude, char *__item1) {
  ns1__getMyInvestigationsIncludes *_p =
      soap_instantiate_ns1__getMyInvestigationsIncludes(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getMyInvestigationsIncludes::sessionId = sessionId;
    _p->ns1__getMyInvestigationsIncludes::investigationInclude =
        investigationInclude;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getMyInvestigationsIncludes(
    struct soap *soap, ns1__getMyInvestigationsIncludes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getMyInvestigationsIncludes(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getMyInvestigationsResponse
#define SOAP_TYPE_ICat3_ns1__getMyInvestigationsResponse (163)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getMyInvestigationsResponse(
    struct soap *, const char *, int, const ns1__getMyInvestigationsResponse *,
    const char *);
SOAP_FMAC3 ns1__getMyInvestigationsResponse *SOAP_FMAC4
soap_in_ns1__getMyInvestigationsResponse(struct soap *, const char *,
                                         ns1__getMyInvestigationsResponse *,
                                         const char *);

#ifndef soap_write_ns1__getMyInvestigationsResponse
#define soap_write_ns1__getMyInvestigationsResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getMyInvestigationsResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigationsResponse *SOAP_FMAC4
soap_get_ns1__getMyInvestigationsResponse(struct soap *,
                                          ns1__getMyInvestigationsResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__getMyInvestigationsResponse
#define soap_read_ns1__getMyInvestigationsResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getMyInvestigationsResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getMyInvestigationsResponse *SOAP_FMAC2
soap_instantiate_ns1__getMyInvestigationsResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__getMyInvestigationsResponse *
soap_new_ns1__getMyInvestigationsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getMyInvestigationsResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__getMyInvestigationsResponse *
soap_new_req_ns1__getMyInvestigationsResponse(struct soap *soap) {
  ns1__getMyInvestigationsResponse *_p =
      soap_instantiate_ns1__getMyInvestigationsResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getMyInvestigationsResponse *
soap_new_set_ns1__getMyInvestigationsResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__getMyInvestigationsResponse *_p =
      soap_instantiate_ns1__getMyInvestigationsResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getMyInvestigationsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getMyInvestigationsResponse(
    struct soap *soap, ns1__getMyInvestigationsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getMyInvestigationsResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getMyInvestigations
#define SOAP_TYPE_ICat3_ns1__getMyInvestigations (162)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getMyInvestigations(struct soap *, const char *, int,
                                  const ns1__getMyInvestigations *,
                                  const char *);
SOAP_FMAC3 ns1__getMyInvestigations *SOAP_FMAC4
soap_in_ns1__getMyInvestigations(struct soap *, const char *,
                                 ns1__getMyInvestigations *, const char *);

#ifndef soap_write_ns1__getMyInvestigations
#define soap_write_ns1__getMyInvestigations(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getMyInvestigations", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigations *SOAP_FMAC4
soap_get_ns1__getMyInvestigations(struct soap *, ns1__getMyInvestigations *,
                                  const char *, const char *);

#ifndef soap_read_ns1__getMyInvestigations
#define soap_read_ns1__getMyInvestigations(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getMyInvestigations(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getMyInvestigations *SOAP_FMAC2
soap_instantiate_ns1__getMyInvestigations(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__getMyInvestigations *
soap_new_ns1__getMyInvestigations(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getMyInvestigations(soap, n, NULL, NULL, NULL);
}

inline ns1__getMyInvestigations *
soap_new_req_ns1__getMyInvestigations(struct soap *soap) {
  ns1__getMyInvestigations *_p =
      soap_instantiate_ns1__getMyInvestigations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getMyInvestigations *
soap_new_set_ns1__getMyInvestigations(struct soap *soap, std::string *sessionId,
                                      char *__item1) {
  ns1__getMyInvestigations *_p =
      soap_instantiate_ns1__getMyInvestigations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getMyInvestigations::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getMyInvestigations(struct soap *soap,
                                                 ns1__getMyInvestigations *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getMyInvestigations(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByRestrictionLogicalResponse
#define SOAP_TYPE_ICat3_ns1__searchDatafileByRestrictionLogicalResponse (161)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatafileByRestrictionLogicalResponse(
    struct soap *, const char *, int,
    const ns1__searchDatafileByRestrictionLogicalResponse *, const char *);
SOAP_FMAC3 ns1__searchDatafileByRestrictionLogicalResponse *SOAP_FMAC4
soap_in_ns1__searchDatafileByRestrictionLogicalResponse(
    struct soap *, const char *,
    ns1__searchDatafileByRestrictionLogicalResponse *, const char *);

#ifndef soap_write_ns1__searchDatafileByRestrictionLogicalResponse
#define soap_write_ns1__searchDatafileByRestrictionLogicalResponse(soap, data) \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchDatafileByRestrictionLogicalResponse", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestrictionLogicalResponse *SOAP_FMAC4
soap_get_ns1__searchDatafileByRestrictionLogicalResponse(
    struct soap *, ns1__searchDatafileByRestrictionLogicalResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchDatafileByRestrictionLogicalResponse
#define soap_read_ns1__searchDatafileByRestrictionLogicalResponse(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByRestrictionLogicalResponse(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByRestrictionLogicalResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByRestrictionLogicalResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchDatafileByRestrictionLogicalResponse *
soap_new_ns1__searchDatafileByRestrictionLogicalResponse(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__searchDatafileByRestrictionLogicalResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatafileByRestrictionLogicalResponse *
soap_new_req_ns1__searchDatafileByRestrictionLogicalResponse(
    struct soap *soap) {
  ns1__searchDatafileByRestrictionLogicalResponse *_p =
      soap_instantiate_ns1__searchDatafileByRestrictionLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByRestrictionLogicalResponse *
soap_new_set_ns1__searchDatafileByRestrictionLogicalResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatafileByRestrictionLogicalResponse *_p =
      soap_instantiate_ns1__searchDatafileByRestrictionLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByRestrictionLogicalResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByRestrictionLogicalResponse(
    struct soap *soap, ns1__searchDatafileByRestrictionLogicalResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByRestrictionLogicalResponse(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByRestrictionLogical
#define SOAP_TYPE_ICat3_ns1__searchDatafileByRestrictionLogical (160)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatafileByRestrictionLogical(
    struct soap *, const char *, int,
    const ns1__searchDatafileByRestrictionLogical *, const char *);
SOAP_FMAC3 ns1__searchDatafileByRestrictionLogical *SOAP_FMAC4
soap_in_ns1__searchDatafileByRestrictionLogical(
    struct soap *, const char *, ns1__searchDatafileByRestrictionLogical *,
    const char *);

#ifndef soap_write_ns1__searchDatafileByRestrictionLogical
#define soap_write_ns1__searchDatafileByRestrictionLogical(soap, data)         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchDatafileByRestrictionLogical", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestrictionLogical *SOAP_FMAC4
soap_get_ns1__searchDatafileByRestrictionLogical(
    struct soap *, ns1__searchDatafileByRestrictionLogical *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatafileByRestrictionLogical
#define soap_read_ns1__searchDatafileByRestrictionLogical(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByRestrictionLogical(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByRestrictionLogical *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByRestrictionLogical(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline ns1__searchDatafileByRestrictionLogical *
soap_new_ns1__searchDatafileByRestrictionLogical(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate_ns1__searchDatafileByRestrictionLogical(soap, n, NULL,
                                                                  NULL, NULL);
}

inline ns1__searchDatafileByRestrictionLogical *
soap_new_req_ns1__searchDatafileByRestrictionLogical(struct soap *soap) {
  ns1__searchDatafileByRestrictionLogical *_p =
      soap_instantiate_ns1__searchDatafileByRestrictionLogical(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByRestrictionLogical *
soap_new_set_ns1__searchDatafileByRestrictionLogical(
    struct soap *soap, std::string *sessionId,
    ns1__restrictionLogicalCondition *restriction, char *__item1) {
  ns1__searchDatafileByRestrictionLogical *_p =
      soap_instantiate_ns1__searchDatafileByRestrictionLogical(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByRestrictionLogical::sessionId = sessionId;
    _p->ns1__searchDatafileByRestrictionLogical::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByRestrictionLogical(
    struct soap *soap, ns1__searchDatafileByRestrictionLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByRestrictionLogical(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getAllInstrumentsResponse
#define SOAP_TYPE_ICat3_ns1__getAllInstrumentsResponse (159)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getAllInstrumentsResponse(struct soap *, const char *, int,
                                        const ns1__getAllInstrumentsResponse *,
                                        const char *);
SOAP_FMAC3 ns1__getAllInstrumentsResponse *SOAP_FMAC4
soap_in_ns1__getAllInstrumentsResponse(struct soap *, const char *,
                                       ns1__getAllInstrumentsResponse *,
                                       const char *);

#ifndef soap_write_ns1__getAllInstrumentsResponse
#define soap_write_ns1__getAllInstrumentsResponse(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getAllInstrumentsResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAllInstrumentsResponse *SOAP_FMAC4
soap_get_ns1__getAllInstrumentsResponse(struct soap *,
                                        ns1__getAllInstrumentsResponse *,
                                        const char *, const char *);

#ifndef soap_read_ns1__getAllInstrumentsResponse
#define soap_read_ns1__getAllInstrumentsResponse(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getAllInstrumentsResponse(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getAllInstrumentsResponse *SOAP_FMAC2
soap_instantiate_ns1__getAllInstrumentsResponse(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__getAllInstrumentsResponse *
soap_new_ns1__getAllInstrumentsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getAllInstrumentsResponse(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__getAllInstrumentsResponse *
soap_new_req_ns1__getAllInstrumentsResponse(struct soap *soap) {
  ns1__getAllInstrumentsResponse *_p =
      soap_instantiate_ns1__getAllInstrumentsResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getAllInstrumentsResponse *
soap_new_set_ns1__getAllInstrumentsResponse(
    struct soap *soap, std::vector<ns1__instrument *> &return_, char *__item1) {
  ns1__getAllInstrumentsResponse *_p =
      soap_instantiate_ns1__getAllInstrumentsResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getAllInstrumentsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getAllInstrumentsResponse(struct soap *soap,
                                           ns1__getAllInstrumentsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getAllInstrumentsResponse(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getAllInstruments
#define SOAP_TYPE_ICat3_ns1__getAllInstruments (158)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getAllInstruments(struct soap *, const char *, int,
                                const ns1__getAllInstruments *, const char *);
SOAP_FMAC3 ns1__getAllInstruments *SOAP_FMAC4
soap_in_ns1__getAllInstruments(struct soap *, const char *,
                               ns1__getAllInstruments *, const char *);

#ifndef soap_write_ns1__getAllInstruments
#define soap_write_ns1__getAllInstruments(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getAllInstruments", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAllInstruments *SOAP_FMAC4
soap_get_ns1__getAllInstruments(struct soap *, ns1__getAllInstruments *,
                                const char *, const char *);

#ifndef soap_read_ns1__getAllInstruments
#define soap_read_ns1__getAllInstruments(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getAllInstruments(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getAllInstruments *SOAP_FMAC2
soap_instantiate_ns1__getAllInstruments(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__getAllInstruments *
soap_new_ns1__getAllInstruments(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getAllInstruments(soap, n, NULL, NULL, NULL);
}

inline ns1__getAllInstruments *
soap_new_req_ns1__getAllInstruments(struct soap *soap) {
  ns1__getAllInstruments *_p =
      soap_instantiate_ns1__getAllInstruments(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getAllInstruments *
soap_new_set_ns1__getAllInstruments(struct soap *soap, std::string *sessionId,
                                    char *__item1) {
  ns1__getAllInstruments *_p =
      soap_instantiate_ns1__getAllInstruments(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getAllInstruments::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getAllInstruments(struct soap *soap,
                                               ns1__getAllInstruments *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getAllInstruments(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByKeywordsAllResponse
#define SOAP_TYPE_ICat3_ns1__searchByKeywordsAllResponse (157)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchByKeywordsAllResponse(
    struct soap *, const char *, int, const ns1__searchByKeywordsAllResponse *,
    const char *);
SOAP_FMAC3 ns1__searchByKeywordsAllResponse *SOAP_FMAC4
soap_in_ns1__searchByKeywordsAllResponse(struct soap *, const char *,
                                         ns1__searchByKeywordsAllResponse *,
                                         const char *);

#ifndef soap_write_ns1__searchByKeywordsAllResponse
#define soap_write_ns1__searchByKeywordsAllResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByKeywordsAllResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByKeywordsAllResponse *SOAP_FMAC4
soap_get_ns1__searchByKeywordsAllResponse(struct soap *,
                                          ns1__searchByKeywordsAllResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__searchByKeywordsAllResponse
#define soap_read_ns1__searchByKeywordsAllResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByKeywordsAllResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByKeywordsAllResponse *SOAP_FMAC2
soap_instantiate_ns1__searchByKeywordsAllResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__searchByKeywordsAllResponse *
soap_new_ns1__searchByKeywordsAllResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByKeywordsAllResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__searchByKeywordsAllResponse *
soap_new_req_ns1__searchByKeywordsAllResponse(struct soap *soap) {
  ns1__searchByKeywordsAllResponse *_p =
      soap_instantiate_ns1__searchByKeywordsAllResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByKeywordsAllResponse *
soap_new_set_ns1__searchByKeywordsAllResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__searchByKeywordsAllResponse *_p =
      soap_instantiate_ns1__searchByKeywordsAllResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByKeywordsAllResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByKeywordsAllResponse(
    struct soap *soap, ns1__searchByKeywordsAllResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByKeywordsAllResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__keywordDetails
#define SOAP_TYPE_ICat3_ns1__keywordDetails (156)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__keywordDetails(struct soap *, const char *, int,
                             const ns1__keywordDetails *, const char *);
SOAP_FMAC3 ns1__keywordDetails *SOAP_FMAC4
soap_in_ns1__keywordDetails(struct soap *, const char *, ns1__keywordDetails *,
                            const char *);

#ifndef soap_write_ns1__keywordDetails
#define soap_write_ns1__keywordDetails(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:keywordDetails", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__keywordDetails *SOAP_FMAC4
soap_get_ns1__keywordDetails(struct soap *, ns1__keywordDetails *, const char *,
                             const char *);

#ifndef soap_read_ns1__keywordDetails
#define soap_read_ns1__keywordDetails(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__keywordDetails(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__keywordDetails *SOAP_FMAC2
soap_instantiate_ns1__keywordDetails(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__keywordDetails *soap_new_ns1__keywordDetails(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__keywordDetails(soap, n, NULL, NULL, NULL);
}

inline ns1__keywordDetails *
soap_new_req_ns1__keywordDetails(struct soap *soap, bool caseSensitive) {
  ns1__keywordDetails *_p =
      soap_instantiate_ns1__keywordDetails(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__keywordDetails::caseSensitive = caseSensitive;
  }
  return _p;
}

inline ns1__keywordDetails *soap_new_set_ns1__keywordDetails(
    struct soap *soap, bool caseSensitive,
    enum ns1__investigationInclude *investigationInclude,
    std::vector<std::string> &keywords, char *__item1) {
  ns1__keywordDetails *_p =
      soap_instantiate_ns1__keywordDetails(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__keywordDetails::caseSensitive = caseSensitive;
    _p->ns1__keywordDetails::investigationInclude = investigationInclude;
    _p->ns1__keywordDetails::keywords = keywords;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__keywordDetails(struct soap *soap,
                                            ns1__keywordDetails *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__keywordDetails(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByKeywordsAll
#define SOAP_TYPE_ICat3_ns1__searchByKeywordsAll (155)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchByKeywordsAll(struct soap *, const char *, int,
                                  const ns1__searchByKeywordsAll *,
                                  const char *);
SOAP_FMAC3 ns1__searchByKeywordsAll *SOAP_FMAC4
soap_in_ns1__searchByKeywordsAll(struct soap *, const char *,
                                 ns1__searchByKeywordsAll *, const char *);

#ifndef soap_write_ns1__searchByKeywordsAll
#define soap_write_ns1__searchByKeywordsAll(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByKeywordsAll", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByKeywordsAll *SOAP_FMAC4
soap_get_ns1__searchByKeywordsAll(struct soap *, ns1__searchByKeywordsAll *,
                                  const char *, const char *);

#ifndef soap_read_ns1__searchByKeywordsAll
#define soap_read_ns1__searchByKeywordsAll(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByKeywordsAll(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByKeywordsAll *SOAP_FMAC2
soap_instantiate_ns1__searchByKeywordsAll(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__searchByKeywordsAll *
soap_new_ns1__searchByKeywordsAll(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByKeywordsAll(soap, n, NULL, NULL, NULL);
}

inline ns1__searchByKeywordsAll *
soap_new_req_ns1__searchByKeywordsAll(struct soap *soap, int startIndex,
                                      int numberOfResults) {
  ns1__searchByKeywordsAll *_p =
      soap_instantiate_ns1__searchByKeywordsAll(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByKeywordsAll::startIndex = startIndex;
    _p->ns1__searchByKeywordsAll::numberOfResults = numberOfResults;
  }
  return _p;
}

inline ns1__searchByKeywordsAll *
soap_new_set_ns1__searchByKeywordsAll(struct soap *soap, std::string *sessionId,
                                      ns1__keywordDetails *keywordDetails,
                                      int startIndex, int numberOfResults,
                                      char *__item1) {
  ns1__searchByKeywordsAll *_p =
      soap_instantiate_ns1__searchByKeywordsAll(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByKeywordsAll::sessionId = sessionId;
    _p->ns1__searchByKeywordsAll::keywordDetails = keywordDetails;
    _p->ns1__searchByKeywordsAll::startIndex = startIndex;
    _p->ns1__searchByKeywordsAll::numberOfResults = numberOfResults;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByKeywordsAll(struct soap *soap,
                                                 ns1__searchByKeywordsAll *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByKeywordsAll(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByKeywordsResponse
#define SOAP_TYPE_ICat3_ns1__searchByKeywordsResponse (154)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchByKeywordsResponse(struct soap *, const char *, int,
                                       const ns1__searchByKeywordsResponse *,
                                       const char *);
SOAP_FMAC3 ns1__searchByKeywordsResponse *SOAP_FMAC4
soap_in_ns1__searchByKeywordsResponse(struct soap *, const char *,
                                      ns1__searchByKeywordsResponse *,
                                      const char *);

#ifndef soap_write_ns1__searchByKeywordsResponse
#define soap_write_ns1__searchByKeywordsResponse(soap, data)                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByKeywordsResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByKeywordsResponse *SOAP_FMAC4
soap_get_ns1__searchByKeywordsResponse(struct soap *,
                                       ns1__searchByKeywordsResponse *,
                                       const char *, const char *);

#ifndef soap_read_ns1__searchByKeywordsResponse
#define soap_read_ns1__searchByKeywordsResponse(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByKeywordsResponse(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByKeywordsResponse *SOAP_FMAC2
soap_instantiate_ns1__searchByKeywordsResponse(struct soap *, int, const char *,
                                               const char *, size_t *);

inline ns1__searchByKeywordsResponse *
soap_new_ns1__searchByKeywordsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByKeywordsResponse(soap, n, NULL, NULL,
                                                        NULL);
}

inline ns1__searchByKeywordsResponse *
soap_new_req_ns1__searchByKeywordsResponse(struct soap *soap) {
  ns1__searchByKeywordsResponse *_p =
      soap_instantiate_ns1__searchByKeywordsResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByKeywordsResponse *
soap_new_set_ns1__searchByKeywordsResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__searchByKeywordsResponse *_p =
      soap_instantiate_ns1__searchByKeywordsResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByKeywordsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchByKeywordsResponse(struct soap *soap,
                                          ns1__searchByKeywordsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByKeywordsResponse(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByKeywords
#define SOAP_TYPE_ICat3_ns1__searchByKeywords (153)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchByKeywords(struct soap *, const char *, int,
                               const ns1__searchByKeywords *, const char *);
SOAP_FMAC3 ns1__searchByKeywords *SOAP_FMAC4
soap_in_ns1__searchByKeywords(struct soap *, const char *,
                              ns1__searchByKeywords *, const char *);

#ifndef soap_write_ns1__searchByKeywords
#define soap_write_ns1__searchByKeywords(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByKeywords", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByKeywords *SOAP_FMAC4
soap_get_ns1__searchByKeywords(struct soap *, ns1__searchByKeywords *,
                               const char *, const char *);

#ifndef soap_read_ns1__searchByKeywords
#define soap_read_ns1__searchByKeywords(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByKeywords(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByKeywords *SOAP_FMAC2
soap_instantiate_ns1__searchByKeywords(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__searchByKeywords *soap_new_ns1__searchByKeywords(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__searchByKeywords(soap, n, NULL, NULL, NULL);
}

inline ns1__searchByKeywords *
soap_new_req_ns1__searchByKeywords(struct soap *soap) {
  ns1__searchByKeywords *_p =
      soap_instantiate_ns1__searchByKeywords(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByKeywords *
soap_new_set_ns1__searchByKeywords(struct soap *soap, std::string *sessionId,
                                   std::vector<std::string> &keywords,
                                   char *__item1) {
  ns1__searchByKeywords *_p =
      soap_instantiate_ns1__searchByKeywords(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByKeywords::sessionId = sessionId;
    _p->ns1__searchByKeywords::keywords = keywords;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByKeywords(struct soap *soap,
                                              ns1__searchByKeywords *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByKeywords(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__checkDatasetDownloadAccessResponse
#define SOAP_TYPE_ICat3_ns1__checkDatasetDownloadAccessResponse (152)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__checkDatasetDownloadAccessResponse(
    struct soap *, const char *, int,
    const ns1__checkDatasetDownloadAccessResponse *, const char *);
SOAP_FMAC3 ns1__checkDatasetDownloadAccessResponse *SOAP_FMAC4
soap_in_ns1__checkDatasetDownloadAccessResponse(
    struct soap *, const char *, ns1__checkDatasetDownloadAccessResponse *,
    const char *);

#ifndef soap_write_ns1__checkDatasetDownloadAccessResponse
#define soap_write_ns1__checkDatasetDownloadAccessResponse(soap, data)         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:checkDatasetDownloadAccessResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__checkDatasetDownloadAccessResponse *SOAP_FMAC4
soap_get_ns1__checkDatasetDownloadAccessResponse(
    struct soap *, ns1__checkDatasetDownloadAccessResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__checkDatasetDownloadAccessResponse
#define soap_read_ns1__checkDatasetDownloadAccessResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__checkDatasetDownloadAccessResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__checkDatasetDownloadAccessResponse *SOAP_FMAC2
soap_instantiate_ns1__checkDatasetDownloadAccessResponse(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline ns1__checkDatasetDownloadAccessResponse *
soap_new_ns1__checkDatasetDownloadAccessResponse(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate_ns1__checkDatasetDownloadAccessResponse(soap, n, NULL,
                                                                  NULL, NULL);
}

inline ns1__checkDatasetDownloadAccessResponse *
soap_new_req_ns1__checkDatasetDownloadAccessResponse(struct soap *soap) {
  ns1__checkDatasetDownloadAccessResponse *_p =
      soap_instantiate_ns1__checkDatasetDownloadAccessResponse(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__checkDatasetDownloadAccessResponse *
soap_new_set_ns1__checkDatasetDownloadAccessResponse(
    struct soap *soap, ns1__downloadInfo *downloadInfo, char *__item1) {
  ns1__checkDatasetDownloadAccessResponse *_p =
      soap_instantiate_ns1__checkDatasetDownloadAccessResponse(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__checkDatasetDownloadAccessResponse::downloadInfo = downloadInfo;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__checkDatasetDownloadAccessResponse(
    struct soap *soap, ns1__checkDatasetDownloadAccessResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__checkDatasetDownloadAccessResponse(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_ns1__checkDatasetDownloadAccess
#define SOAP_TYPE_ICat3_ns1__checkDatasetDownloadAccess (151)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__checkDatasetDownloadAccess(
    struct soap *, const char *, int, const ns1__checkDatasetDownloadAccess *,
    const char *);
SOAP_FMAC3 ns1__checkDatasetDownloadAccess *SOAP_FMAC4
soap_in_ns1__checkDatasetDownloadAccess(struct soap *, const char *,
                                        ns1__checkDatasetDownloadAccess *,
                                        const char *);

#ifndef soap_write_ns1__checkDatasetDownloadAccess
#define soap_write_ns1__checkDatasetDownloadAccess(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:checkDatasetDownloadAccess", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__checkDatasetDownloadAccess *SOAP_FMAC4
soap_get_ns1__checkDatasetDownloadAccess(struct soap *,
                                         ns1__checkDatasetDownloadAccess *,
                                         const char *, const char *);

#ifndef soap_read_ns1__checkDatasetDownloadAccess
#define soap_read_ns1__checkDatasetDownloadAccess(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__checkDatasetDownloadAccess(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__checkDatasetDownloadAccess *SOAP_FMAC2
soap_instantiate_ns1__checkDatasetDownloadAccess(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__checkDatasetDownloadAccess *
soap_new_ns1__checkDatasetDownloadAccess(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__checkDatasetDownloadAccess(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__checkDatasetDownloadAccess *
soap_new_req_ns1__checkDatasetDownloadAccess(struct soap *soap) {
  ns1__checkDatasetDownloadAccess *_p =
      soap_instantiate_ns1__checkDatasetDownloadAccess(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__checkDatasetDownloadAccess *
soap_new_set_ns1__checkDatasetDownloadAccess(struct soap *soap,
                                             std::string *sessionId,
                                             LONG64 *datasetId, char *__item1) {
  ns1__checkDatasetDownloadAccess *_p =
      soap_instantiate_ns1__checkDatasetDownloadAccess(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__checkDatasetDownloadAccess::sessionId = sessionId;
    _p->ns1__checkDatasetDownloadAccess::datasetId = datasetId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__checkDatasetDownloadAccess(
    struct soap *soap, ns1__checkDatasetDownloadAccess *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__checkDatasetDownloadAccess(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByParameterConditionResponse
#define SOAP_TYPE_ICat3_ns1__searchDatafileByParameterConditionResponse (150)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatafileByParameterConditionResponse(
    struct soap *, const char *, int,
    const ns1__searchDatafileByParameterConditionResponse *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterConditionResponse *SOAP_FMAC4
soap_in_ns1__searchDatafileByParameterConditionResponse(
    struct soap *, const char *,
    ns1__searchDatafileByParameterConditionResponse *, const char *);

#ifndef soap_write_ns1__searchDatafileByParameterConditionResponse
#define soap_write_ns1__searchDatafileByParameterConditionResponse(soap, data) \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchDatafileByParameterConditionResponse", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterConditionResponse *SOAP_FMAC4
soap_get_ns1__searchDatafileByParameterConditionResponse(
    struct soap *, ns1__searchDatafileByParameterConditionResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchDatafileByParameterConditionResponse
#define soap_read_ns1__searchDatafileByParameterConditionResponse(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByParameterConditionResponse(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByParameterConditionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByParameterConditionResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchDatafileByParameterConditionResponse *
soap_new_ns1__searchDatafileByParameterConditionResponse(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__searchDatafileByParameterConditionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatafileByParameterConditionResponse *
soap_new_req_ns1__searchDatafileByParameterConditionResponse(
    struct soap *soap) {
  ns1__searchDatafileByParameterConditionResponse *_p =
      soap_instantiate_ns1__searchDatafileByParameterConditionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByParameterConditionResponse *
soap_new_set_ns1__searchDatafileByParameterConditionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatafileByParameterConditionResponse *_p =
      soap_instantiate_ns1__searchDatafileByParameterConditionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByParameterConditionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByParameterConditionResponse(
    struct soap *soap, ns1__searchDatafileByParameterConditionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByParameterConditionResponse(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByParameterCondition
#define SOAP_TYPE_ICat3_ns1__searchDatafileByParameterCondition (149)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatafileByParameterCondition(
    struct soap *, const char *, int,
    const ns1__searchDatafileByParameterCondition *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterCondition *SOAP_FMAC4
soap_in_ns1__searchDatafileByParameterCondition(
    struct soap *, const char *, ns1__searchDatafileByParameterCondition *,
    const char *);

#ifndef soap_write_ns1__searchDatafileByParameterCondition
#define soap_write_ns1__searchDatafileByParameterCondition(soap, data)         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchDatafileByParameterCondition", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterCondition *SOAP_FMAC4
soap_get_ns1__searchDatafileByParameterCondition(
    struct soap *, ns1__searchDatafileByParameterCondition *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatafileByParameterCondition
#define soap_read_ns1__searchDatafileByParameterCondition(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByParameterCondition(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByParameterCondition *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByParameterCondition(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline ns1__searchDatafileByParameterCondition *
soap_new_ns1__searchDatafileByParameterCondition(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate_ns1__searchDatafileByParameterCondition(soap, n, NULL,
                                                                  NULL, NULL);
}

inline ns1__searchDatafileByParameterCondition *
soap_new_req_ns1__searchDatafileByParameterCondition(struct soap *soap) {
  ns1__searchDatafileByParameterCondition *_p =
      soap_instantiate_ns1__searchDatafileByParameterCondition(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByParameterCondition *
soap_new_set_ns1__searchDatafileByParameterCondition(
    struct soap *soap, std::string *sessionId,
    ns1__parameterCondition *logicalCondition, char *__item1) {
  ns1__searchDatafileByParameterCondition *_p =
      soap_instantiate_ns1__searchDatafileByParameterCondition(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByParameterCondition::sessionId = sessionId;
    _p->ns1__searchDatafileByParameterCondition::logicalCondition =
        logicalCondition;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByParameterCondition(
    struct soap *soap, ns1__searchDatafileByParameterCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByParameterCondition(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByUserSurnamePaginationResponse
#define SOAP_TYPE_ICat3_ns1__searchByUserSurnamePaginationResponse (148)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchByUserSurnamePaginationResponse(
    struct soap *, const char *, int,
    const ns1__searchByUserSurnamePaginationResponse *, const char *);
SOAP_FMAC3 ns1__searchByUserSurnamePaginationResponse *SOAP_FMAC4
soap_in_ns1__searchByUserSurnamePaginationResponse(
    struct soap *, const char *, ns1__searchByUserSurnamePaginationResponse *,
    const char *);

#ifndef soap_write_ns1__searchByUserSurnamePaginationResponse
#define soap_write_ns1__searchByUserSurnamePaginationResponse(soap, data)      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByUserSurnamePaginationResponse",     \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserSurnamePaginationResponse *SOAP_FMAC4
soap_get_ns1__searchByUserSurnamePaginationResponse(
    struct soap *, ns1__searchByUserSurnamePaginationResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchByUserSurnamePaginationResponse
#define soap_read_ns1__searchByUserSurnamePaginationResponse(soap, data)       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByUserSurnamePaginationResponse(            \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByUserSurnamePaginationResponse *SOAP_FMAC2
soap_instantiate_ns1__searchByUserSurnamePaginationResponse(struct soap *, int,
                                                            const char *,
                                                            const char *,
                                                            size_t *);

inline ns1__searchByUserSurnamePaginationResponse *
soap_new_ns1__searchByUserSurnamePaginationResponse(struct soap *soap,
                                                    int n = -1) {
  return soap_instantiate_ns1__searchByUserSurnamePaginationResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchByUserSurnamePaginationResponse *
soap_new_req_ns1__searchByUserSurnamePaginationResponse(struct soap *soap) {
  ns1__searchByUserSurnamePaginationResponse *_p =
      soap_instantiate_ns1__searchByUserSurnamePaginationResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByUserSurnamePaginationResponse *
soap_new_set_ns1__searchByUserSurnamePaginationResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__searchByUserSurnamePaginationResponse *_p =
      soap_instantiate_ns1__searchByUserSurnamePaginationResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByUserSurnamePaginationResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByUserSurnamePaginationResponse(
    struct soap *soap, ns1__searchByUserSurnamePaginationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByUserSurnamePaginationResponse(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByUserSurnamePagination
#define SOAP_TYPE_ICat3_ns1__searchByUserSurnamePagination (147)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchByUserSurnamePagination(
    struct soap *, const char *, int,
    const ns1__searchByUserSurnamePagination *, const char *);
SOAP_FMAC3 ns1__searchByUserSurnamePagination *SOAP_FMAC4
soap_in_ns1__searchByUserSurnamePagination(struct soap *, const char *,
                                           ns1__searchByUserSurnamePagination *,
                                           const char *);

#ifndef soap_write_ns1__searchByUserSurnamePagination
#define soap_write_ns1__searchByUserSurnamePagination(soap, data)              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByUserSurnamePagination", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserSurnamePagination *SOAP_FMAC4
soap_get_ns1__searchByUserSurnamePagination(
    struct soap *, ns1__searchByUserSurnamePagination *, const char *,
    const char *);

#ifndef soap_read_ns1__searchByUserSurnamePagination
#define soap_read_ns1__searchByUserSurnamePagination(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByUserSurnamePagination(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByUserSurnamePagination *SOAP_FMAC2
soap_instantiate_ns1__searchByUserSurnamePagination(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline ns1__searchByUserSurnamePagination *
soap_new_ns1__searchByUserSurnamePagination(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByUserSurnamePagination(soap, n, NULL,
                                                             NULL, NULL);
}

inline ns1__searchByUserSurnamePagination *
soap_new_req_ns1__searchByUserSurnamePagination(struct soap *soap,
                                                int startIndex,
                                                int numberOfResults) {
  ns1__searchByUserSurnamePagination *_p =
      soap_instantiate_ns1__searchByUserSurnamePagination(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByUserSurnamePagination::startIndex = startIndex;
    _p->ns1__searchByUserSurnamePagination::numberOfResults = numberOfResults;
  }
  return _p;
}

inline ns1__searchByUserSurnamePagination *
soap_new_set_ns1__searchByUserSurnamePagination(
    struct soap *soap, std::string *sessionId, std::string *surname,
    int startIndex, int numberOfResults, char *__item1) {
  ns1__searchByUserSurnamePagination *_p =
      soap_instantiate_ns1__searchByUserSurnamePagination(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByUserSurnamePagination::sessionId = sessionId;
    _p->ns1__searchByUserSurnamePagination::surname = surname;
    _p->ns1__searchByUserSurnamePagination::startIndex = startIndex;
    _p->ns1__searchByUserSurnamePagination::numberOfResults = numberOfResults;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByUserSurnamePagination(
    struct soap *soap, ns1__searchByUserSurnamePagination *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByUserSurnamePagination(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__shiftPK
#define SOAP_TYPE_ICat3_ns1__shiftPK (146)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__shiftPK(struct soap *, const char *,
                                                int, const ns1__shiftPK *,
                                                const char *);
SOAP_FMAC3 ns1__shiftPK *SOAP_FMAC4
soap_in_ns1__shiftPK(struct soap *, const char *, ns1__shiftPK *, const char *);

#ifndef soap_write_ns1__shiftPK
#define soap_write_ns1__shiftPK(soap, data)                                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:shiftPK", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__shiftPK *SOAP_FMAC4
soap_get_ns1__shiftPK(struct soap *, ns1__shiftPK *, const char *,
                      const char *);

#ifndef soap_read_ns1__shiftPK
#define soap_read_ns1__shiftPK(soap, data)                                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__shiftPK(soap, data, NULL, NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__shiftPK *SOAP_FMAC2
soap_instantiate_ns1__shiftPK(struct soap *, int, const char *, const char *,
                              size_t *);

inline ns1__shiftPK *soap_new_ns1__shiftPK(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__shiftPK(soap, n, NULL, NULL, NULL);
}

inline ns1__shiftPK *soap_new_req_ns1__shiftPK(struct soap *soap) {
  ns1__shiftPK *_p = soap_instantiate_ns1__shiftPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__shiftPK *soap_new_set_ns1__shiftPK(struct soap *soap,
                                               time_t *endDate,
                                               LONG64 *investigationId,
                                               time_t *startDate,
                                               char *__item2) {
  ns1__shiftPK *_p = soap_instantiate_ns1__shiftPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__shiftPK::endDate = endDate;
    _p->ns1__shiftPK::investigationId = investigationId;
    _p->ns1__shiftPK::startDate = startDate;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__shiftPK(struct soap *soap, ns1__shiftPK *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__shiftPK(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_ns1__shift
#define SOAP_TYPE_ICat3_ns1__shift (145)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__shift(struct soap *, const char *, int,
                                              const ns1__shift *, const char *);
SOAP_FMAC3 ns1__shift *SOAP_FMAC4
soap_in_ns1__shift(struct soap *, const char *, ns1__shift *, const char *);

#ifndef soap_write_ns1__shift
#define soap_write_ns1__shift(soap, data)                                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:shift", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__shift *SOAP_FMAC4
soap_get_ns1__shift(struct soap *, ns1__shift *, const char *, const char *);

#ifndef soap_read_ns1__shift
#define soap_read_ns1__shift(soap, data)                                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__shift(soap, data, NULL, NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__shift *SOAP_FMAC2
soap_instantiate_ns1__shift(struct soap *, int, const char *, const char *,
                            size_t *);

inline ns1__shift *soap_new_ns1__shift(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__shift(soap, n, NULL, NULL, NULL);
}

inline ns1__shift *soap_new_req_ns1__shift(struct soap *soap,
                                           bool facilityAcquiredData1,
                                           bool selected1) {
  ns1__shift *_p = soap_instantiate_ns1__shift(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__shift *
soap_new_set_ns1__shift(struct soap *soap, std::string *shiftComment,
                        ns1__shiftPK *shiftPK, bool facilityAcquiredData1,
                        ns1__icatRole *icatRole1, bool selected1,
                        std::string *uniqueId1, char *__item2) {
  ns1__shift *_p = soap_instantiate_ns1__shift(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__shift::shiftComment = shiftComment;
    _p->ns1__shift::shiftPK = shiftPK;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__shift(struct soap *soap, ns1__shift *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__shift(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__publication
#define SOAP_TYPE_ICat3_ns1__publication (144)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__publication(struct soap *, const char *, int,
                          const ns1__publication *, const char *);
SOAP_FMAC3 ns1__publication *SOAP_FMAC4
soap_in_ns1__publication(struct soap *, const char *, ns1__publication *,
                         const char *);

#ifndef soap_write_ns1__publication
#define soap_write_ns1__publication(soap, data)                                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:publication", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__publication *SOAP_FMAC4
soap_get_ns1__publication(struct soap *, ns1__publication *, const char *,
                          const char *);

#ifndef soap_read_ns1__publication
#define soap_read_ns1__publication(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__publication(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__publication *SOAP_FMAC2
soap_instantiate_ns1__publication(struct soap *, int, const char *,
                                  const char *, size_t *);

inline ns1__publication *soap_new_ns1__publication(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate_ns1__publication(soap, n, NULL, NULL, NULL);
}

inline ns1__publication *
soap_new_req_ns1__publication(struct soap *soap, bool facilityAcquiredData1,
                              bool selected1) {
  ns1__publication *_p =
      soap_instantiate_ns1__publication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__publication *soap_new_set_ns1__publication(
    struct soap *soap, std::string *fullReference, LONG64 *id,
    std::string *repository, std::string *repositoryId, std::string *url,
    bool facilityAcquiredData1, ns1__icatRole *icatRole1, bool selected1,
    std::string *uniqueId1, char *__item2) {
  ns1__publication *_p =
      soap_instantiate_ns1__publication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__publication::fullReference = fullReference;
    _p->ns1__publication::id = id;
    _p->ns1__publication::repository = repository;
    _p->ns1__publication::repositoryId = repositoryId;
    _p->ns1__publication::url = url;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__publication(struct soap *soap,
                                         ns1__publication *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__publication(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__keyword
#define SOAP_TYPE_ICat3_ns1__keyword (143)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__keyword(struct soap *, const char *,
                                                int, const ns1__keyword *,
                                                const char *);
SOAP_FMAC3 ns1__keyword *SOAP_FMAC4
soap_in_ns1__keyword(struct soap *, const char *, ns1__keyword *, const char *);

#ifndef soap_write_ns1__keyword
#define soap_write_ns1__keyword(soap, data)                                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:keyword", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__keyword *SOAP_FMAC4
soap_get_ns1__keyword(struct soap *, ns1__keyword *, const char *,
                      const char *);

#ifndef soap_read_ns1__keyword
#define soap_read_ns1__keyword(soap, data)                                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__keyword(soap, data, NULL, NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__keyword *SOAP_FMAC2
soap_instantiate_ns1__keyword(struct soap *, int, const char *, const char *,
                              size_t *);

inline ns1__keyword *soap_new_ns1__keyword(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__keyword(soap, n, NULL, NULL, NULL);
}

inline ns1__keyword *soap_new_req_ns1__keyword(struct soap *soap,
                                               bool facilityAcquiredData1,
                                               bool selected1) {
  ns1__keyword *_p = soap_instantiate_ns1__keyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__keyword *
soap_new_set_ns1__keyword(struct soap *soap, ns1__keywordPK *keywordPK,
                          bool facilityAcquiredData1, ns1__icatRole *icatRole1,
                          bool selected1, std::string *uniqueId1,
                          char *__item2) {
  ns1__keyword *_p = soap_instantiate_ns1__keyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__keyword::keywordPK = keywordPK;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__keyword(struct soap *soap, ns1__keyword *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__keyword(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_ns1__investigator
#define SOAP_TYPE_ICat3_ns1__investigator (142)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__investigator(struct soap *, const char *, int,
                           const ns1__investigator *, const char *);
SOAP_FMAC3 ns1__investigator *SOAP_FMAC4
soap_in_ns1__investigator(struct soap *, const char *, ns1__investigator *,
                          const char *);

#ifndef soap_write_ns1__investigator
#define soap_write_ns1__investigator(soap, data)                               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:investigator", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__investigator *SOAP_FMAC4
soap_get_ns1__investigator(struct soap *, ns1__investigator *, const char *,
                           const char *);

#ifndef soap_read_ns1__investigator
#define soap_read_ns1__investigator(soap, data)                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__investigator(soap, data, NULL, NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__investigator *SOAP_FMAC2
soap_instantiate_ns1__investigator(struct soap *, int, const char *,
                                   const char *, size_t *);

inline ns1__investigator *soap_new_ns1__investigator(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__investigator(soap, n, NULL, NULL, NULL);
}

inline ns1__investigator *
soap_new_req_ns1__investigator(struct soap *soap, bool facilityAcquiredData1,
                               bool selected1) {
  ns1__investigator *_p =
      soap_instantiate_ns1__investigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__investigator *soap_new_set_ns1__investigator(
    struct soap *soap, ns1__facilityUser *ns1__facilityUser_,
    ns1__investigatorPK *investigatorPK, std::string *role,
    bool facilityAcquiredData1, ns1__icatRole *icatRole1, bool selected1,
    std::string *uniqueId1, char *__item2) {
  ns1__investigator *_p =
      soap_instantiate_ns1__investigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__investigator::ns1__facilityUser_ = ns1__facilityUser_;
    _p->ns1__investigator::investigatorPK = investigatorPK;
    _p->ns1__investigator::role = role;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__investigator(struct soap *soap,
                                          ns1__investigator *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__investigator(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__investigation
#define SOAP_TYPE_ICat3_ns1__investigation (141)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__investigation(struct soap *, const char *, int,
                            const ns1__investigation *, const char *);
SOAP_FMAC3 ns1__investigation *SOAP_FMAC4
soap_in_ns1__investigation(struct soap *, const char *, ns1__investigation *,
                           const char *);

#ifndef soap_write_ns1__investigation
#define soap_write_ns1__investigation(soap, data)                              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:investigation", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__investigation *SOAP_FMAC4
soap_get_ns1__investigation(struct soap *, ns1__investigation *, const char *,
                            const char *);

#ifndef soap_read_ns1__investigation
#define soap_read_ns1__investigation(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__investigation(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__investigation *SOAP_FMAC2
soap_instantiate_ns1__investigation(struct soap *, int, const char *,
                                    const char *, size_t *);

inline ns1__investigation *soap_new_ns1__investigation(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__investigation(soap, n, NULL, NULL, NULL);
}

inline ns1__investigation *
soap_new_req_ns1__investigation(struct soap *soap, bool facilityAcquiredData1,
                                bool selected1) {
  ns1__investigation *_p =
      soap_instantiate_ns1__investigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__investigation *soap_new_set_ns1__investigation(
    struct soap *soap, std::string *bcatInvStr,
    std::vector<ns1__dataset *> &datasetCollection, std::string *facility,
    ns1__facilityCycle *facilityCycle, LONG64 *grantId, LONG64 *id,
    std::string *instrument, std::string *invAbstract, time_t *invEndDate,
    std::string *invNumber, std::string *invParamName,
    std::string *invParamValue, time_t *invStartDate, std::string *invType,
    std::vector<ns1__investigator *> &investigatorCollection,
    std::vector<ns1__keyword *> &keywordCollection, std::string *prevInvNumber,
    std::vector<ns1__publication *> &publicationCollection, time_t *releaseDate,
    std::vector<ns1__sample *> &sampleCollection,
    std::vector<ns1__shift *> &shiftCollection, std::string *title,
    std::string *visitId, bool facilityAcquiredData1, ns1__icatRole *icatRole1,
    bool selected1, std::string *uniqueId1, char *__item2) {
  ns1__investigation *_p =
      soap_instantiate_ns1__investigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__investigation::bcatInvStr = bcatInvStr;
    _p->ns1__investigation::datasetCollection = datasetCollection;
    _p->ns1__investigation::facility = facility;
    _p->ns1__investigation::facilityCycle = facilityCycle;
    _p->ns1__investigation::grantId = grantId;
    _p->ns1__investigation::id = id;
    _p->ns1__investigation::instrument = instrument;
    _p->ns1__investigation::invAbstract = invAbstract;
    _p->ns1__investigation::invEndDate = invEndDate;
    _p->ns1__investigation::invNumber = invNumber;
    _p->ns1__investigation::invParamName = invParamName;
    _p->ns1__investigation::invParamValue = invParamValue;
    _p->ns1__investigation::invStartDate = invStartDate;
    _p->ns1__investigation::invType = invType;
    _p->ns1__investigation::investigatorCollection = investigatorCollection;
    _p->ns1__investigation::keywordCollection = keywordCollection;
    _p->ns1__investigation::prevInvNumber = prevInvNumber;
    _p->ns1__investigation::publicationCollection = publicationCollection;
    _p->ns1__investigation::releaseDate = releaseDate;
    _p->ns1__investigation::sampleCollection = sampleCollection;
    _p->ns1__investigation::shiftCollection = shiftCollection;
    _p->ns1__investigation::title = title;
    _p->ns1__investigation::visitId = visitId;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__investigation(struct soap *soap,
                                           ns1__investigation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__investigation(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByUserSurnameResponse
#define SOAP_TYPE_ICat3_ns1__searchByUserSurnameResponse (140)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchByUserSurnameResponse(
    struct soap *, const char *, int, const ns1__searchByUserSurnameResponse *,
    const char *);
SOAP_FMAC3 ns1__searchByUserSurnameResponse *SOAP_FMAC4
soap_in_ns1__searchByUserSurnameResponse(struct soap *, const char *,
                                         ns1__searchByUserSurnameResponse *,
                                         const char *);

#ifndef soap_write_ns1__searchByUserSurnameResponse
#define soap_write_ns1__searchByUserSurnameResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByUserSurnameResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserSurnameResponse *SOAP_FMAC4
soap_get_ns1__searchByUserSurnameResponse(struct soap *,
                                          ns1__searchByUserSurnameResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__searchByUserSurnameResponse
#define soap_read_ns1__searchByUserSurnameResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByUserSurnameResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByUserSurnameResponse *SOAP_FMAC2
soap_instantiate_ns1__searchByUserSurnameResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__searchByUserSurnameResponse *
soap_new_ns1__searchByUserSurnameResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByUserSurnameResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__searchByUserSurnameResponse *
soap_new_req_ns1__searchByUserSurnameResponse(struct soap *soap) {
  ns1__searchByUserSurnameResponse *_p =
      soap_instantiate_ns1__searchByUserSurnameResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByUserSurnameResponse *
soap_new_set_ns1__searchByUserSurnameResponse(
    struct soap *soap, std::vector<ns1__investigation *> &return_,
    char *__item1) {
  ns1__searchByUserSurnameResponse *_p =
      soap_instantiate_ns1__searchByUserSurnameResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByUserSurnameResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByUserSurnameResponse(
    struct soap *soap, ns1__searchByUserSurnameResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByUserSurnameResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchByUserSurname
#define SOAP_TYPE_ICat3_ns1__searchByUserSurname (139)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchByUserSurname(struct soap *, const char *, int,
                                  const ns1__searchByUserSurname *,
                                  const char *);
SOAP_FMAC3 ns1__searchByUserSurname *SOAP_FMAC4
soap_in_ns1__searchByUserSurname(struct soap *, const char *,
                                 ns1__searchByUserSurname *, const char *);

#ifndef soap_write_ns1__searchByUserSurname
#define soap_write_ns1__searchByUserSurname(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchByUserSurname", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserSurname *SOAP_FMAC4
soap_get_ns1__searchByUserSurname(struct soap *, ns1__searchByUserSurname *,
                                  const char *, const char *);

#ifndef soap_read_ns1__searchByUserSurname
#define soap_read_ns1__searchByUserSurname(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchByUserSurname(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchByUserSurname *SOAP_FMAC2
soap_instantiate_ns1__searchByUserSurname(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__searchByUserSurname *
soap_new_ns1__searchByUserSurname(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchByUserSurname(soap, n, NULL, NULL, NULL);
}

inline ns1__searchByUserSurname *
soap_new_req_ns1__searchByUserSurname(struct soap *soap) {
  ns1__searchByUserSurname *_p =
      soap_instantiate_ns1__searchByUserSurname(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchByUserSurname *
soap_new_set_ns1__searchByUserSurname(struct soap *soap, std::string *sessionId,
                                      std::string *surname, char *__item1) {
  ns1__searchByUserSurname *_p =
      soap_instantiate_ns1__searchByUserSurname(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchByUserSurname::sessionId = sessionId;
    _p->ns1__searchByUserSurname::surname = surname;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchByUserSurname(struct soap *soap,
                                                 ns1__searchByUserSurname *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchByUserSurname(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteDataFileResponse
#define SOAP_TYPE_ICat3_ns1__deleteDataFileResponse (138)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteDataFileResponse(struct soap *, const char *, int,
                                     const ns1__deleteDataFileResponse *,
                                     const char *);
SOAP_FMAC3 ns1__deleteDataFileResponse *SOAP_FMAC4
soap_in_ns1__deleteDataFileResponse(struct soap *, const char *,
                                    ns1__deleteDataFileResponse *,
                                    const char *);

#ifndef soap_write_ns1__deleteDataFileResponse
#define soap_write_ns1__deleteDataFileResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteDataFileResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataFileResponse *SOAP_FMAC4
soap_get_ns1__deleteDataFileResponse(struct soap *,
                                     ns1__deleteDataFileResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns1__deleteDataFileResponse
#define soap_read_ns1__deleteDataFileResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteDataFileResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteDataFileResponse *SOAP_FMAC2
soap_instantiate_ns1__deleteDataFileResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__deleteDataFileResponse *
soap_new_ns1__deleteDataFileResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteDataFileResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__deleteDataFileResponse *
soap_new_req_ns1__deleteDataFileResponse(struct soap *soap) {
  ns1__deleteDataFileResponse *_p =
      soap_instantiate_ns1__deleteDataFileResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteDataFileResponse *
soap_new_set_ns1__deleteDataFileResponse(struct soap *soap, char *__item1) {
  ns1__deleteDataFileResponse *_p =
      soap_instantiate_ns1__deleteDataFileResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__deleteDataFileResponse(struct soap *soap,
                                        ns1__deleteDataFileResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteDataFileResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteDataFile
#define SOAP_TYPE_ICat3_ns1__deleteDataFile (137)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteDataFile(struct soap *, const char *, int,
                             const ns1__deleteDataFile *, const char *);
SOAP_FMAC3 ns1__deleteDataFile *SOAP_FMAC4
soap_in_ns1__deleteDataFile(struct soap *, const char *, ns1__deleteDataFile *,
                            const char *);

#ifndef soap_write_ns1__deleteDataFile
#define soap_write_ns1__deleteDataFile(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteDataFile", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataFile *SOAP_FMAC4
soap_get_ns1__deleteDataFile(struct soap *, ns1__deleteDataFile *, const char *,
                             const char *);

#ifndef soap_read_ns1__deleteDataFile
#define soap_read_ns1__deleteDataFile(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteDataFile(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteDataFile *SOAP_FMAC2
soap_instantiate_ns1__deleteDataFile(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__deleteDataFile *soap_new_ns1__deleteDataFile(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__deleteDataFile(soap, n, NULL, NULL, NULL);
}

inline ns1__deleteDataFile *
soap_new_req_ns1__deleteDataFile(struct soap *soap) {
  ns1__deleteDataFile *_p =
      soap_instantiate_ns1__deleteDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteDataFile *
soap_new_set_ns1__deleteDataFile(struct soap *soap, std::string *sessionId,
                                 LONG64 *datafileId, char *__item1) {
  ns1__deleteDataFile *_p =
      soap_instantiate_ns1__deleteDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__deleteDataFile::sessionId = sessionId;
    _p->ns1__deleteDataFile::datafileId = datafileId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteDataFile(struct soap *soap,
                                            ns1__deleteDataFile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__deleteDataFile(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__downloadInfo
#define SOAP_TYPE_ICat3_ns1__downloadInfo (136)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__downloadInfo(struct soap *, const char *, int,
                           const ns1__downloadInfo *, const char *);
SOAP_FMAC3 ns1__downloadInfo *SOAP_FMAC4
soap_in_ns1__downloadInfo(struct soap *, const char *, ns1__downloadInfo *,
                          const char *);

#ifndef soap_write_ns1__downloadInfo
#define soap_write_ns1__downloadInfo(soap, data)                               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:downloadInfo", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadInfo *SOAP_FMAC4
soap_get_ns1__downloadInfo(struct soap *, ns1__downloadInfo *, const char *,
                           const char *);

#ifndef soap_read_ns1__downloadInfo
#define soap_read_ns1__downloadInfo(soap, data)                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__downloadInfo(soap, data, NULL, NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__downloadInfo *SOAP_FMAC2
soap_instantiate_ns1__downloadInfo(struct soap *, int, const char *,
                                   const char *, size_t *);

inline ns1__downloadInfo *soap_new_ns1__downloadInfo(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__downloadInfo(soap, n, NULL, NULL, NULL);
}

inline ns1__downloadInfo *soap_new_req_ns1__downloadInfo(struct soap *soap) {
  ns1__downloadInfo *_p =
      soap_instantiate_ns1__downloadInfo(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__downloadInfo *
soap_new_set_ns1__downloadInfo(struct soap *soap, std::string *credential,
                               std::vector<std::string> &datafileLocations,
                               std::vector<xsd__anyType *> &datafileNames,
                               std::string *userId, char *__item1) {
  ns1__downloadInfo *_p =
      soap_instantiate_ns1__downloadInfo(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__downloadInfo::credential = credential;
    _p->ns1__downloadInfo::datafileLocations = datafileLocations;
    _p->ns1__downloadInfo::datafileNames = datafileNames;
    _p->ns1__downloadInfo::userId = userId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__downloadInfo(struct soap *soap,
                                          ns1__downloadInfo *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__downloadInfo(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__checkDatafileDownloadAccessResponse
#define SOAP_TYPE_ICat3_ns1__checkDatafileDownloadAccessResponse (135)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__checkDatafileDownloadAccessResponse(
    struct soap *, const char *, int,
    const ns1__checkDatafileDownloadAccessResponse *, const char *);
SOAP_FMAC3 ns1__checkDatafileDownloadAccessResponse *SOAP_FMAC4
soap_in_ns1__checkDatafileDownloadAccessResponse(
    struct soap *, const char *, ns1__checkDatafileDownloadAccessResponse *,
    const char *);

#ifndef soap_write_ns1__checkDatafileDownloadAccessResponse
#define soap_write_ns1__checkDatafileDownloadAccessResponse(soap, data)        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:checkDatafileDownloadAccessResponse",       \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__checkDatafileDownloadAccessResponse *SOAP_FMAC4
soap_get_ns1__checkDatafileDownloadAccessResponse(
    struct soap *, ns1__checkDatafileDownloadAccessResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__checkDatafileDownloadAccessResponse
#define soap_read_ns1__checkDatafileDownloadAccessResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__checkDatafileDownloadAccessResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__checkDatafileDownloadAccessResponse *SOAP_FMAC2
soap_instantiate_ns1__checkDatafileDownloadAccessResponse(struct soap *, int,
                                                          const char *,
                                                          const char *,
                                                          size_t *);

inline ns1__checkDatafileDownloadAccessResponse *
soap_new_ns1__checkDatafileDownloadAccessResponse(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate_ns1__checkDatafileDownloadAccessResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__checkDatafileDownloadAccessResponse *
soap_new_req_ns1__checkDatafileDownloadAccessResponse(struct soap *soap) {
  ns1__checkDatafileDownloadAccessResponse *_p =
      soap_instantiate_ns1__checkDatafileDownloadAccessResponse(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__checkDatafileDownloadAccessResponse *
soap_new_set_ns1__checkDatafileDownloadAccessResponse(
    struct soap *soap, ns1__downloadInfo *downloadInfo, char *__item1) {
  ns1__checkDatafileDownloadAccessResponse *_p =
      soap_instantiate_ns1__checkDatafileDownloadAccessResponse(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__checkDatafileDownloadAccessResponse::downloadInfo = downloadInfo;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__checkDatafileDownloadAccessResponse(
    struct soap *soap, ns1__checkDatafileDownloadAccessResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__checkDatafileDownloadAccessResponse(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3_ns1__checkDatafileDownloadAccess
#define SOAP_TYPE_ICat3_ns1__checkDatafileDownloadAccess (134)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__checkDatafileDownloadAccess(
    struct soap *, const char *, int, const ns1__checkDatafileDownloadAccess *,
    const char *);
SOAP_FMAC3 ns1__checkDatafileDownloadAccess *SOAP_FMAC4
soap_in_ns1__checkDatafileDownloadAccess(struct soap *, const char *,
                                         ns1__checkDatafileDownloadAccess *,
                                         const char *);

#ifndef soap_write_ns1__checkDatafileDownloadAccess
#define soap_write_ns1__checkDatafileDownloadAccess(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:checkDatafileDownloadAccess", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__checkDatafileDownloadAccess *SOAP_FMAC4
soap_get_ns1__checkDatafileDownloadAccess(struct soap *,
                                          ns1__checkDatafileDownloadAccess *,
                                          const char *, const char *);

#ifndef soap_read_ns1__checkDatafileDownloadAccess
#define soap_read_ns1__checkDatafileDownloadAccess(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__checkDatafileDownloadAccess(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__checkDatafileDownloadAccess *SOAP_FMAC2
soap_instantiate_ns1__checkDatafileDownloadAccess(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__checkDatafileDownloadAccess *
soap_new_ns1__checkDatafileDownloadAccess(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__checkDatafileDownloadAccess(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__checkDatafileDownloadAccess *
soap_new_req_ns1__checkDatafileDownloadAccess(struct soap *soap) {
  ns1__checkDatafileDownloadAccess *_p =
      soap_instantiate_ns1__checkDatafileDownloadAccess(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__checkDatafileDownloadAccess *
soap_new_set_ns1__checkDatafileDownloadAccess(struct soap *soap,
                                              std::string *sessionId,
                                              std::vector<LONG64> &datafileIds,
                                              char *__item1) {
  ns1__checkDatafileDownloadAccess *_p =
      soap_instantiate_ns1__checkDatafileDownloadAccess(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__checkDatafileDownloadAccess::sessionId = sessionId;
    _p->ns1__checkDatafileDownloadAccess::datafileIds = datafileIds;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__checkDatafileDownloadAccess(
    struct soap *soap, ns1__checkDatafileDownloadAccess *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__checkDatafileDownloadAccess(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getFacilityUserByFacilityUserIdResponse
#define SOAP_TYPE_ICat3_ns1__getFacilityUserByFacilityUserIdResponse (133)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getFacilityUserByFacilityUserIdResponse(
    struct soap *, const char *, int,
    const ns1__getFacilityUserByFacilityUserIdResponse *, const char *);
SOAP_FMAC3 ns1__getFacilityUserByFacilityUserIdResponse *SOAP_FMAC4
soap_in_ns1__getFacilityUserByFacilityUserIdResponse(
    struct soap *, const char *, ns1__getFacilityUserByFacilityUserIdResponse *,
    const char *);

#ifndef soap_write_ns1__getFacilityUserByFacilityUserIdResponse
#define soap_write_ns1__getFacilityUserByFacilityUserIdResponse(soap, data)    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getFacilityUserByFacilityUserIdResponse",   \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityUserByFacilityUserIdResponse *SOAP_FMAC4
soap_get_ns1__getFacilityUserByFacilityUserIdResponse(
    struct soap *, ns1__getFacilityUserByFacilityUserIdResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__getFacilityUserByFacilityUserIdResponse
#define soap_read_ns1__getFacilityUserByFacilityUserIdResponse(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getFacilityUserByFacilityUserIdResponse(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getFacilityUserByFacilityUserIdResponse *SOAP_FMAC2
soap_instantiate_ns1__getFacilityUserByFacilityUserIdResponse(struct soap *,
                                                              int, const char *,
                                                              const char *,
                                                              size_t *);

inline ns1__getFacilityUserByFacilityUserIdResponse *
soap_new_ns1__getFacilityUserByFacilityUserIdResponse(struct soap *soap,
                                                      int n = -1) {
  return soap_instantiate_ns1__getFacilityUserByFacilityUserIdResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__getFacilityUserByFacilityUserIdResponse *
soap_new_req_ns1__getFacilityUserByFacilityUserIdResponse(struct soap *soap) {
  ns1__getFacilityUserByFacilityUserIdResponse *_p =
      soap_instantiate_ns1__getFacilityUserByFacilityUserIdResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getFacilityUserByFacilityUserIdResponse *
soap_new_set_ns1__getFacilityUserByFacilityUserIdResponse(
    struct soap *soap, ns1__facilityUser *return_, char *__item1) {
  ns1__getFacilityUserByFacilityUserIdResponse *_p =
      soap_instantiate_ns1__getFacilityUserByFacilityUserIdResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getFacilityUserByFacilityUserIdResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getFacilityUserByFacilityUserIdResponse(
    struct soap *soap, ns1__getFacilityUserByFacilityUserIdResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getFacilityUserByFacilityUserIdResponse(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getFacilityUserByFacilityUserId
#define SOAP_TYPE_ICat3_ns1__getFacilityUserByFacilityUserId (132)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getFacilityUserByFacilityUserId(
    struct soap *, const char *, int,
    const ns1__getFacilityUserByFacilityUserId *, const char *);
SOAP_FMAC3 ns1__getFacilityUserByFacilityUserId *SOAP_FMAC4
soap_in_ns1__getFacilityUserByFacilityUserId(
    struct soap *, const char *, ns1__getFacilityUserByFacilityUserId *,
    const char *);

#ifndef soap_write_ns1__getFacilityUserByFacilityUserId
#define soap_write_ns1__getFacilityUserByFacilityUserId(soap, data)            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getFacilityUserByFacilityUserId", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityUserByFacilityUserId *SOAP_FMAC4
soap_get_ns1__getFacilityUserByFacilityUserId(
    struct soap *, ns1__getFacilityUserByFacilityUserId *, const char *,
    const char *);

#ifndef soap_read_ns1__getFacilityUserByFacilityUserId
#define soap_read_ns1__getFacilityUserByFacilityUserId(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getFacilityUserByFacilityUserId(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getFacilityUserByFacilityUserId *SOAP_FMAC2
soap_instantiate_ns1__getFacilityUserByFacilityUserId(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline ns1__getFacilityUserByFacilityUserId *
soap_new_ns1__getFacilityUserByFacilityUserId(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getFacilityUserByFacilityUserId(soap, n, NULL,
                                                               NULL, NULL);
}

inline ns1__getFacilityUserByFacilityUserId *
soap_new_req_ns1__getFacilityUserByFacilityUserId(struct soap *soap) {
  ns1__getFacilityUserByFacilityUserId *_p =
      soap_instantiate_ns1__getFacilityUserByFacilityUserId(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getFacilityUserByFacilityUserId *
soap_new_set_ns1__getFacilityUserByFacilityUserId(struct soap *soap,
                                                  std::string *sessionId,
                                                  std::string *facilityUserId,
                                                  char *__item1) {
  ns1__getFacilityUserByFacilityUserId *_p =
      soap_instantiate_ns1__getFacilityUserByFacilityUserId(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getFacilityUserByFacilityUserId::sessionId = sessionId;
    _p->ns1__getFacilityUserByFacilityUserId::facilityUserId = facilityUserId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getFacilityUserByFacilityUserId(
    struct soap *soap, ns1__getFacilityUserByFacilityUserId *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getFacilityUserByFacilityUserId(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getFacilityCyclesWithDataForInstrumentResponse
#define SOAP_TYPE_ICat3_ns1__getFacilityCyclesWithDataForInstrumentResponse    \
  (131)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *, const char *, int,
    const ns1__getFacilityCyclesWithDataForInstrumentResponse *, const char *);
SOAP_FMAC3 ns1__getFacilityCyclesWithDataForInstrumentResponse *SOAP_FMAC4
soap_in_ns1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *, const char *,
    ns1__getFacilityCyclesWithDataForInstrumentResponse *, const char *);

#ifndef soap_write_ns1__getFacilityCyclesWithDataForInstrumentResponse
#define soap_write_ns1__getFacilityCyclesWithDataForInstrumentResponse(soap,   \
                                                                       data)   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap,                                                  \
                        "ns1:getFacilityCyclesWithDataForInstrumentResponse",  \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityCyclesWithDataForInstrumentResponse *SOAP_FMAC4
soap_get_ns1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *, ns1__getFacilityCyclesWithDataForInstrumentResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__getFacilityCyclesWithDataForInstrumentResponse
#define soap_read_ns1__getFacilityCyclesWithDataForInstrumentResponse(soap,    \
                                                                      data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getFacilityCyclesWithDataForInstrumentResponse(   \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getFacilityCyclesWithDataForInstrumentResponse *SOAP_FMAC2
soap_instantiate_ns1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__getFacilityCyclesWithDataForInstrumentResponse *
soap_new_ns1__getFacilityCyclesWithDataForInstrumentResponse(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__getFacilityCyclesWithDataForInstrumentResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__getFacilityCyclesWithDataForInstrumentResponse *
soap_new_req_ns1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *soap) {
  ns1__getFacilityCyclesWithDataForInstrumentResponse *_p =
      soap_instantiate_ns1__getFacilityCyclesWithDataForInstrumentResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getFacilityCyclesWithDataForInstrumentResponse *
soap_new_set_ns1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *soap, std::vector<ns1__facilityCycle *> &return_,
    char *__item1) {
  ns1__getFacilityCyclesWithDataForInstrumentResponse *_p =
      soap_instantiate_ns1__getFacilityCyclesWithDataForInstrumentResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getFacilityCyclesWithDataForInstrumentResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *soap, ns1__getFacilityCyclesWithDataForInstrumentResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getFacilityCyclesWithDataForInstrument
#define SOAP_TYPE_ICat3_ns1__getFacilityCyclesWithDataForInstrument (130)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *, const char *, int,
    const ns1__getFacilityCyclesWithDataForInstrument *, const char *);
SOAP_FMAC3 ns1__getFacilityCyclesWithDataForInstrument *SOAP_FMAC4
soap_in_ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *, const char *, ns1__getFacilityCyclesWithDataForInstrument *,
    const char *);

#ifndef soap_write_ns1__getFacilityCyclesWithDataForInstrument
#define soap_write_ns1__getFacilityCyclesWithDataForInstrument(soap, data)     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getFacilityCyclesWithDataForInstrument",    \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityCyclesWithDataForInstrument *SOAP_FMAC4
soap_get_ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *, ns1__getFacilityCyclesWithDataForInstrument *, const char *,
    const char *);

#ifndef soap_read_ns1__getFacilityCyclesWithDataForInstrument
#define soap_read_ns1__getFacilityCyclesWithDataForInstrument(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getFacilityCyclesWithDataForInstrument(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getFacilityCyclesWithDataForInstrument *SOAP_FMAC2
soap_instantiate_ns1__getFacilityCyclesWithDataForInstrument(struct soap *, int,
                                                             const char *,
                                                             const char *,
                                                             size_t *);

inline ns1__getFacilityCyclesWithDataForInstrument *
soap_new_ns1__getFacilityCyclesWithDataForInstrument(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__getFacilityCyclesWithDataForInstrument(
      soap, n, NULL, NULL, NULL);
}

inline ns1__getFacilityCyclesWithDataForInstrument *
soap_new_req_ns1__getFacilityCyclesWithDataForInstrument(struct soap *soap) {
  ns1__getFacilityCyclesWithDataForInstrument *_p =
      soap_instantiate_ns1__getFacilityCyclesWithDataForInstrument(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getFacilityCyclesWithDataForInstrument *
soap_new_set_ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *soap, std::string *sessionId, std::string *instrument,
    char *__item1) {
  ns1__getFacilityCyclesWithDataForInstrument *_p =
      soap_instantiate_ns1__getFacilityCyclesWithDataForInstrument(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getFacilityCyclesWithDataForInstrument::sessionId = sessionId;
    _p->ns1__getFacilityCyclesWithDataForInstrument::instrument = instrument;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *soap, ns1__getFacilityCyclesWithDataForInstrument *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getFacilityCyclesWithDataForInstrument(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addSampleParameterResponse
#define SOAP_TYPE_ICat3_ns1__addSampleParameterResponse (129)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__addSampleParameterResponse(
    struct soap *, const char *, int, const ns1__addSampleParameterResponse *,
    const char *);
SOAP_FMAC3 ns1__addSampleParameterResponse *SOAP_FMAC4
soap_in_ns1__addSampleParameterResponse(struct soap *, const char *,
                                        ns1__addSampleParameterResponse *,
                                        const char *);

#ifndef soap_write_ns1__addSampleParameterResponse
#define soap_write_ns1__addSampleParameterResponse(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addSampleParameterResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addSampleParameterResponse *SOAP_FMAC4
soap_get_ns1__addSampleParameterResponse(struct soap *,
                                         ns1__addSampleParameterResponse *,
                                         const char *, const char *);

#ifndef soap_read_ns1__addSampleParameterResponse
#define soap_read_ns1__addSampleParameterResponse(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addSampleParameterResponse(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addSampleParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__addSampleParameterResponse(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__addSampleParameterResponse *
soap_new_ns1__addSampleParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addSampleParameterResponse(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__addSampleParameterResponse *
soap_new_req_ns1__addSampleParameterResponse(struct soap *soap) {
  ns1__addSampleParameterResponse *_p =
      soap_instantiate_ns1__addSampleParameterResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addSampleParameterResponse *
soap_new_set_ns1__addSampleParameterResponse(struct soap *soap,
                                             ns1__sampleParameter *return_,
                                             char *__item1) {
  ns1__addSampleParameterResponse *_p =
      soap_instantiate_ns1__addSampleParameterResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addSampleParameterResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addSampleParameterResponse(
    struct soap *soap, ns1__addSampleParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addSampleParameterResponse(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addSampleParameter
#define SOAP_TYPE_ICat3_ns1__addSampleParameter (128)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addSampleParameter(struct soap *, const char *, int,
                                 const ns1__addSampleParameter *, const char *);
SOAP_FMAC3 ns1__addSampleParameter *SOAP_FMAC4
soap_in_ns1__addSampleParameter(struct soap *, const char *,
                                ns1__addSampleParameter *, const char *);

#ifndef soap_write_ns1__addSampleParameter
#define soap_write_ns1__addSampleParameter(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addSampleParameter", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addSampleParameter *SOAP_FMAC4
soap_get_ns1__addSampleParameter(struct soap *, ns1__addSampleParameter *,
                                 const char *, const char *);

#ifndef soap_read_ns1__addSampleParameter
#define soap_read_ns1__addSampleParameter(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addSampleParameter(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addSampleParameter *SOAP_FMAC2
soap_instantiate_ns1__addSampleParameter(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__addSampleParameter *
soap_new_ns1__addSampleParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addSampleParameter(soap, n, NULL, NULL, NULL);
}

inline ns1__addSampleParameter *
soap_new_req_ns1__addSampleParameter(struct soap *soap) {
  ns1__addSampleParameter *_p =
      soap_instantiate_ns1__addSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addSampleParameter *
soap_new_set_ns1__addSampleParameter(struct soap *soap, std::string *sessionId,
                                     ns1__sampleParameter *sampleParameter,
                                     LONG64 *investigationId, char *__item1) {
  ns1__addSampleParameter *_p =
      soap_instantiate_ns1__addSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addSampleParameter::sessionId = sessionId;
    _p->ns1__addSampleParameter::sampleParameter = sampleParameter;
    _p->ns1__addSampleParameter::investigationId = investigationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addSampleParameter(struct soap *soap,
                                                ns1__addSampleParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addSampleParameter(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyDataSetResponse
#define SOAP_TYPE_ICat3_ns1__modifyDataSetResponse (127)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifyDataSetResponse(struct soap *, const char *, int,
                                    const ns1__modifyDataSetResponse *,
                                    const char *);
SOAP_FMAC3 ns1__modifyDataSetResponse *SOAP_FMAC4
soap_in_ns1__modifyDataSetResponse(struct soap *, const char *,
                                   ns1__modifyDataSetResponse *, const char *);

#ifndef soap_write_ns1__modifyDataSetResponse
#define soap_write_ns1__modifyDataSetResponse(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyDataSetResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataSetResponse *SOAP_FMAC4
soap_get_ns1__modifyDataSetResponse(struct soap *, ns1__modifyDataSetResponse *,
                                    const char *, const char *);

#ifndef soap_read_ns1__modifyDataSetResponse
#define soap_read_ns1__modifyDataSetResponse(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyDataSetResponse(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyDataSetResponse *SOAP_FMAC2
soap_instantiate_ns1__modifyDataSetResponse(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__modifyDataSetResponse *
soap_new_ns1__modifyDataSetResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifyDataSetResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__modifyDataSetResponse *
soap_new_req_ns1__modifyDataSetResponse(struct soap *soap) {
  ns1__modifyDataSetResponse *_p =
      soap_instantiate_ns1__modifyDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyDataSetResponse *
soap_new_set_ns1__modifyDataSetResponse(struct soap *soap, char *__item1) {
  ns1__modifyDataSetResponse *_p =
      soap_instantiate_ns1__modifyDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__modifyDataSetResponse(struct soap *soap,
                                       ns1__modifyDataSetResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifyDataSetResponse(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifyDataSet
#define SOAP_TYPE_ICat3_ns1__modifyDataSet (126)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifyDataSet(struct soap *, const char *, int,
                            const ns1__modifyDataSet *, const char *);
SOAP_FMAC3 ns1__modifyDataSet *SOAP_FMAC4
soap_in_ns1__modifyDataSet(struct soap *, const char *, ns1__modifyDataSet *,
                           const char *);

#ifndef soap_write_ns1__modifyDataSet
#define soap_write_ns1__modifyDataSet(soap, data)                              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifyDataSet", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataSet *SOAP_FMAC4
soap_get_ns1__modifyDataSet(struct soap *, ns1__modifyDataSet *, const char *,
                            const char *);

#ifndef soap_read_ns1__modifyDataSet
#define soap_read_ns1__modifyDataSet(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifyDataSet(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifyDataSet *SOAP_FMAC2
soap_instantiate_ns1__modifyDataSet(struct soap *, int, const char *,
                                    const char *, size_t *);

inline ns1__modifyDataSet *soap_new_ns1__modifyDataSet(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__modifyDataSet(soap, n, NULL, NULL, NULL);
}

inline ns1__modifyDataSet *soap_new_req_ns1__modifyDataSet(struct soap *soap) {
  ns1__modifyDataSet *_p =
      soap_instantiate_ns1__modifyDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifyDataSet *
soap_new_set_ns1__modifyDataSet(struct soap *soap, std::string *sessionId,
                                ns1__dataset *dataSet, char *__item1) {
  ns1__modifyDataSet *_p =
      soap_instantiate_ns1__modifyDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__modifyDataSet::sessionId = sessionId;
    _p->ns1__modifyDataSet::dataSet = dataSet;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__modifyDataSet(struct soap *soap,
                                           ns1__modifyDataSet *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__modifyDataSet(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByParameterComparisonResponse
#define SOAP_TYPE_ICat3_ns1__searchDatasetByParameterComparisonResponse (125)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatasetByParameterComparisonResponse(
    struct soap *, const char *, int,
    const ns1__searchDatasetByParameterComparisonResponse *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterComparisonResponse *SOAP_FMAC4
soap_in_ns1__searchDatasetByParameterComparisonResponse(
    struct soap *, const char *,
    ns1__searchDatasetByParameterComparisonResponse *, const char *);

#ifndef soap_write_ns1__searchDatasetByParameterComparisonResponse
#define soap_write_ns1__searchDatasetByParameterComparisonResponse(soap, data) \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchDatasetByParameterComparisonResponse", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterComparisonResponse *SOAP_FMAC4
soap_get_ns1__searchDatasetByParameterComparisonResponse(
    struct soap *, ns1__searchDatasetByParameterComparisonResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchDatasetByParameterComparisonResponse
#define soap_read_ns1__searchDatasetByParameterComparisonResponse(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByParameterComparisonResponse(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByParameterComparisonResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByParameterComparisonResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchDatasetByParameterComparisonResponse *
soap_new_ns1__searchDatasetByParameterComparisonResponse(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__searchDatasetByParameterComparisonResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatasetByParameterComparisonResponse *
soap_new_req_ns1__searchDatasetByParameterComparisonResponse(
    struct soap *soap) {
  ns1__searchDatasetByParameterComparisonResponse *_p =
      soap_instantiate_ns1__searchDatasetByParameterComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByParameterComparisonResponse *
soap_new_set_ns1__searchDatasetByParameterComparisonResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatasetByParameterComparisonResponse *_p =
      soap_instantiate_ns1__searchDatasetByParameterComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByParameterComparisonResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByParameterComparisonResponse(
    struct soap *soap, ns1__searchDatasetByParameterComparisonResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByParameterComparisonResponse(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__parameterComparisonCondition
#define SOAP_TYPE_ICat3_ns1__parameterComparisonCondition (124)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__parameterComparisonCondition(
    struct soap *, const char *, int, const ns1__parameterComparisonCondition *,
    const char *);
SOAP_FMAC3 ns1__parameterComparisonCondition *SOAP_FMAC4
soap_in_ns1__parameterComparisonCondition(struct soap *, const char *,
                                          ns1__parameterComparisonCondition *,
                                          const char *);

#ifndef soap_write_ns1__parameterComparisonCondition
#define soap_write_ns1__parameterComparisonCondition(soap, data)               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:parameterComparisonCondition", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterComparisonCondition *SOAP_FMAC4
soap_get_ns1__parameterComparisonCondition(struct soap *,
                                           ns1__parameterComparisonCondition *,
                                           const char *, const char *);

#ifndef soap_read_ns1__parameterComparisonCondition
#define soap_read_ns1__parameterComparisonCondition(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__parameterComparisonCondition(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__parameterComparisonCondition *SOAP_FMAC2
soap_instantiate_ns1__parameterComparisonCondition(struct soap *, int,
                                                   const char *, const char *,
                                                   size_t *);

inline ns1__parameterComparisonCondition *
soap_new_ns1__parameterComparisonCondition(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__parameterComparisonCondition(soap, n, NULL, NULL,
                                                            NULL);
}

inline ns1__parameterComparisonCondition *
soap_new_req_ns1__parameterComparisonCondition(struct soap *soap, bool negate2,
                                               bool sensitive2) {
  ns1__parameterComparisonCondition *_p =
      soap_instantiate_ns1__parameterComparisonCondition(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__condition::negate = negate2;
    _p->ns1__condition::sensitive = sensitive2;
  }
  return _p;
}

inline ns1__parameterComparisonCondition *
soap_new_set_ns1__parameterComparisonCondition(
    struct soap *soap, enum ns1__comparisonOperator *comparator,
    ns1__parameterSearch *parameterSearch, xsd__anyType *value,
    xsd__anyType *valueRight, bool negate2, bool sensitive2, char *__item3) {
  ns1__parameterComparisonCondition *_p =
      soap_instantiate_ns1__parameterComparisonCondition(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__parameterComparisonCondition::comparator = comparator;
    _p->ns1__parameterComparisonCondition::parameterSearch = parameterSearch;
    _p->ns1__parameterComparisonCondition::value = value;
    _p->ns1__parameterComparisonCondition::valueRight = valueRight;
    _p->ns1__condition::negate = negate2;
    _p->ns1__condition::sensitive = sensitive2;
    _p->xsd__anyType::__item = __item3;
  }
  return _p;
}

inline void soap_delete_ns1__parameterComparisonCondition(
    struct soap *soap, ns1__parameterComparisonCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__parameterComparisonCondition(struct soap *, int, int, void *,
                                            size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByParameterComparison
#define SOAP_TYPE_ICat3_ns1__searchDatasetByParameterComparison (123)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatasetByParameterComparison(
    struct soap *, const char *, int,
    const ns1__searchDatasetByParameterComparison *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterComparison *SOAP_FMAC4
soap_in_ns1__searchDatasetByParameterComparison(
    struct soap *, const char *, ns1__searchDatasetByParameterComparison *,
    const char *);

#ifndef soap_write_ns1__searchDatasetByParameterComparison
#define soap_write_ns1__searchDatasetByParameterComparison(soap, data)         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchDatasetByParameterComparison", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterComparison *SOAP_FMAC4
soap_get_ns1__searchDatasetByParameterComparison(
    struct soap *, ns1__searchDatasetByParameterComparison *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatasetByParameterComparison
#define soap_read_ns1__searchDatasetByParameterComparison(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByParameterComparison(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByParameterComparison *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByParameterComparison(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline ns1__searchDatasetByParameterComparison *
soap_new_ns1__searchDatasetByParameterComparison(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate_ns1__searchDatasetByParameterComparison(soap, n, NULL,
                                                                  NULL, NULL);
}

inline ns1__searchDatasetByParameterComparison *
soap_new_req_ns1__searchDatasetByParameterComparison(struct soap *soap) {
  ns1__searchDatasetByParameterComparison *_p =
      soap_instantiate_ns1__searchDatasetByParameterComparison(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByParameterComparison *
soap_new_set_ns1__searchDatasetByParameterComparison(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__parameterComparisonCondition *> &comparison,
    char *__item1) {
  ns1__searchDatasetByParameterComparison *_p =
      soap_instantiate_ns1__searchDatasetByParameterComparison(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByParameterComparison::sessionId = sessionId;
    _p->ns1__searchDatasetByParameterComparison::comparison = comparison;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByParameterComparison(
    struct soap *soap, ns1__searchDatasetByParameterComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByParameterComparison(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByRestrictionResponse
#define SOAP_TYPE_ICat3_ns1__searchSampleByRestrictionResponse (122)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchSampleByRestrictionResponse(
    struct soap *, const char *, int,
    const ns1__searchSampleByRestrictionResponse *, const char *);
SOAP_FMAC3 ns1__searchSampleByRestrictionResponse *SOAP_FMAC4
soap_in_ns1__searchSampleByRestrictionResponse(
    struct soap *, const char *, ns1__searchSampleByRestrictionResponse *,
    const char *);

#ifndef soap_write_ns1__searchSampleByRestrictionResponse
#define soap_write_ns1__searchSampleByRestrictionResponse(soap, data)          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchSampleByRestrictionResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestrictionResponse *SOAP_FMAC4
soap_get_ns1__searchSampleByRestrictionResponse(
    struct soap *, ns1__searchSampleByRestrictionResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchSampleByRestrictionResponse
#define soap_read_ns1__searchSampleByRestrictionResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByRestrictionResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByRestrictionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByRestrictionResponse(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline ns1__searchSampleByRestrictionResponse *
soap_new_ns1__searchSampleByRestrictionResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchSampleByRestrictionResponse(soap, n, NULL,
                                                                 NULL, NULL);
}

inline ns1__searchSampleByRestrictionResponse *
soap_new_req_ns1__searchSampleByRestrictionResponse(struct soap *soap) {
  ns1__searchSampleByRestrictionResponse *_p =
      soap_instantiate_ns1__searchSampleByRestrictionResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByRestrictionResponse *
soap_new_set_ns1__searchSampleByRestrictionResponse(
    struct soap *soap, std::vector<ns1__sample *> &return_, char *__item1) {
  ns1__searchSampleByRestrictionResponse *_p =
      soap_instantiate_ns1__searchSampleByRestrictionResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByRestrictionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByRestrictionResponse(
    struct soap *soap, ns1__searchSampleByRestrictionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByRestrictionResponse(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByRestriction
#define SOAP_TYPE_ICat3_ns1__searchSampleByRestriction (121)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchSampleByRestriction(struct soap *, const char *, int,
                                        const ns1__searchSampleByRestriction *,
                                        const char *);
SOAP_FMAC3 ns1__searchSampleByRestriction *SOAP_FMAC4
soap_in_ns1__searchSampleByRestriction(struct soap *, const char *,
                                       ns1__searchSampleByRestriction *,
                                       const char *);

#ifndef soap_write_ns1__searchSampleByRestriction
#define soap_write_ns1__searchSampleByRestriction(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSampleByRestriction", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestriction *SOAP_FMAC4
soap_get_ns1__searchSampleByRestriction(struct soap *,
                                        ns1__searchSampleByRestriction *,
                                        const char *, const char *);

#ifndef soap_read_ns1__searchSampleByRestriction
#define soap_read_ns1__searchSampleByRestriction(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByRestriction(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByRestriction *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByRestriction(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__searchSampleByRestriction *
soap_new_ns1__searchSampleByRestriction(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchSampleByRestriction(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__searchSampleByRestriction *
soap_new_req_ns1__searchSampleByRestriction(struct soap *soap) {
  ns1__searchSampleByRestriction *_p =
      soap_instantiate_ns1__searchSampleByRestriction(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByRestriction *
soap_new_set_ns1__searchSampleByRestriction(
    struct soap *soap, std::string *sessionId,
    ns1__restrictionCondition *restriction, char *__item1) {
  ns1__searchSampleByRestriction *_p =
      soap_instantiate_ns1__searchSampleByRestriction(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByRestriction::sessionId = sessionId;
    _p->ns1__searchSampleByRestriction::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchSampleByRestriction(struct soap *soap,
                                           ns1__searchSampleByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByRestriction(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__downloadDatafilesResponse
#define SOAP_TYPE_ICat3_ns1__downloadDatafilesResponse (120)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__downloadDatafilesResponse(struct soap *, const char *, int,
                                        const ns1__downloadDatafilesResponse *,
                                        const char *);
SOAP_FMAC3 ns1__downloadDatafilesResponse *SOAP_FMAC4
soap_in_ns1__downloadDatafilesResponse(struct soap *, const char *,
                                       ns1__downloadDatafilesResponse *,
                                       const char *);

#ifndef soap_write_ns1__downloadDatafilesResponse
#define soap_write_ns1__downloadDatafilesResponse(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:downloadDatafilesResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDatafilesResponse *SOAP_FMAC4
soap_get_ns1__downloadDatafilesResponse(struct soap *,
                                        ns1__downloadDatafilesResponse *,
                                        const char *, const char *);

#ifndef soap_read_ns1__downloadDatafilesResponse
#define soap_read_ns1__downloadDatafilesResponse(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__downloadDatafilesResponse(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__downloadDatafilesResponse *SOAP_FMAC2
soap_instantiate_ns1__downloadDatafilesResponse(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__downloadDatafilesResponse *
soap_new_ns1__downloadDatafilesResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__downloadDatafilesResponse(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__downloadDatafilesResponse *
soap_new_req_ns1__downloadDatafilesResponse(struct soap *soap) {
  ns1__downloadDatafilesResponse *_p =
      soap_instantiate_ns1__downloadDatafilesResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__downloadDatafilesResponse *
soap_new_set_ns1__downloadDatafilesResponse(struct soap *soap, std::string *URL,
                                            char *__item1) {
  ns1__downloadDatafilesResponse *_p =
      soap_instantiate_ns1__downloadDatafilesResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__downloadDatafilesResponse::URL = URL;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__downloadDatafilesResponse(struct soap *soap,
                                           ns1__downloadDatafilesResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__downloadDatafilesResponse(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__downloadDatafiles
#define SOAP_TYPE_ICat3_ns1__downloadDatafiles (119)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__downloadDatafiles(struct soap *, const char *, int,
                                const ns1__downloadDatafiles *, const char *);
SOAP_FMAC3 ns1__downloadDatafiles *SOAP_FMAC4
soap_in_ns1__downloadDatafiles(struct soap *, const char *,
                               ns1__downloadDatafiles *, const char *);

#ifndef soap_write_ns1__downloadDatafiles
#define soap_write_ns1__downloadDatafiles(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:downloadDatafiles", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDatafiles *SOAP_FMAC4
soap_get_ns1__downloadDatafiles(struct soap *, ns1__downloadDatafiles *,
                                const char *, const char *);

#ifndef soap_read_ns1__downloadDatafiles
#define soap_read_ns1__downloadDatafiles(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__downloadDatafiles(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__downloadDatafiles *SOAP_FMAC2
soap_instantiate_ns1__downloadDatafiles(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__downloadDatafiles *
soap_new_ns1__downloadDatafiles(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__downloadDatafiles(soap, n, NULL, NULL, NULL);
}

inline ns1__downloadDatafiles *
soap_new_req_ns1__downloadDatafiles(struct soap *soap) {
  ns1__downloadDatafiles *_p =
      soap_instantiate_ns1__downloadDatafiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__downloadDatafiles *
soap_new_set_ns1__downloadDatafiles(struct soap *soap, std::string *sessionId,
                                    std::vector<LONG64> &datafileIds,
                                    char *__item1) {
  ns1__downloadDatafiles *_p =
      soap_instantiate_ns1__downloadDatafiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__downloadDatafiles::sessionId = sessionId;
    _p->ns1__downloadDatafiles::datafileIds = datafileIds;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__downloadDatafiles(struct soap *soap,
                                               ns1__downloadDatafiles *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__downloadDatafiles(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterConditionResponse
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterConditionResponse   \
  (118)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchInvestigationByParameterConditionResponse(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByParameterConditionResponse *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterConditionResponse *SOAP_FMAC4
soap_in_ns1__searchInvestigationByParameterConditionResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterConditionResponse *, const char *);

#ifndef soap_write_ns1__searchInvestigationByParameterConditionResponse
#define soap_write_ns1__searchInvestigationByParameterConditionResponse(soap,  \
                                                                        data)  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap,                                                  \
                        "ns1:searchInvestigationByParameterConditionResponse", \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterConditionResponse *SOAP_FMAC4
soap_get_ns1__searchInvestigationByParameterConditionResponse(
    struct soap *, ns1__searchInvestigationByParameterConditionResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchInvestigationByParameterConditionResponse
#define soap_read_ns1__searchInvestigationByParameterConditionResponse(soap,   \
                                                                       data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByParameterConditionResponse(  \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByParameterConditionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByParameterConditionResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchInvestigationByParameterConditionResponse *
soap_new_ns1__searchInvestigationByParameterConditionResponse(struct soap *soap,
                                                              int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByParameterConditionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByParameterConditionResponse *
soap_new_req_ns1__searchInvestigationByParameterConditionResponse(
    struct soap *soap) {
  ns1__searchInvestigationByParameterConditionResponse *_p =
      soap_instantiate_ns1__searchInvestigationByParameterConditionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByParameterConditionResponse *
soap_new_set_ns1__searchInvestigationByParameterConditionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchInvestigationByParameterConditionResponse *_p =
      soap_instantiate_ns1__searchInvestigationByParameterConditionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByParameterConditionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByParameterConditionResponse(
    struct soap *soap,
    ns1__searchInvestigationByParameterConditionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByParameterConditionResponse(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterCondition
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterCondition (117)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchInvestigationByParameterCondition(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByParameterCondition *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterCondition *SOAP_FMAC4
soap_in_ns1__searchInvestigationByParameterCondition(
    struct soap *, const char *, ns1__searchInvestigationByParameterCondition *,
    const char *);

#ifndef soap_write_ns1__searchInvestigationByParameterCondition
#define soap_write_ns1__searchInvestigationByParameterCondition(soap, data)    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchInvestigationByParameterCondition",   \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterCondition *SOAP_FMAC4
soap_get_ns1__searchInvestigationByParameterCondition(
    struct soap *, ns1__searchInvestigationByParameterCondition *, const char *,
    const char *);

#ifndef soap_read_ns1__searchInvestigationByParameterCondition
#define soap_read_ns1__searchInvestigationByParameterCondition(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByParameterCondition(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByParameterCondition *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByParameterCondition(struct soap *,
                                                              int, const char *,
                                                              const char *,
                                                              size_t *);

inline ns1__searchInvestigationByParameterCondition *
soap_new_ns1__searchInvestigationByParameterCondition(struct soap *soap,
                                                      int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByParameterCondition(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByParameterCondition *
soap_new_req_ns1__searchInvestigationByParameterCondition(struct soap *soap) {
  ns1__searchInvestigationByParameterCondition *_p =
      soap_instantiate_ns1__searchInvestigationByParameterCondition(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByParameterCondition *
soap_new_set_ns1__searchInvestigationByParameterCondition(
    struct soap *soap, std::string *sessionId,
    ns1__parameterCondition *logicalCondition, char *__item1) {
  ns1__searchInvestigationByParameterCondition *_p =
      soap_instantiate_ns1__searchInvestigationByParameterCondition(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByParameterCondition::sessionId = sessionId;
    _p->ns1__searchInvestigationByParameterCondition::logicalCondition =
        logicalCondition;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByParameterCondition(
    struct soap *soap, ns1__searchInvestigationByParameterCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByParameterCondition(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByParameterResponse
#define SOAP_TYPE_ICat3_ns1__searchDatafileByParameterResponse (116)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatafileByParameterResponse(
    struct soap *, const char *, int,
    const ns1__searchDatafileByParameterResponse *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterResponse *SOAP_FMAC4
soap_in_ns1__searchDatafileByParameterResponse(
    struct soap *, const char *, ns1__searchDatafileByParameterResponse *,
    const char *);

#ifndef soap_write_ns1__searchDatafileByParameterResponse
#define soap_write_ns1__searchDatafileByParameterResponse(soap, data)          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchDatafileByParameterResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterResponse *SOAP_FMAC4
soap_get_ns1__searchDatafileByParameterResponse(
    struct soap *, ns1__searchDatafileByParameterResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatafileByParameterResponse
#define soap_read_ns1__searchDatafileByParameterResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByParameterResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByParameterResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByParameterResponse(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline ns1__searchDatafileByParameterResponse *
soap_new_ns1__searchDatafileByParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatafileByParameterResponse(soap, n, NULL,
                                                                 NULL, NULL);
}

inline ns1__searchDatafileByParameterResponse *
soap_new_req_ns1__searchDatafileByParameterResponse(struct soap *soap) {
  ns1__searchDatafileByParameterResponse *_p =
      soap_instantiate_ns1__searchDatafileByParameterResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByParameterResponse *
soap_new_set_ns1__searchDatafileByParameterResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatafileByParameterResponse *_p =
      soap_instantiate_ns1__searchDatafileByParameterResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByParameterResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByParameterResponse(
    struct soap *soap, ns1__searchDatafileByParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByParameterResponse(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_ns1__parameterSearch
#define SOAP_TYPE_ICat3_ns1__parameterSearch (115)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__parameterSearch(struct soap *, const char *, int,
                              const ns1__parameterSearch *, const char *);
SOAP_FMAC3 ns1__parameterSearch *SOAP_FMAC4
soap_in_ns1__parameterSearch(struct soap *, const char *,
                             ns1__parameterSearch *, const char *);

#ifndef soap_write_ns1__parameterSearch
#define soap_write_ns1__parameterSearch(soap, data)                            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:parameterSearch", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterSearch *SOAP_FMAC4
soap_get_ns1__parameterSearch(struct soap *, ns1__parameterSearch *,
                              const char *, const char *);

#ifndef soap_read_ns1__parameterSearch
#define soap_read_ns1__parameterSearch(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__parameterSearch(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__parameterSearch *SOAP_FMAC2
soap_instantiate_ns1__parameterSearch(struct soap *, int, const char *,
                                      const char *, size_t *);

inline ns1__parameterSearch *soap_new_ns1__parameterSearch(struct soap *soap,
                                                           int n = -1) {
  return soap_instantiate_ns1__parameterSearch(soap, n, NULL, NULL, NULL);
}

inline ns1__parameterSearch *
soap_new_req_ns1__parameterSearch(struct soap *soap, bool negate2,
                                  bool sensitive2) {
  ns1__parameterSearch *_p =
      soap_instantiate_ns1__parameterSearch(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__condition::negate = negate2;
    _p->ns1__condition::sensitive = sensitive2;
  }
  return _p;
}

inline ns1__parameterSearch *
soap_new_set_ns1__parameterSearch(struct soap *soap, ns1__parameter *param,
                                  enum ns1__parameterType *type, bool negate2,
                                  bool sensitive2, char *__item3) {
  ns1__parameterSearch *_p =
      soap_instantiate_ns1__parameterSearch(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__parameterSearch::param = param;
    _p->ns1__parameterSearch::type = type;
    _p->ns1__condition::negate = negate2;
    _p->ns1__condition::sensitive = sensitive2;
    _p->xsd__anyType::__item = __item3;
  }
  return _p;
}

inline void soap_delete_ns1__parameterSearch(struct soap *soap,
                                             ns1__parameterSearch *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__parameterSearch(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByParameter
#define SOAP_TYPE_ICat3_ns1__searchDatafileByParameter (114)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatafileByParameter(struct soap *, const char *, int,
                                        const ns1__searchDatafileByParameter *,
                                        const char *);
SOAP_FMAC3 ns1__searchDatafileByParameter *SOAP_FMAC4
soap_in_ns1__searchDatafileByParameter(struct soap *, const char *,
                                       ns1__searchDatafileByParameter *,
                                       const char *);

#ifndef soap_write_ns1__searchDatafileByParameter
#define soap_write_ns1__searchDatafileByParameter(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatafileByParameter", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameter *SOAP_FMAC4
soap_get_ns1__searchDatafileByParameter(struct soap *,
                                        ns1__searchDatafileByParameter *,
                                        const char *, const char *);

#ifndef soap_read_ns1__searchDatafileByParameter
#define soap_read_ns1__searchDatafileByParameter(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByParameter(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByParameter *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByParameter(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__searchDatafileByParameter *
soap_new_ns1__searchDatafileByParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatafileByParameter(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__searchDatafileByParameter *
soap_new_req_ns1__searchDatafileByParameter(struct soap *soap) {
  ns1__searchDatafileByParameter *_p =
      soap_instantiate_ns1__searchDatafileByParameter(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByParameter *
soap_new_set_ns1__searchDatafileByParameter(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__parameterSearch *> &parameters, char *__item1) {
  ns1__searchDatafileByParameter *_p =
      soap_instantiate_ns1__searchDatafileByParameter(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByParameter::sessionId = sessionId;
    _p->ns1__searchDatafileByParameter::parameters = parameters;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchDatafileByParameter(struct soap *soap,
                                           ns1__searchDatafileByParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByParameter(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__userDetails
#define SOAP_TYPE_ICat3_ns1__userDetails (113)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__userDetails(struct soap *, const char *, int,
                          const ns1__userDetails *, const char *);
SOAP_FMAC3 ns1__userDetails *SOAP_FMAC4
soap_in_ns1__userDetails(struct soap *, const char *, ns1__userDetails *,
                         const char *);

#ifndef soap_write_ns1__userDetails
#define soap_write_ns1__userDetails(soap, data)                                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:userDetails", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__userDetails *SOAP_FMAC4
soap_get_ns1__userDetails(struct soap *, ns1__userDetails *, const char *,
                          const char *);

#ifndef soap_read_ns1__userDetails
#define soap_read_ns1__userDetails(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__userDetails(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__userDetails *SOAP_FMAC2
soap_instantiate_ns1__userDetails(struct soap *, int, const char *,
                                  const char *, size_t *);

inline ns1__userDetails *soap_new_ns1__userDetails(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate_ns1__userDetails(soap, n, NULL, NULL, NULL);
}

inline ns1__userDetails *soap_new_req_ns1__userDetails(struct soap *soap) {
  ns1__userDetails *_p =
      soap_instantiate_ns1__userDetails(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__userDetails *soap_new_set_ns1__userDetails(
    struct soap *soap, std::string *credential, std::string *department,
    std::string *email, std::string *federalId, std::string *firstName,
    std::string *initial, std::string *institution, std::string *lastName,
    std::string *title, char *__item1) {
  ns1__userDetails *_p =
      soap_instantiate_ns1__userDetails(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__userDetails::credential = credential;
    _p->ns1__userDetails::department = department;
    _p->ns1__userDetails::email = email;
    _p->ns1__userDetails::federalId = federalId;
    _p->ns1__userDetails::firstName = firstName;
    _p->ns1__userDetails::initial = initial;
    _p->ns1__userDetails::institution = institution;
    _p->ns1__userDetails::lastName = lastName;
    _p->ns1__userDetails::title = title;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__userDetails(struct soap *soap,
                                         ns1__userDetails *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__userDetails(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByRestrictionComparisonResponse
#define SOAP_TYPE_ICat3_ns1__searchDatafileByRestrictionComparisonResponse (112)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatafileByRestrictionComparisonResponse(
    struct soap *, const char *, int,
    const ns1__searchDatafileByRestrictionComparisonResponse *, const char *);
SOAP_FMAC3 ns1__searchDatafileByRestrictionComparisonResponse *SOAP_FMAC4
soap_in_ns1__searchDatafileByRestrictionComparisonResponse(
    struct soap *, const char *,
    ns1__searchDatafileByRestrictionComparisonResponse *, const char *);

#ifndef soap_write_ns1__searchDatafileByRestrictionComparisonResponse
#define soap_write_ns1__searchDatafileByRestrictionComparisonResponse(soap,    \
                                                                      data)    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchDatafileByRestrictionComparisonResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestrictionComparisonResponse *SOAP_FMAC4
soap_get_ns1__searchDatafileByRestrictionComparisonResponse(
    struct soap *, ns1__searchDatafileByRestrictionComparisonResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchDatafileByRestrictionComparisonResponse
#define soap_read_ns1__searchDatafileByRestrictionComparisonResponse(soap,     \
                                                                     data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByRestrictionComparisonResponse(    \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByRestrictionComparisonResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByRestrictionComparisonResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchDatafileByRestrictionComparisonResponse *
soap_new_ns1__searchDatafileByRestrictionComparisonResponse(struct soap *soap,
                                                            int n = -1) {
  return soap_instantiate_ns1__searchDatafileByRestrictionComparisonResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatafileByRestrictionComparisonResponse *
soap_new_req_ns1__searchDatafileByRestrictionComparisonResponse(
    struct soap *soap) {
  ns1__searchDatafileByRestrictionComparisonResponse *_p =
      soap_instantiate_ns1__searchDatafileByRestrictionComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByRestrictionComparisonResponse *
soap_new_set_ns1__searchDatafileByRestrictionComparisonResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatafileByRestrictionComparisonResponse *_p =
      soap_instantiate_ns1__searchDatafileByRestrictionComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByRestrictionComparisonResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByRestrictionComparisonResponse(
    struct soap *soap, ns1__searchDatafileByRestrictionComparisonResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByRestrictionComparisonResponse(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByRestrictionComparison
#define SOAP_TYPE_ICat3_ns1__searchDatafileByRestrictionComparison (111)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatafileByRestrictionComparison(
    struct soap *, const char *, int,
    const ns1__searchDatafileByRestrictionComparison *, const char *);
SOAP_FMAC3 ns1__searchDatafileByRestrictionComparison *SOAP_FMAC4
soap_in_ns1__searchDatafileByRestrictionComparison(
    struct soap *, const char *, ns1__searchDatafileByRestrictionComparison *,
    const char *);

#ifndef soap_write_ns1__searchDatafileByRestrictionComparison
#define soap_write_ns1__searchDatafileByRestrictionComparison(soap, data)      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatafileByRestrictionComparison",     \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestrictionComparison *SOAP_FMAC4
soap_get_ns1__searchDatafileByRestrictionComparison(
    struct soap *, ns1__searchDatafileByRestrictionComparison *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatafileByRestrictionComparison
#define soap_read_ns1__searchDatafileByRestrictionComparison(soap, data)       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByRestrictionComparison(            \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByRestrictionComparison *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByRestrictionComparison(struct soap *, int,
                                                            const char *,
                                                            const char *,
                                                            size_t *);

inline ns1__searchDatafileByRestrictionComparison *
soap_new_ns1__searchDatafileByRestrictionComparison(struct soap *soap,
                                                    int n = -1) {
  return soap_instantiate_ns1__searchDatafileByRestrictionComparison(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatafileByRestrictionComparison *
soap_new_req_ns1__searchDatafileByRestrictionComparison(struct soap *soap) {
  ns1__searchDatafileByRestrictionComparison *_p =
      soap_instantiate_ns1__searchDatafileByRestrictionComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByRestrictionComparison *
soap_new_set_ns1__searchDatafileByRestrictionComparison(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__restrictionComparisonCondition *> &restriction,
    char *__item1) {
  ns1__searchDatafileByRestrictionComparison *_p =
      soap_instantiate_ns1__searchDatafileByRestrictionComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByRestrictionComparison::sessionId = sessionId;
    _p->ns1__searchDatafileByRestrictionComparison::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByRestrictionComparison(
    struct soap *soap, ns1__searchDatafileByRestrictionComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByRestrictionComparison(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getAllKeywordsResponse
#define SOAP_TYPE_ICat3_ns1__getAllKeywordsResponse (110)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getAllKeywordsResponse(struct soap *, const char *, int,
                                     const ns1__getAllKeywordsResponse *,
                                     const char *);
SOAP_FMAC3 ns1__getAllKeywordsResponse *SOAP_FMAC4
soap_in_ns1__getAllKeywordsResponse(struct soap *, const char *,
                                    ns1__getAllKeywordsResponse *,
                                    const char *);

#ifndef soap_write_ns1__getAllKeywordsResponse
#define soap_write_ns1__getAllKeywordsResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getAllKeywordsResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAllKeywordsResponse *SOAP_FMAC4
soap_get_ns1__getAllKeywordsResponse(struct soap *,
                                     ns1__getAllKeywordsResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns1__getAllKeywordsResponse
#define soap_read_ns1__getAllKeywordsResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getAllKeywordsResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getAllKeywordsResponse *SOAP_FMAC2
soap_instantiate_ns1__getAllKeywordsResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__getAllKeywordsResponse *
soap_new_ns1__getAllKeywordsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getAllKeywordsResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__getAllKeywordsResponse *
soap_new_req_ns1__getAllKeywordsResponse(struct soap *soap) {
  ns1__getAllKeywordsResponse *_p =
      soap_instantiate_ns1__getAllKeywordsResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getAllKeywordsResponse *soap_new_set_ns1__getAllKeywordsResponse(
    struct soap *soap, std::vector<std::string> &return_, char *__item1) {
  ns1__getAllKeywordsResponse *_p =
      soap_instantiate_ns1__getAllKeywordsResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getAllKeywordsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getAllKeywordsResponse(struct soap *soap,
                                        ns1__getAllKeywordsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getAllKeywordsResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getAllKeywords
#define SOAP_TYPE_ICat3_ns1__getAllKeywords (109)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getAllKeywords(struct soap *, const char *, int,
                             const ns1__getAllKeywords *, const char *);
SOAP_FMAC3 ns1__getAllKeywords *SOAP_FMAC4
soap_in_ns1__getAllKeywords(struct soap *, const char *, ns1__getAllKeywords *,
                            const char *);

#ifndef soap_write_ns1__getAllKeywords
#define soap_write_ns1__getAllKeywords(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getAllKeywords", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAllKeywords *SOAP_FMAC4
soap_get_ns1__getAllKeywords(struct soap *, ns1__getAllKeywords *, const char *,
                             const char *);

#ifndef soap_read_ns1__getAllKeywords
#define soap_read_ns1__getAllKeywords(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getAllKeywords(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getAllKeywords *SOAP_FMAC2
soap_instantiate_ns1__getAllKeywords(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__getAllKeywords *soap_new_ns1__getAllKeywords(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__getAllKeywords(soap, n, NULL, NULL, NULL);
}

inline ns1__getAllKeywords *
soap_new_req_ns1__getAllKeywords(struct soap *soap) {
  ns1__getAllKeywords *_p =
      soap_instantiate_ns1__getAllKeywords(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getAllKeywords *
soap_new_set_ns1__getAllKeywords(struct soap *soap, std::string *sessionId,
                                 enum ns1__keywordType *type, char *__item1) {
  ns1__getAllKeywords *_p =
      soap_instantiate_ns1__getAllKeywords(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getAllKeywords::sessionId = sessionId;
    _p->ns1__getAllKeywords::type = type;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getAllKeywords(struct soap *soap,
                                            ns1__getAllKeywords *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getAllKeywords(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removePublicationResponse
#define SOAP_TYPE_ICat3_ns1__removePublicationResponse (108)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removePublicationResponse(struct soap *, const char *, int,
                                        const ns1__removePublicationResponse *,
                                        const char *);
SOAP_FMAC3 ns1__removePublicationResponse *SOAP_FMAC4
soap_in_ns1__removePublicationResponse(struct soap *, const char *,
                                       ns1__removePublicationResponse *,
                                       const char *);

#ifndef soap_write_ns1__removePublicationResponse
#define soap_write_ns1__removePublicationResponse(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removePublicationResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removePublicationResponse *SOAP_FMAC4
soap_get_ns1__removePublicationResponse(struct soap *,
                                        ns1__removePublicationResponse *,
                                        const char *, const char *);

#ifndef soap_read_ns1__removePublicationResponse
#define soap_read_ns1__removePublicationResponse(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removePublicationResponse(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removePublicationResponse *SOAP_FMAC2
soap_instantiate_ns1__removePublicationResponse(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__removePublicationResponse *
soap_new_ns1__removePublicationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removePublicationResponse(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__removePublicationResponse *
soap_new_req_ns1__removePublicationResponse(struct soap *soap) {
  ns1__removePublicationResponse *_p =
      soap_instantiate_ns1__removePublicationResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removePublicationResponse *
soap_new_set_ns1__removePublicationResponse(struct soap *soap, char *__item1) {
  ns1__removePublicationResponse *_p =
      soap_instantiate_ns1__removePublicationResponse(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__removePublicationResponse(struct soap *soap,
                                           ns1__removePublicationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removePublicationResponse(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removePublication
#define SOAP_TYPE_ICat3_ns1__removePublication (107)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removePublication(struct soap *, const char *, int,
                                const ns1__removePublication *, const char *);
SOAP_FMAC3 ns1__removePublication *SOAP_FMAC4
soap_in_ns1__removePublication(struct soap *, const char *,
                               ns1__removePublication *, const char *);

#ifndef soap_write_ns1__removePublication
#define soap_write_ns1__removePublication(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removePublication", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removePublication *SOAP_FMAC4
soap_get_ns1__removePublication(struct soap *, ns1__removePublication *,
                                const char *, const char *);

#ifndef soap_read_ns1__removePublication
#define soap_read_ns1__removePublication(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removePublication(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removePublication *SOAP_FMAC2
soap_instantiate_ns1__removePublication(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__removePublication *
soap_new_ns1__removePublication(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removePublication(soap, n, NULL, NULL, NULL);
}

inline ns1__removePublication *
soap_new_req_ns1__removePublication(struct soap *soap) {
  ns1__removePublication *_p =
      soap_instantiate_ns1__removePublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removePublication *
soap_new_set_ns1__removePublication(struct soap *soap, std::string *sessionId,
                                    LONG64 *publicationId, char *__item1) {
  ns1__removePublication *_p =
      soap_instantiate_ns1__removePublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__removePublication::sessionId = sessionId;
    _p->ns1__removePublication::publicationId = publicationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removePublication(struct soap *soap,
                                               ns1__removePublication *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removePublication(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__createDataSetsResponse
#define SOAP_TYPE_ICat3_ns1__createDataSetsResponse (106)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__createDataSetsResponse(struct soap *, const char *, int,
                                     const ns1__createDataSetsResponse *,
                                     const char *);
SOAP_FMAC3 ns1__createDataSetsResponse *SOAP_FMAC4
soap_in_ns1__createDataSetsResponse(struct soap *, const char *,
                                    ns1__createDataSetsResponse *,
                                    const char *);

#ifndef soap_write_ns1__createDataSetsResponse
#define soap_write_ns1__createDataSetsResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:createDataSetsResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataSetsResponse *SOAP_FMAC4
soap_get_ns1__createDataSetsResponse(struct soap *,
                                     ns1__createDataSetsResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns1__createDataSetsResponse
#define soap_read_ns1__createDataSetsResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__createDataSetsResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__createDataSetsResponse *SOAP_FMAC2
soap_instantiate_ns1__createDataSetsResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__createDataSetsResponse *
soap_new_ns1__createDataSetsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__createDataSetsResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__createDataSetsResponse *
soap_new_req_ns1__createDataSetsResponse(struct soap *soap) {
  ns1__createDataSetsResponse *_p =
      soap_instantiate_ns1__createDataSetsResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__createDataSetsResponse *soap_new_set_ns1__createDataSetsResponse(
    struct soap *soap, std::vector<ns1__dataset *> &return_, char *__item1) {
  ns1__createDataSetsResponse *_p =
      soap_instantiate_ns1__createDataSetsResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__createDataSetsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__createDataSetsResponse(struct soap *soap,
                                        ns1__createDataSetsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__createDataSetsResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__datasetParameterPK
#define SOAP_TYPE_ICat3_ns1__datasetParameterPK (105)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__datasetParameterPK(struct soap *, const char *, int,
                                 const ns1__datasetParameterPK *, const char *);
SOAP_FMAC3 ns1__datasetParameterPK *SOAP_FMAC4
soap_in_ns1__datasetParameterPK(struct soap *, const char *,
                                ns1__datasetParameterPK *, const char *);

#ifndef soap_write_ns1__datasetParameterPK
#define soap_write_ns1__datasetParameterPK(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:datasetParameterPK", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datasetParameterPK *SOAP_FMAC4
soap_get_ns1__datasetParameterPK(struct soap *, ns1__datasetParameterPK *,
                                 const char *, const char *);

#ifndef soap_read_ns1__datasetParameterPK
#define soap_read_ns1__datasetParameterPK(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__datasetParameterPK(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__datasetParameterPK *SOAP_FMAC2
soap_instantiate_ns1__datasetParameterPK(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__datasetParameterPK *
soap_new_ns1__datasetParameterPK(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__datasetParameterPK(soap, n, NULL, NULL, NULL);
}

inline ns1__datasetParameterPK *
soap_new_req_ns1__datasetParameterPK(struct soap *soap) {
  ns1__datasetParameterPK *_p =
      soap_instantiate_ns1__datasetParameterPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__datasetParameterPK *
soap_new_set_ns1__datasetParameterPK(struct soap *soap, LONG64 *datasetId,
                                     std::string *name, std::string *units,
                                     char *__item2) {
  ns1__datasetParameterPK *_p =
      soap_instantiate_ns1__datasetParameterPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__datasetParameterPK::datasetId = datasetId;
    _p->ns1__datasetParameterPK::name = name;
    _p->ns1__datasetParameterPK::units = units;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__datasetParameterPK(struct soap *soap,
                                                ns1__datasetParameterPK *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__datasetParameterPK(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__datasetParameter
#define SOAP_TYPE_ICat3_ns1__datasetParameter (104)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__datasetParameter(struct soap *, const char *, int,
                               const ns1__datasetParameter *, const char *);
SOAP_FMAC3 ns1__datasetParameter *SOAP_FMAC4
soap_in_ns1__datasetParameter(struct soap *, const char *,
                              ns1__datasetParameter *, const char *);

#ifndef soap_write_ns1__datasetParameter
#define soap_write_ns1__datasetParameter(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:datasetParameter", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datasetParameter *SOAP_FMAC4
soap_get_ns1__datasetParameter(struct soap *, ns1__datasetParameter *,
                               const char *, const char *);

#ifndef soap_read_ns1__datasetParameter
#define soap_read_ns1__datasetParameter(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__datasetParameter(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__datasetParameter *SOAP_FMAC2
soap_instantiate_ns1__datasetParameter(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__datasetParameter *soap_new_ns1__datasetParameter(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__datasetParameter(soap, n, NULL, NULL, NULL);
}

inline ns1__datasetParameter *
soap_new_req_ns1__datasetParameter(struct soap *soap,
                                   bool facilityAcquiredData1, bool selected1) {
  ns1__datasetParameter *_p =
      soap_instantiate_ns1__datasetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__datasetParameter *soap_new_set_ns1__datasetParameter(
    struct soap *soap, ns1__datasetParameterPK *datasetParameterPK,
    time_t *dateTimeValue, std::string *description, std::string *error,
    double *numericValue, ns1__parameter *parameter, std::string *rangeBottom,
    std::string *rangeTop, std::string *stringValue,
    enum ns1__parameterValueType *valueType, bool facilityAcquiredData1,
    ns1__icatRole *icatRole1, bool selected1, std::string *uniqueId1,
    char *__item2) {
  ns1__datasetParameter *_p =
      soap_instantiate_ns1__datasetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__datasetParameter::datasetParameterPK = datasetParameterPK;
    _p->ns1__datasetParameter::dateTimeValue = dateTimeValue;
    _p->ns1__datasetParameter::description = description;
    _p->ns1__datasetParameter::error = error;
    _p->ns1__datasetParameter::numericValue = numericValue;
    _p->ns1__datasetParameter::parameter = parameter;
    _p->ns1__datasetParameter::rangeBottom = rangeBottom;
    _p->ns1__datasetParameter::rangeTop = rangeTop;
    _p->ns1__datasetParameter::stringValue = stringValue;
    _p->ns1__datasetParameter::valueType = valueType;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__datasetParameter(struct soap *soap,
                                              ns1__datasetParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__datasetParameter(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__dataset
#define SOAP_TYPE_ICat3_ns1__dataset (103)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__dataset(struct soap *, const char *,
                                                int, const ns1__dataset *,
                                                const char *);
SOAP_FMAC3 ns1__dataset *SOAP_FMAC4
soap_in_ns1__dataset(struct soap *, const char *, ns1__dataset *, const char *);

#ifndef soap_write_ns1__dataset
#define soap_write_ns1__dataset(soap, data)                                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:dataset", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__dataset *SOAP_FMAC4
soap_get_ns1__dataset(struct soap *, ns1__dataset *, const char *,
                      const char *);

#ifndef soap_read_ns1__dataset
#define soap_read_ns1__dataset(soap, data)                                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__dataset(soap, data, NULL, NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__dataset *SOAP_FMAC2
soap_instantiate_ns1__dataset(struct soap *, int, const char *, const char *,
                              size_t *);

inline ns1__dataset *soap_new_ns1__dataset(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__dataset(soap, n, NULL, NULL, NULL);
}

inline ns1__dataset *soap_new_req_ns1__dataset(struct soap *soap,
                                               bool facilityAcquiredData1,
                                               bool selected1) {
  ns1__dataset *_p = soap_instantiate_ns1__dataset(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__dataset *soap_new_set_ns1__dataset(
    struct soap *soap, std::vector<ns1__datafile *> &datafileCollection,
    std::vector<ns1__datasetParameter *> &datasetParameterCollection,
    std::string *datasetStatus, std::string *datasetType,
    std::string *description, LONG64 *id, LONG64 *investigationId,
    std::string *location, std::string *name, LONG64 *sampleId,
    bool facilityAcquiredData1, ns1__icatRole *icatRole1, bool selected1,
    std::string *uniqueId1, char *__item2) {
  ns1__dataset *_p = soap_instantiate_ns1__dataset(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__dataset::datafileCollection = datafileCollection;
    _p->ns1__dataset::datasetParameterCollection = datasetParameterCollection;
    _p->ns1__dataset::datasetStatus = datasetStatus;
    _p->ns1__dataset::datasetType = datasetType;
    _p->ns1__dataset::description = description;
    _p->ns1__dataset::id = id;
    _p->ns1__dataset::investigationId = investigationId;
    _p->ns1__dataset::location = location;
    _p->ns1__dataset::name = name;
    _p->ns1__dataset::sampleId = sampleId;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__dataset(struct soap *soap, ns1__dataset *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__dataset(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_ns1__createDataSets
#define SOAP_TYPE_ICat3_ns1__createDataSets (102)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__createDataSets(struct soap *, const char *, int,
                             const ns1__createDataSets *, const char *);
SOAP_FMAC3 ns1__createDataSets *SOAP_FMAC4
soap_in_ns1__createDataSets(struct soap *, const char *, ns1__createDataSets *,
                            const char *);

#ifndef soap_write_ns1__createDataSets
#define soap_write_ns1__createDataSets(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:createDataSets", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataSets *SOAP_FMAC4
soap_get_ns1__createDataSets(struct soap *, ns1__createDataSets *, const char *,
                             const char *);

#ifndef soap_read_ns1__createDataSets
#define soap_read_ns1__createDataSets(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__createDataSets(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__createDataSets *SOAP_FMAC2
soap_instantiate_ns1__createDataSets(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__createDataSets *soap_new_ns1__createDataSets(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__createDataSets(soap, n, NULL, NULL, NULL);
}

inline ns1__createDataSets *
soap_new_req_ns1__createDataSets(struct soap *soap) {
  ns1__createDataSets *_p =
      soap_instantiate_ns1__createDataSets(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__createDataSets *
soap_new_set_ns1__createDataSets(struct soap *soap, std::string *sessionId,
                                 std::vector<ns1__dataset *> &dataSets,
                                 LONG64 *investigationId, char *__item1) {
  ns1__createDataSets *_p =
      soap_instantiate_ns1__createDataSets(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__createDataSets::sessionId = sessionId;
    _p->ns1__createDataSets::dataSets = dataSets;
    _p->ns1__createDataSets::investigationId = investigationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__createDataSets(struct soap *soap,
                                            ns1__createDataSets *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__createDataSets(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteInvestigationResponse
#define SOAP_TYPE_ICat3_ns1__deleteInvestigationResponse (101)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__deleteInvestigationResponse(
    struct soap *, const char *, int, const ns1__deleteInvestigationResponse *,
    const char *);
SOAP_FMAC3 ns1__deleteInvestigationResponse *SOAP_FMAC4
soap_in_ns1__deleteInvestigationResponse(struct soap *, const char *,
                                         ns1__deleteInvestigationResponse *,
                                         const char *);

#ifndef soap_write_ns1__deleteInvestigationResponse
#define soap_write_ns1__deleteInvestigationResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteInvestigationResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteInvestigationResponse *SOAP_FMAC4
soap_get_ns1__deleteInvestigationResponse(struct soap *,
                                          ns1__deleteInvestigationResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__deleteInvestigationResponse
#define soap_read_ns1__deleteInvestigationResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteInvestigationResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteInvestigationResponse *SOAP_FMAC2
soap_instantiate_ns1__deleteInvestigationResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__deleteInvestigationResponse *
soap_new_ns1__deleteInvestigationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteInvestigationResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__deleteInvestigationResponse *
soap_new_req_ns1__deleteInvestigationResponse(struct soap *soap) {
  ns1__deleteInvestigationResponse *_p =
      soap_instantiate_ns1__deleteInvestigationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteInvestigationResponse *
soap_new_set_ns1__deleteInvestigationResponse(struct soap *soap,
                                              char *__item1) {
  ns1__deleteInvestigationResponse *_p =
      soap_instantiate_ns1__deleteInvestigationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteInvestigationResponse(
    struct soap *soap, ns1__deleteInvestigationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteInvestigationResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__deleteInvestigation
#define SOAP_TYPE_ICat3_ns1__deleteInvestigation (100)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__deleteInvestigation(struct soap *, const char *, int,
                                  const ns1__deleteInvestigation *,
                                  const char *);
SOAP_FMAC3 ns1__deleteInvestigation *SOAP_FMAC4
soap_in_ns1__deleteInvestigation(struct soap *, const char *,
                                 ns1__deleteInvestigation *, const char *);

#ifndef soap_write_ns1__deleteInvestigation
#define soap_write_ns1__deleteInvestigation(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:deleteInvestigation", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteInvestigation *SOAP_FMAC4
soap_get_ns1__deleteInvestigation(struct soap *, ns1__deleteInvestigation *,
                                  const char *, const char *);

#ifndef soap_read_ns1__deleteInvestigation
#define soap_read_ns1__deleteInvestigation(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__deleteInvestigation(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__deleteInvestigation *SOAP_FMAC2
soap_instantiate_ns1__deleteInvestigation(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__deleteInvestigation *
soap_new_ns1__deleteInvestigation(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__deleteInvestigation(soap, n, NULL, NULL, NULL);
}

inline ns1__deleteInvestigation *
soap_new_req_ns1__deleteInvestigation(struct soap *soap) {
  ns1__deleteInvestigation *_p =
      soap_instantiate_ns1__deleteInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__deleteInvestigation *
soap_new_set_ns1__deleteInvestigation(struct soap *soap, std::string *sessionId,
                                      LONG64 *investigationId, char *__item1) {
  ns1__deleteInvestigation *_p =
      soap_instantiate_ns1__deleteInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__deleteInvestigation::sessionId = sessionId;
    _p->ns1__deleteInvestigation::investigationId = investigationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__deleteInvestigation(struct soap *soap,
                                                 ns1__deleteInvestigation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__deleteInvestigation(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeKeywordResponse
#define SOAP_TYPE_ICat3_ns1__removeKeywordResponse (99)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeKeywordResponse(struct soap *, const char *, int,
                                    const ns1__removeKeywordResponse *,
                                    const char *);
SOAP_FMAC3 ns1__removeKeywordResponse *SOAP_FMAC4
soap_in_ns1__removeKeywordResponse(struct soap *, const char *,
                                   ns1__removeKeywordResponse *, const char *);

#ifndef soap_write_ns1__removeKeywordResponse
#define soap_write_ns1__removeKeywordResponse(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeKeywordResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeKeywordResponse *SOAP_FMAC4
soap_get_ns1__removeKeywordResponse(struct soap *, ns1__removeKeywordResponse *,
                                    const char *, const char *);

#ifndef soap_read_ns1__removeKeywordResponse
#define soap_read_ns1__removeKeywordResponse(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeKeywordResponse(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeKeywordResponse *SOAP_FMAC2
soap_instantiate_ns1__removeKeywordResponse(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__removeKeywordResponse *
soap_new_ns1__removeKeywordResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeKeywordResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__removeKeywordResponse *
soap_new_req_ns1__removeKeywordResponse(struct soap *soap) {
  ns1__removeKeywordResponse *_p =
      soap_instantiate_ns1__removeKeywordResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeKeywordResponse *
soap_new_set_ns1__removeKeywordResponse(struct soap *soap, char *__item1) {
  ns1__removeKeywordResponse *_p =
      soap_instantiate_ns1__removeKeywordResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__removeKeywordResponse(struct soap *soap,
                                       ns1__removeKeywordResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeKeywordResponse(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__keywordPK
#define SOAP_TYPE_ICat3_ns1__keywordPK (98)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__keywordPK(struct soap *, const char *,
                                                  int, const ns1__keywordPK *,
                                                  const char *);
SOAP_FMAC3 ns1__keywordPK *SOAP_FMAC4
soap_in_ns1__keywordPK(struct soap *, const char *, ns1__keywordPK *,
                       const char *);

#ifndef soap_write_ns1__keywordPK
#define soap_write_ns1__keywordPK(soap, data)                                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:keywordPK", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__keywordPK *SOAP_FMAC4
soap_get_ns1__keywordPK(struct soap *, ns1__keywordPK *, const char *,
                        const char *);

#ifndef soap_read_ns1__keywordPK
#define soap_read_ns1__keywordPK(soap, data)                                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__keywordPK(soap, data, NULL, NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__keywordPK *SOAP_FMAC2
soap_instantiate_ns1__keywordPK(struct soap *, int, const char *, const char *,
                                size_t *);

inline ns1__keywordPK *soap_new_ns1__keywordPK(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__keywordPK(soap, n, NULL, NULL, NULL);
}

inline ns1__keywordPK *soap_new_req_ns1__keywordPK(struct soap *soap) {
  ns1__keywordPK *_p =
      soap_instantiate_ns1__keywordPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__keywordPK *soap_new_set_ns1__keywordPK(struct soap *soap,
                                                   LONG64 *investigationId,
                                                   std::string *name,
                                                   char *__item2) {
  ns1__keywordPK *_p =
      soap_instantiate_ns1__keywordPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__keywordPK::investigationId = investigationId;
    _p->ns1__keywordPK::name = name;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__keywordPK(struct soap *soap, ns1__keywordPK *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__keywordPK(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeKeyword
#define SOAP_TYPE_ICat3_ns1__removeKeyword (97)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeKeyword(struct soap *, const char *, int,
                            const ns1__removeKeyword *, const char *);
SOAP_FMAC3 ns1__removeKeyword *SOAP_FMAC4
soap_in_ns1__removeKeyword(struct soap *, const char *, ns1__removeKeyword *,
                           const char *);

#ifndef soap_write_ns1__removeKeyword
#define soap_write_ns1__removeKeyword(soap, data)                              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeKeyword", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeKeyword *SOAP_FMAC4
soap_get_ns1__removeKeyword(struct soap *, ns1__removeKeyword *, const char *,
                            const char *);

#ifndef soap_read_ns1__removeKeyword
#define soap_read_ns1__removeKeyword(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeKeyword(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeKeyword *SOAP_FMAC2
soap_instantiate_ns1__removeKeyword(struct soap *, int, const char *,
                                    const char *, size_t *);

inline ns1__removeKeyword *soap_new_ns1__removeKeyword(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__removeKeyword(soap, n, NULL, NULL, NULL);
}

inline ns1__removeKeyword *soap_new_req_ns1__removeKeyword(struct soap *soap) {
  ns1__removeKeyword *_p =
      soap_instantiate_ns1__removeKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeKeyword *
soap_new_set_ns1__removeKeyword(struct soap *soap, std::string *sessionId,
                                ns1__keywordPK *keywordPK, char *__item1) {
  ns1__removeKeyword *_p =
      soap_instantiate_ns1__removeKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__removeKeyword::sessionId = sessionId;
    _p->ns1__removeKeyword::keywordPK = keywordPK;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeKeyword(struct soap *soap,
                                           ns1__removeKeyword *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__removeKeyword(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getParameterByRestrictionResponse
#define SOAP_TYPE_ICat3_ns1__getParameterByRestrictionResponse (96)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getParameterByRestrictionResponse(
    struct soap *, const char *, int,
    const ns1__getParameterByRestrictionResponse *, const char *);
SOAP_FMAC3 ns1__getParameterByRestrictionResponse *SOAP_FMAC4
soap_in_ns1__getParameterByRestrictionResponse(
    struct soap *, const char *, ns1__getParameterByRestrictionResponse *,
    const char *);

#ifndef soap_write_ns1__getParameterByRestrictionResponse
#define soap_write_ns1__getParameterByRestrictionResponse(soap, data)          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:getParameterByRestrictionResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByRestrictionResponse *SOAP_FMAC4
soap_get_ns1__getParameterByRestrictionResponse(
    struct soap *, ns1__getParameterByRestrictionResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__getParameterByRestrictionResponse
#define soap_read_ns1__getParameterByRestrictionResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getParameterByRestrictionResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getParameterByRestrictionResponse *SOAP_FMAC2
soap_instantiate_ns1__getParameterByRestrictionResponse(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline ns1__getParameterByRestrictionResponse *
soap_new_ns1__getParameterByRestrictionResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getParameterByRestrictionResponse(soap, n, NULL,
                                                                 NULL, NULL);
}

inline ns1__getParameterByRestrictionResponse *
soap_new_req_ns1__getParameterByRestrictionResponse(struct soap *soap) {
  ns1__getParameterByRestrictionResponse *_p =
      soap_instantiate_ns1__getParameterByRestrictionResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getParameterByRestrictionResponse *
soap_new_set_ns1__getParameterByRestrictionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__getParameterByRestrictionResponse *_p =
      soap_instantiate_ns1__getParameterByRestrictionResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getParameterByRestrictionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getParameterByRestrictionResponse(
    struct soap *soap, ns1__getParameterByRestrictionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getParameterByRestrictionResponse(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getParameterByRestriction
#define SOAP_TYPE_ICat3_ns1__getParameterByRestriction (95)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getParameterByRestriction(struct soap *, const char *, int,
                                        const ns1__getParameterByRestriction *,
                                        const char *);
SOAP_FMAC3 ns1__getParameterByRestriction *SOAP_FMAC4
soap_in_ns1__getParameterByRestriction(struct soap *, const char *,
                                       ns1__getParameterByRestriction *,
                                       const char *);

#ifndef soap_write_ns1__getParameterByRestriction
#define soap_write_ns1__getParameterByRestriction(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getParameterByRestriction", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByRestriction *SOAP_FMAC4
soap_get_ns1__getParameterByRestriction(struct soap *,
                                        ns1__getParameterByRestriction *,
                                        const char *, const char *);

#ifndef soap_read_ns1__getParameterByRestriction
#define soap_read_ns1__getParameterByRestriction(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getParameterByRestriction(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getParameterByRestriction *SOAP_FMAC2
soap_instantiate_ns1__getParameterByRestriction(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__getParameterByRestriction *
soap_new_ns1__getParameterByRestriction(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getParameterByRestriction(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__getParameterByRestriction *
soap_new_req_ns1__getParameterByRestriction(struct soap *soap) {
  ns1__getParameterByRestriction *_p =
      soap_instantiate_ns1__getParameterByRestriction(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getParameterByRestriction *
soap_new_set_ns1__getParameterByRestriction(
    struct soap *soap, std::string *sessionId,
    ns1__restrictionCondition *condition, char *__item1) {
  ns1__getParameterByRestriction *_p =
      soap_instantiate_ns1__getParameterByRestriction(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getParameterByRestriction::sessionId = sessionId;
    _p->ns1__getParameterByRestriction::condition = condition;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getParameterByRestriction(struct soap *soap,
                                           ns1__getParameterByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getParameterByRestriction(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeInvestigatorResponse
#define SOAP_TYPE_ICat3_ns1__removeInvestigatorResponse (94)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__removeInvestigatorResponse(
    struct soap *, const char *, int, const ns1__removeInvestigatorResponse *,
    const char *);
SOAP_FMAC3 ns1__removeInvestigatorResponse *SOAP_FMAC4
soap_in_ns1__removeInvestigatorResponse(struct soap *, const char *,
                                        ns1__removeInvestigatorResponse *,
                                        const char *);

#ifndef soap_write_ns1__removeInvestigatorResponse
#define soap_write_ns1__removeInvestigatorResponse(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeInvestigatorResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeInvestigatorResponse *SOAP_FMAC4
soap_get_ns1__removeInvestigatorResponse(struct soap *,
                                         ns1__removeInvestigatorResponse *,
                                         const char *, const char *);

#ifndef soap_read_ns1__removeInvestigatorResponse
#define soap_read_ns1__removeInvestigatorResponse(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeInvestigatorResponse(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeInvestigatorResponse *SOAP_FMAC2
soap_instantiate_ns1__removeInvestigatorResponse(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__removeInvestigatorResponse *
soap_new_ns1__removeInvestigatorResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeInvestigatorResponse(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__removeInvestigatorResponse *
soap_new_req_ns1__removeInvestigatorResponse(struct soap *soap) {
  ns1__removeInvestigatorResponse *_p =
      soap_instantiate_ns1__removeInvestigatorResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeInvestigatorResponse *
soap_new_set_ns1__removeInvestigatorResponse(struct soap *soap, char *__item1) {
  ns1__removeInvestigatorResponse *_p =
      soap_instantiate_ns1__removeInvestigatorResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeInvestigatorResponse(
    struct soap *soap, ns1__removeInvestigatorResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeInvestigatorResponse(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__investigatorPK
#define SOAP_TYPE_ICat3_ns1__investigatorPK (93)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__investigatorPK(struct soap *, const char *, int,
                             const ns1__investigatorPK *, const char *);
SOAP_FMAC3 ns1__investigatorPK *SOAP_FMAC4
soap_in_ns1__investigatorPK(struct soap *, const char *, ns1__investigatorPK *,
                            const char *);

#ifndef soap_write_ns1__investigatorPK
#define soap_write_ns1__investigatorPK(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:investigatorPK", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__investigatorPK *SOAP_FMAC4
soap_get_ns1__investigatorPK(struct soap *, ns1__investigatorPK *, const char *,
                             const char *);

#ifndef soap_read_ns1__investigatorPK
#define soap_read_ns1__investigatorPK(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__investigatorPK(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__investigatorPK *SOAP_FMAC2
soap_instantiate_ns1__investigatorPK(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__investigatorPK *soap_new_ns1__investigatorPK(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__investigatorPK(soap, n, NULL, NULL, NULL);
}

inline ns1__investigatorPK *
soap_new_req_ns1__investigatorPK(struct soap *soap) {
  ns1__investigatorPK *_p =
      soap_instantiate_ns1__investigatorPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__investigatorPK *
soap_new_set_ns1__investigatorPK(struct soap *soap, std::string *facilityUserId,
                                 LONG64 *investigationId, char *__item2) {
  ns1__investigatorPK *_p =
      soap_instantiate_ns1__investigatorPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__investigatorPK::facilityUserId = facilityUserId;
    _p->ns1__investigatorPK::investigationId = investigationId;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__investigatorPK(struct soap *soap,
                                            ns1__investigatorPK *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__investigatorPK(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeInvestigator
#define SOAP_TYPE_ICat3_ns1__removeInvestigator (92)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeInvestigator(struct soap *, const char *, int,
                                 const ns1__removeInvestigator *, const char *);
SOAP_FMAC3 ns1__removeInvestigator *SOAP_FMAC4
soap_in_ns1__removeInvestigator(struct soap *, const char *,
                                ns1__removeInvestigator *, const char *);

#ifndef soap_write_ns1__removeInvestigator
#define soap_write_ns1__removeInvestigator(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeInvestigator", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeInvestigator *SOAP_FMAC4
soap_get_ns1__removeInvestigator(struct soap *, ns1__removeInvestigator *,
                                 const char *, const char *);

#ifndef soap_read_ns1__removeInvestigator
#define soap_read_ns1__removeInvestigator(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeInvestigator(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeInvestigator *SOAP_FMAC2
soap_instantiate_ns1__removeInvestigator(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__removeInvestigator *
soap_new_ns1__removeInvestigator(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeInvestigator(soap, n, NULL, NULL, NULL);
}

inline ns1__removeInvestigator *
soap_new_req_ns1__removeInvestigator(struct soap *soap) {
  ns1__removeInvestigator *_p =
      soap_instantiate_ns1__removeInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeInvestigator *
soap_new_set_ns1__removeInvestigator(struct soap *soap, std::string *sessionId,
                                     ns1__investigatorPK *investigatorPK,
                                     char *__item1) {
  ns1__removeInvestigator *_p =
      soap_instantiate_ns1__removeInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__removeInvestigator::sessionId = sessionId;
    _p->ns1__removeInvestigator::investigatorPK = investigatorPK;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeInvestigator(struct soap *soap,
                                                ns1__removeInvestigator *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeInvestigator(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeInvestigationResponse
#define SOAP_TYPE_ICat3_ns1__removeInvestigationResponse (91)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__removeInvestigationResponse(
    struct soap *, const char *, int, const ns1__removeInvestigationResponse *,
    const char *);
SOAP_FMAC3 ns1__removeInvestigationResponse *SOAP_FMAC4
soap_in_ns1__removeInvestigationResponse(struct soap *, const char *,
                                         ns1__removeInvestigationResponse *,
                                         const char *);

#ifndef soap_write_ns1__removeInvestigationResponse
#define soap_write_ns1__removeInvestigationResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeInvestigationResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeInvestigationResponse *SOAP_FMAC4
soap_get_ns1__removeInvestigationResponse(struct soap *,
                                          ns1__removeInvestigationResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__removeInvestigationResponse
#define soap_read_ns1__removeInvestigationResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeInvestigationResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeInvestigationResponse *SOAP_FMAC2
soap_instantiate_ns1__removeInvestigationResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__removeInvestigationResponse *
soap_new_ns1__removeInvestigationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeInvestigationResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__removeInvestigationResponse *
soap_new_req_ns1__removeInvestigationResponse(struct soap *soap) {
  ns1__removeInvestigationResponse *_p =
      soap_instantiate_ns1__removeInvestigationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeInvestigationResponse *
soap_new_set_ns1__removeInvestigationResponse(struct soap *soap,
                                              char *__item1) {
  ns1__removeInvestigationResponse *_p =
      soap_instantiate_ns1__removeInvestigationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeInvestigationResponse(
    struct soap *soap, ns1__removeInvestigationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeInvestigationResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeInvestigation
#define SOAP_TYPE_ICat3_ns1__removeInvestigation (90)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeInvestigation(struct soap *, const char *, int,
                                  const ns1__removeInvestigation *,
                                  const char *);
SOAP_FMAC3 ns1__removeInvestigation *SOAP_FMAC4
soap_in_ns1__removeInvestigation(struct soap *, const char *,
                                 ns1__removeInvestigation *, const char *);

#ifndef soap_write_ns1__removeInvestigation
#define soap_write_ns1__removeInvestigation(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeInvestigation", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeInvestigation *SOAP_FMAC4
soap_get_ns1__removeInvestigation(struct soap *, ns1__removeInvestigation *,
                                  const char *, const char *);

#ifndef soap_read_ns1__removeInvestigation
#define soap_read_ns1__removeInvestigation(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeInvestigation(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeInvestigation *SOAP_FMAC2
soap_instantiate_ns1__removeInvestigation(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__removeInvestigation *
soap_new_ns1__removeInvestigation(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeInvestigation(soap, n, NULL, NULL, NULL);
}

inline ns1__removeInvestigation *
soap_new_req_ns1__removeInvestigation(struct soap *soap) {
  ns1__removeInvestigation *_p =
      soap_instantiate_ns1__removeInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeInvestigation *
soap_new_set_ns1__removeInvestigation(struct soap *soap, std::string *sessionId,
                                      LONG64 *investigationId, char *__item1) {
  ns1__removeInvestigation *_p =
      soap_instantiate_ns1__removeInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__removeInvestigation::sessionId = sessionId;
    _p->ns1__removeInvestigation::investigationId = investigationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeInvestigation(struct soap *soap,
                                                 ns1__removeInvestigation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeInvestigation(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getFacilityUserByFederalIdResponse
#define SOAP_TYPE_ICat3_ns1__getFacilityUserByFederalIdResponse (89)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getFacilityUserByFederalIdResponse(
    struct soap *, const char *, int,
    const ns1__getFacilityUserByFederalIdResponse *, const char *);
SOAP_FMAC3 ns1__getFacilityUserByFederalIdResponse *SOAP_FMAC4
soap_in_ns1__getFacilityUserByFederalIdResponse(
    struct soap *, const char *, ns1__getFacilityUserByFederalIdResponse *,
    const char *);

#ifndef soap_write_ns1__getFacilityUserByFederalIdResponse
#define soap_write_ns1__getFacilityUserByFederalIdResponse(soap, data)         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:getFacilityUserByFederalIdResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityUserByFederalIdResponse *SOAP_FMAC4
soap_get_ns1__getFacilityUserByFederalIdResponse(
    struct soap *, ns1__getFacilityUserByFederalIdResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__getFacilityUserByFederalIdResponse
#define soap_read_ns1__getFacilityUserByFederalIdResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getFacilityUserByFederalIdResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getFacilityUserByFederalIdResponse *SOAP_FMAC2
soap_instantiate_ns1__getFacilityUserByFederalIdResponse(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline ns1__getFacilityUserByFederalIdResponse *
soap_new_ns1__getFacilityUserByFederalIdResponse(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate_ns1__getFacilityUserByFederalIdResponse(soap, n, NULL,
                                                                  NULL, NULL);
}

inline ns1__getFacilityUserByFederalIdResponse *
soap_new_req_ns1__getFacilityUserByFederalIdResponse(struct soap *soap) {
  ns1__getFacilityUserByFederalIdResponse *_p =
      soap_instantiate_ns1__getFacilityUserByFederalIdResponse(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getFacilityUserByFederalIdResponse *
soap_new_set_ns1__getFacilityUserByFederalIdResponse(struct soap *soap,
                                                     ns1__facilityUser *return_,
                                                     char *__item1) {
  ns1__getFacilityUserByFederalIdResponse *_p =
      soap_instantiate_ns1__getFacilityUserByFederalIdResponse(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getFacilityUserByFederalIdResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getFacilityUserByFederalIdResponse(
    struct soap *soap, ns1__getFacilityUserByFederalIdResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getFacilityUserByFederalIdResponse(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getFacilityUserByFederalId
#define SOAP_TYPE_ICat3_ns1__getFacilityUserByFederalId (88)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getFacilityUserByFederalId(
    struct soap *, const char *, int, const ns1__getFacilityUserByFederalId *,
    const char *);
SOAP_FMAC3 ns1__getFacilityUserByFederalId *SOAP_FMAC4
soap_in_ns1__getFacilityUserByFederalId(struct soap *, const char *,
                                        ns1__getFacilityUserByFederalId *,
                                        const char *);

#ifndef soap_write_ns1__getFacilityUserByFederalId
#define soap_write_ns1__getFacilityUserByFederalId(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getFacilityUserByFederalId", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityUserByFederalId *SOAP_FMAC4
soap_get_ns1__getFacilityUserByFederalId(struct soap *,
                                         ns1__getFacilityUserByFederalId *,
                                         const char *, const char *);

#ifndef soap_read_ns1__getFacilityUserByFederalId
#define soap_read_ns1__getFacilityUserByFederalId(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getFacilityUserByFederalId(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getFacilityUserByFederalId *SOAP_FMAC2
soap_instantiate_ns1__getFacilityUserByFederalId(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__getFacilityUserByFederalId *
soap_new_ns1__getFacilityUserByFederalId(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getFacilityUserByFederalId(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__getFacilityUserByFederalId *
soap_new_req_ns1__getFacilityUserByFederalId(struct soap *soap) {
  ns1__getFacilityUserByFederalId *_p =
      soap_instantiate_ns1__getFacilityUserByFederalId(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getFacilityUserByFederalId *
soap_new_set_ns1__getFacilityUserByFederalId(struct soap *soap,
                                             std::string *sessionId,
                                             std::string *federalId,
                                             char *__item1) {
  ns1__getFacilityUserByFederalId *_p =
      soap_instantiate_ns1__getFacilityUserByFederalId(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getFacilityUserByFederalId::sessionId = sessionId;
    _p->ns1__getFacilityUserByFederalId::federalId = federalId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getFacilityUserByFederalId(
    struct soap *soap, ns1__getFacilityUserByFederalId *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getFacilityUserByFederalId(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__downloadDatasetResponse
#define SOAP_TYPE_ICat3_ns1__downloadDatasetResponse (87)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__downloadDatasetResponse(struct soap *, const char *, int,
                                      const ns1__downloadDatasetResponse *,
                                      const char *);
SOAP_FMAC3 ns1__downloadDatasetResponse *SOAP_FMAC4
soap_in_ns1__downloadDatasetResponse(struct soap *, const char *,
                                     ns1__downloadDatasetResponse *,
                                     const char *);

#ifndef soap_write_ns1__downloadDatasetResponse
#define soap_write_ns1__downloadDatasetResponse(soap, data)                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:downloadDatasetResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDatasetResponse *SOAP_FMAC4
soap_get_ns1__downloadDatasetResponse(struct soap *,
                                      ns1__downloadDatasetResponse *,
                                      const char *, const char *);

#ifndef soap_read_ns1__downloadDatasetResponse
#define soap_read_ns1__downloadDatasetResponse(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__downloadDatasetResponse(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__downloadDatasetResponse *SOAP_FMAC2
soap_instantiate_ns1__downloadDatasetResponse(struct soap *, int, const char *,
                                              const char *, size_t *);

inline ns1__downloadDatasetResponse *
soap_new_ns1__downloadDatasetResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__downloadDatasetResponse(soap, n, NULL, NULL,
                                                       NULL);
}

inline ns1__downloadDatasetResponse *
soap_new_req_ns1__downloadDatasetResponse(struct soap *soap) {
  ns1__downloadDatasetResponse *_p =
      soap_instantiate_ns1__downloadDatasetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__downloadDatasetResponse *
soap_new_set_ns1__downloadDatasetResponse(struct soap *soap, std::string *URL,
                                          char *__item1) {
  ns1__downloadDatasetResponse *_p =
      soap_instantiate_ns1__downloadDatasetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__downloadDatasetResponse::URL = URL;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__downloadDatasetResponse(struct soap *soap,
                                         ns1__downloadDatasetResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__downloadDatasetResponse(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__downloadDataset
#define SOAP_TYPE_ICat3_ns1__downloadDataset (86)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__downloadDataset(struct soap *, const char *, int,
                              const ns1__downloadDataset *, const char *);
SOAP_FMAC3 ns1__downloadDataset *SOAP_FMAC4
soap_in_ns1__downloadDataset(struct soap *, const char *,
                             ns1__downloadDataset *, const char *);

#ifndef soap_write_ns1__downloadDataset
#define soap_write_ns1__downloadDataset(soap, data)                            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:downloadDataset", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDataset *SOAP_FMAC4
soap_get_ns1__downloadDataset(struct soap *, ns1__downloadDataset *,
                              const char *, const char *);

#ifndef soap_read_ns1__downloadDataset
#define soap_read_ns1__downloadDataset(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__downloadDataset(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__downloadDataset *SOAP_FMAC2
soap_instantiate_ns1__downloadDataset(struct soap *, int, const char *,
                                      const char *, size_t *);

inline ns1__downloadDataset *soap_new_ns1__downloadDataset(struct soap *soap,
                                                           int n = -1) {
  return soap_instantiate_ns1__downloadDataset(soap, n, NULL, NULL, NULL);
}

inline ns1__downloadDataset *
soap_new_req_ns1__downloadDataset(struct soap *soap) {
  ns1__downloadDataset *_p =
      soap_instantiate_ns1__downloadDataset(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__downloadDataset *
soap_new_set_ns1__downloadDataset(struct soap *soap, std::string *sessionId,
                                  LONG64 *datasetId, char *__item1) {
  ns1__downloadDataset *_p =
      soap_instantiate_ns1__downloadDataset(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__downloadDataset::sessionId = sessionId;
    _p->ns1__downloadDataset::datasetId = datasetId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__downloadDataset(struct soap *soap,
                                             ns1__downloadDataset *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__downloadDataset(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__instrument
#define SOAP_TYPE_ICat3_ns1__instrument (85)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__instrument(struct soap *, const char *,
                                                   int, const ns1__instrument *,
                                                   const char *);
SOAP_FMAC3 ns1__instrument *SOAP_FMAC4
soap_in_ns1__instrument(struct soap *, const char *, ns1__instrument *,
                        const char *);

#ifndef soap_write_ns1__instrument
#define soap_write_ns1__instrument(soap, data)                                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:instrument", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__instrument *SOAP_FMAC4
soap_get_ns1__instrument(struct soap *, ns1__instrument *, const char *,
                         const char *);

#ifndef soap_read_ns1__instrument
#define soap_read_ns1__instrument(soap, data)                                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__instrument(soap, data, NULL, NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__instrument *SOAP_FMAC2
soap_instantiate_ns1__instrument(struct soap *, int, const char *, const char *,
                                 size_t *);

inline ns1__instrument *soap_new_ns1__instrument(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate_ns1__instrument(soap, n, NULL, NULL, NULL);
}

inline ns1__instrument *soap_new_req_ns1__instrument(struct soap *soap,
                                                     bool facilityAcquiredData1,
                                                     bool selected1) {
  ns1__instrument *_p =
      soap_instantiate_ns1__instrument(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__instrument *
soap_new_set_ns1__instrument(struct soap *soap, std::string *description,
                             std::string *name, std::string *shortName,
                             std::string *type, bool facilityAcquiredData1,
                             ns1__icatRole *icatRole1, bool selected1,
                             std::string *uniqueId1, char *__item2) {
  ns1__instrument *_p =
      soap_instantiate_ns1__instrument(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__instrument::description = description;
    _p->ns1__instrument::name = name;
    _p->ns1__instrument::shortName = shortName;
    _p->ns1__instrument::type = type;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__instrument(struct soap *soap, ns1__instrument *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__instrument(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getInstrumentsWithDataResponse
#define SOAP_TYPE_ICat3_ns1__getInstrumentsWithDataResponse (84)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getInstrumentsWithDataResponse(
    struct soap *, const char *, int,
    const ns1__getInstrumentsWithDataResponse *, const char *);
SOAP_FMAC3 ns1__getInstrumentsWithDataResponse *SOAP_FMAC4
soap_in_ns1__getInstrumentsWithDataResponse(
    struct soap *, const char *, ns1__getInstrumentsWithDataResponse *,
    const char *);

#ifndef soap_write_ns1__getInstrumentsWithDataResponse
#define soap_write_ns1__getInstrumentsWithDataResponse(soap, data)             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getInstrumentsWithDataResponse", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInstrumentsWithDataResponse *SOAP_FMAC4
soap_get_ns1__getInstrumentsWithDataResponse(
    struct soap *, ns1__getInstrumentsWithDataResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__getInstrumentsWithDataResponse
#define soap_read_ns1__getInstrumentsWithDataResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getInstrumentsWithDataResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getInstrumentsWithDataResponse *SOAP_FMAC2
soap_instantiate_ns1__getInstrumentsWithDataResponse(struct soap *, int,
                                                     const char *, const char *,
                                                     size_t *);

inline ns1__getInstrumentsWithDataResponse *
soap_new_ns1__getInstrumentsWithDataResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getInstrumentsWithDataResponse(soap, n, NULL,
                                                              NULL, NULL);
}

inline ns1__getInstrumentsWithDataResponse *
soap_new_req_ns1__getInstrumentsWithDataResponse(struct soap *soap) {
  ns1__getInstrumentsWithDataResponse *_p =
      soap_instantiate_ns1__getInstrumentsWithDataResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getInstrumentsWithDataResponse *
soap_new_set_ns1__getInstrumentsWithDataResponse(
    struct soap *soap, std::vector<ns1__instrument *> &return_, char *__item1) {
  ns1__getInstrumentsWithDataResponse *_p =
      soap_instantiate_ns1__getInstrumentsWithDataResponse(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getInstrumentsWithDataResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getInstrumentsWithDataResponse(
    struct soap *soap, ns1__getInstrumentsWithDataResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getInstrumentsWithDataResponse(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getInstrumentsWithData
#define SOAP_TYPE_ICat3_ns1__getInstrumentsWithData (83)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getInstrumentsWithData(struct soap *, const char *, int,
                                     const ns1__getInstrumentsWithData *,
                                     const char *);
SOAP_FMAC3 ns1__getInstrumentsWithData *SOAP_FMAC4
soap_in_ns1__getInstrumentsWithData(struct soap *, const char *,
                                    ns1__getInstrumentsWithData *,
                                    const char *);

#ifndef soap_write_ns1__getInstrumentsWithData
#define soap_write_ns1__getInstrumentsWithData(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getInstrumentsWithData", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInstrumentsWithData *SOAP_FMAC4
soap_get_ns1__getInstrumentsWithData(struct soap *,
                                     ns1__getInstrumentsWithData *,
                                     const char *, const char *);

#ifndef soap_read_ns1__getInstrumentsWithData
#define soap_read_ns1__getInstrumentsWithData(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getInstrumentsWithData(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getInstrumentsWithData *SOAP_FMAC2
soap_instantiate_ns1__getInstrumentsWithData(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__getInstrumentsWithData *
soap_new_ns1__getInstrumentsWithData(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getInstrumentsWithData(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__getInstrumentsWithData *
soap_new_req_ns1__getInstrumentsWithData(struct soap *soap) {
  ns1__getInstrumentsWithData *_p =
      soap_instantiate_ns1__getInstrumentsWithData(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getInstrumentsWithData *soap_new_set_ns1__getInstrumentsWithData(
    struct soap *soap, std::string *sessionId, char *__item1) {
  ns1__getInstrumentsWithData *_p =
      soap_instantiate_ns1__getInstrumentsWithData(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getInstrumentsWithData::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getInstrumentsWithData(struct soap *soap,
                                        ns1__getInstrumentsWithData *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getInstrumentsWithData(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__logoutResponse
#define SOAP_TYPE_ICat3_ns1__logoutResponse (82)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__logoutResponse(struct soap *, const char *, int,
                             const ns1__logoutResponse *, const char *);
SOAP_FMAC3 ns1__logoutResponse *SOAP_FMAC4
soap_in_ns1__logoutResponse(struct soap *, const char *, ns1__logoutResponse *,
                            const char *);

#ifndef soap_write_ns1__logoutResponse
#define soap_write_ns1__logoutResponse(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:logoutResponse", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__logoutResponse *SOAP_FMAC4
soap_get_ns1__logoutResponse(struct soap *, ns1__logoutResponse *, const char *,
                             const char *);

#ifndef soap_read_ns1__logoutResponse
#define soap_read_ns1__logoutResponse(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__logoutResponse(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__logoutResponse *SOAP_FMAC2
soap_instantiate_ns1__logoutResponse(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__logoutResponse *soap_new_ns1__logoutResponse(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__logoutResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__logoutResponse *soap_new_req_ns1__logoutResponse(struct soap *soap,
                                                             bool return_) {
  ns1__logoutResponse *_p =
      soap_instantiate_ns1__logoutResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__logoutResponse::return_ = return_;
  }
  return _p;
}

inline ns1__logoutResponse *soap_new_set_ns1__logoutResponse(struct soap *soap,
                                                             bool return_,
                                                             char *__item1) {
  ns1__logoutResponse *_p =
      soap_instantiate_ns1__logoutResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__logoutResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__logoutResponse(struct soap *soap,
                                            ns1__logoutResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__logoutResponse(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__logout
#define SOAP_TYPE_ICat3_ns1__logout (81)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__logout(struct soap *, const char *, int,
                                               const ns1__logout *,
                                               const char *);
SOAP_FMAC3 ns1__logout *SOAP_FMAC4
soap_in_ns1__logout(struct soap *, const char *, ns1__logout *, const char *);

#ifndef soap_write_ns1__logout
#define soap_write_ns1__logout(soap, data)                                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:logout", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__logout *SOAP_FMAC4
soap_get_ns1__logout(struct soap *, ns1__logout *, const char *, const char *);

#ifndef soap_read_ns1__logout
#define soap_read_ns1__logout(soap, data)                                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__logout(soap, data, NULL, NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__logout *SOAP_FMAC2
soap_instantiate_ns1__logout(struct soap *, int, const char *, const char *,
                             size_t *);

inline ns1__logout *soap_new_ns1__logout(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__logout(soap, n, NULL, NULL, NULL);
}

inline ns1__logout *soap_new_req_ns1__logout(struct soap *soap) {
  ns1__logout *_p = soap_instantiate_ns1__logout(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__logout *soap_new_set_ns1__logout(struct soap *soap,
                                             std::string *sessionId,
                                             char *__item1) {
  ns1__logout *_p = soap_instantiate_ns1__logout(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__logout::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__logout(struct soap *soap, ns1__logout *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__logout(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addDataFileParametersResponse
#define SOAP_TYPE_ICat3_ns1__addDataFileParametersResponse (80)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__addDataFileParametersResponse(
    struct soap *, const char *, int,
    const ns1__addDataFileParametersResponse *, const char *);
SOAP_FMAC3 ns1__addDataFileParametersResponse *SOAP_FMAC4
soap_in_ns1__addDataFileParametersResponse(struct soap *, const char *,
                                           ns1__addDataFileParametersResponse *,
                                           const char *);

#ifndef soap_write_ns1__addDataFileParametersResponse
#define soap_write_ns1__addDataFileParametersResponse(soap, data)              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addDataFileParametersResponse", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataFileParametersResponse *SOAP_FMAC4
soap_get_ns1__addDataFileParametersResponse(
    struct soap *, ns1__addDataFileParametersResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__addDataFileParametersResponse
#define soap_read_ns1__addDataFileParametersResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addDataFileParametersResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addDataFileParametersResponse *SOAP_FMAC2
soap_instantiate_ns1__addDataFileParametersResponse(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline ns1__addDataFileParametersResponse *
soap_new_ns1__addDataFileParametersResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addDataFileParametersResponse(soap, n, NULL,
                                                             NULL, NULL);
}

inline ns1__addDataFileParametersResponse *
soap_new_req_ns1__addDataFileParametersResponse(struct soap *soap) {
  ns1__addDataFileParametersResponse *_p =
      soap_instantiate_ns1__addDataFileParametersResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addDataFileParametersResponse *
soap_new_set_ns1__addDataFileParametersResponse(
    struct soap *soap, std::vector<ns1__datafileParameter *> &return_,
    char *__item1) {
  ns1__addDataFileParametersResponse *_p =
      soap_instantiate_ns1__addDataFileParametersResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addDataFileParametersResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__addDataFileParametersResponse(
    struct soap *soap, ns1__addDataFileParametersResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addDataFileParametersResponse(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__addDataFileParameters
#define SOAP_TYPE_ICat3_ns1__addDataFileParameters (79)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__addDataFileParameters(struct soap *, const char *, int,
                                    const ns1__addDataFileParameters *,
                                    const char *);
SOAP_FMAC3 ns1__addDataFileParameters *SOAP_FMAC4
soap_in_ns1__addDataFileParameters(struct soap *, const char *,
                                   ns1__addDataFileParameters *, const char *);

#ifndef soap_write_ns1__addDataFileParameters
#define soap_write_ns1__addDataFileParameters(soap, data)                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:addDataFileParameters", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataFileParameters *SOAP_FMAC4
soap_get_ns1__addDataFileParameters(struct soap *, ns1__addDataFileParameters *,
                                    const char *, const char *);

#ifndef soap_read_ns1__addDataFileParameters
#define soap_read_ns1__addDataFileParameters(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__addDataFileParameters(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__addDataFileParameters *SOAP_FMAC2
soap_instantiate_ns1__addDataFileParameters(struct soap *, int, const char *,
                                            const char *, size_t *);

inline ns1__addDataFileParameters *
soap_new_ns1__addDataFileParameters(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__addDataFileParameters(soap, n, NULL, NULL, NULL);
}

inline ns1__addDataFileParameters *
soap_new_req_ns1__addDataFileParameters(struct soap *soap) {
  ns1__addDataFileParameters *_p =
      soap_instantiate_ns1__addDataFileParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__addDataFileParameters *soap_new_set_ns1__addDataFileParameters(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__datafileParameter *> &dataFileParameters,
    LONG64 *datafileId, char *__item1) {
  ns1__addDataFileParameters *_p =
      soap_instantiate_ns1__addDataFileParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__addDataFileParameters::sessionId = sessionId;
    _p->ns1__addDataFileParameters::dataFileParameters = dataFileParameters;
    _p->ns1__addDataFileParameters::datafileId = datafileId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__addDataFileParameters(struct soap *soap,
                                       ns1__addDataFileParameters *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__addDataFileParameters(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__facilityCycle
#define SOAP_TYPE_ICat3_ns1__facilityCycle (78)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__facilityCycle(struct soap *, const char *, int,
                            const ns1__facilityCycle *, const char *);
SOAP_FMAC3 ns1__facilityCycle *SOAP_FMAC4
soap_in_ns1__facilityCycle(struct soap *, const char *, ns1__facilityCycle *,
                           const char *);

#ifndef soap_write_ns1__facilityCycle
#define soap_write_ns1__facilityCycle(soap, data)                              \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:facilityCycle", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__facilityCycle *SOAP_FMAC4
soap_get_ns1__facilityCycle(struct soap *, ns1__facilityCycle *, const char *,
                            const char *);

#ifndef soap_read_ns1__facilityCycle
#define soap_read_ns1__facilityCycle(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__facilityCycle(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__facilityCycle *SOAP_FMAC2
soap_instantiate_ns1__facilityCycle(struct soap *, int, const char *,
                                    const char *, size_t *);

inline ns1__facilityCycle *soap_new_ns1__facilityCycle(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_ns1__facilityCycle(soap, n, NULL, NULL, NULL);
}

inline ns1__facilityCycle *
soap_new_req_ns1__facilityCycle(struct soap *soap, bool facilityAcquiredData1,
                                bool selected1) {
  ns1__facilityCycle *_p =
      soap_instantiate_ns1__facilityCycle(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__facilityCycle *
soap_new_set_ns1__facilityCycle(struct soap *soap, std::string *description,
                                time_t *finishDate, std::string *name,
                                time_t *startDate, bool facilityAcquiredData1,
                                ns1__icatRole *icatRole1, bool selected1,
                                std::string *uniqueId1, char *__item2) {
  ns1__facilityCycle *_p =
      soap_instantiate_ns1__facilityCycle(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__facilityCycle::description = description;
    _p->ns1__facilityCycle::finishDate = finishDate;
    _p->ns1__facilityCycle::name = name;
    _p->ns1__facilityCycle::startDate = startDate;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__facilityCycle(struct soap *soap,
                                           ns1__facilityCycle *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__facilityCycle(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listFacilityCyclesResponse
#define SOAP_TYPE_ICat3_ns1__listFacilityCyclesResponse (77)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__listFacilityCyclesResponse(
    struct soap *, const char *, int, const ns1__listFacilityCyclesResponse *,
    const char *);
SOAP_FMAC3 ns1__listFacilityCyclesResponse *SOAP_FMAC4
soap_in_ns1__listFacilityCyclesResponse(struct soap *, const char *,
                                        ns1__listFacilityCyclesResponse *,
                                        const char *);

#ifndef soap_write_ns1__listFacilityCyclesResponse
#define soap_write_ns1__listFacilityCyclesResponse(soap, data)                 \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listFacilityCyclesResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listFacilityCyclesResponse *SOAP_FMAC4
soap_get_ns1__listFacilityCyclesResponse(struct soap *,
                                         ns1__listFacilityCyclesResponse *,
                                         const char *, const char *);

#ifndef soap_read_ns1__listFacilityCyclesResponse
#define soap_read_ns1__listFacilityCyclesResponse(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listFacilityCyclesResponse(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listFacilityCyclesResponse *SOAP_FMAC2
soap_instantiate_ns1__listFacilityCyclesResponse(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline ns1__listFacilityCyclesResponse *
soap_new_ns1__listFacilityCyclesResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listFacilityCyclesResponse(soap, n, NULL, NULL,
                                                          NULL);
}

inline ns1__listFacilityCyclesResponse *
soap_new_req_ns1__listFacilityCyclesResponse(struct soap *soap) {
  ns1__listFacilityCyclesResponse *_p =
      soap_instantiate_ns1__listFacilityCyclesResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listFacilityCyclesResponse *
soap_new_set_ns1__listFacilityCyclesResponse(
    struct soap *soap, std::vector<ns1__facilityCycle *> &return_,
    char *__item1) {
  ns1__listFacilityCyclesResponse *_p =
      soap_instantiate_ns1__listFacilityCyclesResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listFacilityCyclesResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__listFacilityCyclesResponse(
    struct soap *soap, ns1__listFacilityCyclesResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listFacilityCyclesResponse(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listFacilityCycles
#define SOAP_TYPE_ICat3_ns1__listFacilityCycles (76)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listFacilityCycles(struct soap *, const char *, int,
                                 const ns1__listFacilityCycles *, const char *);
SOAP_FMAC3 ns1__listFacilityCycles *SOAP_FMAC4
soap_in_ns1__listFacilityCycles(struct soap *, const char *,
                                ns1__listFacilityCycles *, const char *);

#ifndef soap_write_ns1__listFacilityCycles
#define soap_write_ns1__listFacilityCycles(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listFacilityCycles", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listFacilityCycles *SOAP_FMAC4
soap_get_ns1__listFacilityCycles(struct soap *, ns1__listFacilityCycles *,
                                 const char *, const char *);

#ifndef soap_read_ns1__listFacilityCycles
#define soap_read_ns1__listFacilityCycles(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listFacilityCycles(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listFacilityCycles *SOAP_FMAC2
soap_instantiate_ns1__listFacilityCycles(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__listFacilityCycles *
soap_new_ns1__listFacilityCycles(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listFacilityCycles(soap, n, NULL, NULL, NULL);
}

inline ns1__listFacilityCycles *
soap_new_req_ns1__listFacilityCycles(struct soap *soap) {
  ns1__listFacilityCycles *_p =
      soap_instantiate_ns1__listFacilityCycles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listFacilityCycles *
soap_new_set_ns1__listFacilityCycles(struct soap *soap, std::string *sessionId,
                                     char *__item1) {
  ns1__listFacilityCycles *_p =
      soap_instantiate_ns1__listFacilityCycles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listFacilityCycles::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__listFacilityCycles(struct soap *soap,
                                                ns1__listFacilityCycles *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listFacilityCycles(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeAuthorisationResponse
#define SOAP_TYPE_ICat3_ns1__removeAuthorisationResponse (75)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__removeAuthorisationResponse(
    struct soap *, const char *, int, const ns1__removeAuthorisationResponse *,
    const char *);
SOAP_FMAC3 ns1__removeAuthorisationResponse *SOAP_FMAC4
soap_in_ns1__removeAuthorisationResponse(struct soap *, const char *,
                                         ns1__removeAuthorisationResponse *,
                                         const char *);

#ifndef soap_write_ns1__removeAuthorisationResponse
#define soap_write_ns1__removeAuthorisationResponse(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeAuthorisationResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeAuthorisationResponse *SOAP_FMAC4
soap_get_ns1__removeAuthorisationResponse(struct soap *,
                                          ns1__removeAuthorisationResponse *,
                                          const char *, const char *);

#ifndef soap_read_ns1__removeAuthorisationResponse
#define soap_read_ns1__removeAuthorisationResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeAuthorisationResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeAuthorisationResponse *SOAP_FMAC2
soap_instantiate_ns1__removeAuthorisationResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__removeAuthorisationResponse *
soap_new_ns1__removeAuthorisationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeAuthorisationResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__removeAuthorisationResponse *
soap_new_req_ns1__removeAuthorisationResponse(struct soap *soap) {
  ns1__removeAuthorisationResponse *_p =
      soap_instantiate_ns1__removeAuthorisationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeAuthorisationResponse *
soap_new_set_ns1__removeAuthorisationResponse(struct soap *soap,
                                              char *__item1) {
  ns1__removeAuthorisationResponse *_p =
      soap_instantiate_ns1__removeAuthorisationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeAuthorisationResponse(
    struct soap *soap, ns1__removeAuthorisationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeAuthorisationResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeAuthorisation
#define SOAP_TYPE_ICat3_ns1__removeAuthorisation (74)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeAuthorisation(struct soap *, const char *, int,
                                  const ns1__removeAuthorisation *,
                                  const char *);
SOAP_FMAC3 ns1__removeAuthorisation *SOAP_FMAC4
soap_in_ns1__removeAuthorisation(struct soap *, const char *,
                                 ns1__removeAuthorisation *, const char *);

#ifndef soap_write_ns1__removeAuthorisation
#define soap_write_ns1__removeAuthorisation(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeAuthorisation", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeAuthorisation *SOAP_FMAC4
soap_get_ns1__removeAuthorisation(struct soap *, ns1__removeAuthorisation *,
                                  const char *, const char *);

#ifndef soap_read_ns1__removeAuthorisation
#define soap_read_ns1__removeAuthorisation(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeAuthorisation(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeAuthorisation *SOAP_FMAC2
soap_instantiate_ns1__removeAuthorisation(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__removeAuthorisation *
soap_new_ns1__removeAuthorisation(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeAuthorisation(soap, n, NULL, NULL, NULL);
}

inline ns1__removeAuthorisation *
soap_new_req_ns1__removeAuthorisation(struct soap *soap) {
  ns1__removeAuthorisation *_p =
      soap_instantiate_ns1__removeAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeAuthorisation *
soap_new_set_ns1__removeAuthorisation(struct soap *soap, std::string *sessionId,
                                      LONG64 *authorisationId, char *__item1) {
  ns1__removeAuthorisation *_p =
      soap_instantiate_ns1__removeAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__removeAuthorisation::sessionId = sessionId;
    _p->ns1__removeAuthorisation::authorisationId = authorisationId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeAuthorisation(struct soap *soap,
                                                 ns1__removeAuthorisation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeAuthorisation(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeDataFileResponse
#define SOAP_TYPE_ICat3_ns1__removeDataFileResponse (73)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeDataFileResponse(struct soap *, const char *, int,
                                     const ns1__removeDataFileResponse *,
                                     const char *);
SOAP_FMAC3 ns1__removeDataFileResponse *SOAP_FMAC4
soap_in_ns1__removeDataFileResponse(struct soap *, const char *,
                                    ns1__removeDataFileResponse *,
                                    const char *);

#ifndef soap_write_ns1__removeDataFileResponse
#define soap_write_ns1__removeDataFileResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeDataFileResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataFileResponse *SOAP_FMAC4
soap_get_ns1__removeDataFileResponse(struct soap *,
                                     ns1__removeDataFileResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns1__removeDataFileResponse
#define soap_read_ns1__removeDataFileResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeDataFileResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeDataFileResponse *SOAP_FMAC2
soap_instantiate_ns1__removeDataFileResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__removeDataFileResponse *
soap_new_ns1__removeDataFileResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeDataFileResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__removeDataFileResponse *
soap_new_req_ns1__removeDataFileResponse(struct soap *soap) {
  ns1__removeDataFileResponse *_p =
      soap_instantiate_ns1__removeDataFileResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeDataFileResponse *
soap_new_set_ns1__removeDataFileResponse(struct soap *soap, char *__item1) {
  ns1__removeDataFileResponse *_p =
      soap_instantiate_ns1__removeDataFileResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__removeDataFileResponse(struct soap *soap,
                                        ns1__removeDataFileResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeDataFileResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeDataFile
#define SOAP_TYPE_ICat3_ns1__removeDataFile (72)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeDataFile(struct soap *, const char *, int,
                             const ns1__removeDataFile *, const char *);
SOAP_FMAC3 ns1__removeDataFile *SOAP_FMAC4
soap_in_ns1__removeDataFile(struct soap *, const char *, ns1__removeDataFile *,
                            const char *);

#ifndef soap_write_ns1__removeDataFile
#define soap_write_ns1__removeDataFile(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeDataFile", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataFile *SOAP_FMAC4
soap_get_ns1__removeDataFile(struct soap *, ns1__removeDataFile *, const char *,
                             const char *);

#ifndef soap_read_ns1__removeDataFile
#define soap_read_ns1__removeDataFile(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeDataFile(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeDataFile *SOAP_FMAC2
soap_instantiate_ns1__removeDataFile(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__removeDataFile *soap_new_ns1__removeDataFile(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__removeDataFile(soap, n, NULL, NULL, NULL);
}

inline ns1__removeDataFile *
soap_new_req_ns1__removeDataFile(struct soap *soap) {
  ns1__removeDataFile *_p =
      soap_instantiate_ns1__removeDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeDataFile *
soap_new_set_ns1__removeDataFile(struct soap *soap, std::string *sessionId,
                                 LONG64 *datafileId, char *__item1) {
  ns1__removeDataFile *_p =
      soap_instantiate_ns1__removeDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__removeDataFile::sessionId = sessionId;
    _p->ns1__removeDataFile::datafileId = datafileId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeDataFile(struct soap *soap,
                                            ns1__removeDataFile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__removeDataFile(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__parameterPK
#define SOAP_TYPE_ICat3_ns1__parameterPK (71)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__parameterPK(struct soap *, const char *, int,
                          const ns1__parameterPK *, const char *);
SOAP_FMAC3 ns1__parameterPK *SOAP_FMAC4
soap_in_ns1__parameterPK(struct soap *, const char *, ns1__parameterPK *,
                         const char *);

#ifndef soap_write_ns1__parameterPK
#define soap_write_ns1__parameterPK(soap, data)                                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:parameterPK", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterPK *SOAP_FMAC4
soap_get_ns1__parameterPK(struct soap *, ns1__parameterPK *, const char *,
                          const char *);

#ifndef soap_read_ns1__parameterPK
#define soap_read_ns1__parameterPK(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__parameterPK(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__parameterPK *SOAP_FMAC2
soap_instantiate_ns1__parameterPK(struct soap *, int, const char *,
                                  const char *, size_t *);

inline ns1__parameterPK *soap_new_ns1__parameterPK(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate_ns1__parameterPK(soap, n, NULL, NULL, NULL);
}

inline ns1__parameterPK *soap_new_req_ns1__parameterPK(struct soap *soap) {
  ns1__parameterPK *_p =
      soap_instantiate_ns1__parameterPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__parameterPK *soap_new_set_ns1__parameterPK(struct soap *soap,
                                                       std::string *name,
                                                       std::string *units,
                                                       char *__item2) {
  ns1__parameterPK *_p =
      soap_instantiate_ns1__parameterPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__parameterPK::name = name;
    _p->ns1__parameterPK::units = units;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__parameterPK(struct soap *soap,
                                         ns1__parameterPK *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__parameterPK(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__parameter
#define SOAP_TYPE_ICat3_ns1__parameter (70)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__parameter(struct soap *, const char *,
                                                  int, const ns1__parameter *,
                                                  const char *);
SOAP_FMAC3 ns1__parameter *SOAP_FMAC4
soap_in_ns1__parameter(struct soap *, const char *, ns1__parameter *,
                       const char *);

#ifndef soap_write_ns1__parameter
#define soap_write_ns1__parameter(soap, data)                                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:parameter", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameter *SOAP_FMAC4
soap_get_ns1__parameter(struct soap *, ns1__parameter *, const char *,
                        const char *);

#ifndef soap_read_ns1__parameter
#define soap_read_ns1__parameter(soap, data)                                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__parameter(soap, data, NULL, NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__parameter *SOAP_FMAC2
soap_instantiate_ns1__parameter(struct soap *, int, const char *, const char *,
                                size_t *);

inline ns1__parameter *soap_new_ns1__parameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__parameter(soap, n, NULL, NULL, NULL);
}

inline ns1__parameter *
soap_new_req_ns1__parameter(struct soap *soap, bool datafileParameter,
                            bool datasetParameter, bool sampleParameter,
                            bool verified, bool facilityAcquiredData1,
                            bool selected1) {
  ns1__parameter *_p =
      soap_instantiate_ns1__parameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__parameter::datafileParameter = datafileParameter;
    _p->ns1__parameter::datasetParameter = datasetParameter;
    _p->ns1__parameter::sampleParameter = sampleParameter;
    _p->ns1__parameter::verified = verified;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__parameter *soap_new_set_ns1__parameter(
    struct soap *soap, bool datafileParameter, bool datasetParameter,
    std::string *description, std::string *nonNumericValueFormat,
    ns1__parameterPK *parameterPK, bool sampleParameter,
    std::string *searchable, std::string *unitsLongVersion,
    enum ns1__parameterValueType *valueType, bool verified,
    bool facilityAcquiredData1, ns1__icatRole *icatRole1, bool selected1,
    std::string *uniqueId1, char *__item2) {
  ns1__parameter *_p =
      soap_instantiate_ns1__parameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__parameter::datafileParameter = datafileParameter;
    _p->ns1__parameter::datasetParameter = datasetParameter;
    _p->ns1__parameter::description = description;
    _p->ns1__parameter::nonNumericValueFormat = nonNumericValueFormat;
    _p->ns1__parameter::parameterPK = parameterPK;
    _p->ns1__parameter::sampleParameter = sampleParameter;
    _p->ns1__parameter::searchable = searchable;
    _p->ns1__parameter::unitsLongVersion = unitsLongVersion;
    _p->ns1__parameter::valueType = valueType;
    _p->ns1__parameter::verified = verified;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__parameter(struct soap *soap, ns1__parameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__parameter(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getParameterByNameUnitsResponse
#define SOAP_TYPE_ICat3_ns1__getParameterByNameUnitsResponse (69)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getParameterByNameUnitsResponse(
    struct soap *, const char *, int,
    const ns1__getParameterByNameUnitsResponse *, const char *);
SOAP_FMAC3 ns1__getParameterByNameUnitsResponse *SOAP_FMAC4
soap_in_ns1__getParameterByNameUnitsResponse(
    struct soap *, const char *, ns1__getParameterByNameUnitsResponse *,
    const char *);

#ifndef soap_write_ns1__getParameterByNameUnitsResponse
#define soap_write_ns1__getParameterByNameUnitsResponse(soap, data)            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getParameterByNameUnitsResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByNameUnitsResponse *SOAP_FMAC4
soap_get_ns1__getParameterByNameUnitsResponse(
    struct soap *, ns1__getParameterByNameUnitsResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__getParameterByNameUnitsResponse
#define soap_read_ns1__getParameterByNameUnitsResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getParameterByNameUnitsResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getParameterByNameUnitsResponse *SOAP_FMAC2
soap_instantiate_ns1__getParameterByNameUnitsResponse(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline ns1__getParameterByNameUnitsResponse *
soap_new_ns1__getParameterByNameUnitsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getParameterByNameUnitsResponse(soap, n, NULL,
                                                               NULL, NULL);
}

inline ns1__getParameterByNameUnitsResponse *
soap_new_req_ns1__getParameterByNameUnitsResponse(struct soap *soap) {
  ns1__getParameterByNameUnitsResponse *_p =
      soap_instantiate_ns1__getParameterByNameUnitsResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getParameterByNameUnitsResponse *
soap_new_set_ns1__getParameterByNameUnitsResponse(
    struct soap *soap, std::vector<ns1__parameter *> &return_, char *__item1) {
  ns1__getParameterByNameUnitsResponse *_p =
      soap_instantiate_ns1__getParameterByNameUnitsResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getParameterByNameUnitsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__getParameterByNameUnitsResponse(
    struct soap *soap, ns1__getParameterByNameUnitsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getParameterByNameUnitsResponse(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__getParameterByNameUnits
#define SOAP_TYPE_ICat3_ns1__getParameterByNameUnits (68)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__getParameterByNameUnits(struct soap *, const char *, int,
                                      const ns1__getParameterByNameUnits *,
                                      const char *);
SOAP_FMAC3 ns1__getParameterByNameUnits *SOAP_FMAC4
soap_in_ns1__getParameterByNameUnits(struct soap *, const char *,
                                     ns1__getParameterByNameUnits *,
                                     const char *);

#ifndef soap_write_ns1__getParameterByNameUnits
#define soap_write_ns1__getParameterByNameUnits(soap, data)                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:getParameterByNameUnits", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByNameUnits *SOAP_FMAC4
soap_get_ns1__getParameterByNameUnits(struct soap *,
                                      ns1__getParameterByNameUnits *,
                                      const char *, const char *);

#ifndef soap_read_ns1__getParameterByNameUnits
#define soap_read_ns1__getParameterByNameUnits(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__getParameterByNameUnits(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__getParameterByNameUnits *SOAP_FMAC2
soap_instantiate_ns1__getParameterByNameUnits(struct soap *, int, const char *,
                                              const char *, size_t *);

inline ns1__getParameterByNameUnits *
soap_new_ns1__getParameterByNameUnits(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__getParameterByNameUnits(soap, n, NULL, NULL,
                                                       NULL);
}

inline ns1__getParameterByNameUnits *
soap_new_req_ns1__getParameterByNameUnits(struct soap *soap) {
  ns1__getParameterByNameUnits *_p =
      soap_instantiate_ns1__getParameterByNameUnits(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__getParameterByNameUnits *soap_new_set_ns1__getParameterByNameUnits(
    struct soap *soap, std::string *sesssionId, std::string *name,
    std::string *units, char *__item1) {
  ns1__getParameterByNameUnits *_p =
      soap_instantiate_ns1__getParameterByNameUnits(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__getParameterByNameUnits::sesssionId = sesssionId;
    _p->ns1__getParameterByNameUnits::name = name;
    _p->ns1__getParameterByNameUnits::units = units;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__getParameterByNameUnits(struct soap *soap,
                                         ns1__getParameterByNameUnits *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__getParameterByNameUnits(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterLogicalResponse
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterLogicalResponse (67)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchInvestigationByParameterLogicalResponse(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByParameterLogicalResponse *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterLogicalResponse *SOAP_FMAC4
soap_in_ns1__searchInvestigationByParameterLogicalResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterLogicalResponse *, const char *);

#ifndef soap_write_ns1__searchInvestigationByParameterLogicalResponse
#define soap_write_ns1__searchInvestigationByParameterLogicalResponse(soap,    \
                                                                      data)    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchInvestigationByParameterLogicalResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterLogicalResponse *SOAP_FMAC4
soap_get_ns1__searchInvestigationByParameterLogicalResponse(
    struct soap *, ns1__searchInvestigationByParameterLogicalResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchInvestigationByParameterLogicalResponse
#define soap_read_ns1__searchInvestigationByParameterLogicalResponse(soap,     \
                                                                     data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByParameterLogicalResponse(    \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByParameterLogicalResponse *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByParameterLogicalResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchInvestigationByParameterLogicalResponse *
soap_new_ns1__searchInvestigationByParameterLogicalResponse(struct soap *soap,
                                                            int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByParameterLogicalResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByParameterLogicalResponse *
soap_new_req_ns1__searchInvestigationByParameterLogicalResponse(
    struct soap *soap) {
  ns1__searchInvestigationByParameterLogicalResponse *_p =
      soap_instantiate_ns1__searchInvestigationByParameterLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByParameterLogicalResponse *
soap_new_set_ns1__searchInvestigationByParameterLogicalResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchInvestigationByParameterLogicalResponse *_p =
      soap_instantiate_ns1__searchInvestigationByParameterLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByParameterLogicalResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByParameterLogicalResponse(
    struct soap *soap, ns1__searchInvestigationByParameterLogicalResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByParameterLogicalResponse(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__parameterLogicalCondition
#define SOAP_TYPE_ICat3_ns1__parameterLogicalCondition (66)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__parameterLogicalCondition(struct soap *, const char *, int,
                                        const ns1__parameterLogicalCondition *,
                                        const char *);
SOAP_FMAC3 ns1__parameterLogicalCondition *SOAP_FMAC4
soap_in_ns1__parameterLogicalCondition(struct soap *, const char *,
                                       ns1__parameterLogicalCondition *,
                                       const char *);

#ifndef soap_write_ns1__parameterLogicalCondition
#define soap_write_ns1__parameterLogicalCondition(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:parameterLogicalCondition", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterLogicalCondition *SOAP_FMAC4
soap_get_ns1__parameterLogicalCondition(struct soap *,
                                        ns1__parameterLogicalCondition *,
                                        const char *, const char *);

#ifndef soap_read_ns1__parameterLogicalCondition
#define soap_read_ns1__parameterLogicalCondition(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__parameterLogicalCondition(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__parameterLogicalCondition *SOAP_FMAC2
soap_instantiate_ns1__parameterLogicalCondition(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__parameterLogicalCondition *
soap_new_ns1__parameterLogicalCondition(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__parameterLogicalCondition(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__parameterLogicalCondition *
soap_new_req_ns1__parameterLogicalCondition(struct soap *soap, bool negate2,
                                            bool sensitive2) {
  ns1__parameterLogicalCondition *_p =
      soap_instantiate_ns1__parameterLogicalCondition(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__condition::negate = negate2;
    _p->ns1__condition::sensitive = sensitive2;
  }
  return _p;
}

inline ns1__parameterLogicalCondition *
soap_new_set_ns1__parameterLogicalCondition(
    struct soap *soap, std::vector<ns1__parameterCondition *> &listComparable,
    enum ns1__logicalOperator *operator_, bool negate2, bool sensitive2,
    char *__item3) {
  ns1__parameterLogicalCondition *_p =
      soap_instantiate_ns1__parameterLogicalCondition(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__parameterLogicalCondition::listComparable = listComparable;
    _p->ns1__parameterLogicalCondition::operator_ = operator_;
    _p->ns1__condition::negate = negate2;
    _p->ns1__condition::sensitive = sensitive2;
    _p->xsd__anyType::__item = __item3;
  }
  return _p;
}

inline void
soap_delete_ns1__parameterLogicalCondition(struct soap *soap,
                                           ns1__parameterLogicalCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__parameterLogicalCondition(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterLogical
#define SOAP_TYPE_ICat3_ns1__searchInvestigationByParameterLogical (65)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchInvestigationByParameterLogical(
    struct soap *, const char *, int,
    const ns1__searchInvestigationByParameterLogical *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterLogical *SOAP_FMAC4
soap_in_ns1__searchInvestigationByParameterLogical(
    struct soap *, const char *, ns1__searchInvestigationByParameterLogical *,
    const char *);

#ifndef soap_write_ns1__searchInvestigationByParameterLogical
#define soap_write_ns1__searchInvestigationByParameterLogical(soap, data)      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchInvestigationByParameterLogical",     \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterLogical *SOAP_FMAC4
soap_get_ns1__searchInvestigationByParameterLogical(
    struct soap *, ns1__searchInvestigationByParameterLogical *, const char *,
    const char *);

#ifndef soap_read_ns1__searchInvestigationByParameterLogical
#define soap_read_ns1__searchInvestigationByParameterLogical(soap, data)       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchInvestigationByParameterLogical(            \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchInvestigationByParameterLogical *SOAP_FMAC2
soap_instantiate_ns1__searchInvestigationByParameterLogical(struct soap *, int,
                                                            const char *,
                                                            const char *,
                                                            size_t *);

inline ns1__searchInvestigationByParameterLogical *
soap_new_ns1__searchInvestigationByParameterLogical(struct soap *soap,
                                                    int n = -1) {
  return soap_instantiate_ns1__searchInvestigationByParameterLogical(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchInvestigationByParameterLogical *
soap_new_req_ns1__searchInvestigationByParameterLogical(struct soap *soap) {
  ns1__searchInvestigationByParameterLogical *_p =
      soap_instantiate_ns1__searchInvestigationByParameterLogical(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchInvestigationByParameterLogical *
soap_new_set_ns1__searchInvestigationByParameterLogical(
    struct soap *soap, std::string *sessionId,
    ns1__parameterLogicalCondition *logicalCondition, char *__item1) {
  ns1__searchInvestigationByParameterLogical *_p =
      soap_instantiate_ns1__searchInvestigationByParameterLogical(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchInvestigationByParameterLogical::sessionId = sessionId;
    _p->ns1__searchInvestigationByParameterLogical::logicalCondition =
        logicalCondition;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchInvestigationByParameterLogical(
    struct soap *soap, ns1__searchInvestigationByParameterLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchInvestigationByParameterLogical(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifySampleResponse
#define SOAP_TYPE_ICat3_ns1__modifySampleResponse (64)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifySampleResponse(struct soap *, const char *, int,
                                   const ns1__modifySampleResponse *,
                                   const char *);
SOAP_FMAC3 ns1__modifySampleResponse *SOAP_FMAC4
soap_in_ns1__modifySampleResponse(struct soap *, const char *,
                                  ns1__modifySampleResponse *, const char *);

#ifndef soap_write_ns1__modifySampleResponse
#define soap_write_ns1__modifySampleResponse(soap, data)                       \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifySampleResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifySampleResponse *SOAP_FMAC4
soap_get_ns1__modifySampleResponse(struct soap *, ns1__modifySampleResponse *,
                                   const char *, const char *);

#ifndef soap_read_ns1__modifySampleResponse
#define soap_read_ns1__modifySampleResponse(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifySampleResponse(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifySampleResponse *SOAP_FMAC2
soap_instantiate_ns1__modifySampleResponse(struct soap *, int, const char *,
                                           const char *, size_t *);

inline ns1__modifySampleResponse *
soap_new_ns1__modifySampleResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__modifySampleResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__modifySampleResponse *
soap_new_req_ns1__modifySampleResponse(struct soap *soap) {
  ns1__modifySampleResponse *_p =
      soap_instantiate_ns1__modifySampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifySampleResponse *
soap_new_set_ns1__modifySampleResponse(struct soap *soap, char *__item1) {
  ns1__modifySampleResponse *_p =
      soap_instantiate_ns1__modifySampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__modifySampleResponse(struct soap *soap,
                                      ns1__modifySampleResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__modifySampleResponse(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__modifySample
#define SOAP_TYPE_ICat3_ns1__modifySample (63)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__modifySample(struct soap *, const char *, int,
                           const ns1__modifySample *, const char *);
SOAP_FMAC3 ns1__modifySample *SOAP_FMAC4
soap_in_ns1__modifySample(struct soap *, const char *, ns1__modifySample *,
                          const char *);

#ifndef soap_write_ns1__modifySample
#define soap_write_ns1__modifySample(soap, data)                               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:modifySample", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifySample *SOAP_FMAC4
soap_get_ns1__modifySample(struct soap *, ns1__modifySample *, const char *,
                           const char *);

#ifndef soap_read_ns1__modifySample
#define soap_read_ns1__modifySample(soap, data)                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__modifySample(soap, data, NULL, NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__modifySample *SOAP_FMAC2
soap_instantiate_ns1__modifySample(struct soap *, int, const char *,
                                   const char *, size_t *);

inline ns1__modifySample *soap_new_ns1__modifySample(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__modifySample(soap, n, NULL, NULL, NULL);
}

inline ns1__modifySample *soap_new_req_ns1__modifySample(struct soap *soap) {
  ns1__modifySample *_p =
      soap_instantiate_ns1__modifySample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__modifySample *soap_new_set_ns1__modifySample(struct soap *soap,
                                                         std::string *sessionId,
                                                         ns1__sample *sample,
                                                         char *__item1) {
  ns1__modifySample *_p =
      soap_instantiate_ns1__modifySample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__modifySample::sessionId = sessionId;
    _p->ns1__modifySample::sample = sample;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__modifySample(struct soap *soap,
                                          ns1__modifySample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__modifySample(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__createDataFileResponse
#define SOAP_TYPE_ICat3_ns1__createDataFileResponse (62)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__createDataFileResponse(struct soap *, const char *, int,
                                     const ns1__createDataFileResponse *,
                                     const char *);
SOAP_FMAC3 ns1__createDataFileResponse *SOAP_FMAC4
soap_in_ns1__createDataFileResponse(struct soap *, const char *,
                                    ns1__createDataFileResponse *,
                                    const char *);

#ifndef soap_write_ns1__createDataFileResponse
#define soap_write_ns1__createDataFileResponse(soap, data)                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:createDataFileResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataFileResponse *SOAP_FMAC4
soap_get_ns1__createDataFileResponse(struct soap *,
                                     ns1__createDataFileResponse *,
                                     const char *, const char *);

#ifndef soap_read_ns1__createDataFileResponse
#define soap_read_ns1__createDataFileResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__createDataFileResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__createDataFileResponse *SOAP_FMAC2
soap_instantiate_ns1__createDataFileResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline ns1__createDataFileResponse *
soap_new_ns1__createDataFileResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__createDataFileResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline ns1__createDataFileResponse *
soap_new_req_ns1__createDataFileResponse(struct soap *soap) {
  ns1__createDataFileResponse *_p =
      soap_instantiate_ns1__createDataFileResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__createDataFileResponse *soap_new_set_ns1__createDataFileResponse(
    struct soap *soap, ns1__datafile *return_, char *__item1) {
  ns1__createDataFileResponse *_p =
      soap_instantiate_ns1__createDataFileResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__createDataFileResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__createDataFileResponse(struct soap *soap,
                                        ns1__createDataFileResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__createDataFileResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__relatedDatafilesPK
#define SOAP_TYPE_ICat3_ns1__relatedDatafilesPK (61)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__relatedDatafilesPK(struct soap *, const char *, int,
                                 const ns1__relatedDatafilesPK *, const char *);
SOAP_FMAC3 ns1__relatedDatafilesPK *SOAP_FMAC4
soap_in_ns1__relatedDatafilesPK(struct soap *, const char *,
                                ns1__relatedDatafilesPK *, const char *);

#ifndef soap_write_ns1__relatedDatafilesPK
#define soap_write_ns1__relatedDatafilesPK(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:relatedDatafilesPK", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__relatedDatafilesPK *SOAP_FMAC4
soap_get_ns1__relatedDatafilesPK(struct soap *, ns1__relatedDatafilesPK *,
                                 const char *, const char *);

#ifndef soap_read_ns1__relatedDatafilesPK
#define soap_read_ns1__relatedDatafilesPK(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__relatedDatafilesPK(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__relatedDatafilesPK *SOAP_FMAC2
soap_instantiate_ns1__relatedDatafilesPK(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__relatedDatafilesPK *
soap_new_ns1__relatedDatafilesPK(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__relatedDatafilesPK(soap, n, NULL, NULL, NULL);
}

inline ns1__relatedDatafilesPK *
soap_new_req_ns1__relatedDatafilesPK(struct soap *soap) {
  ns1__relatedDatafilesPK *_p =
      soap_instantiate_ns1__relatedDatafilesPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__relatedDatafilesPK *
soap_new_set_ns1__relatedDatafilesPK(struct soap *soap, LONG64 *destDatafileId,
                                     LONG64 *sourceDatafileId, char *__item2) {
  ns1__relatedDatafilesPK *_p =
      soap_instantiate_ns1__relatedDatafilesPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__relatedDatafilesPK::destDatafileId = destDatafileId;
    _p->ns1__relatedDatafilesPK::sourceDatafileId = sourceDatafileId;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__relatedDatafilesPK(struct soap *soap,
                                                ns1__relatedDatafilesPK *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__relatedDatafilesPK(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__relatedDatafiles
#define SOAP_TYPE_ICat3_ns1__relatedDatafiles (60)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__relatedDatafiles(struct soap *, const char *, int,
                               const ns1__relatedDatafiles *, const char *);
SOAP_FMAC3 ns1__relatedDatafiles *SOAP_FMAC4
soap_in_ns1__relatedDatafiles(struct soap *, const char *,
                              ns1__relatedDatafiles *, const char *);

#ifndef soap_write_ns1__relatedDatafiles
#define soap_write_ns1__relatedDatafiles(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:relatedDatafiles", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__relatedDatafiles *SOAP_FMAC4
soap_get_ns1__relatedDatafiles(struct soap *, ns1__relatedDatafiles *,
                               const char *, const char *);

#ifndef soap_read_ns1__relatedDatafiles
#define soap_read_ns1__relatedDatafiles(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__relatedDatafiles(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__relatedDatafiles *SOAP_FMAC2
soap_instantiate_ns1__relatedDatafiles(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__relatedDatafiles *soap_new_ns1__relatedDatafiles(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__relatedDatafiles(soap, n, NULL, NULL, NULL);
}

inline ns1__relatedDatafiles *
soap_new_req_ns1__relatedDatafiles(struct soap *soap,
                                   bool facilityAcquiredData1, bool selected1) {
  ns1__relatedDatafiles *_p =
      soap_instantiate_ns1__relatedDatafiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__relatedDatafiles *soap_new_set_ns1__relatedDatafiles(
    struct soap *soap, ns1__relatedDatafilesPK *relatedDatafilesPK,
    std::string *relation, bool facilityAcquiredData1, ns1__icatRole *icatRole1,
    bool selected1, std::string *uniqueId1, char *__item2) {
  ns1__relatedDatafiles *_p =
      soap_instantiate_ns1__relatedDatafiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__relatedDatafiles::relatedDatafilesPK = relatedDatafilesPK;
    _p->ns1__relatedDatafiles::relation = relation;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__relatedDatafiles(struct soap *soap,
                                              ns1__relatedDatafiles *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__relatedDatafiles(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__datafileParameterPK
#define SOAP_TYPE_ICat3_ns1__datafileParameterPK (59)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__datafileParameterPK(struct soap *, const char *, int,
                                  const ns1__datafileParameterPK *,
                                  const char *);
SOAP_FMAC3 ns1__datafileParameterPK *SOAP_FMAC4
soap_in_ns1__datafileParameterPK(struct soap *, const char *,
                                 ns1__datafileParameterPK *, const char *);

#ifndef soap_write_ns1__datafileParameterPK
#define soap_write_ns1__datafileParameterPK(soap, data)                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:datafileParameterPK", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datafileParameterPK *SOAP_FMAC4
soap_get_ns1__datafileParameterPK(struct soap *, ns1__datafileParameterPK *,
                                  const char *, const char *);

#ifndef soap_read_ns1__datafileParameterPK
#define soap_read_ns1__datafileParameterPK(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__datafileParameterPK(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__datafileParameterPK *SOAP_FMAC2
soap_instantiate_ns1__datafileParameterPK(struct soap *, int, const char *,
                                          const char *, size_t *);

inline ns1__datafileParameterPK *
soap_new_ns1__datafileParameterPK(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__datafileParameterPK(soap, n, NULL, NULL, NULL);
}

inline ns1__datafileParameterPK *
soap_new_req_ns1__datafileParameterPK(struct soap *soap) {
  ns1__datafileParameterPK *_p =
      soap_instantiate_ns1__datafileParameterPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__datafileParameterPK *
soap_new_set_ns1__datafileParameterPK(struct soap *soap, LONG64 *datafileId,
                                      std::string *name, std::string *units,
                                      char *__item2) {
  ns1__datafileParameterPK *_p =
      soap_instantiate_ns1__datafileParameterPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__datafileParameterPK::datafileId = datafileId;
    _p->ns1__datafileParameterPK::name = name;
    _p->ns1__datafileParameterPK::units = units;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__datafileParameterPK(struct soap *soap,
                                                 ns1__datafileParameterPK *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__datafileParameterPK(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__datafileParameter
#define SOAP_TYPE_ICat3_ns1__datafileParameter (58)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__datafileParameter(struct soap *, const char *, int,
                                const ns1__datafileParameter *, const char *);
SOAP_FMAC3 ns1__datafileParameter *SOAP_FMAC4
soap_in_ns1__datafileParameter(struct soap *, const char *,
                               ns1__datafileParameter *, const char *);

#ifndef soap_write_ns1__datafileParameter
#define soap_write_ns1__datafileParameter(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:datafileParameter", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datafileParameter *SOAP_FMAC4
soap_get_ns1__datafileParameter(struct soap *, ns1__datafileParameter *,
                                const char *, const char *);

#ifndef soap_read_ns1__datafileParameter
#define soap_read_ns1__datafileParameter(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__datafileParameter(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__datafileParameter *SOAP_FMAC2
soap_instantiate_ns1__datafileParameter(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__datafileParameter *
soap_new_ns1__datafileParameter(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__datafileParameter(soap, n, NULL, NULL, NULL);
}

inline ns1__datafileParameter *soap_new_req_ns1__datafileParameter(
    struct soap *soap, bool facilityAcquiredData1, bool selected1) {
  ns1__datafileParameter *_p =
      soap_instantiate_ns1__datafileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__datafileParameter *soap_new_set_ns1__datafileParameter(
    struct soap *soap, ns1__datafileParameterPK *datafileParameterPK,
    time_t *dateTimeValue, std::string *description, std::string *error,
    double *numericValue, std::string *rangeBottom, std::string *rangeTop,
    std::string *stringValue, enum ns1__parameterValueType *valueType,
    bool facilityAcquiredData1, ns1__icatRole *icatRole1, bool selected1,
    std::string *uniqueId1, char *__item2) {
  ns1__datafileParameter *_p =
      soap_instantiate_ns1__datafileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__datafileParameter::datafileParameterPK = datafileParameterPK;
    _p->ns1__datafileParameter::dateTimeValue = dateTimeValue;
    _p->ns1__datafileParameter::description = description;
    _p->ns1__datafileParameter::error = error;
    _p->ns1__datafileParameter::numericValue = numericValue;
    _p->ns1__datafileParameter::rangeBottom = rangeBottom;
    _p->ns1__datafileParameter::rangeTop = rangeTop;
    _p->ns1__datafileParameter::stringValue = stringValue;
    _p->ns1__datafileParameter::valueType = valueType;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__datafileParameter(struct soap *soap,
                                               ns1__datafileParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__datafileParameter(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__datafileFormatPK
#define SOAP_TYPE_ICat3_ns1__datafileFormatPK (57)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__datafileFormatPK(struct soap *, const char *, int,
                               const ns1__datafileFormatPK *, const char *);
SOAP_FMAC3 ns1__datafileFormatPK *SOAP_FMAC4
soap_in_ns1__datafileFormatPK(struct soap *, const char *,
                              ns1__datafileFormatPK *, const char *);

#ifndef soap_write_ns1__datafileFormatPK
#define soap_write_ns1__datafileFormatPK(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:datafileFormatPK", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datafileFormatPK *SOAP_FMAC4
soap_get_ns1__datafileFormatPK(struct soap *, ns1__datafileFormatPK *,
                               const char *, const char *);

#ifndef soap_read_ns1__datafileFormatPK
#define soap_read_ns1__datafileFormatPK(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__datafileFormatPK(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__datafileFormatPK *SOAP_FMAC2
soap_instantiate_ns1__datafileFormatPK(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__datafileFormatPK *soap_new_ns1__datafileFormatPK(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__datafileFormatPK(soap, n, NULL, NULL, NULL);
}

inline ns1__datafileFormatPK *
soap_new_req_ns1__datafileFormatPK(struct soap *soap) {
  ns1__datafileFormatPK *_p =
      soap_instantiate_ns1__datafileFormatPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__datafileFormatPK *
soap_new_set_ns1__datafileFormatPK(struct soap *soap, std::string *name,
                                   std::string *version, char *__item2) {
  ns1__datafileFormatPK *_p =
      soap_instantiate_ns1__datafileFormatPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__datafileFormatPK::name = name;
    _p->ns1__datafileFormatPK::version = version;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__datafileFormatPK(struct soap *soap,
                                              ns1__datafileFormatPK *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__datafileFormatPK(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__datafileFormat
#define SOAP_TYPE_ICat3_ns1__datafileFormat (56)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__datafileFormat(struct soap *, const char *, int,
                             const ns1__datafileFormat *, const char *);
SOAP_FMAC3 ns1__datafileFormat *SOAP_FMAC4
soap_in_ns1__datafileFormat(struct soap *, const char *, ns1__datafileFormat *,
                            const char *);

#ifndef soap_write_ns1__datafileFormat
#define soap_write_ns1__datafileFormat(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:datafileFormat", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datafileFormat *SOAP_FMAC4
soap_get_ns1__datafileFormat(struct soap *, ns1__datafileFormat *, const char *,
                             const char *);

#ifndef soap_read_ns1__datafileFormat
#define soap_read_ns1__datafileFormat(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__datafileFormat(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__datafileFormat *SOAP_FMAC2
soap_instantiate_ns1__datafileFormat(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__datafileFormat *soap_new_ns1__datafileFormat(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__datafileFormat(soap, n, NULL, NULL, NULL);
}

inline ns1__datafileFormat *
soap_new_req_ns1__datafileFormat(struct soap *soap, bool facilityAcquiredData1,
                                 bool selected1) {
  ns1__datafileFormat *_p =
      soap_instantiate_ns1__datafileFormat(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__datafileFormat *soap_new_set_ns1__datafileFormat(
    struct soap *soap, ns1__datafileFormatPK *datafileFormatPK,
    std::string *description, std::string *formatType,
    bool facilityAcquiredData1, ns1__icatRole *icatRole1, bool selected1,
    std::string *uniqueId1, char *__item2) {
  ns1__datafileFormat *_p =
      soap_instantiate_ns1__datafileFormat(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__datafileFormat::datafileFormatPK = datafileFormatPK;
    _p->ns1__datafileFormat::description = description;
    _p->ns1__datafileFormat::formatType = formatType;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__datafileFormat(struct soap *soap,
                                            ns1__datafileFormat *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__datafileFormat(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__datafile
#define SOAP_TYPE_ICat3_ns1__datafile (55)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__datafile(struct soap *, const char *,
                                                 int, const ns1__datafile *,
                                                 const char *);
SOAP_FMAC3 ns1__datafile *SOAP_FMAC4
soap_in_ns1__datafile(struct soap *, const char *, ns1__datafile *,
                      const char *);

#ifndef soap_write_ns1__datafile
#define soap_write_ns1__datafile(soap, data)                                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:datafile", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datafile *SOAP_FMAC4
soap_get_ns1__datafile(struct soap *, ns1__datafile *, const char *,
                       const char *);

#ifndef soap_read_ns1__datafile
#define soap_read_ns1__datafile(soap, data)                                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__datafile(soap, data, NULL, NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__datafile *SOAP_FMAC2
soap_instantiate_ns1__datafile(struct soap *, int, const char *, const char *,
                               size_t *);

inline ns1__datafile *soap_new_ns1__datafile(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__datafile(soap, n, NULL, NULL, NULL);
}

inline ns1__datafile *soap_new_req_ns1__datafile(struct soap *soap,
                                                 bool facilityAcquiredData1,
                                                 bool selected1) {
  ns1__datafile *_p =
      soap_instantiate_ns1__datafile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__datafile *soap_new_set_ns1__datafile(
    struct soap *soap, std::string *checksum, std::string *command,
    time_t *datafileCreateTime, ns1__datafileFormat *datafileFormat,
    enum ns1__datafileInclude *datafileInclude, time_t *datafileModifyTime,
    std::vector<ns1__datafileParameter *> &datafileParameterCollection,
    std::string *datafileVersion, std::string *datafileVersionComment,
    LONG64 *datasetId, std::string *description, int *fileSize, LONG64 *id,
    std::string *location, std::string *name,
    std::vector<ns1__relatedDatafiles *> &relatedDatafilesCollection1,
    std::vector<ns1__relatedDatafiles *> &relatedDatafilesCollection,
    std::string *signature, bool facilityAcquiredData1,
    ns1__icatRole *icatRole1, bool selected1, std::string *uniqueId1,
    char *__item2) {
  ns1__datafile *_p =
      soap_instantiate_ns1__datafile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__datafile::checksum = checksum;
    _p->ns1__datafile::command = command;
    _p->ns1__datafile::datafileCreateTime = datafileCreateTime;
    _p->ns1__datafile::datafileFormat = datafileFormat;
    _p->ns1__datafile::datafileInclude = datafileInclude;
    _p->ns1__datafile::datafileModifyTime = datafileModifyTime;
    _p->ns1__datafile::datafileParameterCollection =
        datafileParameterCollection;
    _p->ns1__datafile::datafileVersion = datafileVersion;
    _p->ns1__datafile::datafileVersionComment = datafileVersionComment;
    _p->ns1__datafile::datasetId = datasetId;
    _p->ns1__datafile::description = description;
    _p->ns1__datafile::fileSize = fileSize;
    _p->ns1__datafile::id = id;
    _p->ns1__datafile::location = location;
    _p->ns1__datafile::name = name;
    _p->ns1__datafile::relatedDatafilesCollection1 =
        relatedDatafilesCollection1;
    _p->ns1__datafile::relatedDatafilesCollection = relatedDatafilesCollection;
    _p->ns1__datafile::signature = signature;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__datafile(struct soap *soap, ns1__datafile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__datafile(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3_ns1__createDataFile
#define SOAP_TYPE_ICat3_ns1__createDataFile (54)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__createDataFile(struct soap *, const char *, int,
                             const ns1__createDataFile *, const char *);
SOAP_FMAC3 ns1__createDataFile *SOAP_FMAC4
soap_in_ns1__createDataFile(struct soap *, const char *, ns1__createDataFile *,
                            const char *);

#ifndef soap_write_ns1__createDataFile
#define soap_write_ns1__createDataFile(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:createDataFile", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataFile *SOAP_FMAC4
soap_get_ns1__createDataFile(struct soap *, ns1__createDataFile *, const char *,
                             const char *);

#ifndef soap_read_ns1__createDataFile
#define soap_read_ns1__createDataFile(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__createDataFile(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__createDataFile *SOAP_FMAC2
soap_instantiate_ns1__createDataFile(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__createDataFile *soap_new_ns1__createDataFile(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__createDataFile(soap, n, NULL, NULL, NULL);
}

inline ns1__createDataFile *
soap_new_req_ns1__createDataFile(struct soap *soap) {
  ns1__createDataFile *_p =
      soap_instantiate_ns1__createDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__createDataFile *
soap_new_set_ns1__createDataFile(struct soap *soap, std::string *sessionId,
                                 ns1__datafile *dataFile, LONG64 *datasetId,
                                 char *__item1) {
  ns1__createDataFile *_p =
      soap_instantiate_ns1__createDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__createDataFile::sessionId = sessionId;
    _p->ns1__createDataFile::dataFile = dataFile;
    _p->ns1__createDataFile::datasetId = datasetId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__createDataFile(struct soap *soap,
                                            ns1__createDataFile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__createDataFile(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__InsufficientPrivilegesException
#define SOAP_TYPE_ICat3_ns1__InsufficientPrivilegesException (53)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__InsufficientPrivilegesException(
    struct soap *, const char *, int,
    const ns1__InsufficientPrivilegesException *, const char *);
SOAP_FMAC3 ns1__InsufficientPrivilegesException *SOAP_FMAC4
soap_in_ns1__InsufficientPrivilegesException(
    struct soap *, const char *, ns1__InsufficientPrivilegesException *,
    const char *);

#ifndef soap_write_ns1__InsufficientPrivilegesException
#define soap_write_ns1__InsufficientPrivilegesException(soap, data)            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:InsufficientPrivilegesException", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__InsufficientPrivilegesException *SOAP_FMAC4
soap_get_ns1__InsufficientPrivilegesException(
    struct soap *, ns1__InsufficientPrivilegesException *, const char *,
    const char *);

#ifndef soap_read_ns1__InsufficientPrivilegesException
#define soap_read_ns1__InsufficientPrivilegesException(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__InsufficientPrivilegesException(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__InsufficientPrivilegesException *SOAP_FMAC2
soap_instantiate_ns1__InsufficientPrivilegesException(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline ns1__InsufficientPrivilegesException *
soap_new_ns1__InsufficientPrivilegesException(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__InsufficientPrivilegesException(soap, n, NULL,
                                                               NULL, NULL);
}

inline ns1__InsufficientPrivilegesException *
soap_new_req_ns1__InsufficientPrivilegesException(struct soap *soap) {
  ns1__InsufficientPrivilegesException *_p =
      soap_instantiate_ns1__InsufficientPrivilegesException(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__InsufficientPrivilegesException *
soap_new_set_ns1__InsufficientPrivilegesException(
    struct soap *soap, std::string *message, std::string *stackTraceAsString,
    std::string *uniqueId, char *__item1) {
  ns1__InsufficientPrivilegesException *_p =
      soap_instantiate_ns1__InsufficientPrivilegesException(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__InsufficientPrivilegesException::message = message;
    _p->ns1__InsufficientPrivilegesException::stackTraceAsString =
        stackTraceAsString;
    _p->ns1__InsufficientPrivilegesException::uniqueId = uniqueId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__InsufficientPrivilegesException(
    struct soap *soap, ns1__InsufficientPrivilegesException *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__InsufficientPrivilegesException(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeSampleResponse
#define SOAP_TYPE_ICat3_ns1__removeSampleResponse (52)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeSampleResponse(struct soap *, const char *, int,
                                   const ns1__removeSampleResponse *,
                                   const char *);
SOAP_FMAC3 ns1__removeSampleResponse *SOAP_FMAC4
soap_in_ns1__removeSampleResponse(struct soap *, const char *,
                                  ns1__removeSampleResponse *, const char *);

#ifndef soap_write_ns1__removeSampleResponse
#define soap_write_ns1__removeSampleResponse(soap, data)                       \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeSampleResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeSampleResponse *SOAP_FMAC4
soap_get_ns1__removeSampleResponse(struct soap *, ns1__removeSampleResponse *,
                                   const char *, const char *);

#ifndef soap_read_ns1__removeSampleResponse
#define soap_read_ns1__removeSampleResponse(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeSampleResponse(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeSampleResponse *SOAP_FMAC2
soap_instantiate_ns1__removeSampleResponse(struct soap *, int, const char *,
                                           const char *, size_t *);

inline ns1__removeSampleResponse *
soap_new_ns1__removeSampleResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__removeSampleResponse(soap, n, NULL, NULL, NULL);
}

inline ns1__removeSampleResponse *
soap_new_req_ns1__removeSampleResponse(struct soap *soap) {
  ns1__removeSampleResponse *_p =
      soap_instantiate_ns1__removeSampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeSampleResponse *
soap_new_set_ns1__removeSampleResponse(struct soap *soap, char *__item1) {
  ns1__removeSampleResponse *_p =
      soap_instantiate_ns1__removeSampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__removeSampleResponse(struct soap *soap,
                                      ns1__removeSampleResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__removeSampleResponse(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__removeSample
#define SOAP_TYPE_ICat3_ns1__removeSample (51)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__removeSample(struct soap *, const char *, int,
                           const ns1__removeSample *, const char *);
SOAP_FMAC3 ns1__removeSample *SOAP_FMAC4
soap_in_ns1__removeSample(struct soap *, const char *, ns1__removeSample *,
                          const char *);

#ifndef soap_write_ns1__removeSample
#define soap_write_ns1__removeSample(soap, data)                               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:removeSample", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeSample *SOAP_FMAC4
soap_get_ns1__removeSample(struct soap *, ns1__removeSample *, const char *,
                           const char *);

#ifndef soap_read_ns1__removeSample
#define soap_read_ns1__removeSample(soap, data)                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__removeSample(soap, data, NULL, NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__removeSample *SOAP_FMAC2
soap_instantiate_ns1__removeSample(struct soap *, int, const char *,
                                   const char *, size_t *);

inline ns1__removeSample *soap_new_ns1__removeSample(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__removeSample(soap, n, NULL, NULL, NULL);
}

inline ns1__removeSample *soap_new_req_ns1__removeSample(struct soap *soap) {
  ns1__removeSample *_p =
      soap_instantiate_ns1__removeSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__removeSample *soap_new_set_ns1__removeSample(struct soap *soap,
                                                         std::string *sessionId,
                                                         LONG64 *sampleId,
                                                         char *__item1) {
  ns1__removeSample *_p =
      soap_instantiate_ns1__removeSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__removeSample::sessionId = sessionId;
    _p->ns1__removeSample::sampleId = sampleId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__removeSample(struct soap *soap,
                                          ns1__removeSample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__removeSample(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listInstrumentsResponse
#define SOAP_TYPE_ICat3_ns1__listInstrumentsResponse (50)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listInstrumentsResponse(struct soap *, const char *, int,
                                      const ns1__listInstrumentsResponse *,
                                      const char *);
SOAP_FMAC3 ns1__listInstrumentsResponse *SOAP_FMAC4
soap_in_ns1__listInstrumentsResponse(struct soap *, const char *,
                                     ns1__listInstrumentsResponse *,
                                     const char *);

#ifndef soap_write_ns1__listInstrumentsResponse
#define soap_write_ns1__listInstrumentsResponse(soap, data)                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listInstrumentsResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listInstrumentsResponse *SOAP_FMAC4
soap_get_ns1__listInstrumentsResponse(struct soap *,
                                      ns1__listInstrumentsResponse *,
                                      const char *, const char *);

#ifndef soap_read_ns1__listInstrumentsResponse
#define soap_read_ns1__listInstrumentsResponse(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listInstrumentsResponse(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listInstrumentsResponse *SOAP_FMAC2
soap_instantiate_ns1__listInstrumentsResponse(struct soap *, int, const char *,
                                              const char *, size_t *);

inline ns1__listInstrumentsResponse *
soap_new_ns1__listInstrumentsResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listInstrumentsResponse(soap, n, NULL, NULL,
                                                       NULL);
}

inline ns1__listInstrumentsResponse *
soap_new_req_ns1__listInstrumentsResponse(struct soap *soap) {
  ns1__listInstrumentsResponse *_p =
      soap_instantiate_ns1__listInstrumentsResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listInstrumentsResponse *soap_new_set_ns1__listInstrumentsResponse(
    struct soap *soap, std::vector<std::string> &return_, char *__item1) {
  ns1__listInstrumentsResponse *_p =
      soap_instantiate_ns1__listInstrumentsResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listInstrumentsResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__listInstrumentsResponse(struct soap *soap,
                                         ns1__listInstrumentsResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listInstrumentsResponse(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listInstruments
#define SOAP_TYPE_ICat3_ns1__listInstruments (49)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listInstruments(struct soap *, const char *, int,
                              const ns1__listInstruments *, const char *);
SOAP_FMAC3 ns1__listInstruments *SOAP_FMAC4
soap_in_ns1__listInstruments(struct soap *, const char *,
                             ns1__listInstruments *, const char *);

#ifndef soap_write_ns1__listInstruments
#define soap_write_ns1__listInstruments(soap, data)                            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listInstruments", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listInstruments *SOAP_FMAC4
soap_get_ns1__listInstruments(struct soap *, ns1__listInstruments *,
                              const char *, const char *);

#ifndef soap_read_ns1__listInstruments
#define soap_read_ns1__listInstruments(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listInstruments(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listInstruments *SOAP_FMAC2
soap_instantiate_ns1__listInstruments(struct soap *, int, const char *,
                                      const char *, size_t *);

inline ns1__listInstruments *soap_new_ns1__listInstruments(struct soap *soap,
                                                           int n = -1) {
  return soap_instantiate_ns1__listInstruments(soap, n, NULL, NULL, NULL);
}

inline ns1__listInstruments *
soap_new_req_ns1__listInstruments(struct soap *soap) {
  ns1__listInstruments *_p =
      soap_instantiate_ns1__listInstruments(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listInstruments *
soap_new_set_ns1__listInstruments(struct soap *soap, std::string *sessionId,
                                  char *__item1) {
  ns1__listInstruments *_p =
      soap_instantiate_ns1__listInstruments(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listInstruments::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__listInstruments(struct soap *soap,
                                             ns1__listInstruments *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__listInstruments(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByRestrictionResponse
#define SOAP_TYPE_ICat3_ns1__searchDatafileByRestrictionResponse (48)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatafileByRestrictionResponse(
    struct soap *, const char *, int,
    const ns1__searchDatafileByRestrictionResponse *, const char *);
SOAP_FMAC3 ns1__searchDatafileByRestrictionResponse *SOAP_FMAC4
soap_in_ns1__searchDatafileByRestrictionResponse(
    struct soap *, const char *, ns1__searchDatafileByRestrictionResponse *,
    const char *);

#ifndef soap_write_ns1__searchDatafileByRestrictionResponse
#define soap_write_ns1__searchDatafileByRestrictionResponse(soap, data)        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatafileByRestrictionResponse",       \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestrictionResponse *SOAP_FMAC4
soap_get_ns1__searchDatafileByRestrictionResponse(
    struct soap *, ns1__searchDatafileByRestrictionResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatafileByRestrictionResponse
#define soap_read_ns1__searchDatafileByRestrictionResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByRestrictionResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByRestrictionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByRestrictionResponse(struct soap *, int,
                                                          const char *,
                                                          const char *,
                                                          size_t *);

inline ns1__searchDatafileByRestrictionResponse *
soap_new_ns1__searchDatafileByRestrictionResponse(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate_ns1__searchDatafileByRestrictionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatafileByRestrictionResponse *
soap_new_req_ns1__searchDatafileByRestrictionResponse(struct soap *soap) {
  ns1__searchDatafileByRestrictionResponse *_p =
      soap_instantiate_ns1__searchDatafileByRestrictionResponse(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByRestrictionResponse *
soap_new_set_ns1__searchDatafileByRestrictionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatafileByRestrictionResponse *_p =
      soap_instantiate_ns1__searchDatafileByRestrictionResponse(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByRestrictionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByRestrictionResponse(
    struct soap *soap, ns1__searchDatafileByRestrictionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByRestrictionResponse(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatafileByRestriction
#define SOAP_TYPE_ICat3_ns1__searchDatafileByRestriction (47)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatafileByRestriction(
    struct soap *, const char *, int, const ns1__searchDatafileByRestriction *,
    const char *);
SOAP_FMAC3 ns1__searchDatafileByRestriction *SOAP_FMAC4
soap_in_ns1__searchDatafileByRestriction(struct soap *, const char *,
                                         ns1__searchDatafileByRestriction *,
                                         const char *);

#ifndef soap_write_ns1__searchDatafileByRestriction
#define soap_write_ns1__searchDatafileByRestriction(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatafileByRestriction", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestriction *SOAP_FMAC4
soap_get_ns1__searchDatafileByRestriction(struct soap *,
                                          ns1__searchDatafileByRestriction *,
                                          const char *, const char *);

#ifndef soap_read_ns1__searchDatafileByRestriction
#define soap_read_ns1__searchDatafileByRestriction(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatafileByRestriction(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatafileByRestriction *SOAP_FMAC2
soap_instantiate_ns1__searchDatafileByRestriction(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__searchDatafileByRestriction *
soap_new_ns1__searchDatafileByRestriction(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatafileByRestriction(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__searchDatafileByRestriction *
soap_new_req_ns1__searchDatafileByRestriction(struct soap *soap) {
  ns1__searchDatafileByRestriction *_p =
      soap_instantiate_ns1__searchDatafileByRestriction(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatafileByRestriction *
soap_new_set_ns1__searchDatafileByRestriction(
    struct soap *soap, std::string *sessionId,
    ns1__restrictionCondition *restriction, char *__item1) {
  ns1__searchDatafileByRestriction *_p =
      soap_instantiate_ns1__searchDatafileByRestriction(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatafileByRestriction::sessionId = sessionId;
    _p->ns1__searchDatafileByRestriction::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatafileByRestriction(
    struct soap *soap, ns1__searchDatafileByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatafileByRestriction(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByRestrictionComparisonResponse
#define SOAP_TYPE_ICat3_ns1__searchSampleByRestrictionComparisonResponse (46)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchSampleByRestrictionComparisonResponse(
    struct soap *, const char *, int,
    const ns1__searchSampleByRestrictionComparisonResponse *, const char *);
SOAP_FMAC3 ns1__searchSampleByRestrictionComparisonResponse *SOAP_FMAC4
soap_in_ns1__searchSampleByRestrictionComparisonResponse(
    struct soap *, const char *,
    ns1__searchSampleByRestrictionComparisonResponse *, const char *);

#ifndef soap_write_ns1__searchSampleByRestrictionComparisonResponse
#define soap_write_ns1__searchSampleByRestrictionComparisonResponse(soap,      \
                                                                    data)      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchSampleByRestrictionComparisonResponse", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestrictionComparisonResponse *SOAP_FMAC4
soap_get_ns1__searchSampleByRestrictionComparisonResponse(
    struct soap *, ns1__searchSampleByRestrictionComparisonResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchSampleByRestrictionComparisonResponse
#define soap_read_ns1__searchSampleByRestrictionComparisonResponse(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByRestrictionComparisonResponse(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByRestrictionComparisonResponse *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByRestrictionComparisonResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchSampleByRestrictionComparisonResponse *
soap_new_ns1__searchSampleByRestrictionComparisonResponse(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate_ns1__searchSampleByRestrictionComparisonResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchSampleByRestrictionComparisonResponse *
soap_new_req_ns1__searchSampleByRestrictionComparisonResponse(
    struct soap *soap) {
  ns1__searchSampleByRestrictionComparisonResponse *_p =
      soap_instantiate_ns1__searchSampleByRestrictionComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByRestrictionComparisonResponse *
soap_new_set_ns1__searchSampleByRestrictionComparisonResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchSampleByRestrictionComparisonResponse *_p =
      soap_instantiate_ns1__searchSampleByRestrictionComparisonResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByRestrictionComparisonResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByRestrictionComparisonResponse(
    struct soap *soap, ns1__searchSampleByRestrictionComparisonResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByRestrictionComparisonResponse(struct soap *, int,
                                                           int, void *, size_t,
                                                           const void *,
                                                           size_t);

#ifndef SOAP_TYPE_ICat3_ns1__restrictionComparisonCondition
#define SOAP_TYPE_ICat3_ns1__restrictionComparisonCondition (45)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__restrictionComparisonCondition(
    struct soap *, const char *, int,
    const ns1__restrictionComparisonCondition *, const char *);
SOAP_FMAC3 ns1__restrictionComparisonCondition *SOAP_FMAC4
soap_in_ns1__restrictionComparisonCondition(
    struct soap *, const char *, ns1__restrictionComparisonCondition *,
    const char *);

#ifndef soap_write_ns1__restrictionComparisonCondition
#define soap_write_ns1__restrictionComparisonCondition(soap, data)             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:restrictionComparisonCondition", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__restrictionComparisonCondition *SOAP_FMAC4
soap_get_ns1__restrictionComparisonCondition(
    struct soap *, ns1__restrictionComparisonCondition *, const char *,
    const char *);

#ifndef soap_read_ns1__restrictionComparisonCondition
#define soap_read_ns1__restrictionComparisonCondition(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__restrictionComparisonCondition(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__restrictionComparisonCondition *SOAP_FMAC2
soap_instantiate_ns1__restrictionComparisonCondition(struct soap *, int,
                                                     const char *, const char *,
                                                     size_t *);

inline ns1__restrictionComparisonCondition *
soap_new_ns1__restrictionComparisonCondition(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__restrictionComparisonCondition(soap, n, NULL,
                                                              NULL, NULL);
}

inline ns1__restrictionComparisonCondition *
soap_new_req_ns1__restrictionComparisonCondition(
    struct soap *soap, int maxResults1, bool orderByAsc1, bool returnLongId1,
    bool negate2, bool sensitive2) {
  ns1__restrictionComparisonCondition *_p =
      soap_instantiate_ns1__restrictionComparisonCondition(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__restrictionCondition::maxResults = maxResults1;
    _p->ns1__restrictionCondition::orderByAsc = orderByAsc1;
    _p->ns1__restrictionCondition::returnLongId = returnLongId1;
    _p->ns1__condition::negate = negate2;
    _p->ns1__condition::sensitive = sensitive2;
  }
  return _p;
}

inline ns1__restrictionComparisonCondition *
soap_new_set_ns1__restrictionComparisonCondition(
    struct soap *soap, enum ns1__comparisonOperator *comparisonOperator,
    enum ns1__restrictionAttributes *restrictionAttribute, xsd__anyType *value,
    xsd__anyType *valueRight, enum ns1__datafileInclude *datafileInclude1,
    enum ns1__datasetInclude *datasetInclude1, int *firstResult1,
    enum ns1__investigationInclude *investigationInclude1, int maxResults1,
    bool orderByAsc1, enum ns1__restrictionAttributes *orderByAttribute1,
    bool returnLongId1, enum ns1__sampleInclude *sampleInclude1, bool negate2,
    bool sensitive2, char *__item3) {
  ns1__restrictionComparisonCondition *_p =
      soap_instantiate_ns1__restrictionComparisonCondition(soap, -1, NULL, NULL,
                                                           NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__restrictionComparisonCondition::comparisonOperator =
        comparisonOperator;
    _p->ns1__restrictionComparisonCondition::restrictionAttribute =
        restrictionAttribute;
    _p->ns1__restrictionComparisonCondition::value = value;
    _p->ns1__restrictionComparisonCondition::valueRight = valueRight;
    _p->ns1__restrictionCondition::datafileInclude = datafileInclude1;
    _p->ns1__restrictionCondition::datasetInclude = datasetInclude1;
    _p->ns1__restrictionCondition::firstResult = firstResult1;
    _p->ns1__restrictionCondition::investigationInclude = investigationInclude1;
    _p->ns1__restrictionCondition::maxResults = maxResults1;
    _p->ns1__restrictionCondition::orderByAsc = orderByAsc1;
    _p->ns1__restrictionCondition::orderByAttribute = orderByAttribute1;
    _p->ns1__restrictionCondition::returnLongId = returnLongId1;
    _p->ns1__restrictionCondition::sampleInclude = sampleInclude1;
    _p->ns1__condition::negate = negate2;
    _p->ns1__condition::sensitive = sensitive2;
    _p->xsd__anyType::__item = __item3;
  }
  return _p;
}

inline void soap_delete_ns1__restrictionComparisonCondition(
    struct soap *soap, ns1__restrictionComparisonCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__restrictionComparisonCondition(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSampleByRestrictionComparison
#define SOAP_TYPE_ICat3_ns1__searchSampleByRestrictionComparison (44)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchSampleByRestrictionComparison(
    struct soap *, const char *, int,
    const ns1__searchSampleByRestrictionComparison *, const char *);
SOAP_FMAC3 ns1__searchSampleByRestrictionComparison *SOAP_FMAC4
soap_in_ns1__searchSampleByRestrictionComparison(
    struct soap *, const char *, ns1__searchSampleByRestrictionComparison *,
    const char *);

#ifndef soap_write_ns1__searchSampleByRestrictionComparison
#define soap_write_ns1__searchSampleByRestrictionComparison(soap, data)        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSampleByRestrictionComparison",       \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestrictionComparison *SOAP_FMAC4
soap_get_ns1__searchSampleByRestrictionComparison(
    struct soap *, ns1__searchSampleByRestrictionComparison *, const char *,
    const char *);

#ifndef soap_read_ns1__searchSampleByRestrictionComparison
#define soap_read_ns1__searchSampleByRestrictionComparison(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSampleByRestrictionComparison(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSampleByRestrictionComparison *SOAP_FMAC2
soap_instantiate_ns1__searchSampleByRestrictionComparison(struct soap *, int,
                                                          const char *,
                                                          const char *,
                                                          size_t *);

inline ns1__searchSampleByRestrictionComparison *
soap_new_ns1__searchSampleByRestrictionComparison(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate_ns1__searchSampleByRestrictionComparison(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchSampleByRestrictionComparison *
soap_new_req_ns1__searchSampleByRestrictionComparison(struct soap *soap) {
  ns1__searchSampleByRestrictionComparison *_p =
      soap_instantiate_ns1__searchSampleByRestrictionComparison(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSampleByRestrictionComparison *
soap_new_set_ns1__searchSampleByRestrictionComparison(
    struct soap *soap, std::string *sessionId,
    std::vector<ns1__restrictionComparisonCondition *> &restriction,
    char *__item1) {
  ns1__searchSampleByRestrictionComparison *_p =
      soap_instantiate_ns1__searchSampleByRestrictionComparison(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSampleByRestrictionComparison::sessionId = sessionId;
    _p->ns1__searchSampleByRestrictionComparison::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSampleByRestrictionComparison(
    struct soap *soap, ns1__searchSampleByRestrictionComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSampleByRestrictionComparison(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3_ns1__entityPrimaryKeyBaseBean
#define SOAP_TYPE_ICat3_ns1__entityPrimaryKeyBaseBean (43)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__entityPrimaryKeyBaseBean(struct soap *, const char *, int,
                                       const ns1__entityPrimaryKeyBaseBean *,
                                       const char *);
SOAP_FMAC3 ns1__entityPrimaryKeyBaseBean *SOAP_FMAC4
soap_in_ns1__entityPrimaryKeyBaseBean(struct soap *, const char *,
                                      ns1__entityPrimaryKeyBaseBean *,
                                      const char *);

#ifndef soap_write_ns1__entityPrimaryKeyBaseBean
#define soap_write_ns1__entityPrimaryKeyBaseBean(soap, data)                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:entityPrimaryKeyBaseBean", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__entityPrimaryKeyBaseBean *SOAP_FMAC4
soap_get_ns1__entityPrimaryKeyBaseBean(struct soap *,
                                       ns1__entityPrimaryKeyBaseBean *,
                                       const char *, const char *);

#ifndef soap_read_ns1__entityPrimaryKeyBaseBean
#define soap_read_ns1__entityPrimaryKeyBaseBean(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__entityPrimaryKeyBaseBean(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__entityPrimaryKeyBaseBean *SOAP_FMAC2
soap_instantiate_ns1__entityPrimaryKeyBaseBean(struct soap *, int, const char *,
                                               const char *, size_t *);

inline ns1__entityPrimaryKeyBaseBean *
soap_new_ns1__entityPrimaryKeyBaseBean(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__entityPrimaryKeyBaseBean(soap, n, NULL, NULL,
                                                        NULL);
}

inline ns1__entityPrimaryKeyBaseBean *
soap_new_req_ns1__entityPrimaryKeyBaseBean(struct soap *soap) {
  ns1__entityPrimaryKeyBaseBean *_p =
      soap_instantiate_ns1__entityPrimaryKeyBaseBean(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__entityPrimaryKeyBaseBean *
soap_new_set_ns1__entityPrimaryKeyBaseBean(struct soap *soap, char *__item1) {
  ns1__entityPrimaryKeyBaseBean *_p =
      soap_instantiate_ns1__entityPrimaryKeyBaseBean(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__entityPrimaryKeyBaseBean(struct soap *soap,
                                          ns1__entityPrimaryKeyBaseBean *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__entityPrimaryKeyBaseBean(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__sampleParameterPK
#define SOAP_TYPE_ICat3_ns1__sampleParameterPK (42)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__sampleParameterPK(struct soap *, const char *, int,
                                const ns1__sampleParameterPK *, const char *);
SOAP_FMAC3 ns1__sampleParameterPK *SOAP_FMAC4
soap_in_ns1__sampleParameterPK(struct soap *, const char *,
                               ns1__sampleParameterPK *, const char *);

#ifndef soap_write_ns1__sampleParameterPK
#define soap_write_ns1__sampleParameterPK(soap, data)                          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:sampleParameterPK", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__sampleParameterPK *SOAP_FMAC4
soap_get_ns1__sampleParameterPK(struct soap *, ns1__sampleParameterPK *,
                                const char *, const char *);

#ifndef soap_read_ns1__sampleParameterPK
#define soap_read_ns1__sampleParameterPK(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__sampleParameterPK(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__sampleParameterPK *SOAP_FMAC2
soap_instantiate_ns1__sampleParameterPK(struct soap *, int, const char *,
                                        const char *, size_t *);

inline ns1__sampleParameterPK *
soap_new_ns1__sampleParameterPK(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__sampleParameterPK(soap, n, NULL, NULL, NULL);
}

inline ns1__sampleParameterPK *
soap_new_req_ns1__sampleParameterPK(struct soap *soap) {
  ns1__sampleParameterPK *_p =
      soap_instantiate_ns1__sampleParameterPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__sampleParameterPK *
soap_new_set_ns1__sampleParameterPK(struct soap *soap, std::string *name,
                                    LONG64 *sampleId, std::string *units,
                                    char *__item2) {
  ns1__sampleParameterPK *_p =
      soap_instantiate_ns1__sampleParameterPK(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__sampleParameterPK::name = name;
    _p->ns1__sampleParameterPK::sampleId = sampleId;
    _p->ns1__sampleParameterPK::units = units;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__sampleParameterPK(struct soap *soap,
                                               ns1__sampleParameterPK *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__sampleParameterPK(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__sampleParameter
#define SOAP_TYPE_ICat3_ns1__sampleParameter (41)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__sampleParameter(struct soap *, const char *, int,
                              const ns1__sampleParameter *, const char *);
SOAP_FMAC3 ns1__sampleParameter *SOAP_FMAC4
soap_in_ns1__sampleParameter(struct soap *, const char *,
                             ns1__sampleParameter *, const char *);

#ifndef soap_write_ns1__sampleParameter
#define soap_write_ns1__sampleParameter(soap, data)                            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:sampleParameter", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__sampleParameter *SOAP_FMAC4
soap_get_ns1__sampleParameter(struct soap *, ns1__sampleParameter *,
                              const char *, const char *);

#ifndef soap_read_ns1__sampleParameter
#define soap_read_ns1__sampleParameter(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__sampleParameter(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__sampleParameter *SOAP_FMAC2
soap_instantiate_ns1__sampleParameter(struct soap *, int, const char *,
                                      const char *, size_t *);

inline ns1__sampleParameter *soap_new_ns1__sampleParameter(struct soap *soap,
                                                           int n = -1) {
  return soap_instantiate_ns1__sampleParameter(soap, n, NULL, NULL, NULL);
}

inline ns1__sampleParameter *
soap_new_req_ns1__sampleParameter(struct soap *soap, bool facilityAcquiredData1,
                                  bool selected1) {
  ns1__sampleParameter *_p =
      soap_instantiate_ns1__sampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__sampleParameter *soap_new_set_ns1__sampleParameter(
    struct soap *soap, time_t *dateTimeValue, std::string *description,
    std::string *error, double *numericValue, std::string *rangeBottom,
    std::string *rangeTop, ns1__sampleParameterPK *sampleParameterPK,
    std::string *stringValue, enum ns1__parameterValueType *valueType,
    bool facilityAcquiredData1, ns1__icatRole *icatRole1, bool selected1,
    std::string *uniqueId1, char *__item2) {
  ns1__sampleParameter *_p =
      soap_instantiate_ns1__sampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__sampleParameter::dateTimeValue = dateTimeValue;
    _p->ns1__sampleParameter::description = description;
    _p->ns1__sampleParameter::error = error;
    _p->ns1__sampleParameter::numericValue = numericValue;
    _p->ns1__sampleParameter::rangeBottom = rangeBottom;
    _p->ns1__sampleParameter::rangeTop = rangeTop;
    _p->ns1__sampleParameter::sampleParameterPK = sampleParameterPK;
    _p->ns1__sampleParameter::stringValue = stringValue;
    _p->ns1__sampleParameter::valueType = valueType;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__sampleParameter(struct soap *soap,
                                             ns1__sampleParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__sampleParameter(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__sample
#define SOAP_TYPE_ICat3_ns1__sample (40)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__sample(struct soap *, const char *, int,
                                               const ns1__sample *,
                                               const char *);
SOAP_FMAC3 ns1__sample *SOAP_FMAC4
soap_in_ns1__sample(struct soap *, const char *, ns1__sample *, const char *);

#ifndef soap_write_ns1__sample
#define soap_write_ns1__sample(soap, data)                                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:sample", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__sample *SOAP_FMAC4
soap_get_ns1__sample(struct soap *, ns1__sample *, const char *, const char *);

#ifndef soap_read_ns1__sample
#define soap_read_ns1__sample(soap, data)                                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__sample(soap, data, NULL, NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__sample *SOAP_FMAC2
soap_instantiate_ns1__sample(struct soap *, int, const char *, const char *,
                             size_t *);

inline ns1__sample *soap_new_ns1__sample(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__sample(soap, n, NULL, NULL, NULL);
}

inline ns1__sample *soap_new_req_ns1__sample(struct soap *soap,
                                             bool facilityAcquiredData1,
                                             bool selected1) {
  ns1__sample *_p = soap_instantiate_ns1__sample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__sample *soap_new_set_ns1__sample(
    struct soap *soap, std::string *chemicalFormula, LONG64 *id,
    std::string *instance, std::string *name, int *proposalSampleId,
    std::string *safetyInformation,
    std::vector<ns1__sampleParameter *> &sampleParameterCollection,
    bool facilityAcquiredData1, ns1__icatRole *icatRole1, bool selected1,
    std::string *uniqueId1, char *__item2) {
  ns1__sample *_p = soap_instantiate_ns1__sample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__sample::chemicalFormula = chemicalFormula;
    _p->ns1__sample::id = id;
    _p->ns1__sample::instance = instance;
    _p->ns1__sample::name = name;
    _p->ns1__sample::proposalSampleId = proposalSampleId;
    _p->ns1__sample::safetyInformation = safetyInformation;
    _p->ns1__sample::sampleParameterCollection = sampleParameterCollection;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__sample(struct soap *soap, ns1__sample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__sample(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSamplesBySampleNameResponse
#define SOAP_TYPE_ICat3_ns1__searchSamplesBySampleNameResponse (39)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchSamplesBySampleNameResponse(
    struct soap *, const char *, int,
    const ns1__searchSamplesBySampleNameResponse *, const char *);
SOAP_FMAC3 ns1__searchSamplesBySampleNameResponse *SOAP_FMAC4
soap_in_ns1__searchSamplesBySampleNameResponse(
    struct soap *, const char *, ns1__searchSamplesBySampleNameResponse *,
    const char *);

#ifndef soap_write_ns1__searchSamplesBySampleNameResponse
#define soap_write_ns1__searchSamplesBySampleNameResponse(soap, data)          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchSamplesBySampleNameResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSamplesBySampleNameResponse *SOAP_FMAC4
soap_get_ns1__searchSamplesBySampleNameResponse(
    struct soap *, ns1__searchSamplesBySampleNameResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchSamplesBySampleNameResponse
#define soap_read_ns1__searchSamplesBySampleNameResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSamplesBySampleNameResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSamplesBySampleNameResponse *SOAP_FMAC2
soap_instantiate_ns1__searchSamplesBySampleNameResponse(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline ns1__searchSamplesBySampleNameResponse *
soap_new_ns1__searchSamplesBySampleNameResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchSamplesBySampleNameResponse(soap, n, NULL,
                                                                 NULL, NULL);
}

inline ns1__searchSamplesBySampleNameResponse *
soap_new_req_ns1__searchSamplesBySampleNameResponse(struct soap *soap) {
  ns1__searchSamplesBySampleNameResponse *_p =
      soap_instantiate_ns1__searchSamplesBySampleNameResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSamplesBySampleNameResponse *
soap_new_set_ns1__searchSamplesBySampleNameResponse(
    struct soap *soap, std::vector<ns1__sample *> &return_, char *__item1) {
  ns1__searchSamplesBySampleNameResponse *_p =
      soap_instantiate_ns1__searchSamplesBySampleNameResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSamplesBySampleNameResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchSamplesBySampleNameResponse(
    struct soap *soap, ns1__searchSamplesBySampleNameResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSamplesBySampleNameResponse(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchSamplesBySampleName
#define SOAP_TYPE_ICat3_ns1__searchSamplesBySampleName (38)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchSamplesBySampleName(struct soap *, const char *, int,
                                        const ns1__searchSamplesBySampleName *,
                                        const char *);
SOAP_FMAC3 ns1__searchSamplesBySampleName *SOAP_FMAC4
soap_in_ns1__searchSamplesBySampleName(struct soap *, const char *,
                                       ns1__searchSamplesBySampleName *,
                                       const char *);

#ifndef soap_write_ns1__searchSamplesBySampleName
#define soap_write_ns1__searchSamplesBySampleName(soap, data)                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchSamplesBySampleName", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSamplesBySampleName *SOAP_FMAC4
soap_get_ns1__searchSamplesBySampleName(struct soap *,
                                        ns1__searchSamplesBySampleName *,
                                        const char *, const char *);

#ifndef soap_read_ns1__searchSamplesBySampleName
#define soap_read_ns1__searchSamplesBySampleName(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchSamplesBySampleName(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchSamplesBySampleName *SOAP_FMAC2
soap_instantiate_ns1__searchSamplesBySampleName(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline ns1__searchSamplesBySampleName *
soap_new_ns1__searchSamplesBySampleName(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchSamplesBySampleName(soap, n, NULL, NULL,
                                                         NULL);
}

inline ns1__searchSamplesBySampleName *
soap_new_req_ns1__searchSamplesBySampleName(struct soap *soap) {
  ns1__searchSamplesBySampleName *_p =
      soap_instantiate_ns1__searchSamplesBySampleName(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchSamplesBySampleName *
soap_new_set_ns1__searchSamplesBySampleName(struct soap *soap,
                                            std::string *sessionId,
                                            std::string *sampleName,
                                            char *__item1) {
  ns1__searchSamplesBySampleName *_p =
      soap_instantiate_ns1__searchSamplesBySampleName(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchSamplesBySampleName::sessionId = sessionId;
    _p->ns1__searchSamplesBySampleName::sampleName = sampleName;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__searchSamplesBySampleName(struct soap *soap,
                                           ns1__searchSamplesBySampleName *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchSamplesBySampleName(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__icatRole
#define SOAP_TYPE_ICat3_ns1__icatRole (37)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__icatRole(struct soap *, const char *,
                                                 int, const ns1__icatRole *,
                                                 const char *);
SOAP_FMAC3 ns1__icatRole *SOAP_FMAC4
soap_in_ns1__icatRole(struct soap *, const char *, ns1__icatRole *,
                      const char *);

#ifndef soap_write_ns1__icatRole
#define soap_write_ns1__icatRole(soap, data)                                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:icatRole", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__icatRole *SOAP_FMAC4
soap_get_ns1__icatRole(struct soap *, ns1__icatRole *, const char *,
                       const char *);

#ifndef soap_read_ns1__icatRole
#define soap_read_ns1__icatRole(soap, data)                                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__icatRole(soap, data, NULL, NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__icatRole *SOAP_FMAC2
soap_instantiate_ns1__icatRole(struct soap *, int, const char *, const char *,
                               size_t *);

inline ns1__icatRole *soap_new_ns1__icatRole(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__icatRole(soap, n, NULL, NULL, NULL);
}

inline ns1__icatRole *soap_new_req_ns1__icatRole(
    struct soap *soap, bool actionDelete, bool actionDownload,
    bool actionFacilityAcquired, bool actionInsert, bool actionManageUsers,
    bool actionRemove, bool actionRootInsert, bool actionRootRemove,
    bool actionSelect, bool actionUpdate, bool facilityAcquiredData1,
    bool selected1) {
  ns1__icatRole *_p =
      soap_instantiate_ns1__icatRole(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__icatRole::actionDelete = actionDelete;
    _p->ns1__icatRole::actionDownload = actionDownload;
    _p->ns1__icatRole::actionFacilityAcquired = actionFacilityAcquired;
    _p->ns1__icatRole::actionInsert = actionInsert;
    _p->ns1__icatRole::actionManageUsers = actionManageUsers;
    _p->ns1__icatRole::actionRemove = actionRemove;
    _p->ns1__icatRole::actionRootInsert = actionRootInsert;
    _p->ns1__icatRole::actionRootRemove = actionRootRemove;
    _p->ns1__icatRole::actionSelect = actionSelect;
    _p->ns1__icatRole::actionUpdate = actionUpdate;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__icatRole *soap_new_set_ns1__icatRole(
    struct soap *soap, bool actionDelete, bool actionDownload,
    bool actionFacilityAcquired, bool actionInsert, bool actionManageUsers,
    bool actionRemove, bool actionRootInsert, bool actionRootRemove,
    bool actionSelect, bool actionUpdate, std::string *role,
    bool facilityAcquiredData1, ns1__icatRole *icatRole1, bool selected1,
    std::string *uniqueId1, char *__item2) {
  ns1__icatRole *_p =
      soap_instantiate_ns1__icatRole(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__icatRole::actionDelete = actionDelete;
    _p->ns1__icatRole::actionDownload = actionDownload;
    _p->ns1__icatRole::actionFacilityAcquired = actionFacilityAcquired;
    _p->ns1__icatRole::actionInsert = actionInsert;
    _p->ns1__icatRole::actionManageUsers = actionManageUsers;
    _p->ns1__icatRole::actionRemove = actionRemove;
    _p->ns1__icatRole::actionRootInsert = actionRootInsert;
    _p->ns1__icatRole::actionRootRemove = actionRootRemove;
    _p->ns1__icatRole::actionSelect = actionSelect;
    _p->ns1__icatRole::actionUpdate = actionUpdate;
    _p->ns1__icatRole::role = role;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__icatRole(struct soap *soap, ns1__icatRole *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__icatRole(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3_ns1__entityBaseBean
#define SOAP_TYPE_ICat3_ns1__entityBaseBean (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__entityBaseBean(struct soap *, const char *, int,
                             const ns1__entityBaseBean *, const char *);
SOAP_FMAC3 ns1__entityBaseBean *SOAP_FMAC4
soap_in_ns1__entityBaseBean(struct soap *, const char *, ns1__entityBaseBean *,
                            const char *);

#ifndef soap_write_ns1__entityBaseBean
#define soap_write_ns1__entityBaseBean(soap, data)                             \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:entityBaseBean", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__entityBaseBean *SOAP_FMAC4
soap_get_ns1__entityBaseBean(struct soap *, ns1__entityBaseBean *, const char *,
                             const char *);

#ifndef soap_read_ns1__entityBaseBean
#define soap_read_ns1__entityBaseBean(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__entityBaseBean(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__entityBaseBean *SOAP_FMAC2
soap_instantiate_ns1__entityBaseBean(struct soap *, int, const char *,
                                     const char *, size_t *);

inline ns1__entityBaseBean *soap_new_ns1__entityBaseBean(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_ns1__entityBaseBean(soap, n, NULL, NULL, NULL);
}

inline ns1__entityBaseBean *
soap_new_req_ns1__entityBaseBean(struct soap *soap, bool facilityAcquiredData,
                                 bool selected) {
  ns1__entityBaseBean *_p =
      soap_instantiate_ns1__entityBaseBean(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData;
    _p->ns1__entityBaseBean::selected = selected;
  }
  return _p;
}

inline ns1__entityBaseBean *
soap_new_set_ns1__entityBaseBean(struct soap *soap, bool facilityAcquiredData,
                                 ns1__icatRole *icatRole, bool selected,
                                 std::string *uniqueId, char *__item1) {
  ns1__entityBaseBean *_p =
      soap_instantiate_ns1__entityBaseBean(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData;
    _p->ns1__entityBaseBean::icatRole = icatRole;
    _p->ns1__entityBaseBean::selected = selected;
    _p->ns1__entityBaseBean::uniqueId = uniqueId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__entityBaseBean(struct soap *soap,
                                            ns1__entityBaseBean *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__entityBaseBean(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__facilityUser
#define SOAP_TYPE_ICat3_ns1__facilityUser (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__facilityUser(struct soap *, const char *, int,
                           const ns1__facilityUser *, const char *);
SOAP_FMAC3 ns1__facilityUser *SOAP_FMAC4
soap_in_ns1__facilityUser(struct soap *, const char *, ns1__facilityUser *,
                          const char *);

#ifndef soap_write_ns1__facilityUser
#define soap_write_ns1__facilityUser(soap, data)                               \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:facilityUser", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__facilityUser *SOAP_FMAC4
soap_get_ns1__facilityUser(struct soap *, ns1__facilityUser *, const char *,
                           const char *);

#ifndef soap_read_ns1__facilityUser
#define soap_read_ns1__facilityUser(soap, data)                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__facilityUser(soap, data, NULL, NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__facilityUser *SOAP_FMAC2
soap_instantiate_ns1__facilityUser(struct soap *, int, const char *,
                                   const char *, size_t *);

inline ns1__facilityUser *soap_new_ns1__facilityUser(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_ns1__facilityUser(soap, n, NULL, NULL, NULL);
}

inline ns1__facilityUser *
soap_new_req_ns1__facilityUser(struct soap *soap, bool facilityAcquiredData1,
                               bool selected1) {
  ns1__facilityUser *_p =
      soap_instantiate_ns1__facilityUser(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::selected = selected1;
  }
  return _p;
}

inline ns1__facilityUser *soap_new_set_ns1__facilityUser(
    struct soap *soap, std::string *facilityUserId, std::string *federalId,
    std::string *firstName, std::string *initials, std::string *lastName,
    std::string *middleName, std::string *title, bool facilityAcquiredData1,
    ns1__icatRole *icatRole1, bool selected1, std::string *uniqueId1,
    char *__item2) {
  ns1__facilityUser *_p =
      soap_instantiate_ns1__facilityUser(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__facilityUser::facilityUserId = facilityUserId;
    _p->ns1__facilityUser::federalId = federalId;
    _p->ns1__facilityUser::firstName = firstName;
    _p->ns1__facilityUser::initials = initials;
    _p->ns1__facilityUser::lastName = lastName;
    _p->ns1__facilityUser::middleName = middleName;
    _p->ns1__facilityUser::title = title;
    _p->ns1__entityBaseBean::facilityAcquiredData = facilityAcquiredData1;
    _p->ns1__entityBaseBean::icatRole = icatRole1;
    _p->ns1__entityBaseBean::selected = selected1;
    _p->ns1__entityBaseBean::uniqueId = uniqueId1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__facilityUser(struct soap *soap,
                                          ns1__facilityUser *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__facilityUser(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchFacilityUserByRestrictionResponse
#define SOAP_TYPE_ICat3_ns1__searchFacilityUserByRestrictionResponse (34)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchFacilityUserByRestrictionResponse(
    struct soap *, const char *, int,
    const ns1__searchFacilityUserByRestrictionResponse *, const char *);
SOAP_FMAC3 ns1__searchFacilityUserByRestrictionResponse *SOAP_FMAC4
soap_in_ns1__searchFacilityUserByRestrictionResponse(
    struct soap *, const char *, ns1__searchFacilityUserByRestrictionResponse *,
    const char *);

#ifndef soap_write_ns1__searchFacilityUserByRestrictionResponse
#define soap_write_ns1__searchFacilityUserByRestrictionResponse(soap, data)    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchFacilityUserByRestrictionResponse",   \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchFacilityUserByRestrictionResponse *SOAP_FMAC4
soap_get_ns1__searchFacilityUserByRestrictionResponse(
    struct soap *, ns1__searchFacilityUserByRestrictionResponse *, const char *,
    const char *);

#ifndef soap_read_ns1__searchFacilityUserByRestrictionResponse
#define soap_read_ns1__searchFacilityUserByRestrictionResponse(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchFacilityUserByRestrictionResponse(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchFacilityUserByRestrictionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchFacilityUserByRestrictionResponse(struct soap *,
                                                              int, const char *,
                                                              const char *,
                                                              size_t *);

inline ns1__searchFacilityUserByRestrictionResponse *
soap_new_ns1__searchFacilityUserByRestrictionResponse(struct soap *soap,
                                                      int n = -1) {
  return soap_instantiate_ns1__searchFacilityUserByRestrictionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchFacilityUserByRestrictionResponse *
soap_new_req_ns1__searchFacilityUserByRestrictionResponse(struct soap *soap) {
  ns1__searchFacilityUserByRestrictionResponse *_p =
      soap_instantiate_ns1__searchFacilityUserByRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchFacilityUserByRestrictionResponse *
soap_new_set_ns1__searchFacilityUserByRestrictionResponse(
    struct soap *soap, std::vector<ns1__facilityUser *> &return_,
    char *__item1) {
  ns1__searchFacilityUserByRestrictionResponse *_p =
      soap_instantiate_ns1__searchFacilityUserByRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchFacilityUserByRestrictionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchFacilityUserByRestrictionResponse(
    struct soap *soap, ns1__searchFacilityUserByRestrictionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchFacilityUserByRestrictionResponse(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchFacilityUserByRestriction
#define SOAP_TYPE_ICat3_ns1__searchFacilityUserByRestriction (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchFacilityUserByRestriction(
    struct soap *, const char *, int,
    const ns1__searchFacilityUserByRestriction *, const char *);
SOAP_FMAC3 ns1__searchFacilityUserByRestriction *SOAP_FMAC4
soap_in_ns1__searchFacilityUserByRestriction(
    struct soap *, const char *, ns1__searchFacilityUserByRestriction *,
    const char *);

#ifndef soap_write_ns1__searchFacilityUserByRestriction
#define soap_write_ns1__searchFacilityUserByRestriction(soap, data)            \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchFacilityUserByRestriction", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchFacilityUserByRestriction *SOAP_FMAC4
soap_get_ns1__searchFacilityUserByRestriction(
    struct soap *, ns1__searchFacilityUserByRestriction *, const char *,
    const char *);

#ifndef soap_read_ns1__searchFacilityUserByRestriction
#define soap_read_ns1__searchFacilityUserByRestriction(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchFacilityUserByRestriction(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchFacilityUserByRestriction *SOAP_FMAC2
soap_instantiate_ns1__searchFacilityUserByRestriction(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline ns1__searchFacilityUserByRestriction *
soap_new_ns1__searchFacilityUserByRestriction(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchFacilityUserByRestriction(soap, n, NULL,
                                                               NULL, NULL);
}

inline ns1__searchFacilityUserByRestriction *
soap_new_req_ns1__searchFacilityUserByRestriction(struct soap *soap) {
  ns1__searchFacilityUserByRestriction *_p =
      soap_instantiate_ns1__searchFacilityUserByRestriction(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchFacilityUserByRestriction *
soap_new_set_ns1__searchFacilityUserByRestriction(
    struct soap *soap, std::string *sessionId,
    ns1__restrictionCondition *restriction, char *__item1) {
  ns1__searchFacilityUserByRestriction *_p =
      soap_instantiate_ns1__searchFacilityUserByRestriction(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchFacilityUserByRestriction::sessionId = sessionId;
    _p->ns1__searchFacilityUserByRestriction::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchFacilityUserByRestriction(
    struct soap *soap, ns1__searchFacilityUserByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchFacilityUserByRestriction(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listDatasetTypesResponse
#define SOAP_TYPE_ICat3_ns1__listDatasetTypesResponse (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listDatasetTypesResponse(struct soap *, const char *, int,
                                       const ns1__listDatasetTypesResponse *,
                                       const char *);
SOAP_FMAC3 ns1__listDatasetTypesResponse *SOAP_FMAC4
soap_in_ns1__listDatasetTypesResponse(struct soap *, const char *,
                                      ns1__listDatasetTypesResponse *,
                                      const char *);

#ifndef soap_write_ns1__listDatasetTypesResponse
#define soap_write_ns1__listDatasetTypesResponse(soap, data)                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listDatasetTypesResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatasetTypesResponse *SOAP_FMAC4
soap_get_ns1__listDatasetTypesResponse(struct soap *,
                                       ns1__listDatasetTypesResponse *,
                                       const char *, const char *);

#ifndef soap_read_ns1__listDatasetTypesResponse
#define soap_read_ns1__listDatasetTypesResponse(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listDatasetTypesResponse(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listDatasetTypesResponse *SOAP_FMAC2
soap_instantiate_ns1__listDatasetTypesResponse(struct soap *, int, const char *,
                                               const char *, size_t *);

inline ns1__listDatasetTypesResponse *
soap_new_ns1__listDatasetTypesResponse(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__listDatasetTypesResponse(soap, n, NULL, NULL,
                                                        NULL);
}

inline ns1__listDatasetTypesResponse *
soap_new_req_ns1__listDatasetTypesResponse(struct soap *soap) {
  ns1__listDatasetTypesResponse *_p =
      soap_instantiate_ns1__listDatasetTypesResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listDatasetTypesResponse *
soap_new_set_ns1__listDatasetTypesResponse(struct soap *soap,
                                           std::vector<std::string> &return_,
                                           char *__item1) {
  ns1__listDatasetTypesResponse *_p =
      soap_instantiate_ns1__listDatasetTypesResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listDatasetTypesResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void
soap_delete_ns1__listDatasetTypesResponse(struct soap *soap,
                                          ns1__listDatasetTypesResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listDatasetTypesResponse(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__listDatasetTypes
#define SOAP_TYPE_ICat3_ns1__listDatasetTypes (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__listDatasetTypes(struct soap *, const char *, int,
                               const ns1__listDatasetTypes *, const char *);
SOAP_FMAC3 ns1__listDatasetTypes *SOAP_FMAC4
soap_in_ns1__listDatasetTypes(struct soap *, const char *,
                              ns1__listDatasetTypes *, const char *);

#ifndef soap_write_ns1__listDatasetTypes
#define soap_write_ns1__listDatasetTypes(soap, data)                           \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:listDatasetTypes", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatasetTypes *SOAP_FMAC4
soap_get_ns1__listDatasetTypes(struct soap *, ns1__listDatasetTypes *,
                               const char *, const char *);

#ifndef soap_read_ns1__listDatasetTypes
#define soap_read_ns1__listDatasetTypes(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__listDatasetTypes(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__listDatasetTypes *SOAP_FMAC2
soap_instantiate_ns1__listDatasetTypes(struct soap *, int, const char *,
                                       const char *, size_t *);

inline ns1__listDatasetTypes *soap_new_ns1__listDatasetTypes(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_ns1__listDatasetTypes(soap, n, NULL, NULL, NULL);
}

inline ns1__listDatasetTypes *
soap_new_req_ns1__listDatasetTypes(struct soap *soap) {
  ns1__listDatasetTypes *_p =
      soap_instantiate_ns1__listDatasetTypes(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__listDatasetTypes *
soap_new_set_ns1__listDatasetTypes(struct soap *soap, std::string *sessionId,
                                   char *__item1) {
  ns1__listDatasetTypes *_p =
      soap_instantiate_ns1__listDatasetTypes(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__listDatasetTypes::sessionId = sessionId;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__listDatasetTypes(struct soap *soap,
                                              ns1__listDatasetTypes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__listDatasetTypes(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByParameterRestrictionResponse
#define SOAP_TYPE_ICat3_ns1__searchDatasetByParameterRestrictionResponse (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatasetByParameterRestrictionResponse(
    struct soap *, const char *, int,
    const ns1__searchDatasetByParameterRestrictionResponse *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterRestrictionResponse *SOAP_FMAC4
soap_in_ns1__searchDatasetByParameterRestrictionResponse(
    struct soap *, const char *,
    ns1__searchDatasetByParameterRestrictionResponse *, const char *);

#ifndef soap_write_ns1__searchDatasetByParameterRestrictionResponse
#define soap_write_ns1__searchDatasetByParameterRestrictionResponse(soap,      \
                                                                    data)      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(                                                       \
           soap, "ns1:searchDatasetByParameterRestrictionResponse", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterRestrictionResponse *SOAP_FMAC4
soap_get_ns1__searchDatasetByParameterRestrictionResponse(
    struct soap *, ns1__searchDatasetByParameterRestrictionResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchDatasetByParameterRestrictionResponse
#define soap_read_ns1__searchDatasetByParameterRestrictionResponse(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByParameterRestrictionResponse(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByParameterRestrictionResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByParameterRestrictionResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchDatasetByParameterRestrictionResponse *
soap_new_ns1__searchDatasetByParameterRestrictionResponse(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate_ns1__searchDatasetByParameterRestrictionResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatasetByParameterRestrictionResponse *
soap_new_req_ns1__searchDatasetByParameterRestrictionResponse(
    struct soap *soap) {
  ns1__searchDatasetByParameterRestrictionResponse *_p =
      soap_instantiate_ns1__searchDatasetByParameterRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByParameterRestrictionResponse *
soap_new_set_ns1__searchDatasetByParameterRestrictionResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatasetByParameterRestrictionResponse *_p =
      soap_instantiate_ns1__searchDatasetByParameterRestrictionResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByParameterRestrictionResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByParameterRestrictionResponse(
    struct soap *soap, ns1__searchDatasetByParameterRestrictionResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByParameterRestrictionResponse(struct soap *, int,
                                                           int, void *, size_t,
                                                           const void *,
                                                           size_t);

#ifndef SOAP_TYPE_ICat3_ns1__parameterCondition
#define SOAP_TYPE_ICat3_ns1__parameterCondition (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__parameterCondition(struct soap *, const char *, int,
                                 const ns1__parameterCondition *, const char *);
SOAP_FMAC3 ns1__parameterCondition *SOAP_FMAC4
soap_in_ns1__parameterCondition(struct soap *, const char *,
                                ns1__parameterCondition *, const char *);

#ifndef soap_write_ns1__parameterCondition
#define soap_write_ns1__parameterCondition(soap, data)                         \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:parameterCondition", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterCondition *SOAP_FMAC4
soap_get_ns1__parameterCondition(struct soap *, ns1__parameterCondition *,
                                 const char *, const char *);

#ifndef soap_read_ns1__parameterCondition
#define soap_read_ns1__parameterCondition(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__parameterCondition(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__parameterCondition *SOAP_FMAC2
soap_instantiate_ns1__parameterCondition(struct soap *, int, const char *,
                                         const char *, size_t *);

inline ns1__parameterCondition *
soap_new_ns1__parameterCondition(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__parameterCondition(soap, n, NULL, NULL, NULL);
}

inline ns1__parameterCondition *
soap_new_req_ns1__parameterCondition(struct soap *soap, bool negate1,
                                     bool sensitive1) {
  ns1__parameterCondition *_p =
      soap_instantiate_ns1__parameterCondition(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__condition::negate = negate1;
    _p->ns1__condition::sensitive = sensitive1;
  }
  return _p;
}

inline ns1__parameterCondition *
soap_new_set_ns1__parameterCondition(struct soap *soap, bool negate1,
                                     bool sensitive1, char *__item2) {
  ns1__parameterCondition *_p =
      soap_instantiate_ns1__parameterCondition(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__condition::negate = negate1;
    _p->ns1__condition::sensitive = sensitive1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void soap_delete_ns1__parameterCondition(struct soap *soap,
                                                ns1__parameterCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__parameterCondition(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByParameterRestriction
#define SOAP_TYPE_ICat3_ns1__searchDatasetByParameterRestriction (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatasetByParameterRestriction(
    struct soap *, const char *, int,
    const ns1__searchDatasetByParameterRestriction *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterRestriction *SOAP_FMAC4
soap_in_ns1__searchDatasetByParameterRestriction(
    struct soap *, const char *, ns1__searchDatasetByParameterRestriction *,
    const char *);

#ifndef soap_write_ns1__searchDatasetByParameterRestriction
#define soap_write_ns1__searchDatasetByParameterRestriction(soap, data)        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatasetByParameterRestriction",       \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterRestriction *SOAP_FMAC4
soap_get_ns1__searchDatasetByParameterRestriction(
    struct soap *, ns1__searchDatasetByParameterRestriction *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatasetByParameterRestriction
#define soap_read_ns1__searchDatasetByParameterRestriction(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByParameterRestriction(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByParameterRestriction *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByParameterRestriction(struct soap *, int,
                                                          const char *,
                                                          const char *,
                                                          size_t *);

inline ns1__searchDatasetByParameterRestriction *
soap_new_ns1__searchDatasetByParameterRestriction(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate_ns1__searchDatasetByParameterRestriction(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatasetByParameterRestriction *
soap_new_req_ns1__searchDatasetByParameterRestriction(struct soap *soap) {
  ns1__searchDatasetByParameterRestriction *_p =
      soap_instantiate_ns1__searchDatasetByParameterRestriction(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByParameterRestriction *
soap_new_set_ns1__searchDatasetByParameterRestriction(
    struct soap *soap, std::string *sessionId,
    ns1__parameterCondition *parameterCondition,
    ns1__restrictionCondition *restrictions, char *__item1) {
  ns1__searchDatasetByParameterRestriction *_p =
      soap_instantiate_ns1__searchDatasetByParameterRestriction(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByParameterRestriction::sessionId = sessionId;
    _p->ns1__searchDatasetByParameterRestriction::parameterCondition =
        parameterCondition;
    _p->ns1__searchDatasetByParameterRestriction::restrictions = restrictions;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByParameterRestriction(
    struct soap *soap, ns1__searchDatasetByParameterRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByParameterRestriction(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByRestrictionLogicalResponse
#define SOAP_TYPE_ICat3_ns1__searchDatasetByRestrictionLogicalResponse (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__searchDatasetByRestrictionLogicalResponse(
    struct soap *, const char *, int,
    const ns1__searchDatasetByRestrictionLogicalResponse *, const char *);
SOAP_FMAC3 ns1__searchDatasetByRestrictionLogicalResponse *SOAP_FMAC4
soap_in_ns1__searchDatasetByRestrictionLogicalResponse(
    struct soap *, const char *,
    ns1__searchDatasetByRestrictionLogicalResponse *, const char *);

#ifndef soap_write_ns1__searchDatasetByRestrictionLogicalResponse
#define soap_write_ns1__searchDatasetByRestrictionLogicalResponse(soap, data)  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:searchDatasetByRestrictionLogicalResponse", \
                        NULL) ||                                               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestrictionLogicalResponse *SOAP_FMAC4
soap_get_ns1__searchDatasetByRestrictionLogicalResponse(
    struct soap *, ns1__searchDatasetByRestrictionLogicalResponse *,
    const char *, const char *);

#ifndef soap_read_ns1__searchDatasetByRestrictionLogicalResponse
#define soap_read_ns1__searchDatasetByRestrictionLogicalResponse(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByRestrictionLogicalResponse(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByRestrictionLogicalResponse *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByRestrictionLogicalResponse(
    struct soap *, int, const char *, const char *, size_t *);

inline ns1__searchDatasetByRestrictionLogicalResponse *
soap_new_ns1__searchDatasetByRestrictionLogicalResponse(struct soap *soap,
                                                        int n = -1) {
  return soap_instantiate_ns1__searchDatasetByRestrictionLogicalResponse(
      soap, n, NULL, NULL, NULL);
}

inline ns1__searchDatasetByRestrictionLogicalResponse *
soap_new_req_ns1__searchDatasetByRestrictionLogicalResponse(struct soap *soap) {
  ns1__searchDatasetByRestrictionLogicalResponse *_p =
      soap_instantiate_ns1__searchDatasetByRestrictionLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByRestrictionLogicalResponse *
soap_new_set_ns1__searchDatasetByRestrictionLogicalResponse(
    struct soap *soap, std::vector<xsd__anyType *> &return_, char *__item1) {
  ns1__searchDatasetByRestrictionLogicalResponse *_p =
      soap_instantiate_ns1__searchDatasetByRestrictionLogicalResponse(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByRestrictionLogicalResponse::return_ = return_;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByRestrictionLogicalResponse(
    struct soap *soap, ns1__searchDatasetByRestrictionLogicalResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByRestrictionLogicalResponse(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__condition
#define SOAP_TYPE_ICat3_ns1__condition (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__condition(struct soap *, const char *,
                                                  int, const ns1__condition *,
                                                  const char *);
SOAP_FMAC3 ns1__condition *SOAP_FMAC4
soap_in_ns1__condition(struct soap *, const char *, ns1__condition *,
                       const char *);

#ifndef soap_write_ns1__condition
#define soap_write_ns1__condition(soap, data)                                  \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "ns1:condition", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__condition *SOAP_FMAC4
soap_get_ns1__condition(struct soap *, ns1__condition *, const char *,
                        const char *);

#ifndef soap_read_ns1__condition
#define soap_read_ns1__condition(soap, data)                                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__condition(soap, data, NULL, NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__condition *SOAP_FMAC2
soap_instantiate_ns1__condition(struct soap *, int, const char *, const char *,
                                size_t *);

inline ns1__condition *soap_new_ns1__condition(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__condition(soap, n, NULL, NULL, NULL);
}

inline ns1__condition *
soap_new_req_ns1__condition(struct soap *soap, bool negate, bool sensitive) {
  ns1__condition *_p =
      soap_instantiate_ns1__condition(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__condition::negate = negate;
    _p->ns1__condition::sensitive = sensitive;
  }
  return _p;
}

inline ns1__condition *soap_new_set_ns1__condition(struct soap *soap,
                                                   bool negate, bool sensitive,
                                                   char *__item1) {
  ns1__condition *_p =
      soap_instantiate_ns1__condition(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__condition::negate = negate;
    _p->ns1__condition::sensitive = sensitive;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__condition(struct soap *soap, ns1__condition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__condition(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__restrictionCondition
#define SOAP_TYPE_ICat3_ns1__restrictionCondition (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4
soap_out_ns1__restrictionCondition(struct soap *, const char *, int,
                                   const ns1__restrictionCondition *,
                                   const char *);
SOAP_FMAC3 ns1__restrictionCondition *SOAP_FMAC4
soap_in_ns1__restrictionCondition(struct soap *, const char *,
                                  ns1__restrictionCondition *, const char *);

#ifndef soap_write_ns1__restrictionCondition
#define soap_write_ns1__restrictionCondition(soap, data)                       \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:restrictionCondition", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__restrictionCondition *SOAP_FMAC4
soap_get_ns1__restrictionCondition(struct soap *, ns1__restrictionCondition *,
                                   const char *, const char *);

#ifndef soap_read_ns1__restrictionCondition
#define soap_read_ns1__restrictionCondition(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__restrictionCondition(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__restrictionCondition *SOAP_FMAC2
soap_instantiate_ns1__restrictionCondition(struct soap *, int, const char *,
                                           const char *, size_t *);

inline ns1__restrictionCondition *
soap_new_ns1__restrictionCondition(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__restrictionCondition(soap, n, NULL, NULL, NULL);
}

inline ns1__restrictionCondition *
soap_new_req_ns1__restrictionCondition(struct soap *soap, int maxResults,
                                       bool orderByAsc, bool returnLongId,
                                       bool negate1, bool sensitive1) {
  ns1__restrictionCondition *_p =
      soap_instantiate_ns1__restrictionCondition(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__restrictionCondition::maxResults = maxResults;
    _p->ns1__restrictionCondition::orderByAsc = orderByAsc;
    _p->ns1__restrictionCondition::returnLongId = returnLongId;
    _p->ns1__condition::negate = negate1;
    _p->ns1__condition::sensitive = sensitive1;
  }
  return _p;
}

inline ns1__restrictionCondition *soap_new_set_ns1__restrictionCondition(
    struct soap *soap, enum ns1__datafileInclude *datafileInclude,
    enum ns1__datasetInclude *datasetInclude, int *firstResult,
    enum ns1__investigationInclude *investigationInclude, int maxResults,
    bool orderByAsc, enum ns1__restrictionAttributes *orderByAttribute,
    bool returnLongId, enum ns1__sampleInclude *sampleInclude, bool negate1,
    bool sensitive1, char *__item2) {
  ns1__restrictionCondition *_p =
      soap_instantiate_ns1__restrictionCondition(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__restrictionCondition::datafileInclude = datafileInclude;
    _p->ns1__restrictionCondition::datasetInclude = datasetInclude;
    _p->ns1__restrictionCondition::firstResult = firstResult;
    _p->ns1__restrictionCondition::investigationInclude = investigationInclude;
    _p->ns1__restrictionCondition::maxResults = maxResults;
    _p->ns1__restrictionCondition::orderByAsc = orderByAsc;
    _p->ns1__restrictionCondition::orderByAttribute = orderByAttribute;
    _p->ns1__restrictionCondition::returnLongId = returnLongId;
    _p->ns1__restrictionCondition::sampleInclude = sampleInclude;
    _p->ns1__condition::negate = negate1;
    _p->ns1__condition::sensitive = sensitive1;
    _p->xsd__anyType::__item = __item2;
  }
  return _p;
}

inline void
soap_delete_ns1__restrictionCondition(struct soap *soap,
                                      ns1__restrictionCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__restrictionCondition(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__restrictionLogicalCondition
#define SOAP_TYPE_ICat3_ns1__restrictionLogicalCondition (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__restrictionLogicalCondition(
    struct soap *, const char *, int, const ns1__restrictionLogicalCondition *,
    const char *);
SOAP_FMAC3 ns1__restrictionLogicalCondition *SOAP_FMAC4
soap_in_ns1__restrictionLogicalCondition(struct soap *, const char *,
                                         ns1__restrictionLogicalCondition *,
                                         const char *);

#ifndef soap_write_ns1__restrictionLogicalCondition
#define soap_write_ns1__restrictionLogicalCondition(soap, data)                \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)->soap_put(soap, "ns1:restrictionLogicalCondition", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__restrictionLogicalCondition *SOAP_FMAC4
soap_get_ns1__restrictionLogicalCondition(struct soap *,
                                          ns1__restrictionLogicalCondition *,
                                          const char *, const char *);

#ifndef soap_read_ns1__restrictionLogicalCondition
#define soap_read_ns1__restrictionLogicalCondition(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__restrictionLogicalCondition(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__restrictionLogicalCondition *SOAP_FMAC2
soap_instantiate_ns1__restrictionLogicalCondition(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline ns1__restrictionLogicalCondition *
soap_new_ns1__restrictionLogicalCondition(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__restrictionLogicalCondition(soap, n, NULL, NULL,
                                                           NULL);
}

inline ns1__restrictionLogicalCondition *
soap_new_req_ns1__restrictionLogicalCondition(struct soap *soap,
                                              int maxResults1, bool orderByAsc1,
                                              bool returnLongId1, bool negate2,
                                              bool sensitive2) {
  ns1__restrictionLogicalCondition *_p =
      soap_instantiate_ns1__restrictionLogicalCondition(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__restrictionCondition::maxResults = maxResults1;
    _p->ns1__restrictionCondition::orderByAsc = orderByAsc1;
    _p->ns1__restrictionCondition::returnLongId = returnLongId1;
    _p->ns1__condition::negate = negate2;
    _p->ns1__condition::sensitive = sensitive2;
  }
  return _p;
}

inline ns1__restrictionLogicalCondition *
soap_new_set_ns1__restrictionLogicalCondition(
    struct soap *soap, enum ns1__logicalOperator *operator_,
    std::vector<ns1__restrictionCondition *> &restConditions,
    enum ns1__datafileInclude *datafileInclude1,
    enum ns1__datasetInclude *datasetInclude1, int *firstResult1,
    enum ns1__investigationInclude *investigationInclude1, int maxResults1,
    bool orderByAsc1, enum ns1__restrictionAttributes *orderByAttribute1,
    bool returnLongId1, enum ns1__sampleInclude *sampleInclude1, bool negate2,
    bool sensitive2, char *__item3) {
  ns1__restrictionLogicalCondition *_p =
      soap_instantiate_ns1__restrictionLogicalCondition(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__restrictionLogicalCondition::operator_ = operator_;
    _p->ns1__restrictionLogicalCondition::restConditions = restConditions;
    _p->ns1__restrictionCondition::datafileInclude = datafileInclude1;
    _p->ns1__restrictionCondition::datasetInclude = datasetInclude1;
    _p->ns1__restrictionCondition::firstResult = firstResult1;
    _p->ns1__restrictionCondition::investigationInclude = investigationInclude1;
    _p->ns1__restrictionCondition::maxResults = maxResults1;
    _p->ns1__restrictionCondition::orderByAsc = orderByAsc1;
    _p->ns1__restrictionCondition::orderByAttribute = orderByAttribute1;
    _p->ns1__restrictionCondition::returnLongId = returnLongId1;
    _p->ns1__restrictionCondition::sampleInclude = sampleInclude1;
    _p->ns1__condition::negate = negate2;
    _p->ns1__condition::sensitive = sensitive2;
    _p->xsd__anyType::__item = __item3;
  }
  return _p;
}

inline void soap_delete_ns1__restrictionLogicalCondition(
    struct soap *soap, ns1__restrictionLogicalCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__restrictionLogicalCondition(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_ns1__searchDatasetByRestrictionLogical
#define SOAP_TYPE_ICat3_ns1__searchDatasetByRestrictionLogical (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__searchDatasetByRestrictionLogical(
    struct soap *, const char *, int,
    const ns1__searchDatasetByRestrictionLogical *, const char *);
SOAP_FMAC3 ns1__searchDatasetByRestrictionLogical *SOAP_FMAC4
soap_in_ns1__searchDatasetByRestrictionLogical(
    struct soap *, const char *, ns1__searchDatasetByRestrictionLogical *,
    const char *);

#ifndef soap_write_ns1__searchDatasetByRestrictionLogical
#define soap_write_ns1__searchDatasetByRestrictionLogical(soap, data)          \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) ||                                                    \
       (data)                                                                  \
           ->soap_put(soap, "ns1:searchDatasetByRestrictionLogical", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestrictionLogical *SOAP_FMAC4
soap_get_ns1__searchDatasetByRestrictionLogical(
    struct soap *, ns1__searchDatasetByRestrictionLogical *, const char *,
    const char *);

#ifndef soap_read_ns1__searchDatasetByRestrictionLogical
#define soap_read_ns1__searchDatasetByRestrictionLogical(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_ns1__searchDatasetByRestrictionLogical(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 ns1__searchDatasetByRestrictionLogical *SOAP_FMAC2
soap_instantiate_ns1__searchDatasetByRestrictionLogical(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline ns1__searchDatasetByRestrictionLogical *
soap_new_ns1__searchDatasetByRestrictionLogical(struct soap *soap, int n = -1) {
  return soap_instantiate_ns1__searchDatasetByRestrictionLogical(soap, n, NULL,
                                                                 NULL, NULL);
}

inline ns1__searchDatasetByRestrictionLogical *
soap_new_req_ns1__searchDatasetByRestrictionLogical(struct soap *soap) {
  ns1__searchDatasetByRestrictionLogical *_p =
      soap_instantiate_ns1__searchDatasetByRestrictionLogical(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline ns1__searchDatasetByRestrictionLogical *
soap_new_set_ns1__searchDatasetByRestrictionLogical(
    struct soap *soap, std::string *sessionId,
    ns1__restrictionLogicalCondition *restriction, char *__item1) {
  ns1__searchDatasetByRestrictionLogical *_p =
      soap_instantiate_ns1__searchDatasetByRestrictionLogical(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->ns1__searchDatasetByRestrictionLogical::sessionId = sessionId;
    _p->ns1__searchDatasetByRestrictionLogical::restriction = restriction;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_ns1__searchDatasetByRestrictionLogical(
    struct soap *soap, ns1__searchDatasetByRestrictionLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_ns1__searchDatasetByRestrictionLogical(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_std__string
#define SOAP_TYPE_ICat3_std__string (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__string(struct soap *, std::string *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__string(struct soap *, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap *, const char *, int,
                                               const std::string *,
                                               const char *);
SOAP_FMAC3 std::string *SOAP_FMAC4
soap_in_std__string(struct soap *, const char *, std::string *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap *,
                                               const std::string *,
                                               const char *, const char *);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data)                                     \
  (soap_serialize_std__string(soap, data),                                     \
   soap_begin_send(soap) ||                                                    \
       soap_put_std__string(soap, data, "string", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 std::string *SOAP_FMAC4
soap_get_std__string(struct soap *, std::string *, const char *, const char *);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data)                                      \
  (soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 std::string *SOAP_FMAC2
soap_instantiate_std__string(struct soap *, int, const char *, const char *,
                             size_t *);

inline std::string *soap_new_std__string(struct soap *soap, int n = -1) {
  return soap_instantiate_std__string(soap, n, NULL, NULL, NULL);
}

inline std::string *soap_new_req_std__string(struct soap *soap) {
  std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_std__string(soap, _p);
  }
  return _p;
}

inline std::string *soap_new_set_std__string(struct soap *soap) {
  std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_std__string(soap, _p);
  }
  return _p;
}

inline void soap_delete_std__string(struct soap *soap, std::string *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_xsd__string
#define SOAP_TYPE_ICat3_xsd__string (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap *, const char *, int,
                                               const xsd__string *,
                                               const char *);
SOAP_FMAC3 xsd__string *SOAP_FMAC4
soap_in_xsd__string(struct soap *, const char *, xsd__string *, const char *);

#ifndef soap_write_xsd__string
#define soap_write_xsd__string(soap, data)                                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "xsd:string", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 xsd__string *SOAP_FMAC4
soap_get_xsd__string(struct soap *, xsd__string *, const char *, const char *);

#ifndef soap_read_xsd__string
#define soap_read_xsd__string(soap, data)                                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_xsd__string(soap, data, NULL, NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 xsd__string *SOAP_FMAC2
soap_instantiate_xsd__string(struct soap *, int, const char *, const char *,
                             size_t *);

inline xsd__string *soap_new_xsd__string(struct soap *soap, int n = -1) {
  return soap_instantiate_xsd__string(soap, n, NULL, NULL, NULL);
}

inline xsd__string *soap_new_req_xsd__string(struct soap *soap,
                                             std::string &__item) {
  xsd__string *_p = soap_instantiate_xsd__string(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__string::__item = __item;
  }
  return _p;
}

inline xsd__string *soap_new_set_xsd__string(struct soap *soap,
                                             std::string &__item,
                                             char *__item1) {
  xsd__string *_p = soap_instantiate_xsd__string(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__string::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_xsd__string(struct soap *soap, xsd__string *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__string(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_xsd__long
#define SOAP_TYPE_ICat3_xsd__long (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__long(struct soap *, const char *, int,
                                             const xsd__long *, const char *);
SOAP_FMAC3 xsd__long *SOAP_FMAC4
soap_in_xsd__long(struct soap *, const char *, xsd__long *, const char *);

#ifndef soap_write_xsd__long
#define soap_write_xsd__long(soap, data)                                       \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "xsd:long", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 xsd__long *SOAP_FMAC4
soap_get_xsd__long(struct soap *, xsd__long *, const char *, const char *);

#ifndef soap_read_xsd__long
#define soap_read_xsd__long(soap, data)                                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_xsd__long(soap, data, NULL, NULL) ||                   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 xsd__long *SOAP_FMAC2
soap_instantiate_xsd__long(struct soap *, int, const char *, const char *,
                           size_t *);

inline xsd__long *soap_new_xsd__long(struct soap *soap, int n = -1) {
  return soap_instantiate_xsd__long(soap, n, NULL, NULL, NULL);
}

inline xsd__long *soap_new_req_xsd__long(struct soap *soap, LONG64 __item) {
  xsd__long *_p = soap_instantiate_xsd__long(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__long::__item = __item;
  }
  return _p;
}

inline xsd__long *soap_new_set_xsd__long(struct soap *soap, LONG64 __item,
                                         char *__item1) {
  xsd__long *_p = soap_instantiate_xsd__long(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__long::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_xsd__long(struct soap *soap, xsd__long *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__long(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_xsd__int
#define SOAP_TYPE_ICat3_xsd__int (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__int(struct soap *, const char *, int,
                                            const xsd__int *, const char *);
SOAP_FMAC3 xsd__int *SOAP_FMAC4
soap_in_xsd__int(struct soap *, const char *, xsd__int *, const char *);

#ifndef soap_write_xsd__int
#define soap_write_xsd__int(soap, data)                                        \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "xsd:int", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 xsd__int *SOAP_FMAC4
soap_get_xsd__int(struct soap *, xsd__int *, const char *, const char *);

#ifndef soap_read_xsd__int
#define soap_read_xsd__int(soap, data)                                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_xsd__int(soap, data, NULL, NULL) ||                    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 xsd__int *SOAP_FMAC2
soap_instantiate_xsd__int(struct soap *, int, const char *, const char *,
                          size_t *);

inline xsd__int *soap_new_xsd__int(struct soap *soap, int n = -1) {
  return soap_instantiate_xsd__int(soap, n, NULL, NULL, NULL);
}

inline xsd__int *soap_new_req_xsd__int(struct soap *soap, int __item) {
  xsd__int *_p = soap_instantiate_xsd__int(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__int::__item = __item;
  }
  return _p;
}

inline xsd__int *soap_new_set_xsd__int(struct soap *soap, int __item,
                                       char *__item1) {
  xsd__int *_p = soap_instantiate_xsd__int(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__int::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_xsd__int(struct soap *soap, xsd__int *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__int(struct soap *, int, int, void *,
                                              size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_xsd__float
#define SOAP_TYPE_ICat3_xsd__float (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__float(struct soap *, const char *, int,
                                              const xsd__float *, const char *);
SOAP_FMAC3 xsd__float *SOAP_FMAC4
soap_in_xsd__float(struct soap *, const char *, xsd__float *, const char *);

#ifndef soap_write_xsd__float
#define soap_write_xsd__float(soap, data)                                      \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "xsd:float", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 xsd__float *SOAP_FMAC4
soap_get_xsd__float(struct soap *, xsd__float *, const char *, const char *);

#ifndef soap_read_xsd__float
#define soap_read_xsd__float(soap, data)                                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_xsd__float(soap, data, NULL, NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 xsd__float *SOAP_FMAC2
soap_instantiate_xsd__float(struct soap *, int, const char *, const char *,
                            size_t *);

inline xsd__float *soap_new_xsd__float(struct soap *soap, int n = -1) {
  return soap_instantiate_xsd__float(soap, n, NULL, NULL, NULL);
}

inline xsd__float *soap_new_req_xsd__float(struct soap *soap, float __item) {
  xsd__float *_p = soap_instantiate_xsd__float(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__float::__item = __item;
  }
  return _p;
}

inline xsd__float *soap_new_set_xsd__float(struct soap *soap, float __item,
                                           char *__item1) {
  xsd__float *_p = soap_instantiate_xsd__float(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__float::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_xsd__float(struct soap *soap, xsd__float *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__float(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_xsd__double
#define SOAP_TYPE_ICat3_xsd__double (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__double(struct soap *, const char *, int,
                                               const xsd__double *,
                                               const char *);
SOAP_FMAC3 xsd__double *SOAP_FMAC4
soap_in_xsd__double(struct soap *, const char *, xsd__double *, const char *);

#ifndef soap_write_xsd__double
#define soap_write_xsd__double(soap, data)                                     \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "xsd:double", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 xsd__double *SOAP_FMAC4
soap_get_xsd__double(struct soap *, xsd__double *, const char *, const char *);

#ifndef soap_read_xsd__double
#define soap_read_xsd__double(soap, data)                                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_xsd__double(soap, data, NULL, NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 xsd__double *SOAP_FMAC2
soap_instantiate_xsd__double(struct soap *, int, const char *, const char *,
                             size_t *);

inline xsd__double *soap_new_xsd__double(struct soap *soap, int n = -1) {
  return soap_instantiate_xsd__double(soap, n, NULL, NULL, NULL);
}

inline xsd__double *soap_new_req_xsd__double(struct soap *soap, double __item) {
  xsd__double *_p = soap_instantiate_xsd__double(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__double::__item = __item;
  }
  return _p;
}

inline xsd__double *soap_new_set_xsd__double(struct soap *soap, double __item,
                                             char *__item1) {
  xsd__double *_p = soap_instantiate_xsd__double(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__double::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_xsd__double(struct soap *soap, xsd__double *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__double(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3_xsd__dateTime
#define SOAP_TYPE_ICat3_xsd__dateTime (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__dateTime(struct soap *, const char *,
                                                 int, const xsd__dateTime *,
                                                 const char *);
SOAP_FMAC3 xsd__dateTime *SOAP_FMAC4
soap_in_xsd__dateTime(struct soap *, const char *, xsd__dateTime *,
                      const char *);

#ifndef soap_write_xsd__dateTime
#define soap_write_xsd__dateTime(soap, data)                                   \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "xsd:dateTime", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 xsd__dateTime *SOAP_FMAC4
soap_get_xsd__dateTime(struct soap *, xsd__dateTime *, const char *,
                       const char *);

#ifndef soap_read_xsd__dateTime
#define soap_read_xsd__dateTime(soap, data)                                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_xsd__dateTime(soap, data, NULL, NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 xsd__dateTime *SOAP_FMAC2
soap_instantiate_xsd__dateTime(struct soap *, int, const char *, const char *,
                               size_t *);

inline xsd__dateTime *soap_new_xsd__dateTime(struct soap *soap, int n = -1) {
  return soap_instantiate_xsd__dateTime(soap, n, NULL, NULL, NULL);
}

inline xsd__dateTime *soap_new_req_xsd__dateTime(struct soap *soap,
                                                 time_t __item) {
  xsd__dateTime *_p =
      soap_instantiate_xsd__dateTime(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__dateTime::__item = __item;
  }
  return _p;
}

inline xsd__dateTime *soap_new_set_xsd__dateTime(struct soap *soap,
                                                 time_t __item, char *__item1) {
  xsd__dateTime *_p =
      soap_instantiate_xsd__dateTime(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__dateTime::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_xsd__dateTime(struct soap *soap, xsd__dateTime *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__dateTime(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3_xsd__boolean
#define SOAP_TYPE_ICat3_xsd__boolean (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap *, const char *,
                                                int, const xsd__boolean *,
                                                const char *);
SOAP_FMAC3 xsd__boolean *SOAP_FMAC4
soap_in_xsd__boolean(struct soap *, const char *, xsd__boolean *, const char *);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data)                                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "xsd:boolean", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 xsd__boolean *SOAP_FMAC4
soap_get_xsd__boolean(struct soap *, xsd__boolean *, const char *,
                      const char *);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data)                                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_xsd__boolean(soap, data, NULL, NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 xsd__boolean *SOAP_FMAC2
soap_instantiate_xsd__boolean(struct soap *, int, const char *, const char *,
                              size_t *);

inline xsd__boolean *soap_new_xsd__boolean(struct soap *soap, int n = -1) {
  return soap_instantiate_xsd__boolean(soap, n, NULL, NULL, NULL);
}

inline xsd__boolean *soap_new_req_xsd__boolean(struct soap *soap, bool __item) {
  xsd__boolean *_p = soap_instantiate_xsd__boolean(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__boolean::__item = __item;
  }
  return _p;
}

inline xsd__boolean *soap_new_set_xsd__boolean(struct soap *soap, bool __item,
                                               char *__item1) {
  xsd__boolean *_p = soap_instantiate_xsd__boolean(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__boolean::__item = __item;
    _p->xsd__anyType::__item = __item1;
  }
  return _p;
}

inline void soap_delete_xsd__boolean(struct soap *soap, xsd__boolean *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__boolean(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3_xsd__anyType
#define SOAP_TYPE_ICat3_xsd__anyType (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyType(struct soap *, const char *,
                                                int, const xsd__anyType *,
                                                const char *);
SOAP_FMAC3 xsd__anyType *SOAP_FMAC4
soap_in_xsd__anyType(struct soap *, const char *, xsd__anyType *, const char *);

#ifndef soap_write_xsd__anyType
#define soap_write_xsd__anyType(soap, data)                                    \
  ((data)->soap_serialize(soap),                                               \
   soap_begin_send(soap) || (data)->soap_put(soap, "xsd:anyType", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 xsd__anyType *SOAP_FMAC4
soap_get_xsd__anyType(struct soap *, xsd__anyType *, const char *,
                      const char *);

#ifndef soap_read_xsd__anyType
#define soap_read_xsd__anyType(soap, data)                                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_xsd__anyType(soap, data, NULL, NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 xsd__anyType *SOAP_FMAC2
soap_instantiate_xsd__anyType(struct soap *, int, const char *, const char *,
                              size_t *);

inline xsd__anyType *soap_new_xsd__anyType(struct soap *soap, int n = -1) {
  return soap_instantiate_xsd__anyType(soap, n, NULL, NULL, NULL);
}

inline xsd__anyType *soap_new_req_xsd__anyType(struct soap *soap) {
  xsd__anyType *_p = soap_instantiate_xsd__anyType(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
  }
  return _p;
}

inline xsd__anyType *soap_new_set_xsd__anyType(struct soap *soap,
                                               char *__item) {
  xsd__anyType *_p = soap_instantiate_xsd__anyType(soap, -1, NULL, NULL, NULL);
  if (_p) {
    _p->soap_default(soap);
    _p->xsd__anyType::__item = __item;
  }
  return _p;
}

inline void soap_delete_xsd__anyType(struct soap *soap, xsd__anyType *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xsd__anyType(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ICat3_SOAP_ENV__Fault
#define SOAP_TYPE_ICat3_SOAP_ENV__Fault (1062)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_SOAP_ENV__Fault(struct soap *, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_SOAP_ENV__Fault(struct soap *, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_SOAP_ENV__Fault(struct soap *, const char *, int,
                         const struct SOAP_ENV__Fault *, const char *);
SOAP_FMAC3 struct SOAP_ENV__Fault *SOAP_FMAC4
soap_in_SOAP_ENV__Fault(struct soap *, const char *, struct SOAP_ENV__Fault *,
                        const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_SOAP_ENV__Fault(struct soap *, const struct SOAP_ENV__Fault *,
                         const char *, const char *);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data)                                 \
  (ICat3::soap_serialize_SOAP_ENV__Fault(soap, data),                          \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault *SOAP_FMAC4
soap_get_SOAP_ENV__Fault(struct soap *, struct SOAP_ENV__Fault *, const char *,
                         const char *);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data)                                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault *SOAP_FMAC2
soap_instantiate_SOAP_ENV__Fault(struct soap *, int, const char *, const char *,
                                 size_t *);

inline struct SOAP_ENV__Fault *soap_new_SOAP_ENV__Fault(struct soap *soap,
                                                        int n = -1) {
  return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Fault *soap_new_req_SOAP_ENV__Fault(struct soap *soap) {
  struct SOAP_ENV__Fault *_p =
      soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_SOAP_ENV__Fault(soap, _p);
  }
  return _p;
}

inline struct SOAP_ENV__Fault *soap_new_set_SOAP_ENV__Fault(
    struct soap *soap, char *faultcode, char *faultstring, char *faultactor,
    struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code,
    struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node,
    char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) {
  struct SOAP_ENV__Fault *_p =
      soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_SOAP_ENV__Fault(soap, _p);
    _p->faultcode = faultcode;
    _p->faultstring = faultstring;
    _p->faultactor = faultactor;
    _p->detail = detail;
    _p->SOAP_ENV__Code = SOAP_ENV__Code;
    _p->SOAP_ENV__Reason = SOAP_ENV__Reason;
    _p->SOAP_ENV__Node = SOAP_ENV__Node;
    _p->SOAP_ENV__Role = SOAP_ENV__Role;
    _p->SOAP_ENV__Detail = SOAP_ENV__Detail;
  }
  return _p;
}

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap,
                                        struct SOAP_ENV__Fault *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ICat3_SOAP_ENV__Reason
#define SOAP_TYPE_ICat3_SOAP_ENV__Reason (1061)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_SOAP_ENV__Reason(struct soap *, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_SOAP_ENV__Reason(struct soap *, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_SOAP_ENV__Reason(struct soap *, const char *, int,
                          const struct SOAP_ENV__Reason *, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason *SOAP_FMAC4
soap_in_SOAP_ENV__Reason(struct soap *, const char *, struct SOAP_ENV__Reason *,
                         const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_SOAP_ENV__Reason(struct soap *, const struct SOAP_ENV__Reason *,
                          const char *, const char *);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data)                                \
  (ICat3::soap_serialize_SOAP_ENV__Reason(soap, data),                         \
   soap_begin_send(soap) || ICat3::soap_put_SOAP_ENV__Reason(                  \
                                soap, data, "SOAP-ENV:Reason", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason *SOAP_FMAC4
soap_get_SOAP_ENV__Reason(struct soap *, struct SOAP_ENV__Reason *,
                          const char *, const char *);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason *SOAP_FMAC2
soap_instantiate_SOAP_ENV__Reason(struct soap *, int, const char *,
                                  const char *, size_t *);

inline struct SOAP_ENV__Reason *soap_new_SOAP_ENV__Reason(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Reason *
soap_new_req_SOAP_ENV__Reason(struct soap *soap) {
  struct SOAP_ENV__Reason *_p =
      soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_SOAP_ENV__Reason(soap, _p);
  }
  return _p;
}

inline struct SOAP_ENV__Reason *
soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) {
  struct SOAP_ENV__Reason *_p =
      soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_SOAP_ENV__Reason(soap, _p);
    _p->SOAP_ENV__Text = SOAP_ENV__Text;
  }
  return _p;
}

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap,
                                         struct SOAP_ENV__Reason *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ICat3_SOAP_ENV__Code
#define SOAP_TYPE_ICat3_SOAP_ENV__Code (1059)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_SOAP_ENV__Code(struct soap *, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_SOAP_ENV__Code(struct soap *, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_SOAP_ENV__Code(struct soap *, const char *, int,
                        const struct SOAP_ENV__Code *, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code *SOAP_FMAC4
soap_in_SOAP_ENV__Code(struct soap *, const char *, struct SOAP_ENV__Code *,
                       const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap *,
                                                  const struct SOAP_ENV__Code *,
                                                  const char *, const char *);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data)                                  \
  (ICat3::soap_serialize_SOAP_ENV__Code(soap, data),                           \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct SOAP_ENV__Code *SOAP_FMAC4
soap_get_SOAP_ENV__Code(struct soap *, struct SOAP_ENV__Code *, const char *,
                        const char *);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data)                                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct SOAP_ENV__Code *SOAP_FMAC2
soap_instantiate_SOAP_ENV__Code(struct soap *, int, const char *, const char *,
                                size_t *);

inline struct SOAP_ENV__Code *soap_new_SOAP_ENV__Code(struct soap *soap,
                                                      int n = -1) {
  return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Code *soap_new_req_SOAP_ENV__Code(struct soap *soap) {
  struct SOAP_ENV__Code *_p =
      soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_SOAP_ENV__Code(soap, _p);
  }
  return _p;
}

inline struct SOAP_ENV__Code *
soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value,
                            struct SOAP_ENV__Code *SOAP_ENV__Subcode) {
  struct SOAP_ENV__Code *_p =
      soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_SOAP_ENV__Code(soap, _p);
    _p->SOAP_ENV__Value = SOAP_ENV__Value;
    _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode;
  }
  return _p;
}

inline void soap_delete_SOAP_ENV__Code(struct soap *soap,
                                       struct SOAP_ENV__Code *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ICat3_SOAP_ENV__Header
#define SOAP_TYPE_ICat3_SOAP_ENV__Header (1058)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_SOAP_ENV__Header(struct soap *, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_SOAP_ENV__Header(struct soap *, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_SOAP_ENV__Header(struct soap *, const char *, int,
                          const struct SOAP_ENV__Header *, const char *);
SOAP_FMAC3 struct SOAP_ENV__Header *SOAP_FMAC4
soap_in_SOAP_ENV__Header(struct soap *, const char *, struct SOAP_ENV__Header *,
                         const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_SOAP_ENV__Header(struct soap *, const struct SOAP_ENV__Header *,
                          const char *, const char *);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data)                                \
  (ICat3::soap_serialize_SOAP_ENV__Header(soap, data),                         \
   soap_begin_send(soap) || ICat3::soap_put_SOAP_ENV__Header(                  \
                                soap, data, "SOAP-ENV:Header", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct SOAP_ENV__Header *SOAP_FMAC4
soap_get_SOAP_ENV__Header(struct soap *, struct SOAP_ENV__Header *,
                          const char *, const char *);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct SOAP_ENV__Header *SOAP_FMAC2
soap_instantiate_SOAP_ENV__Header(struct soap *, int, const char *,
                                  const char *, size_t *);

inline struct SOAP_ENV__Header *soap_new_SOAP_ENV__Header(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Header *
soap_new_req_SOAP_ENV__Header(struct soap *soap) {
  struct SOAP_ENV__Header *_p =
      soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_SOAP_ENV__Header(soap, _p);
  }
  return _p;
}

inline struct SOAP_ENV__Header *
soap_new_set_SOAP_ENV__Header(struct soap *soap) {
  struct SOAP_ENV__Header *_p =
      soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_SOAP_ENV__Header(soap, _p);
  }
  return _p;
}

inline void soap_delete_SOAP_ENV__Header(struct soap *soap,
                                         struct SOAP_ENV__Header *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#endif

#ifndef SOAP_TYPE_ICat3___ns1__searchFacilityUserByRestriction
#define SOAP_TYPE_ICat3___ns1__searchFacilityUserByRestriction (1057)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchFacilityUserByRestriction(
    struct soap *, struct __ns1__searchFacilityUserByRestriction *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchFacilityUserByRestriction(
    struct soap *, const struct __ns1__searchFacilityUserByRestriction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchFacilityUserByRestriction(
    struct soap *, const char *, int,
    const struct __ns1__searchFacilityUserByRestriction *, const char *);
SOAP_FMAC3 struct __ns1__searchFacilityUserByRestriction *SOAP_FMAC4
soap_in___ns1__searchFacilityUserByRestriction(
    struct soap *, const char *,
    struct __ns1__searchFacilityUserByRestriction *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchFacilityUserByRestriction(
    struct soap *, const struct __ns1__searchFacilityUserByRestriction *,
    const char *, const char *);

#ifndef soap_write___ns1__searchFacilityUserByRestriction
#define soap_write___ns1__searchFacilityUserByRestriction(soap, data)          \
  (ICat3::soap_serialize___ns1__searchFacilityUserByRestriction(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchFacilityUserByRestriction(                 \
           soap, data, "-ns1:searchFacilityUserByRestriction", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchFacilityUserByRestriction *SOAP_FMAC4
soap_get___ns1__searchFacilityUserByRestriction(
    struct soap *, struct __ns1__searchFacilityUserByRestriction *,
    const char *, const char *);

#ifndef soap_read___ns1__searchFacilityUserByRestriction
#define soap_read___ns1__searchFacilityUserByRestriction(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchFacilityUserByRestriction(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchFacilityUserByRestriction *SOAP_FMAC2
soap_instantiate___ns1__searchFacilityUserByRestriction(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline struct __ns1__searchFacilityUserByRestriction *
soap_new___ns1__searchFacilityUserByRestriction(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchFacilityUserByRestriction(soap, n, NULL,
                                                                 NULL, NULL);
}

inline struct __ns1__searchFacilityUserByRestriction *
soap_new_req___ns1__searchFacilityUserByRestriction(struct soap *soap) {
  struct __ns1__searchFacilityUserByRestriction *_p =
      soap_instantiate___ns1__searchFacilityUserByRestriction(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__searchFacilityUserByRestriction(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchFacilityUserByRestriction *
soap_new_set___ns1__searchFacilityUserByRestriction(
    struct soap *soap, ns1__searchFacilityUserByRestriction *
                           ns1__searchFacilityUserByRestriction_) {
  struct __ns1__searchFacilityUserByRestriction *_p =
      soap_instantiate___ns1__searchFacilityUserByRestriction(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__searchFacilityUserByRestriction(soap, _p);
    _p->ns1__searchFacilityUserByRestriction_ =
        ns1__searchFacilityUserByRestriction_;
  }
  return _p;
}

inline void soap_delete___ns1__searchFacilityUserByRestriction(
    struct soap *soap, struct __ns1__searchFacilityUserByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchFacilityUserByRestriction(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchSampleByParameterLogical
#define SOAP_TYPE_ICat3___ns1__searchSampleByParameterLogical (1053)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchSampleByParameterLogical(
    struct soap *, struct __ns1__searchSampleByParameterLogical *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchSampleByParameterLogical(
    struct soap *, const struct __ns1__searchSampleByParameterLogical *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchSampleByParameterLogical(
    struct soap *, const char *, int,
    const struct __ns1__searchSampleByParameterLogical *, const char *);
SOAP_FMAC3 struct __ns1__searchSampleByParameterLogical *SOAP_FMAC4
soap_in___ns1__searchSampleByParameterLogical(
    struct soap *, const char *, struct __ns1__searchSampleByParameterLogical *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchSampleByParameterLogical(
    struct soap *, const struct __ns1__searchSampleByParameterLogical *,
    const char *, const char *);

#ifndef soap_write___ns1__searchSampleByParameterLogical
#define soap_write___ns1__searchSampleByParameterLogical(soap, data)           \
  (ICat3::soap_serialize___ns1__searchSampleByParameterLogical(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchSampleByParameterLogical(                  \
           soap, data, "-ns1:searchSampleByParameterLogical", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchSampleByParameterLogical *SOAP_FMAC4
soap_get___ns1__searchSampleByParameterLogical(
    struct soap *, struct __ns1__searchSampleByParameterLogical *, const char *,
    const char *);

#ifndef soap_read___ns1__searchSampleByParameterLogical
#define soap_read___ns1__searchSampleByParameterLogical(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchSampleByParameterLogical(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchSampleByParameterLogical *SOAP_FMAC2
soap_instantiate___ns1__searchSampleByParameterLogical(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline struct __ns1__searchSampleByParameterLogical *
soap_new___ns1__searchSampleByParameterLogical(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchSampleByParameterLogical(soap, n, NULL,
                                                                NULL, NULL);
}

inline struct __ns1__searchSampleByParameterLogical *
soap_new_req___ns1__searchSampleByParameterLogical(struct soap *soap) {
  struct __ns1__searchSampleByParameterLogical *_p =
      soap_instantiate___ns1__searchSampleByParameterLogical(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByParameterLogical(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchSampleByParameterLogical *
soap_new_set___ns1__searchSampleByParameterLogical(
    struct soap *soap,
    ns1__searchSampleByParameterLogical *ns1__searchSampleByParameterLogical_) {
  struct __ns1__searchSampleByParameterLogical *_p =
      soap_instantiate___ns1__searchSampleByParameterLogical(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByParameterLogical(soap, _p);
    _p->ns1__searchSampleByParameterLogical_ =
        ns1__searchSampleByParameterLogical_;
  }
  return _p;
}

inline void soap_delete___ns1__searchSampleByParameterLogical(
    struct soap *soap, struct __ns1__searchSampleByParameterLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchSampleByParameterLogical(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatasetByParameterLogical
#define SOAP_TYPE_ICat3___ns1__searchDatasetByParameterLogical (1049)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchDatasetByParameterLogical(
    struct soap *, struct __ns1__searchDatasetByParameterLogical *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatasetByParameterLogical(
    struct soap *, const struct __ns1__searchDatasetByParameterLogical *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatasetByParameterLogical(
    struct soap *, const char *, int,
    const struct __ns1__searchDatasetByParameterLogical *, const char *);
SOAP_FMAC3 struct __ns1__searchDatasetByParameterLogical *SOAP_FMAC4
soap_in___ns1__searchDatasetByParameterLogical(
    struct soap *, const char *,
    struct __ns1__searchDatasetByParameterLogical *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatasetByParameterLogical(
    struct soap *, const struct __ns1__searchDatasetByParameterLogical *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatasetByParameterLogical
#define soap_write___ns1__searchDatasetByParameterLogical(soap, data)          \
  (ICat3::soap_serialize___ns1__searchDatasetByParameterLogical(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatasetByParameterLogical(                 \
           soap, data, "-ns1:searchDatasetByParameterLogical", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatasetByParameterLogical *SOAP_FMAC4
soap_get___ns1__searchDatasetByParameterLogical(
    struct soap *, struct __ns1__searchDatasetByParameterLogical *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatasetByParameterLogical
#define soap_read___ns1__searchDatasetByParameterLogical(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatasetByParameterLogical(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatasetByParameterLogical *SOAP_FMAC2
soap_instantiate___ns1__searchDatasetByParameterLogical(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline struct __ns1__searchDatasetByParameterLogical *
soap_new___ns1__searchDatasetByParameterLogical(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchDatasetByParameterLogical(soap, n, NULL,
                                                                 NULL, NULL);
}

inline struct __ns1__searchDatasetByParameterLogical *
soap_new_req___ns1__searchDatasetByParameterLogical(struct soap *soap) {
  struct __ns1__searchDatasetByParameterLogical *_p =
      soap_instantiate___ns1__searchDatasetByParameterLogical(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByParameterLogical(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatasetByParameterLogical *
soap_new_set___ns1__searchDatasetByParameterLogical(
    struct soap *soap, ns1__searchDatasetByParameterLogical *
                           ns1__searchDatasetByParameterLogical_) {
  struct __ns1__searchDatasetByParameterLogical *_p =
      soap_instantiate___ns1__searchDatasetByParameterLogical(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByParameterLogical(soap, _p);
    _p->ns1__searchDatasetByParameterLogical_ =
        ns1__searchDatasetByParameterLogical_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatasetByParameterLogical(
    struct soap *soap, struct __ns1__searchDatasetByParameterLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatasetByParameterLogical(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatafileByParameterLogical
#define SOAP_TYPE_ICat3___ns1__searchDatafileByParameterLogical (1045)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchDatafileByParameterLogical(
    struct soap *, struct __ns1__searchDatafileByParameterLogical *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatafileByParameterLogical(
    struct soap *, const struct __ns1__searchDatafileByParameterLogical *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatafileByParameterLogical(
    struct soap *, const char *, int,
    const struct __ns1__searchDatafileByParameterLogical *, const char *);
SOAP_FMAC3 struct __ns1__searchDatafileByParameterLogical *SOAP_FMAC4
soap_in___ns1__searchDatafileByParameterLogical(
    struct soap *, const char *,
    struct __ns1__searchDatafileByParameterLogical *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatafileByParameterLogical(
    struct soap *, const struct __ns1__searchDatafileByParameterLogical *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatafileByParameterLogical
#define soap_write___ns1__searchDatafileByParameterLogical(soap, data)         \
  (ICat3::soap_serialize___ns1__searchDatafileByParameterLogical(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatafileByParameterLogical(                \
           soap, data, "-ns1:searchDatafileByParameterLogical", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatafileByParameterLogical *SOAP_FMAC4
soap_get___ns1__searchDatafileByParameterLogical(
    struct soap *, struct __ns1__searchDatafileByParameterLogical *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatafileByParameterLogical
#define soap_read___ns1__searchDatafileByParameterLogical(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatafileByParameterLogical(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatafileByParameterLogical *SOAP_FMAC2
soap_instantiate___ns1__searchDatafileByParameterLogical(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline struct __ns1__searchDatafileByParameterLogical *
soap_new___ns1__searchDatafileByParameterLogical(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate___ns1__searchDatafileByParameterLogical(soap, n, NULL,
                                                                  NULL, NULL);
}

inline struct __ns1__searchDatafileByParameterLogical *
soap_new_req___ns1__searchDatafileByParameterLogical(struct soap *soap) {
  struct __ns1__searchDatafileByParameterLogical *_p =
      soap_instantiate___ns1__searchDatafileByParameterLogical(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByParameterLogical(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatafileByParameterLogical *
soap_new_set___ns1__searchDatafileByParameterLogical(
    struct soap *soap, ns1__searchDatafileByParameterLogical *
                           ns1__searchDatafileByParameterLogical_) {
  struct __ns1__searchDatafileByParameterLogical *_p =
      soap_instantiate___ns1__searchDatafileByParameterLogical(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByParameterLogical(soap, _p);
    _p->ns1__searchDatafileByParameterLogical_ =
        ns1__searchDatafileByParameterLogical_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatafileByParameterLogical(
    struct soap *soap, struct __ns1__searchDatafileByParameterLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatafileByParameterLogical(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchInvestigationByParameterLogical
#define SOAP_TYPE_ICat3___ns1__searchInvestigationByParameterLogical (1041)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchInvestigationByParameterLogical(
    struct soap *, struct __ns1__searchInvestigationByParameterLogical *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchInvestigationByParameterLogical(
    struct soap *, const struct __ns1__searchInvestigationByParameterLogical *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchInvestigationByParameterLogical(
    struct soap *, const char *, int,
    const struct __ns1__searchInvestigationByParameterLogical *, const char *);
SOAP_FMAC3 struct __ns1__searchInvestigationByParameterLogical *SOAP_FMAC4
soap_in___ns1__searchInvestigationByParameterLogical(
    struct soap *, const char *,
    struct __ns1__searchInvestigationByParameterLogical *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchInvestigationByParameterLogical(
    struct soap *, const struct __ns1__searchInvestigationByParameterLogical *,
    const char *, const char *);

#ifndef soap_write___ns1__searchInvestigationByParameterLogical
#define soap_write___ns1__searchInvestigationByParameterLogical(soap, data)    \
  (ICat3::soap_serialize___ns1__searchInvestigationByParameterLogical(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchInvestigationByParameterLogical(           \
           soap, data, "-ns1:searchInvestigationByParameterLogical", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchInvestigationByParameterLogical *SOAP_FMAC4
soap_get___ns1__searchInvestigationByParameterLogical(
    struct soap *, struct __ns1__searchInvestigationByParameterLogical *,
    const char *, const char *);

#ifndef soap_read___ns1__searchInvestigationByParameterLogical
#define soap_read___ns1__searchInvestigationByParameterLogical(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchInvestigationByParameterLogical(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchInvestigationByParameterLogical *SOAP_FMAC2
soap_instantiate___ns1__searchInvestigationByParameterLogical(struct soap *,
                                                              int, const char *,
                                                              const char *,
                                                              size_t *);

inline struct __ns1__searchInvestigationByParameterLogical *
soap_new___ns1__searchInvestigationByParameterLogical(struct soap *soap,
                                                      int n = -1) {
  return soap_instantiate___ns1__searchInvestigationByParameterLogical(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchInvestigationByParameterLogical *
soap_new_req___ns1__searchInvestigationByParameterLogical(struct soap *soap) {
  struct __ns1__searchInvestigationByParameterLogical *_p =
      soap_instantiate___ns1__searchInvestigationByParameterLogical(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByParameterLogical(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchInvestigationByParameterLogical *
soap_new_set___ns1__searchInvestigationByParameterLogical(
    struct soap *soap, ns1__searchInvestigationByParameterLogical *
                           ns1__searchInvestigationByParameterLogical_) {
  struct __ns1__searchInvestigationByParameterLogical *_p =
      soap_instantiate___ns1__searchInvestigationByParameterLogical(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByParameterLogical(soap, _p);
    _p->ns1__searchInvestigationByParameterLogical_ =
        ns1__searchInvestigationByParameterLogical_;
  }
  return _p;
}

inline void soap_delete___ns1__searchInvestigationByParameterLogical(
    struct soap *soap, struct __ns1__searchInvestigationByParameterLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchInvestigationByParameterLogical(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatafileByRestrictionLogical
#define SOAP_TYPE_ICat3___ns1__searchDatafileByRestrictionLogical (1037)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchDatafileByRestrictionLogical(
    struct soap *, struct __ns1__searchDatafileByRestrictionLogical *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatafileByRestrictionLogical(
    struct soap *, const struct __ns1__searchDatafileByRestrictionLogical *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatafileByRestrictionLogical(
    struct soap *, const char *, int,
    const struct __ns1__searchDatafileByRestrictionLogical *, const char *);
SOAP_FMAC3 struct __ns1__searchDatafileByRestrictionLogical *SOAP_FMAC4
soap_in___ns1__searchDatafileByRestrictionLogical(
    struct soap *, const char *,
    struct __ns1__searchDatafileByRestrictionLogical *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatafileByRestrictionLogical(
    struct soap *, const struct __ns1__searchDatafileByRestrictionLogical *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatafileByRestrictionLogical
#define soap_write___ns1__searchDatafileByRestrictionLogical(soap, data)       \
  (ICat3::soap_serialize___ns1__searchDatafileByRestrictionLogical(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatafileByRestrictionLogical(              \
           soap, data, "-ns1:searchDatafileByRestrictionLogical", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatafileByRestrictionLogical *SOAP_FMAC4
soap_get___ns1__searchDatafileByRestrictionLogical(
    struct soap *, struct __ns1__searchDatafileByRestrictionLogical *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatafileByRestrictionLogical
#define soap_read___ns1__searchDatafileByRestrictionLogical(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatafileByRestrictionLogical(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatafileByRestrictionLogical *SOAP_FMAC2
soap_instantiate___ns1__searchDatafileByRestrictionLogical(struct soap *, int,
                                                           const char *,
                                                           const char *,
                                                           size_t *);

inline struct __ns1__searchDatafileByRestrictionLogical *
soap_new___ns1__searchDatafileByRestrictionLogical(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate___ns1__searchDatafileByRestrictionLogical(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchDatafileByRestrictionLogical *
soap_new_req___ns1__searchDatafileByRestrictionLogical(struct soap *soap) {
  struct __ns1__searchDatafileByRestrictionLogical *_p =
      soap_instantiate___ns1__searchDatafileByRestrictionLogical(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByRestrictionLogical(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatafileByRestrictionLogical *
soap_new_set___ns1__searchDatafileByRestrictionLogical(
    struct soap *soap, ns1__searchDatafileByRestrictionLogical *
                           ns1__searchDatafileByRestrictionLogical_) {
  struct __ns1__searchDatafileByRestrictionLogical *_p =
      soap_instantiate___ns1__searchDatafileByRestrictionLogical(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByRestrictionLogical(soap, _p);
    _p->ns1__searchDatafileByRestrictionLogical_ =
        ns1__searchDatafileByRestrictionLogical_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatafileByRestrictionLogical(
    struct soap *soap, struct __ns1__searchDatafileByRestrictionLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatafileByRestrictionLogical(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchInvestigationByRestrictionLogical
#define SOAP_TYPE_ICat3___ns1__searchInvestigationByRestrictionLogical (1033)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchInvestigationByRestrictionLogical(
    struct soap *, struct __ns1__searchInvestigationByRestrictionLogical *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchInvestigationByRestrictionLogical(
    struct soap *,
    const struct __ns1__searchInvestigationByRestrictionLogical *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__searchInvestigationByRestrictionLogical(
    struct soap *, const char *, int,
    const struct __ns1__searchInvestigationByRestrictionLogical *,
    const char *);
SOAP_FMAC3 struct __ns1__searchInvestigationByRestrictionLogical *SOAP_FMAC4
soap_in___ns1__searchInvestigationByRestrictionLogical(
    struct soap *, const char *,
    struct __ns1__searchInvestigationByRestrictionLogical *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__searchInvestigationByRestrictionLogical(
    struct soap *,
    const struct __ns1__searchInvestigationByRestrictionLogical *, const char *,
    const char *);

#ifndef soap_write___ns1__searchInvestigationByRestrictionLogical
#define soap_write___ns1__searchInvestigationByRestrictionLogical(soap, data)  \
  (ICat3::soap_serialize___ns1__searchInvestigationByRestrictionLogical(soap,  \
                                                                        data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchInvestigationByRestrictionLogical(         \
           soap, data, "-ns1:searchInvestigationByRestrictionLogical",         \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchInvestigationByRestrictionLogical *SOAP_FMAC4
soap_get___ns1__searchInvestigationByRestrictionLogical(
    struct soap *, struct __ns1__searchInvestigationByRestrictionLogical *,
    const char *, const char *);

#ifndef soap_read___ns1__searchInvestigationByRestrictionLogical
#define soap_read___ns1__searchInvestigationByRestrictionLogical(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchInvestigationByRestrictionLogical(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchInvestigationByRestrictionLogical *SOAP_FMAC2
soap_instantiate___ns1__searchInvestigationByRestrictionLogical(
    struct soap *, int, const char *, const char *, size_t *);

inline struct __ns1__searchInvestigationByRestrictionLogical *
soap_new___ns1__searchInvestigationByRestrictionLogical(struct soap *soap,
                                                        int n = -1) {
  return soap_instantiate___ns1__searchInvestigationByRestrictionLogical(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchInvestigationByRestrictionLogical *
soap_new_req___ns1__searchInvestigationByRestrictionLogical(struct soap *soap) {
  struct __ns1__searchInvestigationByRestrictionLogical *_p =
      soap_instantiate___ns1__searchInvestigationByRestrictionLogical(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByRestrictionLogical(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchInvestigationByRestrictionLogical *
soap_new_set___ns1__searchInvestigationByRestrictionLogical(
    struct soap *soap, ns1__searchInvestigationByRestrictionLogical *
                           ns1__searchInvestigationByRestrictionLogical_) {
  struct __ns1__searchInvestigationByRestrictionLogical *_p =
      soap_instantiate___ns1__searchInvestigationByRestrictionLogical(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByRestrictionLogical(soap, _p);
    _p->ns1__searchInvestigationByRestrictionLogical_ =
        ns1__searchInvestigationByRestrictionLogical_;
  }
  return _p;
}

inline void soap_delete___ns1__searchInvestigationByRestrictionLogical(
    struct soap *soap,
    struct __ns1__searchInvestigationByRestrictionLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchInvestigationByRestrictionLogical(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatasetByRestrictionLogical
#define SOAP_TYPE_ICat3___ns1__searchDatasetByRestrictionLogical (1029)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchDatasetByRestrictionLogical(
    struct soap *, struct __ns1__searchDatasetByRestrictionLogical *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatasetByRestrictionLogical(
    struct soap *, const struct __ns1__searchDatasetByRestrictionLogical *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatasetByRestrictionLogical(
    struct soap *, const char *, int,
    const struct __ns1__searchDatasetByRestrictionLogical *, const char *);
SOAP_FMAC3 struct __ns1__searchDatasetByRestrictionLogical *SOAP_FMAC4
soap_in___ns1__searchDatasetByRestrictionLogical(
    struct soap *, const char *,
    struct __ns1__searchDatasetByRestrictionLogical *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatasetByRestrictionLogical(
    struct soap *, const struct __ns1__searchDatasetByRestrictionLogical *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatasetByRestrictionLogical
#define soap_write___ns1__searchDatasetByRestrictionLogical(soap, data)        \
  (ICat3::soap_serialize___ns1__searchDatasetByRestrictionLogical(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatasetByRestrictionLogical(               \
           soap, data, "-ns1:searchDatasetByRestrictionLogical", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatasetByRestrictionLogical *SOAP_FMAC4
soap_get___ns1__searchDatasetByRestrictionLogical(
    struct soap *, struct __ns1__searchDatasetByRestrictionLogical *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatasetByRestrictionLogical
#define soap_read___ns1__searchDatasetByRestrictionLogical(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatasetByRestrictionLogical(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatasetByRestrictionLogical *SOAP_FMAC2
soap_instantiate___ns1__searchDatasetByRestrictionLogical(struct soap *, int,
                                                          const char *,
                                                          const char *,
                                                          size_t *);

inline struct __ns1__searchDatasetByRestrictionLogical *
soap_new___ns1__searchDatasetByRestrictionLogical(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate___ns1__searchDatasetByRestrictionLogical(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchDatasetByRestrictionLogical *
soap_new_req___ns1__searchDatasetByRestrictionLogical(struct soap *soap) {
  struct __ns1__searchDatasetByRestrictionLogical *_p =
      soap_instantiate___ns1__searchDatasetByRestrictionLogical(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByRestrictionLogical(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatasetByRestrictionLogical *
soap_new_set___ns1__searchDatasetByRestrictionLogical(
    struct soap *soap, ns1__searchDatasetByRestrictionLogical *
                           ns1__searchDatasetByRestrictionLogical_) {
  struct __ns1__searchDatasetByRestrictionLogical *_p =
      soap_instantiate___ns1__searchDatasetByRestrictionLogical(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByRestrictionLogical(soap, _p);
    _p->ns1__searchDatasetByRestrictionLogical_ =
        ns1__searchDatasetByRestrictionLogical_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatasetByRestrictionLogical(
    struct soap *soap, struct __ns1__searchDatasetByRestrictionLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatasetByRestrictionLogical(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchSampleByRestrictionLogical
#define SOAP_TYPE_ICat3___ns1__searchSampleByRestrictionLogical (1025)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchSampleByRestrictionLogical(
    struct soap *, struct __ns1__searchSampleByRestrictionLogical *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchSampleByRestrictionLogical(
    struct soap *, const struct __ns1__searchSampleByRestrictionLogical *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchSampleByRestrictionLogical(
    struct soap *, const char *, int,
    const struct __ns1__searchSampleByRestrictionLogical *, const char *);
SOAP_FMAC3 struct __ns1__searchSampleByRestrictionLogical *SOAP_FMAC4
soap_in___ns1__searchSampleByRestrictionLogical(
    struct soap *, const char *,
    struct __ns1__searchSampleByRestrictionLogical *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchSampleByRestrictionLogical(
    struct soap *, const struct __ns1__searchSampleByRestrictionLogical *,
    const char *, const char *);

#ifndef soap_write___ns1__searchSampleByRestrictionLogical
#define soap_write___ns1__searchSampleByRestrictionLogical(soap, data)         \
  (ICat3::soap_serialize___ns1__searchSampleByRestrictionLogical(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchSampleByRestrictionLogical(                \
           soap, data, "-ns1:searchSampleByRestrictionLogical", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchSampleByRestrictionLogical *SOAP_FMAC4
soap_get___ns1__searchSampleByRestrictionLogical(
    struct soap *, struct __ns1__searchSampleByRestrictionLogical *,
    const char *, const char *);

#ifndef soap_read___ns1__searchSampleByRestrictionLogical
#define soap_read___ns1__searchSampleByRestrictionLogical(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchSampleByRestrictionLogical(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchSampleByRestrictionLogical *SOAP_FMAC2
soap_instantiate___ns1__searchSampleByRestrictionLogical(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline struct __ns1__searchSampleByRestrictionLogical *
soap_new___ns1__searchSampleByRestrictionLogical(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate___ns1__searchSampleByRestrictionLogical(soap, n, NULL,
                                                                  NULL, NULL);
}

inline struct __ns1__searchSampleByRestrictionLogical *
soap_new_req___ns1__searchSampleByRestrictionLogical(struct soap *soap) {
  struct __ns1__searchSampleByRestrictionLogical *_p =
      soap_instantiate___ns1__searchSampleByRestrictionLogical(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByRestrictionLogical(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchSampleByRestrictionLogical *
soap_new_set___ns1__searchSampleByRestrictionLogical(
    struct soap *soap, ns1__searchSampleByRestrictionLogical *
                           ns1__searchSampleByRestrictionLogical_) {
  struct __ns1__searchSampleByRestrictionLogical *_p =
      soap_instantiate___ns1__searchSampleByRestrictionLogical(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByRestrictionLogical(soap, _p);
    _p->ns1__searchSampleByRestrictionLogical_ =
        ns1__searchSampleByRestrictionLogical_;
  }
  return _p;
}

inline void soap_delete___ns1__searchSampleByRestrictionLogical(
    struct soap *soap, struct __ns1__searchSampleByRestrictionLogical *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchSampleByRestrictionLogical(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchSampleByRestrictionComparison
#define SOAP_TYPE_ICat3___ns1__searchSampleByRestrictionComparison (1021)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchSampleByRestrictionComparison(
    struct soap *, struct __ns1__searchSampleByRestrictionComparison *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchSampleByRestrictionComparison(
    struct soap *, const struct __ns1__searchSampleByRestrictionComparison *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchSampleByRestrictionComparison(
    struct soap *, const char *, int,
    const struct __ns1__searchSampleByRestrictionComparison *, const char *);
SOAP_FMAC3 struct __ns1__searchSampleByRestrictionComparison *SOAP_FMAC4
soap_in___ns1__searchSampleByRestrictionComparison(
    struct soap *, const char *,
    struct __ns1__searchSampleByRestrictionComparison *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchSampleByRestrictionComparison(
    struct soap *, const struct __ns1__searchSampleByRestrictionComparison *,
    const char *, const char *);

#ifndef soap_write___ns1__searchSampleByRestrictionComparison
#define soap_write___ns1__searchSampleByRestrictionComparison(soap, data)      \
  (ICat3::soap_serialize___ns1__searchSampleByRestrictionComparison(soap,      \
                                                                    data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchSampleByRestrictionComparison(             \
           soap, data, "-ns1:searchSampleByRestrictionComparison", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchSampleByRestrictionComparison *SOAP_FMAC4
soap_get___ns1__searchSampleByRestrictionComparison(
    struct soap *, struct __ns1__searchSampleByRestrictionComparison *,
    const char *, const char *);

#ifndef soap_read___ns1__searchSampleByRestrictionComparison
#define soap_read___ns1__searchSampleByRestrictionComparison(soap, data)       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchSampleByRestrictionComparison(            \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchSampleByRestrictionComparison *SOAP_FMAC2
soap_instantiate___ns1__searchSampleByRestrictionComparison(struct soap *, int,
                                                            const char *,
                                                            const char *,
                                                            size_t *);

inline struct __ns1__searchSampleByRestrictionComparison *
soap_new___ns1__searchSampleByRestrictionComparison(struct soap *soap,
                                                    int n = -1) {
  return soap_instantiate___ns1__searchSampleByRestrictionComparison(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchSampleByRestrictionComparison *
soap_new_req___ns1__searchSampleByRestrictionComparison(struct soap *soap) {
  struct __ns1__searchSampleByRestrictionComparison *_p =
      soap_instantiate___ns1__searchSampleByRestrictionComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByRestrictionComparison(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchSampleByRestrictionComparison *
soap_new_set___ns1__searchSampleByRestrictionComparison(
    struct soap *soap, ns1__searchSampleByRestrictionComparison *
                           ns1__searchSampleByRestrictionComparison_) {
  struct __ns1__searchSampleByRestrictionComparison *_p =
      soap_instantiate___ns1__searchSampleByRestrictionComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByRestrictionComparison(soap, _p);
    _p->ns1__searchSampleByRestrictionComparison_ =
        ns1__searchSampleByRestrictionComparison_;
  }
  return _p;
}

inline void soap_delete___ns1__searchSampleByRestrictionComparison(
    struct soap *soap, struct __ns1__searchSampleByRestrictionComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchSampleByRestrictionComparison(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatafileByRestrictionComparison
#define SOAP_TYPE_ICat3___ns1__searchDatafileByRestrictionComparison (1017)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchDatafileByRestrictionComparison(
    struct soap *, struct __ns1__searchDatafileByRestrictionComparison *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatafileByRestrictionComparison(
    struct soap *, const struct __ns1__searchDatafileByRestrictionComparison *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatafileByRestrictionComparison(
    struct soap *, const char *, int,
    const struct __ns1__searchDatafileByRestrictionComparison *, const char *);
SOAP_FMAC3 struct __ns1__searchDatafileByRestrictionComparison *SOAP_FMAC4
soap_in___ns1__searchDatafileByRestrictionComparison(
    struct soap *, const char *,
    struct __ns1__searchDatafileByRestrictionComparison *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatafileByRestrictionComparison(
    struct soap *, const struct __ns1__searchDatafileByRestrictionComparison *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatafileByRestrictionComparison
#define soap_write___ns1__searchDatafileByRestrictionComparison(soap, data)    \
  (ICat3::soap_serialize___ns1__searchDatafileByRestrictionComparison(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatafileByRestrictionComparison(           \
           soap, data, "-ns1:searchDatafileByRestrictionComparison", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatafileByRestrictionComparison *SOAP_FMAC4
soap_get___ns1__searchDatafileByRestrictionComparison(
    struct soap *, struct __ns1__searchDatafileByRestrictionComparison *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatafileByRestrictionComparison
#define soap_read___ns1__searchDatafileByRestrictionComparison(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatafileByRestrictionComparison(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatafileByRestrictionComparison *SOAP_FMAC2
soap_instantiate___ns1__searchDatafileByRestrictionComparison(struct soap *,
                                                              int, const char *,
                                                              const char *,
                                                              size_t *);

inline struct __ns1__searchDatafileByRestrictionComparison *
soap_new___ns1__searchDatafileByRestrictionComparison(struct soap *soap,
                                                      int n = -1) {
  return soap_instantiate___ns1__searchDatafileByRestrictionComparison(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchDatafileByRestrictionComparison *
soap_new_req___ns1__searchDatafileByRestrictionComparison(struct soap *soap) {
  struct __ns1__searchDatafileByRestrictionComparison *_p =
      soap_instantiate___ns1__searchDatafileByRestrictionComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByRestrictionComparison(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatafileByRestrictionComparison *
soap_new_set___ns1__searchDatafileByRestrictionComparison(
    struct soap *soap, ns1__searchDatafileByRestrictionComparison *
                           ns1__searchDatafileByRestrictionComparison_) {
  struct __ns1__searchDatafileByRestrictionComparison *_p =
      soap_instantiate___ns1__searchDatafileByRestrictionComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByRestrictionComparison(soap, _p);
    _p->ns1__searchDatafileByRestrictionComparison_ =
        ns1__searchDatafileByRestrictionComparison_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatafileByRestrictionComparison(
    struct soap *soap, struct __ns1__searchDatafileByRestrictionComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatafileByRestrictionComparison(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatasetByRestrictionComparison
#define SOAP_TYPE_ICat3___ns1__searchDatasetByRestrictionComparison (1013)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchDatasetByRestrictionComparison(
    struct soap *, struct __ns1__searchDatasetByRestrictionComparison *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatasetByRestrictionComparison(
    struct soap *, const struct __ns1__searchDatasetByRestrictionComparison *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatasetByRestrictionComparison(
    struct soap *, const char *, int,
    const struct __ns1__searchDatasetByRestrictionComparison *, const char *);
SOAP_FMAC3 struct __ns1__searchDatasetByRestrictionComparison *SOAP_FMAC4
soap_in___ns1__searchDatasetByRestrictionComparison(
    struct soap *, const char *,
    struct __ns1__searchDatasetByRestrictionComparison *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatasetByRestrictionComparison(
    struct soap *, const struct __ns1__searchDatasetByRestrictionComparison *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatasetByRestrictionComparison
#define soap_write___ns1__searchDatasetByRestrictionComparison(soap, data)     \
  (ICat3::soap_serialize___ns1__searchDatasetByRestrictionComparison(soap,     \
                                                                     data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatasetByRestrictionComparison(            \
           soap, data, "-ns1:searchDatasetByRestrictionComparison", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatasetByRestrictionComparison *SOAP_FMAC4
soap_get___ns1__searchDatasetByRestrictionComparison(
    struct soap *, struct __ns1__searchDatasetByRestrictionComparison *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatasetByRestrictionComparison
#define soap_read___ns1__searchDatasetByRestrictionComparison(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatasetByRestrictionComparison(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatasetByRestrictionComparison *SOAP_FMAC2
soap_instantiate___ns1__searchDatasetByRestrictionComparison(struct soap *, int,
                                                             const char *,
                                                             const char *,
                                                             size_t *);

inline struct __ns1__searchDatasetByRestrictionComparison *
soap_new___ns1__searchDatasetByRestrictionComparison(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate___ns1__searchDatasetByRestrictionComparison(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchDatasetByRestrictionComparison *
soap_new_req___ns1__searchDatasetByRestrictionComparison(struct soap *soap) {
  struct __ns1__searchDatasetByRestrictionComparison *_p =
      soap_instantiate___ns1__searchDatasetByRestrictionComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByRestrictionComparison(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatasetByRestrictionComparison *
soap_new_set___ns1__searchDatasetByRestrictionComparison(
    struct soap *soap, ns1__searchDatasetByRestrictionComparison *
                           ns1__searchDatasetByRestrictionComparison_) {
  struct __ns1__searchDatasetByRestrictionComparison *_p =
      soap_instantiate___ns1__searchDatasetByRestrictionComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByRestrictionComparison(soap, _p);
    _p->ns1__searchDatasetByRestrictionComparison_ =
        ns1__searchDatasetByRestrictionComparison_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatasetByRestrictionComparison(
    struct soap *soap, struct __ns1__searchDatasetByRestrictionComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatasetByRestrictionComparison(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchInvestigationByRestrictionComparasion
#define SOAP_TYPE_ICat3___ns1__searchInvestigationByRestrictionComparasion     \
  (1009)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchInvestigationByRestrictionComparasion(
    struct soap *, struct __ns1__searchInvestigationByRestrictionComparasion *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchInvestigationByRestrictionComparasion(
    struct soap *,
    const struct __ns1__searchInvestigationByRestrictionComparasion *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__searchInvestigationByRestrictionComparasion(
    struct soap *, const char *, int,
    const struct __ns1__searchInvestigationByRestrictionComparasion *,
    const char *);
SOAP_FMAC3 struct __ns1__searchInvestigationByRestrictionComparasion *SOAP_FMAC4
soap_in___ns1__searchInvestigationByRestrictionComparasion(
    struct soap *, const char *,
    struct __ns1__searchInvestigationByRestrictionComparasion *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__searchInvestigationByRestrictionComparasion(
    struct soap *,
    const struct __ns1__searchInvestigationByRestrictionComparasion *,
    const char *, const char *);

#ifndef soap_write___ns1__searchInvestigationByRestrictionComparasion
#define soap_write___ns1__searchInvestigationByRestrictionComparasion(soap,    \
                                                                      data)    \
  (ICat3::soap_serialize___ns1__searchInvestigationByRestrictionComparasion(   \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchInvestigationByRestrictionComparasion(     \
           soap, data, "-ns1:searchInvestigationByRestrictionComparasion",     \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchInvestigationByRestrictionComparasion *SOAP_FMAC4
soap_get___ns1__searchInvestigationByRestrictionComparasion(
    struct soap *, struct __ns1__searchInvestigationByRestrictionComparasion *,
    const char *, const char *);

#ifndef soap_read___ns1__searchInvestigationByRestrictionComparasion
#define soap_read___ns1__searchInvestigationByRestrictionComparasion(soap,     \
                                                                     data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchInvestigationByRestrictionComparasion(    \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchInvestigationByRestrictionComparasion *SOAP_FMAC2
soap_instantiate___ns1__searchInvestigationByRestrictionComparasion(
    struct soap *, int, const char *, const char *, size_t *);

inline struct __ns1__searchInvestigationByRestrictionComparasion *
soap_new___ns1__searchInvestigationByRestrictionComparasion(struct soap *soap,
                                                            int n = -1) {
  return soap_instantiate___ns1__searchInvestigationByRestrictionComparasion(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchInvestigationByRestrictionComparasion *
soap_new_req___ns1__searchInvestigationByRestrictionComparasion(
    struct soap *soap) {
  struct __ns1__searchInvestigationByRestrictionComparasion *_p =
      soap_instantiate___ns1__searchInvestigationByRestrictionComparasion(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByRestrictionComparasion(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchInvestigationByRestrictionComparasion *
soap_new_set___ns1__searchInvestigationByRestrictionComparasion(
    struct soap *soap, ns1__searchInvestigationByRestrictionComparasion *
                           ns1__searchInvestigationByRestrictionComparasion_) {
  struct __ns1__searchInvestigationByRestrictionComparasion *_p =
      soap_instantiate___ns1__searchInvestigationByRestrictionComparasion(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByRestrictionComparasion(soap, _p);
    _p->ns1__searchInvestigationByRestrictionComparasion_ =
        ns1__searchInvestigationByRestrictionComparasion_;
  }
  return _p;
}

inline void soap_delete___ns1__searchInvestigationByRestrictionComparasion(
    struct soap *soap,
    struct __ns1__searchInvestigationByRestrictionComparasion *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchInvestigationByRestrictionComparasion(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchSampleByRestriction
#define SOAP_TYPE_ICat3___ns1__searchSampleByRestriction (1005)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchSampleByRestriction(
    struct soap *, struct __ns1__searchSampleByRestriction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchSampleByRestriction(
    struct soap *, const struct __ns1__searchSampleByRestriction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchSampleByRestriction(
    struct soap *, const char *, int,
    const struct __ns1__searchSampleByRestriction *, const char *);
SOAP_FMAC3 struct __ns1__searchSampleByRestriction *SOAP_FMAC4
soap_in___ns1__searchSampleByRestriction(
    struct soap *, const char *, struct __ns1__searchSampleByRestriction *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchSampleByRestriction(
    struct soap *, const struct __ns1__searchSampleByRestriction *,
    const char *, const char *);

#ifndef soap_write___ns1__searchSampleByRestriction
#define soap_write___ns1__searchSampleByRestriction(soap, data)                \
  (ICat3::soap_serialize___ns1__searchSampleByRestriction(soap, data),         \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchSampleByRestriction(                       \
           soap, data, "-ns1:searchSampleByRestriction", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchSampleByRestriction *SOAP_FMAC4
soap_get___ns1__searchSampleByRestriction(
    struct soap *, struct __ns1__searchSampleByRestriction *, const char *,
    const char *);

#ifndef soap_read___ns1__searchSampleByRestriction
#define soap_read___ns1__searchSampleByRestriction(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchSampleByRestriction(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchSampleByRestriction *SOAP_FMAC2
soap_instantiate___ns1__searchSampleByRestriction(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline struct __ns1__searchSampleByRestriction *
soap_new___ns1__searchSampleByRestriction(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchSampleByRestriction(soap, n, NULL, NULL,
                                                           NULL);
}

inline struct __ns1__searchSampleByRestriction *
soap_new_req___ns1__searchSampleByRestriction(struct soap *soap) {
  struct __ns1__searchSampleByRestriction *_p =
      soap_instantiate___ns1__searchSampleByRestriction(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__searchSampleByRestriction(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchSampleByRestriction *
soap_new_set___ns1__searchSampleByRestriction(
    struct soap *soap,
    ns1__searchSampleByRestriction *ns1__searchSampleByRestriction_) {
  struct __ns1__searchSampleByRestriction *_p =
      soap_instantiate___ns1__searchSampleByRestriction(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__searchSampleByRestriction(soap, _p);
    _p->ns1__searchSampleByRestriction_ = ns1__searchSampleByRestriction_;
  }
  return _p;
}

inline void soap_delete___ns1__searchSampleByRestriction(
    struct soap *soap, struct __ns1__searchSampleByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchSampleByRestriction(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatafileByRestriction
#define SOAP_TYPE_ICat3___ns1__searchDatafileByRestriction (1001)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchDatafileByRestriction(
    struct soap *, struct __ns1__searchDatafileByRestriction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchDatafileByRestriction(
    struct soap *, const struct __ns1__searchDatafileByRestriction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatafileByRestriction(
    struct soap *, const char *, int,
    const struct __ns1__searchDatafileByRestriction *, const char *);
SOAP_FMAC3 struct __ns1__searchDatafileByRestriction *SOAP_FMAC4
soap_in___ns1__searchDatafileByRestriction(
    struct soap *, const char *, struct __ns1__searchDatafileByRestriction *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatafileByRestriction(
    struct soap *, const struct __ns1__searchDatafileByRestriction *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatafileByRestriction
#define soap_write___ns1__searchDatafileByRestriction(soap, data)              \
  (ICat3::soap_serialize___ns1__searchDatafileByRestriction(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatafileByRestriction(                     \
           soap, data, "-ns1:searchDatafileByRestriction", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatafileByRestriction *SOAP_FMAC4
soap_get___ns1__searchDatafileByRestriction(
    struct soap *, struct __ns1__searchDatafileByRestriction *, const char *,
    const char *);

#ifndef soap_read___ns1__searchDatafileByRestriction
#define soap_read___ns1__searchDatafileByRestriction(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatafileByRestriction(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatafileByRestriction *SOAP_FMAC2
soap_instantiate___ns1__searchDatafileByRestriction(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline struct __ns1__searchDatafileByRestriction *
soap_new___ns1__searchDatafileByRestriction(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchDatafileByRestriction(soap, n, NULL,
                                                             NULL, NULL);
}

inline struct __ns1__searchDatafileByRestriction *
soap_new_req___ns1__searchDatafileByRestriction(struct soap *soap) {
  struct __ns1__searchDatafileByRestriction *_p =
      soap_instantiate___ns1__searchDatafileByRestriction(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByRestriction(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatafileByRestriction *
soap_new_set___ns1__searchDatafileByRestriction(
    struct soap *soap,
    ns1__searchDatafileByRestriction *ns1__searchDatafileByRestriction_) {
  struct __ns1__searchDatafileByRestriction *_p =
      soap_instantiate___ns1__searchDatafileByRestriction(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByRestriction(soap, _p);
    _p->ns1__searchDatafileByRestriction_ = ns1__searchDatafileByRestriction_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatafileByRestriction(
    struct soap *soap, struct __ns1__searchDatafileByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatafileByRestriction(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatasetByRestriction
#define SOAP_TYPE_ICat3___ns1__searchDatasetByRestriction (997)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchDatasetByRestriction(
    struct soap *, struct __ns1__searchDatasetByRestriction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchDatasetByRestriction(
    struct soap *, const struct __ns1__searchDatasetByRestriction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatasetByRestriction(
    struct soap *, const char *, int,
    const struct __ns1__searchDatasetByRestriction *, const char *);
SOAP_FMAC3 struct __ns1__searchDatasetByRestriction *SOAP_FMAC4
soap_in___ns1__searchDatasetByRestriction(
    struct soap *, const char *, struct __ns1__searchDatasetByRestriction *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatasetByRestriction(
    struct soap *, const struct __ns1__searchDatasetByRestriction *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatasetByRestriction
#define soap_write___ns1__searchDatasetByRestriction(soap, data)               \
  (ICat3::soap_serialize___ns1__searchDatasetByRestriction(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatasetByRestriction(                      \
           soap, data, "-ns1:searchDatasetByRestriction", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatasetByRestriction *SOAP_FMAC4
soap_get___ns1__searchDatasetByRestriction(
    struct soap *, struct __ns1__searchDatasetByRestriction *, const char *,
    const char *);

#ifndef soap_read___ns1__searchDatasetByRestriction
#define soap_read___ns1__searchDatasetByRestriction(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatasetByRestriction(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatasetByRestriction *SOAP_FMAC2
soap_instantiate___ns1__searchDatasetByRestriction(struct soap *, int,
                                                   const char *, const char *,
                                                   size_t *);

inline struct __ns1__searchDatasetByRestriction *
soap_new___ns1__searchDatasetByRestriction(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchDatasetByRestriction(soap, n, NULL, NULL,
                                                            NULL);
}

inline struct __ns1__searchDatasetByRestriction *
soap_new_req___ns1__searchDatasetByRestriction(struct soap *soap) {
  struct __ns1__searchDatasetByRestriction *_p =
      soap_instantiate___ns1__searchDatasetByRestriction(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByRestriction(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatasetByRestriction *
soap_new_set___ns1__searchDatasetByRestriction(
    struct soap *soap,
    ns1__searchDatasetByRestriction *ns1__searchDatasetByRestriction_) {
  struct __ns1__searchDatasetByRestriction *_p =
      soap_instantiate___ns1__searchDatasetByRestriction(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByRestriction(soap, _p);
    _p->ns1__searchDatasetByRestriction_ = ns1__searchDatasetByRestriction_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatasetByRestriction(
    struct soap *soap, struct __ns1__searchDatasetByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatasetByRestriction(struct soap *, int, int, void *,
                                            size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchInvestigationByRestriction
#define SOAP_TYPE_ICat3___ns1__searchInvestigationByRestriction (993)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchInvestigationByRestriction(
    struct soap *, struct __ns1__searchInvestigationByRestriction *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchInvestigationByRestriction(
    struct soap *, const struct __ns1__searchInvestigationByRestriction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchInvestigationByRestriction(
    struct soap *, const char *, int,
    const struct __ns1__searchInvestigationByRestriction *, const char *);
SOAP_FMAC3 struct __ns1__searchInvestigationByRestriction *SOAP_FMAC4
soap_in___ns1__searchInvestigationByRestriction(
    struct soap *, const char *,
    struct __ns1__searchInvestigationByRestriction *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchInvestigationByRestriction(
    struct soap *, const struct __ns1__searchInvestigationByRestriction *,
    const char *, const char *);

#ifndef soap_write___ns1__searchInvestigationByRestriction
#define soap_write___ns1__searchInvestigationByRestriction(soap, data)         \
  (ICat3::soap_serialize___ns1__searchInvestigationByRestriction(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchInvestigationByRestriction(                \
           soap, data, "-ns1:searchInvestigationByRestriction", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchInvestigationByRestriction *SOAP_FMAC4
soap_get___ns1__searchInvestigationByRestriction(
    struct soap *, struct __ns1__searchInvestigationByRestriction *,
    const char *, const char *);

#ifndef soap_read___ns1__searchInvestigationByRestriction
#define soap_read___ns1__searchInvestigationByRestriction(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchInvestigationByRestriction(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchInvestigationByRestriction *SOAP_FMAC2
soap_instantiate___ns1__searchInvestigationByRestriction(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline struct __ns1__searchInvestigationByRestriction *
soap_new___ns1__searchInvestigationByRestriction(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate___ns1__searchInvestigationByRestriction(soap, n, NULL,
                                                                  NULL, NULL);
}

inline struct __ns1__searchInvestigationByRestriction *
soap_new_req___ns1__searchInvestigationByRestriction(struct soap *soap) {
  struct __ns1__searchInvestigationByRestriction *_p =
      soap_instantiate___ns1__searchInvestigationByRestriction(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByRestriction(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchInvestigationByRestriction *
soap_new_set___ns1__searchInvestigationByRestriction(
    struct soap *soap, ns1__searchInvestigationByRestriction *
                           ns1__searchInvestigationByRestriction_) {
  struct __ns1__searchInvestigationByRestriction *_p =
      soap_instantiate___ns1__searchInvestigationByRestriction(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByRestriction(soap, _p);
    _p->ns1__searchInvestigationByRestriction_ =
        ns1__searchInvestigationByRestriction_;
  }
  return _p;
}

inline void soap_delete___ns1__searchInvestigationByRestriction(
    struct soap *soap, struct __ns1__searchInvestigationByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchInvestigationByRestriction(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchInvestigationByParameterRestriction
#define SOAP_TYPE_ICat3___ns1__searchInvestigationByParameterRestriction (989)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchInvestigationByParameterRestriction(
    struct soap *, struct __ns1__searchInvestigationByParameterRestriction *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchInvestigationByParameterRestriction(
    struct soap *,
    const struct __ns1__searchInvestigationByParameterRestriction *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__searchInvestigationByParameterRestriction(
    struct soap *, const char *, int,
    const struct __ns1__searchInvestigationByParameterRestriction *,
    const char *);
SOAP_FMAC3 struct __ns1__searchInvestigationByParameterRestriction *SOAP_FMAC4
soap_in___ns1__searchInvestigationByParameterRestriction(
    struct soap *, const char *,
    struct __ns1__searchInvestigationByParameterRestriction *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__searchInvestigationByParameterRestriction(
    struct soap *,
    const struct __ns1__searchInvestigationByParameterRestriction *,
    const char *, const char *);

#ifndef soap_write___ns1__searchInvestigationByParameterRestriction
#define soap_write___ns1__searchInvestigationByParameterRestriction(soap,      \
                                                                    data)      \
  (ICat3::soap_serialize___ns1__searchInvestigationByParameterRestriction(     \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchInvestigationByParameterRestriction(       \
           soap, data, "-ns1:searchInvestigationByParameterRestriction",       \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchInvestigationByParameterRestriction *SOAP_FMAC4
soap_get___ns1__searchInvestigationByParameterRestriction(
    struct soap *, struct __ns1__searchInvestigationByParameterRestriction *,
    const char *, const char *);

#ifndef soap_read___ns1__searchInvestigationByParameterRestriction
#define soap_read___ns1__searchInvestigationByParameterRestriction(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchInvestigationByParameterRestriction(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchInvestigationByParameterRestriction *SOAP_FMAC2
soap_instantiate___ns1__searchInvestigationByParameterRestriction(
    struct soap *, int, const char *, const char *, size_t *);

inline struct __ns1__searchInvestigationByParameterRestriction *
soap_new___ns1__searchInvestigationByParameterRestriction(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate___ns1__searchInvestigationByParameterRestriction(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchInvestigationByParameterRestriction *
soap_new_req___ns1__searchInvestigationByParameterRestriction(
    struct soap *soap) {
  struct __ns1__searchInvestigationByParameterRestriction *_p =
      soap_instantiate___ns1__searchInvestigationByParameterRestriction(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByParameterRestriction(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchInvestigationByParameterRestriction *
soap_new_set___ns1__searchInvestigationByParameterRestriction(
    struct soap *soap, ns1__searchInvestigationByParameterRestriction *
                           ns1__searchInvestigationByParameterRestriction_) {
  struct __ns1__searchInvestigationByParameterRestriction *_p =
      soap_instantiate___ns1__searchInvestigationByParameterRestriction(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByParameterRestriction(soap, _p);
    _p->ns1__searchInvestigationByParameterRestriction_ =
        ns1__searchInvestigationByParameterRestriction_;
  }
  return _p;
}

inline void soap_delete___ns1__searchInvestigationByParameterRestriction(
    struct soap *soap,
    struct __ns1__searchInvestigationByParameterRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchInvestigationByParameterRestriction(struct soap *, int,
                                                           int, void *, size_t,
                                                           const void *,
                                                           size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatafileByParameterRestriction
#define SOAP_TYPE_ICat3___ns1__searchDatafileByParameterRestriction (985)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchDatafileByParameterRestriction(
    struct soap *, struct __ns1__searchDatafileByParameterRestriction *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatafileByParameterRestriction(
    struct soap *, const struct __ns1__searchDatafileByParameterRestriction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatafileByParameterRestriction(
    struct soap *, const char *, int,
    const struct __ns1__searchDatafileByParameterRestriction *, const char *);
SOAP_FMAC3 struct __ns1__searchDatafileByParameterRestriction *SOAP_FMAC4
soap_in___ns1__searchDatafileByParameterRestriction(
    struct soap *, const char *,
    struct __ns1__searchDatafileByParameterRestriction *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatafileByParameterRestriction(
    struct soap *, const struct __ns1__searchDatafileByParameterRestriction *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatafileByParameterRestriction
#define soap_write___ns1__searchDatafileByParameterRestriction(soap, data)     \
  (ICat3::soap_serialize___ns1__searchDatafileByParameterRestriction(soap,     \
                                                                     data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatafileByParameterRestriction(            \
           soap, data, "-ns1:searchDatafileByParameterRestriction", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatafileByParameterRestriction *SOAP_FMAC4
soap_get___ns1__searchDatafileByParameterRestriction(
    struct soap *, struct __ns1__searchDatafileByParameterRestriction *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatafileByParameterRestriction
#define soap_read___ns1__searchDatafileByParameterRestriction(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatafileByParameterRestriction(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatafileByParameterRestriction *SOAP_FMAC2
soap_instantiate___ns1__searchDatafileByParameterRestriction(struct soap *, int,
                                                             const char *,
                                                             const char *,
                                                             size_t *);

inline struct __ns1__searchDatafileByParameterRestriction *
soap_new___ns1__searchDatafileByParameterRestriction(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate___ns1__searchDatafileByParameterRestriction(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchDatafileByParameterRestriction *
soap_new_req___ns1__searchDatafileByParameterRestriction(struct soap *soap) {
  struct __ns1__searchDatafileByParameterRestriction *_p =
      soap_instantiate___ns1__searchDatafileByParameterRestriction(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByParameterRestriction(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatafileByParameterRestriction *
soap_new_set___ns1__searchDatafileByParameterRestriction(
    struct soap *soap, ns1__searchDatafileByParameterRestriction *
                           ns1__searchDatafileByParameterRestriction_) {
  struct __ns1__searchDatafileByParameterRestriction *_p =
      soap_instantiate___ns1__searchDatafileByParameterRestriction(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByParameterRestriction(soap, _p);
    _p->ns1__searchDatafileByParameterRestriction_ =
        ns1__searchDatafileByParameterRestriction_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatafileByParameterRestriction(
    struct soap *soap, struct __ns1__searchDatafileByParameterRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatafileByParameterRestriction(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchSampleByParameterRestriction
#define SOAP_TYPE_ICat3___ns1__searchSampleByParameterRestriction (981)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchSampleByParameterRestriction(
    struct soap *, struct __ns1__searchSampleByParameterRestriction *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchSampleByParameterRestriction(
    struct soap *, const struct __ns1__searchSampleByParameterRestriction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchSampleByParameterRestriction(
    struct soap *, const char *, int,
    const struct __ns1__searchSampleByParameterRestriction *, const char *);
SOAP_FMAC3 struct __ns1__searchSampleByParameterRestriction *SOAP_FMAC4
soap_in___ns1__searchSampleByParameterRestriction(
    struct soap *, const char *,
    struct __ns1__searchSampleByParameterRestriction *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchSampleByParameterRestriction(
    struct soap *, const struct __ns1__searchSampleByParameterRestriction *,
    const char *, const char *);

#ifndef soap_write___ns1__searchSampleByParameterRestriction
#define soap_write___ns1__searchSampleByParameterRestriction(soap, data)       \
  (ICat3::soap_serialize___ns1__searchSampleByParameterRestriction(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchSampleByParameterRestriction(              \
           soap, data, "-ns1:searchSampleByParameterRestriction", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchSampleByParameterRestriction *SOAP_FMAC4
soap_get___ns1__searchSampleByParameterRestriction(
    struct soap *, struct __ns1__searchSampleByParameterRestriction *,
    const char *, const char *);

#ifndef soap_read___ns1__searchSampleByParameterRestriction
#define soap_read___ns1__searchSampleByParameterRestriction(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchSampleByParameterRestriction(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchSampleByParameterRestriction *SOAP_FMAC2
soap_instantiate___ns1__searchSampleByParameterRestriction(struct soap *, int,
                                                           const char *,
                                                           const char *,
                                                           size_t *);

inline struct __ns1__searchSampleByParameterRestriction *
soap_new___ns1__searchSampleByParameterRestriction(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate___ns1__searchSampleByParameterRestriction(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchSampleByParameterRestriction *
soap_new_req___ns1__searchSampleByParameterRestriction(struct soap *soap) {
  struct __ns1__searchSampleByParameterRestriction *_p =
      soap_instantiate___ns1__searchSampleByParameterRestriction(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByParameterRestriction(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchSampleByParameterRestriction *
soap_new_set___ns1__searchSampleByParameterRestriction(
    struct soap *soap, ns1__searchSampleByParameterRestriction *
                           ns1__searchSampleByParameterRestriction_) {
  struct __ns1__searchSampleByParameterRestriction *_p =
      soap_instantiate___ns1__searchSampleByParameterRestriction(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByParameterRestriction(soap, _p);
    _p->ns1__searchSampleByParameterRestriction_ =
        ns1__searchSampleByParameterRestriction_;
  }
  return _p;
}

inline void soap_delete___ns1__searchSampleByParameterRestriction(
    struct soap *soap, struct __ns1__searchSampleByParameterRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchSampleByParameterRestriction(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatasetByParameterRestriction
#define SOAP_TYPE_ICat3___ns1__searchDatasetByParameterRestriction (977)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchDatasetByParameterRestriction(
    struct soap *, struct __ns1__searchDatasetByParameterRestriction *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatasetByParameterRestriction(
    struct soap *, const struct __ns1__searchDatasetByParameterRestriction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatasetByParameterRestriction(
    struct soap *, const char *, int,
    const struct __ns1__searchDatasetByParameterRestriction *, const char *);
SOAP_FMAC3 struct __ns1__searchDatasetByParameterRestriction *SOAP_FMAC4
soap_in___ns1__searchDatasetByParameterRestriction(
    struct soap *, const char *,
    struct __ns1__searchDatasetByParameterRestriction *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatasetByParameterRestriction(
    struct soap *, const struct __ns1__searchDatasetByParameterRestriction *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatasetByParameterRestriction
#define soap_write___ns1__searchDatasetByParameterRestriction(soap, data)      \
  (ICat3::soap_serialize___ns1__searchDatasetByParameterRestriction(soap,      \
                                                                    data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatasetByParameterRestriction(             \
           soap, data, "-ns1:searchDatasetByParameterRestriction", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatasetByParameterRestriction *SOAP_FMAC4
soap_get___ns1__searchDatasetByParameterRestriction(
    struct soap *, struct __ns1__searchDatasetByParameterRestriction *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatasetByParameterRestriction
#define soap_read___ns1__searchDatasetByParameterRestriction(soap, data)       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatasetByParameterRestriction(            \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatasetByParameterRestriction *SOAP_FMAC2
soap_instantiate___ns1__searchDatasetByParameterRestriction(struct soap *, int,
                                                            const char *,
                                                            const char *,
                                                            size_t *);

inline struct __ns1__searchDatasetByParameterRestriction *
soap_new___ns1__searchDatasetByParameterRestriction(struct soap *soap,
                                                    int n = -1) {
  return soap_instantiate___ns1__searchDatasetByParameterRestriction(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchDatasetByParameterRestriction *
soap_new_req___ns1__searchDatasetByParameterRestriction(struct soap *soap) {
  struct __ns1__searchDatasetByParameterRestriction *_p =
      soap_instantiate___ns1__searchDatasetByParameterRestriction(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByParameterRestriction(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatasetByParameterRestriction *
soap_new_set___ns1__searchDatasetByParameterRestriction(
    struct soap *soap, ns1__searchDatasetByParameterRestriction *
                           ns1__searchDatasetByParameterRestriction_) {
  struct __ns1__searchDatasetByParameterRestriction *_p =
      soap_instantiate___ns1__searchDatasetByParameterRestriction(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByParameterRestriction(soap, _p);
    _p->ns1__searchDatasetByParameterRestriction_ =
        ns1__searchDatasetByParameterRestriction_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatasetByParameterRestriction(
    struct soap *soap, struct __ns1__searchDatasetByParameterRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatasetByParameterRestriction(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getParameterByUnits
#define SOAP_TYPE_ICat3___ns1__getParameterByUnits (973)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getParameterByUnits(struct soap *,
                                        struct __ns1__getParameterByUnits *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getParameterByUnits(
    struct soap *, const struct __ns1__getParameterByUnits *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getParameterByUnits(struct soap *, const char *, int,
                                    const struct __ns1__getParameterByUnits *,
                                    const char *);
SOAP_FMAC3 struct __ns1__getParameterByUnits *SOAP_FMAC4
soap_in___ns1__getParameterByUnits(struct soap *, const char *,
                                   struct __ns1__getParameterByUnits *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getParameterByUnits(struct soap *,
                                    const struct __ns1__getParameterByUnits *,
                                    const char *, const char *);

#ifndef soap_write___ns1__getParameterByUnits
#define soap_write___ns1__getParameterByUnits(soap, data)                      \
  (ICat3::soap_serialize___ns1__getParameterByUnits(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getParameterByUnits(                             \
           soap, data, "-ns1:getParameterByUnits", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getParameterByUnits *SOAP_FMAC4
soap_get___ns1__getParameterByUnits(struct soap *,
                                    struct __ns1__getParameterByUnits *,
                                    const char *, const char *);

#ifndef soap_read___ns1__getParameterByUnits
#define soap_read___ns1__getParameterByUnits(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getParameterByUnits(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getParameterByUnits *SOAP_FMAC2
soap_instantiate___ns1__getParameterByUnits(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__getParameterByUnits *
soap_new___ns1__getParameterByUnits(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getParameterByUnits(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getParameterByUnits *
soap_new_req___ns1__getParameterByUnits(struct soap *soap) {
  struct __ns1__getParameterByUnits *_p =
      soap_instantiate___ns1__getParameterByUnits(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getParameterByUnits(soap, _p);
  }
  return _p;
}

inline struct __ns1__getParameterByUnits *
soap_new_set___ns1__getParameterByUnits(
    struct soap *soap, ns1__getParameterByUnits *ns1__getParameterByUnits_) {
  struct __ns1__getParameterByUnits *_p =
      soap_instantiate___ns1__getParameterByUnits(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getParameterByUnits(soap, _p);
    _p->ns1__getParameterByUnits_ = ns1__getParameterByUnits_;
  }
  return _p;
}

inline void
soap_delete___ns1__getParameterByUnits(struct soap *soap,
                                       struct __ns1__getParameterByUnits *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getParameterByUnits(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getParameterByRestriction
#define SOAP_TYPE_ICat3___ns1__getParameterByRestriction (969)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getParameterByRestriction(
    struct soap *, struct __ns1__getParameterByRestriction *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getParameterByRestriction(
    struct soap *, const struct __ns1__getParameterByRestriction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getParameterByRestriction(
    struct soap *, const char *, int,
    const struct __ns1__getParameterByRestriction *, const char *);
SOAP_FMAC3 struct __ns1__getParameterByRestriction *SOAP_FMAC4
soap_in___ns1__getParameterByRestriction(
    struct soap *, const char *, struct __ns1__getParameterByRestriction *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getParameterByRestriction(
    struct soap *, const struct __ns1__getParameterByRestriction *,
    const char *, const char *);

#ifndef soap_write___ns1__getParameterByRestriction
#define soap_write___ns1__getParameterByRestriction(soap, data)                \
  (ICat3::soap_serialize___ns1__getParameterByRestriction(soap, data),         \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getParameterByRestriction(                       \
           soap, data, "-ns1:getParameterByRestriction", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getParameterByRestriction *SOAP_FMAC4
soap_get___ns1__getParameterByRestriction(
    struct soap *, struct __ns1__getParameterByRestriction *, const char *,
    const char *);

#ifndef soap_read___ns1__getParameterByRestriction
#define soap_read___ns1__getParameterByRestriction(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getParameterByRestriction(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getParameterByRestriction *SOAP_FMAC2
soap_instantiate___ns1__getParameterByRestriction(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline struct __ns1__getParameterByRestriction *
soap_new___ns1__getParameterByRestriction(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getParameterByRestriction(soap, n, NULL, NULL,
                                                           NULL);
}

inline struct __ns1__getParameterByRestriction *
soap_new_req___ns1__getParameterByRestriction(struct soap *soap) {
  struct __ns1__getParameterByRestriction *_p =
      soap_instantiate___ns1__getParameterByRestriction(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__getParameterByRestriction(soap, _p);
  }
  return _p;
}

inline struct __ns1__getParameterByRestriction *
soap_new_set___ns1__getParameterByRestriction(
    struct soap *soap,
    ns1__getParameterByRestriction *ns1__getParameterByRestriction_) {
  struct __ns1__getParameterByRestriction *_p =
      soap_instantiate___ns1__getParameterByRestriction(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__getParameterByRestriction(soap, _p);
    _p->ns1__getParameterByRestriction_ = ns1__getParameterByRestriction_;
  }
  return _p;
}

inline void soap_delete___ns1__getParameterByRestriction(
    struct soap *soap, struct __ns1__getParameterByRestriction *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getParameterByRestriction(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getParameterByName
#define SOAP_TYPE_ICat3___ns1__getParameterByName (965)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getParameterByName(struct soap *,
                                       struct __ns1__getParameterByName *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getParameterByName(
    struct soap *, const struct __ns1__getParameterByName *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getParameterByName(struct soap *, const char *, int,
                                   const struct __ns1__getParameterByName *,
                                   const char *);
SOAP_FMAC3 struct __ns1__getParameterByName *SOAP_FMAC4
soap_in___ns1__getParameterByName(struct soap *, const char *,
                                  struct __ns1__getParameterByName *,
                                  const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getParameterByName(struct soap *,
                                   const struct __ns1__getParameterByName *,
                                   const char *, const char *);

#ifndef soap_write___ns1__getParameterByName
#define soap_write___ns1__getParameterByName(soap, data)                       \
  (ICat3::soap_serialize___ns1__getParameterByName(soap, data),                \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getParameterByName(                              \
           soap, data, "-ns1:getParameterByName", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getParameterByName *SOAP_FMAC4
soap_get___ns1__getParameterByName(struct soap *,
                                   struct __ns1__getParameterByName *,
                                   const char *, const char *);

#ifndef soap_read___ns1__getParameterByName
#define soap_read___ns1__getParameterByName(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getParameterByName(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getParameterByName *SOAP_FMAC2
soap_instantiate___ns1__getParameterByName(struct soap *, int, const char *,
                                           const char *, size_t *);

inline struct __ns1__getParameterByName *
soap_new___ns1__getParameterByName(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getParameterByName(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getParameterByName *
soap_new_req___ns1__getParameterByName(struct soap *soap) {
  struct __ns1__getParameterByName *_p =
      soap_instantiate___ns1__getParameterByName(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getParameterByName(soap, _p);
  }
  return _p;
}

inline struct __ns1__getParameterByName *soap_new_set___ns1__getParameterByName(
    struct soap *soap, ns1__getParameterByName *ns1__getParameterByName_) {
  struct __ns1__getParameterByName *_p =
      soap_instantiate___ns1__getParameterByName(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getParameterByName(soap, _p);
    _p->ns1__getParameterByName_ = ns1__getParameterByName_;
  }
  return _p;
}

inline void
soap_delete___ns1__getParameterByName(struct soap *soap,
                                      struct __ns1__getParameterByName *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getParameterByName(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getParameterByNameUnits
#define SOAP_TYPE_ICat3___ns1__getParameterByNameUnits (961)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getParameterByNameUnits(
    struct soap *, struct __ns1__getParameterByNameUnits *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getParameterByNameUnits(
    struct soap *, const struct __ns1__getParameterByNameUnits *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getParameterByNameUnits(
    struct soap *, const char *, int,
    const struct __ns1__getParameterByNameUnits *, const char *);
SOAP_FMAC3 struct __ns1__getParameterByNameUnits *SOAP_FMAC4
soap_in___ns1__getParameterByNameUnits(struct soap *, const char *,
                                       struct __ns1__getParameterByNameUnits *,
                                       const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getParameterByNameUnits(
    struct soap *, const struct __ns1__getParameterByNameUnits *, const char *,
    const char *);

#ifndef soap_write___ns1__getParameterByNameUnits
#define soap_write___ns1__getParameterByNameUnits(soap, data)                  \
  (ICat3::soap_serialize___ns1__getParameterByNameUnits(soap, data),           \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getParameterByNameUnits(                         \
           soap, data, "-ns1:getParameterByNameUnits", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getParameterByNameUnits *SOAP_FMAC4
soap_get___ns1__getParameterByNameUnits(struct soap *,
                                        struct __ns1__getParameterByNameUnits *,
                                        const char *, const char *);

#ifndef soap_read___ns1__getParameterByNameUnits
#define soap_read___ns1__getParameterByNameUnits(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getParameterByNameUnits(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getParameterByNameUnits *SOAP_FMAC2
soap_instantiate___ns1__getParameterByNameUnits(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline struct __ns1__getParameterByNameUnits *
soap_new___ns1__getParameterByNameUnits(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getParameterByNameUnits(soap, n, NULL, NULL,
                                                         NULL);
}

inline struct __ns1__getParameterByNameUnits *
soap_new_req___ns1__getParameterByNameUnits(struct soap *soap) {
  struct __ns1__getParameterByNameUnits *_p =
      soap_instantiate___ns1__getParameterByNameUnits(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    soap_default___ns1__getParameterByNameUnits(soap, _p);
  }
  return _p;
}

inline struct __ns1__getParameterByNameUnits *
soap_new_set___ns1__getParameterByNameUnits(
    struct soap *soap,
    ns1__getParameterByNameUnits *ns1__getParameterByNameUnits_) {
  struct __ns1__getParameterByNameUnits *_p =
      soap_instantiate___ns1__getParameterByNameUnits(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    soap_default___ns1__getParameterByNameUnits(soap, _p);
    _p->ns1__getParameterByNameUnits_ = ns1__getParameterByNameUnits_;
  }
  return _p;
}

inline void soap_delete___ns1__getParameterByNameUnits(
    struct soap *soap, struct __ns1__getParameterByNameUnits *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getParameterByNameUnits(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchSampleByParameter
#define SOAP_TYPE_ICat3___ns1__searchSampleByParameter (957)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchSampleByParameter(
    struct soap *, struct __ns1__searchSampleByParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchSampleByParameter(
    struct soap *, const struct __ns1__searchSampleByParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchSampleByParameter(
    struct soap *, const char *, int,
    const struct __ns1__searchSampleByParameter *, const char *);
SOAP_FMAC3 struct __ns1__searchSampleByParameter *SOAP_FMAC4
soap_in___ns1__searchSampleByParameter(struct soap *, const char *,
                                       struct __ns1__searchSampleByParameter *,
                                       const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchSampleByParameter(
    struct soap *, const struct __ns1__searchSampleByParameter *, const char *,
    const char *);

#ifndef soap_write___ns1__searchSampleByParameter
#define soap_write___ns1__searchSampleByParameter(soap, data)                  \
  (ICat3::soap_serialize___ns1__searchSampleByParameter(soap, data),           \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchSampleByParameter(                         \
           soap, data, "-ns1:searchSampleByParameter", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchSampleByParameter *SOAP_FMAC4
soap_get___ns1__searchSampleByParameter(struct soap *,
                                        struct __ns1__searchSampleByParameter *,
                                        const char *, const char *);

#ifndef soap_read___ns1__searchSampleByParameter
#define soap_read___ns1__searchSampleByParameter(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchSampleByParameter(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchSampleByParameter *SOAP_FMAC2
soap_instantiate___ns1__searchSampleByParameter(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline struct __ns1__searchSampleByParameter *
soap_new___ns1__searchSampleByParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchSampleByParameter(soap, n, NULL, NULL,
                                                         NULL);
}

inline struct __ns1__searchSampleByParameter *
soap_new_req___ns1__searchSampleByParameter(struct soap *soap) {
  struct __ns1__searchSampleByParameter *_p =
      soap_instantiate___ns1__searchSampleByParameter(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    soap_default___ns1__searchSampleByParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchSampleByParameter *
soap_new_set___ns1__searchSampleByParameter(
    struct soap *soap,
    ns1__searchSampleByParameter *ns1__searchSampleByParameter_) {
  struct __ns1__searchSampleByParameter *_p =
      soap_instantiate___ns1__searchSampleByParameter(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    soap_default___ns1__searchSampleByParameter(soap, _p);
    _p->ns1__searchSampleByParameter_ = ns1__searchSampleByParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__searchSampleByParameter(
    struct soap *soap, struct __ns1__searchSampleByParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchSampleByParameter(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatasetByParameter
#define SOAP_TYPE_ICat3___ns1__searchDatasetByParameter (953)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchDatasetByParameter(
    struct soap *, struct __ns1__searchDatasetByParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchDatasetByParameter(
    struct soap *, const struct __ns1__searchDatasetByParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatasetByParameter(
    struct soap *, const char *, int,
    const struct __ns1__searchDatasetByParameter *, const char *);
SOAP_FMAC3 struct __ns1__searchDatasetByParameter *SOAP_FMAC4
soap_in___ns1__searchDatasetByParameter(
    struct soap *, const char *, struct __ns1__searchDatasetByParameter *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatasetByParameter(
    struct soap *, const struct __ns1__searchDatasetByParameter *, const char *,
    const char *);

#ifndef soap_write___ns1__searchDatasetByParameter
#define soap_write___ns1__searchDatasetByParameter(soap, data)                 \
  (ICat3::soap_serialize___ns1__searchDatasetByParameter(soap, data),          \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatasetByParameter(                        \
           soap, data, "-ns1:searchDatasetByParameter", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatasetByParameter *SOAP_FMAC4
soap_get___ns1__searchDatasetByParameter(
    struct soap *, struct __ns1__searchDatasetByParameter *, const char *,
    const char *);

#ifndef soap_read___ns1__searchDatasetByParameter
#define soap_read___ns1__searchDatasetByParameter(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatasetByParameter(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatasetByParameter *SOAP_FMAC2
soap_instantiate___ns1__searchDatasetByParameter(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline struct __ns1__searchDatasetByParameter *
soap_new___ns1__searchDatasetByParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchDatasetByParameter(soap, n, NULL, NULL,
                                                          NULL);
}

inline struct __ns1__searchDatasetByParameter *
soap_new_req___ns1__searchDatasetByParameter(struct soap *soap) {
  struct __ns1__searchDatasetByParameter *_p =
      soap_instantiate___ns1__searchDatasetByParameter(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatasetByParameter *
soap_new_set___ns1__searchDatasetByParameter(
    struct soap *soap,
    ns1__searchDatasetByParameter *ns1__searchDatasetByParameter_) {
  struct __ns1__searchDatasetByParameter *_p =
      soap_instantiate___ns1__searchDatasetByParameter(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByParameter(soap, _p);
    _p->ns1__searchDatasetByParameter_ = ns1__searchDatasetByParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatasetByParameter(
    struct soap *soap, struct __ns1__searchDatasetByParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatasetByParameter(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatafileByParameter
#define SOAP_TYPE_ICat3___ns1__searchDatafileByParameter (949)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchDatafileByParameter(
    struct soap *, struct __ns1__searchDatafileByParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchDatafileByParameter(
    struct soap *, const struct __ns1__searchDatafileByParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatafileByParameter(
    struct soap *, const char *, int,
    const struct __ns1__searchDatafileByParameter *, const char *);
SOAP_FMAC3 struct __ns1__searchDatafileByParameter *SOAP_FMAC4
soap_in___ns1__searchDatafileByParameter(
    struct soap *, const char *, struct __ns1__searchDatafileByParameter *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatafileByParameter(
    struct soap *, const struct __ns1__searchDatafileByParameter *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatafileByParameter
#define soap_write___ns1__searchDatafileByParameter(soap, data)                \
  (ICat3::soap_serialize___ns1__searchDatafileByParameter(soap, data),         \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatafileByParameter(                       \
           soap, data, "-ns1:searchDatafileByParameter", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatafileByParameter *SOAP_FMAC4
soap_get___ns1__searchDatafileByParameter(
    struct soap *, struct __ns1__searchDatafileByParameter *, const char *,
    const char *);

#ifndef soap_read___ns1__searchDatafileByParameter
#define soap_read___ns1__searchDatafileByParameter(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatafileByParameter(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatafileByParameter *SOAP_FMAC2
soap_instantiate___ns1__searchDatafileByParameter(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline struct __ns1__searchDatafileByParameter *
soap_new___ns1__searchDatafileByParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchDatafileByParameter(soap, n, NULL, NULL,
                                                           NULL);
}

inline struct __ns1__searchDatafileByParameter *
soap_new_req___ns1__searchDatafileByParameter(struct soap *soap) {
  struct __ns1__searchDatafileByParameter *_p =
      soap_instantiate___ns1__searchDatafileByParameter(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatafileByParameter *
soap_new_set___ns1__searchDatafileByParameter(
    struct soap *soap,
    ns1__searchDatafileByParameter *ns1__searchDatafileByParameter_) {
  struct __ns1__searchDatafileByParameter *_p =
      soap_instantiate___ns1__searchDatafileByParameter(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByParameter(soap, _p);
    _p->ns1__searchDatafileByParameter_ = ns1__searchDatafileByParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatafileByParameter(
    struct soap *soap, struct __ns1__searchDatafileByParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatafileByParameter(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchInvestigationByParameter
#define SOAP_TYPE_ICat3___ns1__searchInvestigationByParameter (945)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchInvestigationByParameter(
    struct soap *, struct __ns1__searchInvestigationByParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchInvestigationByParameter(
    struct soap *, const struct __ns1__searchInvestigationByParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchInvestigationByParameter(
    struct soap *, const char *, int,
    const struct __ns1__searchInvestigationByParameter *, const char *);
SOAP_FMAC3 struct __ns1__searchInvestigationByParameter *SOAP_FMAC4
soap_in___ns1__searchInvestigationByParameter(
    struct soap *, const char *, struct __ns1__searchInvestigationByParameter *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchInvestigationByParameter(
    struct soap *, const struct __ns1__searchInvestigationByParameter *,
    const char *, const char *);

#ifndef soap_write___ns1__searchInvestigationByParameter
#define soap_write___ns1__searchInvestigationByParameter(soap, data)           \
  (ICat3::soap_serialize___ns1__searchInvestigationByParameter(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchInvestigationByParameter(                  \
           soap, data, "-ns1:searchInvestigationByParameter", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchInvestigationByParameter *SOAP_FMAC4
soap_get___ns1__searchInvestigationByParameter(
    struct soap *, struct __ns1__searchInvestigationByParameter *, const char *,
    const char *);

#ifndef soap_read___ns1__searchInvestigationByParameter
#define soap_read___ns1__searchInvestigationByParameter(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchInvestigationByParameter(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchInvestigationByParameter *SOAP_FMAC2
soap_instantiate___ns1__searchInvestigationByParameter(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline struct __ns1__searchInvestigationByParameter *
soap_new___ns1__searchInvestigationByParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchInvestigationByParameter(soap, n, NULL,
                                                                NULL, NULL);
}

inline struct __ns1__searchInvestigationByParameter *
soap_new_req___ns1__searchInvestigationByParameter(struct soap *soap) {
  struct __ns1__searchInvestigationByParameter *_p =
      soap_instantiate___ns1__searchInvestigationByParameter(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchInvestigationByParameter *
soap_new_set___ns1__searchInvestigationByParameter(
    struct soap *soap,
    ns1__searchInvestigationByParameter *ns1__searchInvestigationByParameter_) {
  struct __ns1__searchInvestigationByParameter *_p =
      soap_instantiate___ns1__searchInvestigationByParameter(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByParameter(soap, _p);
    _p->ns1__searchInvestigationByParameter_ =
        ns1__searchInvestigationByParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__searchInvestigationByParameter(
    struct soap *soap, struct __ns1__searchInvestigationByParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchInvestigationByParameter(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchSampleByParameterComparison
#define SOAP_TYPE_ICat3___ns1__searchSampleByParameterComparison (941)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchSampleByParameterComparison(
    struct soap *, struct __ns1__searchSampleByParameterComparison *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchSampleByParameterComparison(
    struct soap *, const struct __ns1__searchSampleByParameterComparison *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchSampleByParameterComparison(
    struct soap *, const char *, int,
    const struct __ns1__searchSampleByParameterComparison *, const char *);
SOAP_FMAC3 struct __ns1__searchSampleByParameterComparison *SOAP_FMAC4
soap_in___ns1__searchSampleByParameterComparison(
    struct soap *, const char *,
    struct __ns1__searchSampleByParameterComparison *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchSampleByParameterComparison(
    struct soap *, const struct __ns1__searchSampleByParameterComparison *,
    const char *, const char *);

#ifndef soap_write___ns1__searchSampleByParameterComparison
#define soap_write___ns1__searchSampleByParameterComparison(soap, data)        \
  (ICat3::soap_serialize___ns1__searchSampleByParameterComparison(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchSampleByParameterComparison(               \
           soap, data, "-ns1:searchSampleByParameterComparison", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchSampleByParameterComparison *SOAP_FMAC4
soap_get___ns1__searchSampleByParameterComparison(
    struct soap *, struct __ns1__searchSampleByParameterComparison *,
    const char *, const char *);

#ifndef soap_read___ns1__searchSampleByParameterComparison
#define soap_read___ns1__searchSampleByParameterComparison(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchSampleByParameterComparison(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchSampleByParameterComparison *SOAP_FMAC2
soap_instantiate___ns1__searchSampleByParameterComparison(struct soap *, int,
                                                          const char *,
                                                          const char *,
                                                          size_t *);

inline struct __ns1__searchSampleByParameterComparison *
soap_new___ns1__searchSampleByParameterComparison(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate___ns1__searchSampleByParameterComparison(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchSampleByParameterComparison *
soap_new_req___ns1__searchSampleByParameterComparison(struct soap *soap) {
  struct __ns1__searchSampleByParameterComparison *_p =
      soap_instantiate___ns1__searchSampleByParameterComparison(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByParameterComparison(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchSampleByParameterComparison *
soap_new_set___ns1__searchSampleByParameterComparison(
    struct soap *soap, ns1__searchSampleByParameterComparison *
                           ns1__searchSampleByParameterComparison_) {
  struct __ns1__searchSampleByParameterComparison *_p =
      soap_instantiate___ns1__searchSampleByParameterComparison(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByParameterComparison(soap, _p);
    _p->ns1__searchSampleByParameterComparison_ =
        ns1__searchSampleByParameterComparison_;
  }
  return _p;
}

inline void soap_delete___ns1__searchSampleByParameterComparison(
    struct soap *soap, struct __ns1__searchSampleByParameterComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchSampleByParameterComparison(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatasetByParameterComparison
#define SOAP_TYPE_ICat3___ns1__searchDatasetByParameterComparison (937)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchDatasetByParameterComparison(
    struct soap *, struct __ns1__searchDatasetByParameterComparison *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatasetByParameterComparison(
    struct soap *, const struct __ns1__searchDatasetByParameterComparison *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatasetByParameterComparison(
    struct soap *, const char *, int,
    const struct __ns1__searchDatasetByParameterComparison *, const char *);
SOAP_FMAC3 struct __ns1__searchDatasetByParameterComparison *SOAP_FMAC4
soap_in___ns1__searchDatasetByParameterComparison(
    struct soap *, const char *,
    struct __ns1__searchDatasetByParameterComparison *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatasetByParameterComparison(
    struct soap *, const struct __ns1__searchDatasetByParameterComparison *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatasetByParameterComparison
#define soap_write___ns1__searchDatasetByParameterComparison(soap, data)       \
  (ICat3::soap_serialize___ns1__searchDatasetByParameterComparison(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatasetByParameterComparison(              \
           soap, data, "-ns1:searchDatasetByParameterComparison", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatasetByParameterComparison *SOAP_FMAC4
soap_get___ns1__searchDatasetByParameterComparison(
    struct soap *, struct __ns1__searchDatasetByParameterComparison *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatasetByParameterComparison
#define soap_read___ns1__searchDatasetByParameterComparison(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatasetByParameterComparison(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatasetByParameterComparison *SOAP_FMAC2
soap_instantiate___ns1__searchDatasetByParameterComparison(struct soap *, int,
                                                           const char *,
                                                           const char *,
                                                           size_t *);

inline struct __ns1__searchDatasetByParameterComparison *
soap_new___ns1__searchDatasetByParameterComparison(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate___ns1__searchDatasetByParameterComparison(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchDatasetByParameterComparison *
soap_new_req___ns1__searchDatasetByParameterComparison(struct soap *soap) {
  struct __ns1__searchDatasetByParameterComparison *_p =
      soap_instantiate___ns1__searchDatasetByParameterComparison(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByParameterComparison(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatasetByParameterComparison *
soap_new_set___ns1__searchDatasetByParameterComparison(
    struct soap *soap, ns1__searchDatasetByParameterComparison *
                           ns1__searchDatasetByParameterComparison_) {
  struct __ns1__searchDatasetByParameterComparison *_p =
      soap_instantiate___ns1__searchDatasetByParameterComparison(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByParameterComparison(soap, _p);
    _p->ns1__searchDatasetByParameterComparison_ =
        ns1__searchDatasetByParameterComparison_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatasetByParameterComparison(
    struct soap *soap, struct __ns1__searchDatasetByParameterComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatasetByParameterComparison(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatafileByParameterComparison
#define SOAP_TYPE_ICat3___ns1__searchDatafileByParameterComparison (933)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchDatafileByParameterComparison(
    struct soap *, struct __ns1__searchDatafileByParameterComparison *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatafileByParameterComparison(
    struct soap *, const struct __ns1__searchDatafileByParameterComparison *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatafileByParameterComparison(
    struct soap *, const char *, int,
    const struct __ns1__searchDatafileByParameterComparison *, const char *);
SOAP_FMAC3 struct __ns1__searchDatafileByParameterComparison *SOAP_FMAC4
soap_in___ns1__searchDatafileByParameterComparison(
    struct soap *, const char *,
    struct __ns1__searchDatafileByParameterComparison *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatafileByParameterComparison(
    struct soap *, const struct __ns1__searchDatafileByParameterComparison *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatafileByParameterComparison
#define soap_write___ns1__searchDatafileByParameterComparison(soap, data)      \
  (ICat3::soap_serialize___ns1__searchDatafileByParameterComparison(soap,      \
                                                                    data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatafileByParameterComparison(             \
           soap, data, "-ns1:searchDatafileByParameterComparison", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatafileByParameterComparison *SOAP_FMAC4
soap_get___ns1__searchDatafileByParameterComparison(
    struct soap *, struct __ns1__searchDatafileByParameterComparison *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatafileByParameterComparison
#define soap_read___ns1__searchDatafileByParameterComparison(soap, data)       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatafileByParameterComparison(            \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatafileByParameterComparison *SOAP_FMAC2
soap_instantiate___ns1__searchDatafileByParameterComparison(struct soap *, int,
                                                            const char *,
                                                            const char *,
                                                            size_t *);

inline struct __ns1__searchDatafileByParameterComparison *
soap_new___ns1__searchDatafileByParameterComparison(struct soap *soap,
                                                    int n = -1) {
  return soap_instantiate___ns1__searchDatafileByParameterComparison(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchDatafileByParameterComparison *
soap_new_req___ns1__searchDatafileByParameterComparison(struct soap *soap) {
  struct __ns1__searchDatafileByParameterComparison *_p =
      soap_instantiate___ns1__searchDatafileByParameterComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByParameterComparison(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatafileByParameterComparison *
soap_new_set___ns1__searchDatafileByParameterComparison(
    struct soap *soap, ns1__searchDatafileByParameterComparison *
                           ns1__searchDatafileByParameterComparison_) {
  struct __ns1__searchDatafileByParameterComparison *_p =
      soap_instantiate___ns1__searchDatafileByParameterComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByParameterComparison(soap, _p);
    _p->ns1__searchDatafileByParameterComparison_ =
        ns1__searchDatafileByParameterComparison_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatafileByParameterComparison(
    struct soap *soap, struct __ns1__searchDatafileByParameterComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatafileByParameterComparison(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchInvestigationByParameterComparison
#define SOAP_TYPE_ICat3___ns1__searchInvestigationByParameterComparison (929)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchInvestigationByParameterComparison(
    struct soap *, struct __ns1__searchInvestigationByParameterComparison *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchInvestigationByParameterComparison(
    struct soap *,
    const struct __ns1__searchInvestigationByParameterComparison *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__searchInvestigationByParameterComparison(
    struct soap *, const char *, int,
    const struct __ns1__searchInvestigationByParameterComparison *,
    const char *);
SOAP_FMAC3 struct __ns1__searchInvestigationByParameterComparison *SOAP_FMAC4
soap_in___ns1__searchInvestigationByParameterComparison(
    struct soap *, const char *,
    struct __ns1__searchInvestigationByParameterComparison *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__searchInvestigationByParameterComparison(
    struct soap *,
    const struct __ns1__searchInvestigationByParameterComparison *,
    const char *, const char *);

#ifndef soap_write___ns1__searchInvestigationByParameterComparison
#define soap_write___ns1__searchInvestigationByParameterComparison(soap, data) \
  (ICat3::soap_serialize___ns1__searchInvestigationByParameterComparison(      \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchInvestigationByParameterComparison(        \
           soap, data, "-ns1:searchInvestigationByParameterComparison",        \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchInvestigationByParameterComparison *SOAP_FMAC4
soap_get___ns1__searchInvestigationByParameterComparison(
    struct soap *, struct __ns1__searchInvestigationByParameterComparison *,
    const char *, const char *);

#ifndef soap_read___ns1__searchInvestigationByParameterComparison
#define soap_read___ns1__searchInvestigationByParameterComparison(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchInvestigationByParameterComparison(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchInvestigationByParameterComparison *SOAP_FMAC2
soap_instantiate___ns1__searchInvestigationByParameterComparison(
    struct soap *, int, const char *, const char *, size_t *);

inline struct __ns1__searchInvestigationByParameterComparison *
soap_new___ns1__searchInvestigationByParameterComparison(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate___ns1__searchInvestigationByParameterComparison(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchInvestigationByParameterComparison *
soap_new_req___ns1__searchInvestigationByParameterComparison(
    struct soap *soap) {
  struct __ns1__searchInvestigationByParameterComparison *_p =
      soap_instantiate___ns1__searchInvestigationByParameterComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByParameterComparison(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchInvestigationByParameterComparison *
soap_new_set___ns1__searchInvestigationByParameterComparison(
    struct soap *soap, ns1__searchInvestigationByParameterComparison *
                           ns1__searchInvestigationByParameterComparison_) {
  struct __ns1__searchInvestigationByParameterComparison *_p =
      soap_instantiate___ns1__searchInvestigationByParameterComparison(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByParameterComparison(soap, _p);
    _p->ns1__searchInvestigationByParameterComparison_ =
        ns1__searchInvestigationByParameterComparison_;
  }
  return _p;
}

inline void soap_delete___ns1__searchInvestigationByParameterComparison(
    struct soap *soap,
    struct __ns1__searchInvestigationByParameterComparison *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchInvestigationByParameterComparison(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchSampleByParameterCondition
#define SOAP_TYPE_ICat3___ns1__searchSampleByParameterCondition (925)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchSampleByParameterCondition(
    struct soap *, struct __ns1__searchSampleByParameterCondition *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchSampleByParameterCondition(
    struct soap *, const struct __ns1__searchSampleByParameterCondition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchSampleByParameterCondition(
    struct soap *, const char *, int,
    const struct __ns1__searchSampleByParameterCondition *, const char *);
SOAP_FMAC3 struct __ns1__searchSampleByParameterCondition *SOAP_FMAC4
soap_in___ns1__searchSampleByParameterCondition(
    struct soap *, const char *,
    struct __ns1__searchSampleByParameterCondition *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchSampleByParameterCondition(
    struct soap *, const struct __ns1__searchSampleByParameterCondition *,
    const char *, const char *);

#ifndef soap_write___ns1__searchSampleByParameterCondition
#define soap_write___ns1__searchSampleByParameterCondition(soap, data)         \
  (ICat3::soap_serialize___ns1__searchSampleByParameterCondition(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchSampleByParameterCondition(                \
           soap, data, "-ns1:searchSampleByParameterCondition", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchSampleByParameterCondition *SOAP_FMAC4
soap_get___ns1__searchSampleByParameterCondition(
    struct soap *, struct __ns1__searchSampleByParameterCondition *,
    const char *, const char *);

#ifndef soap_read___ns1__searchSampleByParameterCondition
#define soap_read___ns1__searchSampleByParameterCondition(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchSampleByParameterCondition(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchSampleByParameterCondition *SOAP_FMAC2
soap_instantiate___ns1__searchSampleByParameterCondition(struct soap *, int,
                                                         const char *,
                                                         const char *,
                                                         size_t *);

inline struct __ns1__searchSampleByParameterCondition *
soap_new___ns1__searchSampleByParameterCondition(struct soap *soap,
                                                 int n = -1) {
  return soap_instantiate___ns1__searchSampleByParameterCondition(soap, n, NULL,
                                                                  NULL, NULL);
}

inline struct __ns1__searchSampleByParameterCondition *
soap_new_req___ns1__searchSampleByParameterCondition(struct soap *soap) {
  struct __ns1__searchSampleByParameterCondition *_p =
      soap_instantiate___ns1__searchSampleByParameterCondition(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByParameterCondition(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchSampleByParameterCondition *
soap_new_set___ns1__searchSampleByParameterCondition(
    struct soap *soap, ns1__searchSampleByParameterCondition *
                           ns1__searchSampleByParameterCondition_) {
  struct __ns1__searchSampleByParameterCondition *_p =
      soap_instantiate___ns1__searchSampleByParameterCondition(soap, -1, NULL,
                                                               NULL, NULL);
  if (_p) {
    soap_default___ns1__searchSampleByParameterCondition(soap, _p);
    _p->ns1__searchSampleByParameterCondition_ =
        ns1__searchSampleByParameterCondition_;
  }
  return _p;
}

inline void soap_delete___ns1__searchSampleByParameterCondition(
    struct soap *soap, struct __ns1__searchSampleByParameterCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchSampleByParameterCondition(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatasetByParameterCondition
#define SOAP_TYPE_ICat3___ns1__searchDatasetByParameterCondition (921)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchDatasetByParameterCondition(
    struct soap *, struct __ns1__searchDatasetByParameterCondition *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatasetByParameterCondition(
    struct soap *, const struct __ns1__searchDatasetByParameterCondition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatasetByParameterCondition(
    struct soap *, const char *, int,
    const struct __ns1__searchDatasetByParameterCondition *, const char *);
SOAP_FMAC3 struct __ns1__searchDatasetByParameterCondition *SOAP_FMAC4
soap_in___ns1__searchDatasetByParameterCondition(
    struct soap *, const char *,
    struct __ns1__searchDatasetByParameterCondition *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatasetByParameterCondition(
    struct soap *, const struct __ns1__searchDatasetByParameterCondition *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatasetByParameterCondition
#define soap_write___ns1__searchDatasetByParameterCondition(soap, data)        \
  (ICat3::soap_serialize___ns1__searchDatasetByParameterCondition(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatasetByParameterCondition(               \
           soap, data, "-ns1:searchDatasetByParameterCondition", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatasetByParameterCondition *SOAP_FMAC4
soap_get___ns1__searchDatasetByParameterCondition(
    struct soap *, struct __ns1__searchDatasetByParameterCondition *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatasetByParameterCondition
#define soap_read___ns1__searchDatasetByParameterCondition(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatasetByParameterCondition(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatasetByParameterCondition *SOAP_FMAC2
soap_instantiate___ns1__searchDatasetByParameterCondition(struct soap *, int,
                                                          const char *,
                                                          const char *,
                                                          size_t *);

inline struct __ns1__searchDatasetByParameterCondition *
soap_new___ns1__searchDatasetByParameterCondition(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate___ns1__searchDatasetByParameterCondition(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchDatasetByParameterCondition *
soap_new_req___ns1__searchDatasetByParameterCondition(struct soap *soap) {
  struct __ns1__searchDatasetByParameterCondition *_p =
      soap_instantiate___ns1__searchDatasetByParameterCondition(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByParameterCondition(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatasetByParameterCondition *
soap_new_set___ns1__searchDatasetByParameterCondition(
    struct soap *soap, ns1__searchDatasetByParameterCondition *
                           ns1__searchDatasetByParameterCondition_) {
  struct __ns1__searchDatasetByParameterCondition *_p =
      soap_instantiate___ns1__searchDatasetByParameterCondition(soap, -1, NULL,
                                                                NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatasetByParameterCondition(soap, _p);
    _p->ns1__searchDatasetByParameterCondition_ =
        ns1__searchDatasetByParameterCondition_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatasetByParameterCondition(
    struct soap *soap, struct __ns1__searchDatasetByParameterCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatasetByParameterCondition(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatafileByParameterCondition
#define SOAP_TYPE_ICat3___ns1__searchDatafileByParameterCondition (917)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchDatafileByParameterCondition(
    struct soap *, struct __ns1__searchDatafileByParameterCondition *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchDatafileByParameterCondition(
    struct soap *, const struct __ns1__searchDatafileByParameterCondition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatafileByParameterCondition(
    struct soap *, const char *, int,
    const struct __ns1__searchDatafileByParameterCondition *, const char *);
SOAP_FMAC3 struct __ns1__searchDatafileByParameterCondition *SOAP_FMAC4
soap_in___ns1__searchDatafileByParameterCondition(
    struct soap *, const char *,
    struct __ns1__searchDatafileByParameterCondition *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatafileByParameterCondition(
    struct soap *, const struct __ns1__searchDatafileByParameterCondition *,
    const char *, const char *);

#ifndef soap_write___ns1__searchDatafileByParameterCondition
#define soap_write___ns1__searchDatafileByParameterCondition(soap, data)       \
  (ICat3::soap_serialize___ns1__searchDatafileByParameterCondition(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatafileByParameterCondition(              \
           soap, data, "-ns1:searchDatafileByParameterCondition", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatafileByParameterCondition *SOAP_FMAC4
soap_get___ns1__searchDatafileByParameterCondition(
    struct soap *, struct __ns1__searchDatafileByParameterCondition *,
    const char *, const char *);

#ifndef soap_read___ns1__searchDatafileByParameterCondition
#define soap_read___ns1__searchDatafileByParameterCondition(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatafileByParameterCondition(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatafileByParameterCondition *SOAP_FMAC2
soap_instantiate___ns1__searchDatafileByParameterCondition(struct soap *, int,
                                                           const char *,
                                                           const char *,
                                                           size_t *);

inline struct __ns1__searchDatafileByParameterCondition *
soap_new___ns1__searchDatafileByParameterCondition(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate___ns1__searchDatafileByParameterCondition(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchDatafileByParameterCondition *
soap_new_req___ns1__searchDatafileByParameterCondition(struct soap *soap) {
  struct __ns1__searchDatafileByParameterCondition *_p =
      soap_instantiate___ns1__searchDatafileByParameterCondition(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByParameterCondition(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatafileByParameterCondition *
soap_new_set___ns1__searchDatafileByParameterCondition(
    struct soap *soap, ns1__searchDatafileByParameterCondition *
                           ns1__searchDatafileByParameterCondition_) {
  struct __ns1__searchDatafileByParameterCondition *_p =
      soap_instantiate___ns1__searchDatafileByParameterCondition(soap, -1, NULL,
                                                                 NULL, NULL);
  if (_p) {
    soap_default___ns1__searchDatafileByParameterCondition(soap, _p);
    _p->ns1__searchDatafileByParameterCondition_ =
        ns1__searchDatafileByParameterCondition_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatafileByParameterCondition(
    struct soap *soap, struct __ns1__searchDatafileByParameterCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatafileByParameterCondition(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchInvestigationByParameterCondition
#define SOAP_TYPE_ICat3___ns1__searchInvestigationByParameterCondition (913)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchInvestigationByParameterCondition(
    struct soap *, struct __ns1__searchInvestigationByParameterCondition *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchInvestigationByParameterCondition(
    struct soap *,
    const struct __ns1__searchInvestigationByParameterCondition *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__searchInvestigationByParameterCondition(
    struct soap *, const char *, int,
    const struct __ns1__searchInvestigationByParameterCondition *,
    const char *);
SOAP_FMAC3 struct __ns1__searchInvestigationByParameterCondition *SOAP_FMAC4
soap_in___ns1__searchInvestigationByParameterCondition(
    struct soap *, const char *,
    struct __ns1__searchInvestigationByParameterCondition *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__searchInvestigationByParameterCondition(
    struct soap *,
    const struct __ns1__searchInvestigationByParameterCondition *, const char *,
    const char *);

#ifndef soap_write___ns1__searchInvestigationByParameterCondition
#define soap_write___ns1__searchInvestigationByParameterCondition(soap, data)  \
  (ICat3::soap_serialize___ns1__searchInvestigationByParameterCondition(soap,  \
                                                                        data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchInvestigationByParameterCondition(         \
           soap, data, "-ns1:searchInvestigationByParameterCondition",         \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchInvestigationByParameterCondition *SOAP_FMAC4
soap_get___ns1__searchInvestigationByParameterCondition(
    struct soap *, struct __ns1__searchInvestigationByParameterCondition *,
    const char *, const char *);

#ifndef soap_read___ns1__searchInvestigationByParameterCondition
#define soap_read___ns1__searchInvestigationByParameterCondition(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchInvestigationByParameterCondition(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchInvestigationByParameterCondition *SOAP_FMAC2
soap_instantiate___ns1__searchInvestigationByParameterCondition(
    struct soap *, int, const char *, const char *, size_t *);

inline struct __ns1__searchInvestigationByParameterCondition *
soap_new___ns1__searchInvestigationByParameterCondition(struct soap *soap,
                                                        int n = -1) {
  return soap_instantiate___ns1__searchInvestigationByParameterCondition(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchInvestigationByParameterCondition *
soap_new_req___ns1__searchInvestigationByParameterCondition(struct soap *soap) {
  struct __ns1__searchInvestigationByParameterCondition *_p =
      soap_instantiate___ns1__searchInvestigationByParameterCondition(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByParameterCondition(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchInvestigationByParameterCondition *
soap_new_set___ns1__searchInvestigationByParameterCondition(
    struct soap *soap, ns1__searchInvestigationByParameterCondition *
                           ns1__searchInvestigationByParameterCondition_) {
  struct __ns1__searchInvestigationByParameterCondition *_p =
      soap_instantiate___ns1__searchInvestigationByParameterCondition(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchInvestigationByParameterCondition(soap, _p);
    _p->ns1__searchInvestigationByParameterCondition_ =
        ns1__searchInvestigationByParameterCondition_;
  }
  return _p;
}

inline void soap_delete___ns1__searchInvestigationByParameterCondition(
    struct soap *soap,
    struct __ns1__searchInvestigationByParameterCondition *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchInvestigationByParameterCondition(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getFacilityUserByFederalId
#define SOAP_TYPE_ICat3___ns1__getFacilityUserByFederalId (909)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getFacilityUserByFederalId(
    struct soap *, struct __ns1__getFacilityUserByFederalId *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getFacilityUserByFederalId(
    struct soap *, const struct __ns1__getFacilityUserByFederalId *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getFacilityUserByFederalId(
    struct soap *, const char *, int,
    const struct __ns1__getFacilityUserByFederalId *, const char *);
SOAP_FMAC3 struct __ns1__getFacilityUserByFederalId *SOAP_FMAC4
soap_in___ns1__getFacilityUserByFederalId(
    struct soap *, const char *, struct __ns1__getFacilityUserByFederalId *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getFacilityUserByFederalId(
    struct soap *, const struct __ns1__getFacilityUserByFederalId *,
    const char *, const char *);

#ifndef soap_write___ns1__getFacilityUserByFederalId
#define soap_write___ns1__getFacilityUserByFederalId(soap, data)               \
  (ICat3::soap_serialize___ns1__getFacilityUserByFederalId(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getFacilityUserByFederalId(                      \
           soap, data, "-ns1:getFacilityUserByFederalId", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getFacilityUserByFederalId *SOAP_FMAC4
soap_get___ns1__getFacilityUserByFederalId(
    struct soap *, struct __ns1__getFacilityUserByFederalId *, const char *,
    const char *);

#ifndef soap_read___ns1__getFacilityUserByFederalId
#define soap_read___ns1__getFacilityUserByFederalId(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getFacilityUserByFederalId(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getFacilityUserByFederalId *SOAP_FMAC2
soap_instantiate___ns1__getFacilityUserByFederalId(struct soap *, int,
                                                   const char *, const char *,
                                                   size_t *);

inline struct __ns1__getFacilityUserByFederalId *
soap_new___ns1__getFacilityUserByFederalId(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getFacilityUserByFederalId(soap, n, NULL, NULL,
                                                            NULL);
}

inline struct __ns1__getFacilityUserByFederalId *
soap_new_req___ns1__getFacilityUserByFederalId(struct soap *soap) {
  struct __ns1__getFacilityUserByFederalId *_p =
      soap_instantiate___ns1__getFacilityUserByFederalId(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__getFacilityUserByFederalId(soap, _p);
  }
  return _p;
}

inline struct __ns1__getFacilityUserByFederalId *
soap_new_set___ns1__getFacilityUserByFederalId(
    struct soap *soap,
    ns1__getFacilityUserByFederalId *ns1__getFacilityUserByFederalId_) {
  struct __ns1__getFacilityUserByFederalId *_p =
      soap_instantiate___ns1__getFacilityUserByFederalId(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__getFacilityUserByFederalId(soap, _p);
    _p->ns1__getFacilityUserByFederalId_ = ns1__getFacilityUserByFederalId_;
  }
  return _p;
}

inline void soap_delete___ns1__getFacilityUserByFederalId(
    struct soap *soap, struct __ns1__getFacilityUserByFederalId *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getFacilityUserByFederalId(struct soap *, int, int, void *,
                                            size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getFacilityUserByFacilityUserId
#define SOAP_TYPE_ICat3___ns1__getFacilityUserByFacilityUserId (905)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getFacilityUserByFacilityUserId(
    struct soap *, struct __ns1__getFacilityUserByFacilityUserId *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__getFacilityUserByFacilityUserId(
    struct soap *, const struct __ns1__getFacilityUserByFacilityUserId *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getFacilityUserByFacilityUserId(
    struct soap *, const char *, int,
    const struct __ns1__getFacilityUserByFacilityUserId *, const char *);
SOAP_FMAC3 struct __ns1__getFacilityUserByFacilityUserId *SOAP_FMAC4
soap_in___ns1__getFacilityUserByFacilityUserId(
    struct soap *, const char *,
    struct __ns1__getFacilityUserByFacilityUserId *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getFacilityUserByFacilityUserId(
    struct soap *, const struct __ns1__getFacilityUserByFacilityUserId *,
    const char *, const char *);

#ifndef soap_write___ns1__getFacilityUserByFacilityUserId
#define soap_write___ns1__getFacilityUserByFacilityUserId(soap, data)          \
  (ICat3::soap_serialize___ns1__getFacilityUserByFacilityUserId(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getFacilityUserByFacilityUserId(                 \
           soap, data, "-ns1:getFacilityUserByFacilityUserId", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getFacilityUserByFacilityUserId *SOAP_FMAC4
soap_get___ns1__getFacilityUserByFacilityUserId(
    struct soap *, struct __ns1__getFacilityUserByFacilityUserId *,
    const char *, const char *);

#ifndef soap_read___ns1__getFacilityUserByFacilityUserId
#define soap_read___ns1__getFacilityUserByFacilityUserId(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getFacilityUserByFacilityUserId(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getFacilityUserByFacilityUserId *SOAP_FMAC2
soap_instantiate___ns1__getFacilityUserByFacilityUserId(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline struct __ns1__getFacilityUserByFacilityUserId *
soap_new___ns1__getFacilityUserByFacilityUserId(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getFacilityUserByFacilityUserId(soap, n, NULL,
                                                                 NULL, NULL);
}

inline struct __ns1__getFacilityUserByFacilityUserId *
soap_new_req___ns1__getFacilityUserByFacilityUserId(struct soap *soap) {
  struct __ns1__getFacilityUserByFacilityUserId *_p =
      soap_instantiate___ns1__getFacilityUserByFacilityUserId(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__getFacilityUserByFacilityUserId(soap, _p);
  }
  return _p;
}

inline struct __ns1__getFacilityUserByFacilityUserId *
soap_new_set___ns1__getFacilityUserByFacilityUserId(
    struct soap *soap, ns1__getFacilityUserByFacilityUserId *
                           ns1__getFacilityUserByFacilityUserId_) {
  struct __ns1__getFacilityUserByFacilityUserId *_p =
      soap_instantiate___ns1__getFacilityUserByFacilityUserId(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__getFacilityUserByFacilityUserId(soap, _p);
    _p->ns1__getFacilityUserByFacilityUserId_ =
        ns1__getFacilityUserByFacilityUserId_;
  }
  return _p;
}

inline void soap_delete___ns1__getFacilityUserByFacilityUserId(
    struct soap *soap, struct __ns1__getFacilityUserByFacilityUserId *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getFacilityUserByFacilityUserId(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getICATAPIVersion
#define SOAP_TYPE_ICat3___ns1__getICATAPIVersion (901)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getICATAPIVersion(struct soap *,
                                      struct __ns1__getICATAPIVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getICATAPIVersion(
    struct soap *, const struct __ns1__getICATAPIVersion *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getICATAPIVersion(struct soap *, const char *, int,
                                  const struct __ns1__getICATAPIVersion *,
                                  const char *);
SOAP_FMAC3 struct __ns1__getICATAPIVersion *SOAP_FMAC4
soap_in___ns1__getICATAPIVersion(struct soap *, const char *,
                                 struct __ns1__getICATAPIVersion *,
                                 const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getICATAPIVersion(struct soap *,
                                  const struct __ns1__getICATAPIVersion *,
                                  const char *, const char *);

#ifndef soap_write___ns1__getICATAPIVersion
#define soap_write___ns1__getICATAPIVersion(soap, data)                        \
  (ICat3::soap_serialize___ns1__getICATAPIVersion(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put___ns1__getICATAPIVersion(          \
                                soap, data, "-ns1:getICATAPIVersion", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getICATAPIVersion *SOAP_FMAC4
soap_get___ns1__getICATAPIVersion(struct soap *,
                                  struct __ns1__getICATAPIVersion *,
                                  const char *, const char *);

#ifndef soap_read___ns1__getICATAPIVersion
#define soap_read___ns1__getICATAPIVersion(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getICATAPIVersion(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getICATAPIVersion *SOAP_FMAC2
soap_instantiate___ns1__getICATAPIVersion(struct soap *, int, const char *,
                                          const char *, size_t *);

inline struct __ns1__getICATAPIVersion *
soap_new___ns1__getICATAPIVersion(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getICATAPIVersion(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getICATAPIVersion *
soap_new_req___ns1__getICATAPIVersion(struct soap *soap) {
  struct __ns1__getICATAPIVersion *_p =
      soap_instantiate___ns1__getICATAPIVersion(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getICATAPIVersion(soap, _p);
  }
  return _p;
}

inline struct __ns1__getICATAPIVersion *soap_new_set___ns1__getICATAPIVersion(
    struct soap *soap, ns1__getICATAPIVersion *ns1__getICATAPIVersion_) {
  struct __ns1__getICATAPIVersion *_p =
      soap_instantiate___ns1__getICATAPIVersion(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getICATAPIVersion(soap, _p);
    _p->ns1__getICATAPIVersion_ = ns1__getICATAPIVersion_;
  }
  return _p;
}

inline void
soap_delete___ns1__getICATAPIVersion(struct soap *soap,
                                     struct __ns1__getICATAPIVersion *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getICATAPIVersion(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__checkDatasetDownloadAccess
#define SOAP_TYPE_ICat3___ns1__checkDatasetDownloadAccess (897)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__checkDatasetDownloadAccess(
    struct soap *, struct __ns1__checkDatasetDownloadAccess *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__checkDatasetDownloadAccess(
    struct soap *, const struct __ns1__checkDatasetDownloadAccess *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__checkDatasetDownloadAccess(
    struct soap *, const char *, int,
    const struct __ns1__checkDatasetDownloadAccess *, const char *);
SOAP_FMAC3 struct __ns1__checkDatasetDownloadAccess *SOAP_FMAC4
soap_in___ns1__checkDatasetDownloadAccess(
    struct soap *, const char *, struct __ns1__checkDatasetDownloadAccess *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__checkDatasetDownloadAccess(
    struct soap *, const struct __ns1__checkDatasetDownloadAccess *,
    const char *, const char *);

#ifndef soap_write___ns1__checkDatasetDownloadAccess
#define soap_write___ns1__checkDatasetDownloadAccess(soap, data)               \
  (ICat3::soap_serialize___ns1__checkDatasetDownloadAccess(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__checkDatasetDownloadAccess(                      \
           soap, data, "-ns1:checkDatasetDownloadAccess", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__checkDatasetDownloadAccess *SOAP_FMAC4
soap_get___ns1__checkDatasetDownloadAccess(
    struct soap *, struct __ns1__checkDatasetDownloadAccess *, const char *,
    const char *);

#ifndef soap_read___ns1__checkDatasetDownloadAccess
#define soap_read___ns1__checkDatasetDownloadAccess(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__checkDatasetDownloadAccess(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__checkDatasetDownloadAccess *SOAP_FMAC2
soap_instantiate___ns1__checkDatasetDownloadAccess(struct soap *, int,
                                                   const char *, const char *,
                                                   size_t *);

inline struct __ns1__checkDatasetDownloadAccess *
soap_new___ns1__checkDatasetDownloadAccess(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__checkDatasetDownloadAccess(soap, n, NULL, NULL,
                                                            NULL);
}

inline struct __ns1__checkDatasetDownloadAccess *
soap_new_req___ns1__checkDatasetDownloadAccess(struct soap *soap) {
  struct __ns1__checkDatasetDownloadAccess *_p =
      soap_instantiate___ns1__checkDatasetDownloadAccess(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__checkDatasetDownloadAccess(soap, _p);
  }
  return _p;
}

inline struct __ns1__checkDatasetDownloadAccess *
soap_new_set___ns1__checkDatasetDownloadAccess(
    struct soap *soap,
    ns1__checkDatasetDownloadAccess *ns1__checkDatasetDownloadAccess_) {
  struct __ns1__checkDatasetDownloadAccess *_p =
      soap_instantiate___ns1__checkDatasetDownloadAccess(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__checkDatasetDownloadAccess(soap, _p);
    _p->ns1__checkDatasetDownloadAccess_ = ns1__checkDatasetDownloadAccess_;
  }
  return _p;
}

inline void soap_delete___ns1__checkDatasetDownloadAccess(
    struct soap *soap, struct __ns1__checkDatasetDownloadAccess *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__checkDatasetDownloadAccess(struct soap *, int, int, void *,
                                            size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__checkDatafileDownloadAccess
#define SOAP_TYPE_ICat3___ns1__checkDatafileDownloadAccess (893)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__checkDatafileDownloadAccess(
    struct soap *, struct __ns1__checkDatafileDownloadAccess *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__checkDatafileDownloadAccess(
    struct soap *, const struct __ns1__checkDatafileDownloadAccess *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__checkDatafileDownloadAccess(
    struct soap *, const char *, int,
    const struct __ns1__checkDatafileDownloadAccess *, const char *);
SOAP_FMAC3 struct __ns1__checkDatafileDownloadAccess *SOAP_FMAC4
soap_in___ns1__checkDatafileDownloadAccess(
    struct soap *, const char *, struct __ns1__checkDatafileDownloadAccess *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__checkDatafileDownloadAccess(
    struct soap *, const struct __ns1__checkDatafileDownloadAccess *,
    const char *, const char *);

#ifndef soap_write___ns1__checkDatafileDownloadAccess
#define soap_write___ns1__checkDatafileDownloadAccess(soap, data)              \
  (ICat3::soap_serialize___ns1__checkDatafileDownloadAccess(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__checkDatafileDownloadAccess(                     \
           soap, data, "-ns1:checkDatafileDownloadAccess", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__checkDatafileDownloadAccess *SOAP_FMAC4
soap_get___ns1__checkDatafileDownloadAccess(
    struct soap *, struct __ns1__checkDatafileDownloadAccess *, const char *,
    const char *);

#ifndef soap_read___ns1__checkDatafileDownloadAccess
#define soap_read___ns1__checkDatafileDownloadAccess(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__checkDatafileDownloadAccess(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__checkDatafileDownloadAccess *SOAP_FMAC2
soap_instantiate___ns1__checkDatafileDownloadAccess(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline struct __ns1__checkDatafileDownloadAccess *
soap_new___ns1__checkDatafileDownloadAccess(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__checkDatafileDownloadAccess(soap, n, NULL,
                                                             NULL, NULL);
}

inline struct __ns1__checkDatafileDownloadAccess *
soap_new_req___ns1__checkDatafileDownloadAccess(struct soap *soap) {
  struct __ns1__checkDatafileDownloadAccess *_p =
      soap_instantiate___ns1__checkDatafileDownloadAccess(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__checkDatafileDownloadAccess(soap, _p);
  }
  return _p;
}

inline struct __ns1__checkDatafileDownloadAccess *
soap_new_set___ns1__checkDatafileDownloadAccess(
    struct soap *soap,
    ns1__checkDatafileDownloadAccess *ns1__checkDatafileDownloadAccess_) {
  struct __ns1__checkDatafileDownloadAccess *_p =
      soap_instantiate___ns1__checkDatafileDownloadAccess(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__checkDatafileDownloadAccess(soap, _p);
    _p->ns1__checkDatafileDownloadAccess_ = ns1__checkDatafileDownloadAccess_;
  }
  return _p;
}

inline void soap_delete___ns1__checkDatafileDownloadAccess(
    struct soap *soap, struct __ns1__checkDatafileDownloadAccess *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__checkDatafileDownloadAccess(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__downloadDatafiles
#define SOAP_TYPE_ICat3___ns1__downloadDatafiles (889)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__downloadDatafiles(struct soap *,
                                      struct __ns1__downloadDatafiles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__downloadDatafiles(
    struct soap *, const struct __ns1__downloadDatafiles *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__downloadDatafiles(struct soap *, const char *, int,
                                  const struct __ns1__downloadDatafiles *,
                                  const char *);
SOAP_FMAC3 struct __ns1__downloadDatafiles *SOAP_FMAC4
soap_in___ns1__downloadDatafiles(struct soap *, const char *,
                                 struct __ns1__downloadDatafiles *,
                                 const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__downloadDatafiles(struct soap *,
                                  const struct __ns1__downloadDatafiles *,
                                  const char *, const char *);

#ifndef soap_write___ns1__downloadDatafiles
#define soap_write___ns1__downloadDatafiles(soap, data)                        \
  (ICat3::soap_serialize___ns1__downloadDatafiles(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put___ns1__downloadDatafiles(          \
                                soap, data, "-ns1:downloadDatafiles", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__downloadDatafiles *SOAP_FMAC4
soap_get___ns1__downloadDatafiles(struct soap *,
                                  struct __ns1__downloadDatafiles *,
                                  const char *, const char *);

#ifndef soap_read___ns1__downloadDatafiles
#define soap_read___ns1__downloadDatafiles(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__downloadDatafiles(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__downloadDatafiles *SOAP_FMAC2
soap_instantiate___ns1__downloadDatafiles(struct soap *, int, const char *,
                                          const char *, size_t *);

inline struct __ns1__downloadDatafiles *
soap_new___ns1__downloadDatafiles(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__downloadDatafiles(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__downloadDatafiles *
soap_new_req___ns1__downloadDatafiles(struct soap *soap) {
  struct __ns1__downloadDatafiles *_p =
      soap_instantiate___ns1__downloadDatafiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__downloadDatafiles(soap, _p);
  }
  return _p;
}

inline struct __ns1__downloadDatafiles *soap_new_set___ns1__downloadDatafiles(
    struct soap *soap, ns1__downloadDatafiles *ns1__downloadDatafiles_) {
  struct __ns1__downloadDatafiles *_p =
      soap_instantiate___ns1__downloadDatafiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__downloadDatafiles(soap, _p);
    _p->ns1__downloadDatafiles_ = ns1__downloadDatafiles_;
  }
  return _p;
}

inline void
soap_delete___ns1__downloadDatafiles(struct soap *soap,
                                     struct __ns1__downloadDatafiles *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__downloadDatafiles(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__downloadDataset
#define SOAP_TYPE_ICat3___ns1__downloadDataset (885)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__downloadDataset(struct soap *,
                                    struct __ns1__downloadDataset *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__downloadDataset(struct soap *,
                                      const struct __ns1__downloadDataset *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__downloadDataset(struct soap *, const char *, int,
                                const struct __ns1__downloadDataset *,
                                const char *);
SOAP_FMAC3 struct __ns1__downloadDataset *SOAP_FMAC4
soap_in___ns1__downloadDataset(struct soap *, const char *,
                               struct __ns1__downloadDataset *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__downloadDataset(struct soap *,
                                const struct __ns1__downloadDataset *,
                                const char *, const char *);

#ifndef soap_write___ns1__downloadDataset
#define soap_write___ns1__downloadDataset(soap, data)                          \
  (ICat3::soap_serialize___ns1__downloadDataset(soap, data),                   \
   soap_begin_send(soap) || ICat3::soap_put___ns1__downloadDataset(            \
                                soap, data, "-ns1:downloadDataset", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__downloadDataset *SOAP_FMAC4
soap_get___ns1__downloadDataset(struct soap *, struct __ns1__downloadDataset *,
                                const char *, const char *);

#ifndef soap_read___ns1__downloadDataset
#define soap_read___ns1__downloadDataset(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__downloadDataset(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__downloadDataset *SOAP_FMAC2
soap_instantiate___ns1__downloadDataset(struct soap *, int, const char *,
                                        const char *, size_t *);

inline struct __ns1__downloadDataset *
soap_new___ns1__downloadDataset(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__downloadDataset(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__downloadDataset *
soap_new_req___ns1__downloadDataset(struct soap *soap) {
  struct __ns1__downloadDataset *_p =
      soap_instantiate___ns1__downloadDataset(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__downloadDataset(soap, _p);
  }
  return _p;
}

inline struct __ns1__downloadDataset *soap_new_set___ns1__downloadDataset(
    struct soap *soap, ns1__downloadDataset *ns1__downloadDataset_) {
  struct __ns1__downloadDataset *_p =
      soap_instantiate___ns1__downloadDataset(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__downloadDataset(soap, _p);
    _p->ns1__downloadDataset_ = ns1__downloadDataset_;
  }
  return _p;
}

inline void
soap_delete___ns1__downloadDataset(struct soap *soap,
                                   struct __ns1__downloadDataset *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__downloadDataset(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__downloadDatafile
#define SOAP_TYPE_ICat3___ns1__downloadDatafile (881)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__downloadDatafile(struct soap *,
                                     struct __ns1__downloadDatafile *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__downloadDatafile(struct soap *,
                                       const struct __ns1__downloadDatafile *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__downloadDatafile(struct soap *, const char *, int,
                                 const struct __ns1__downloadDatafile *,
                                 const char *);
SOAP_FMAC3 struct __ns1__downloadDatafile *SOAP_FMAC4
soap_in___ns1__downloadDatafile(struct soap *, const char *,
                                struct __ns1__downloadDatafile *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__downloadDatafile(struct soap *,
                                 const struct __ns1__downloadDatafile *,
                                 const char *, const char *);

#ifndef soap_write___ns1__downloadDatafile
#define soap_write___ns1__downloadDatafile(soap, data)                         \
  (ICat3::soap_serialize___ns1__downloadDatafile(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put___ns1__downloadDatafile(           \
                                soap, data, "-ns1:downloadDatafile", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__downloadDatafile *SOAP_FMAC4
soap_get___ns1__downloadDatafile(struct soap *,
                                 struct __ns1__downloadDatafile *, const char *,
                                 const char *);

#ifndef soap_read___ns1__downloadDatafile
#define soap_read___ns1__downloadDatafile(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__downloadDatafile(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__downloadDatafile *SOAP_FMAC2
soap_instantiate___ns1__downloadDatafile(struct soap *, int, const char *,
                                         const char *, size_t *);

inline struct __ns1__downloadDatafile *
soap_new___ns1__downloadDatafile(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__downloadDatafile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__downloadDatafile *
soap_new_req___ns1__downloadDatafile(struct soap *soap) {
  struct __ns1__downloadDatafile *_p =
      soap_instantiate___ns1__downloadDatafile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__downloadDatafile(soap, _p);
  }
  return _p;
}

inline struct __ns1__downloadDatafile *soap_new_set___ns1__downloadDatafile(
    struct soap *soap, ns1__downloadDatafile *ns1__downloadDatafile_) {
  struct __ns1__downloadDatafile *_p =
      soap_instantiate___ns1__downloadDatafile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__downloadDatafile(soap, _p);
    _p->ns1__downloadDatafile_ = ns1__downloadDatafile_;
  }
  return _p;
}

inline void
soap_delete___ns1__downloadDatafile(struct soap *soap,
                                    struct __ns1__downloadDatafile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__downloadDatafile(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__ingestMetadata
#define SOAP_TYPE_ICat3___ns1__ingestMetadata (877)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__ingestMetadata(struct soap *,
                                   struct __ns1__ingestMetadata *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__ingestMetadata(struct soap *,
                                     const struct __ns1__ingestMetadata *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__ingestMetadata(struct soap *, const char *, int,
                               const struct __ns1__ingestMetadata *,
                               const char *);
SOAP_FMAC3 struct __ns1__ingestMetadata *SOAP_FMAC4
soap_in___ns1__ingestMetadata(struct soap *, const char *,
                              struct __ns1__ingestMetadata *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__ingestMetadata(struct soap *,
                               const struct __ns1__ingestMetadata *,
                               const char *, const char *);

#ifndef soap_write___ns1__ingestMetadata
#define soap_write___ns1__ingestMetadata(soap, data)                           \
  (ICat3::soap_serialize___ns1__ingestMetadata(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__ingestMetadata(             \
                                soap, data, "-ns1:ingestMetadata", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__ingestMetadata *SOAP_FMAC4
soap_get___ns1__ingestMetadata(struct soap *, struct __ns1__ingestMetadata *,
                               const char *, const char *);

#ifndef soap_read___ns1__ingestMetadata
#define soap_read___ns1__ingestMetadata(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__ingestMetadata(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__ingestMetadata *SOAP_FMAC2
soap_instantiate___ns1__ingestMetadata(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__ingestMetadata *
soap_new___ns1__ingestMetadata(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__ingestMetadata(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__ingestMetadata *
soap_new_req___ns1__ingestMetadata(struct soap *soap) {
  struct __ns1__ingestMetadata *_p =
      soap_instantiate___ns1__ingestMetadata(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__ingestMetadata(soap, _p);
  }
  return _p;
}

inline struct __ns1__ingestMetadata *
soap_new_set___ns1__ingestMetadata(struct soap *soap,
                                   ns1__ingestMetadata *ns1__ingestMetadata_) {
  struct __ns1__ingestMetadata *_p =
      soap_instantiate___ns1__ingestMetadata(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__ingestMetadata(soap, _p);
    _p->ns1__ingestMetadata_ = ns1__ingestMetadata_;
  }
  return _p;
}

inline void soap_delete___ns1__ingestMetadata(struct soap *soap,
                                              struct __ns1__ingestMetadata *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__ingestMetadata(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__updateAuthorisation
#define SOAP_TYPE_ICat3___ns1__updateAuthorisation (873)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__updateAuthorisation(struct soap *,
                                        struct __ns1__updateAuthorisation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__updateAuthorisation(
    struct soap *, const struct __ns1__updateAuthorisation *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__updateAuthorisation(struct soap *, const char *, int,
                                    const struct __ns1__updateAuthorisation *,
                                    const char *);
SOAP_FMAC3 struct __ns1__updateAuthorisation *SOAP_FMAC4
soap_in___ns1__updateAuthorisation(struct soap *, const char *,
                                   struct __ns1__updateAuthorisation *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__updateAuthorisation(struct soap *,
                                    const struct __ns1__updateAuthorisation *,
                                    const char *, const char *);

#ifndef soap_write___ns1__updateAuthorisation
#define soap_write___ns1__updateAuthorisation(soap, data)                      \
  (ICat3::soap_serialize___ns1__updateAuthorisation(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__updateAuthorisation(                             \
           soap, data, "-ns1:updateAuthorisation", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__updateAuthorisation *SOAP_FMAC4
soap_get___ns1__updateAuthorisation(struct soap *,
                                    struct __ns1__updateAuthorisation *,
                                    const char *, const char *);

#ifndef soap_read___ns1__updateAuthorisation
#define soap_read___ns1__updateAuthorisation(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__updateAuthorisation(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__updateAuthorisation *SOAP_FMAC2
soap_instantiate___ns1__updateAuthorisation(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__updateAuthorisation *
soap_new___ns1__updateAuthorisation(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__updateAuthorisation(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__updateAuthorisation *
soap_new_req___ns1__updateAuthorisation(struct soap *soap) {
  struct __ns1__updateAuthorisation *_p =
      soap_instantiate___ns1__updateAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__updateAuthorisation(soap, _p);
  }
  return _p;
}

inline struct __ns1__updateAuthorisation *
soap_new_set___ns1__updateAuthorisation(
    struct soap *soap, ns1__updateAuthorisation *ns1__updateAuthorisation_) {
  struct __ns1__updateAuthorisation *_p =
      soap_instantiate___ns1__updateAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__updateAuthorisation(soap, _p);
    _p->ns1__updateAuthorisation_ = ns1__updateAuthorisation_;
  }
  return _p;
}

inline void
soap_delete___ns1__updateAuthorisation(struct soap *soap,
                                       struct __ns1__updateAuthorisation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__updateAuthorisation(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__updateAuthorisationResponse
#define SOAP_TYPE_ICat3___ns1__updateAuthorisationResponse (872)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__updateAuthorisationResponse(
    struct soap *, struct __ns1__updateAuthorisationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__updateAuthorisationResponse(
    struct soap *, const struct __ns1__updateAuthorisationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__updateAuthorisationResponse(
    struct soap *, const char *, int,
    const struct __ns1__updateAuthorisationResponse *, const char *);
SOAP_FMAC3 struct __ns1__updateAuthorisationResponse *SOAP_FMAC4
soap_in___ns1__updateAuthorisationResponse(
    struct soap *, const char *, struct __ns1__updateAuthorisationResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__updateAuthorisationResponse(
    struct soap *, const struct __ns1__updateAuthorisationResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__updateAuthorisationResponse
#define soap_write___ns1__updateAuthorisationResponse(soap, data)              \
  (ICat3::soap_serialize___ns1__updateAuthorisationResponse(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__updateAuthorisationResponse(                     \
           soap, data, "-ns1:updateAuthorisationResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__updateAuthorisationResponse *SOAP_FMAC4
soap_get___ns1__updateAuthorisationResponse(
    struct soap *, struct __ns1__updateAuthorisationResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__updateAuthorisationResponse
#define soap_read___ns1__updateAuthorisationResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__updateAuthorisationResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__updateAuthorisationResponse *SOAP_FMAC2
soap_instantiate___ns1__updateAuthorisationResponse(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline struct __ns1__updateAuthorisationResponse *
soap_new___ns1__updateAuthorisationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__updateAuthorisationResponse(soap, n, NULL,
                                                             NULL, NULL);
}

inline struct __ns1__updateAuthorisationResponse *
soap_new_req___ns1__updateAuthorisationResponse(struct soap *soap) {
  struct __ns1__updateAuthorisationResponse *_p =
      soap_instantiate___ns1__updateAuthorisationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__updateAuthorisationResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__updateAuthorisationResponse *
soap_new_set___ns1__updateAuthorisationResponse(
    struct soap *soap,
    ns1__updateAuthorisationResponse *ns1__updateAuthorisationResponse_) {
  struct __ns1__updateAuthorisationResponse *_p =
      soap_instantiate___ns1__updateAuthorisationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__updateAuthorisationResponse(soap, _p);
    _p->ns1__updateAuthorisationResponse_ = ns1__updateAuthorisationResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__updateAuthorisationResponse(
    struct soap *soap, struct __ns1__updateAuthorisationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__updateAuthorisationResponse(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeAuthorisation
#define SOAP_TYPE_ICat3___ns1__removeAuthorisation (868)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__removeAuthorisation(struct soap *,
                                        struct __ns1__removeAuthorisation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeAuthorisation(
    struct soap *, const struct __ns1__removeAuthorisation *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__removeAuthorisation(struct soap *, const char *, int,
                                    const struct __ns1__removeAuthorisation *,
                                    const char *);
SOAP_FMAC3 struct __ns1__removeAuthorisation *SOAP_FMAC4
soap_in___ns1__removeAuthorisation(struct soap *, const char *,
                                   struct __ns1__removeAuthorisation *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__removeAuthorisation(struct soap *,
                                    const struct __ns1__removeAuthorisation *,
                                    const char *, const char *);

#ifndef soap_write___ns1__removeAuthorisation
#define soap_write___ns1__removeAuthorisation(soap, data)                      \
  (ICat3::soap_serialize___ns1__removeAuthorisation(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeAuthorisation(                             \
           soap, data, "-ns1:removeAuthorisation", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeAuthorisation *SOAP_FMAC4
soap_get___ns1__removeAuthorisation(struct soap *,
                                    struct __ns1__removeAuthorisation *,
                                    const char *, const char *);

#ifndef soap_read___ns1__removeAuthorisation
#define soap_read___ns1__removeAuthorisation(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeAuthorisation(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeAuthorisation *SOAP_FMAC2
soap_instantiate___ns1__removeAuthorisation(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__removeAuthorisation *
soap_new___ns1__removeAuthorisation(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeAuthorisation(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__removeAuthorisation *
soap_new_req___ns1__removeAuthorisation(struct soap *soap) {
  struct __ns1__removeAuthorisation *_p =
      soap_instantiate___ns1__removeAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeAuthorisation(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeAuthorisation *
soap_new_set___ns1__removeAuthorisation(
    struct soap *soap, ns1__removeAuthorisation *ns1__removeAuthorisation_) {
  struct __ns1__removeAuthorisation *_p =
      soap_instantiate___ns1__removeAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeAuthorisation(soap, _p);
    _p->ns1__removeAuthorisation_ = ns1__removeAuthorisation_;
  }
  return _p;
}

inline void
soap_delete___ns1__removeAuthorisation(struct soap *soap,
                                       struct __ns1__removeAuthorisation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeAuthorisation(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeAuthorisationResponse
#define SOAP_TYPE_ICat3___ns1__removeAuthorisationResponse (867)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeAuthorisationResponse(
    struct soap *, struct __ns1__removeAuthorisationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeAuthorisationResponse(
    struct soap *, const struct __ns1__removeAuthorisationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeAuthorisationResponse(
    struct soap *, const char *, int,
    const struct __ns1__removeAuthorisationResponse *, const char *);
SOAP_FMAC3 struct __ns1__removeAuthorisationResponse *SOAP_FMAC4
soap_in___ns1__removeAuthorisationResponse(
    struct soap *, const char *, struct __ns1__removeAuthorisationResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeAuthorisationResponse(
    struct soap *, const struct __ns1__removeAuthorisationResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__removeAuthorisationResponse
#define soap_write___ns1__removeAuthorisationResponse(soap, data)              \
  (ICat3::soap_serialize___ns1__removeAuthorisationResponse(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeAuthorisationResponse(                     \
           soap, data, "-ns1:removeAuthorisationResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeAuthorisationResponse *SOAP_FMAC4
soap_get___ns1__removeAuthorisationResponse(
    struct soap *, struct __ns1__removeAuthorisationResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__removeAuthorisationResponse
#define soap_read___ns1__removeAuthorisationResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeAuthorisationResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeAuthorisationResponse *SOAP_FMAC2
soap_instantiate___ns1__removeAuthorisationResponse(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline struct __ns1__removeAuthorisationResponse *
soap_new___ns1__removeAuthorisationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeAuthorisationResponse(soap, n, NULL,
                                                             NULL, NULL);
}

inline struct __ns1__removeAuthorisationResponse *
soap_new_req___ns1__removeAuthorisationResponse(struct soap *soap) {
  struct __ns1__removeAuthorisationResponse *_p =
      soap_instantiate___ns1__removeAuthorisationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__removeAuthorisationResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeAuthorisationResponse *
soap_new_set___ns1__removeAuthorisationResponse(
    struct soap *soap,
    ns1__removeAuthorisationResponse *ns1__removeAuthorisationResponse_) {
  struct __ns1__removeAuthorisationResponse *_p =
      soap_instantiate___ns1__removeAuthorisationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__removeAuthorisationResponse(soap, _p);
    _p->ns1__removeAuthorisationResponse_ = ns1__removeAuthorisationResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__removeAuthorisationResponse(
    struct soap *soap, struct __ns1__removeAuthorisationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeAuthorisationResponse(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteAuthorisation
#define SOAP_TYPE_ICat3___ns1__deleteAuthorisation (863)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__deleteAuthorisation(struct soap *,
                                        struct __ns1__deleteAuthorisation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteAuthorisation(
    struct soap *, const struct __ns1__deleteAuthorisation *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__deleteAuthorisation(struct soap *, const char *, int,
                                    const struct __ns1__deleteAuthorisation *,
                                    const char *);
SOAP_FMAC3 struct __ns1__deleteAuthorisation *SOAP_FMAC4
soap_in___ns1__deleteAuthorisation(struct soap *, const char *,
                                   struct __ns1__deleteAuthorisation *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__deleteAuthorisation(struct soap *,
                                    const struct __ns1__deleteAuthorisation *,
                                    const char *, const char *);

#ifndef soap_write___ns1__deleteAuthorisation
#define soap_write___ns1__deleteAuthorisation(soap, data)                      \
  (ICat3::soap_serialize___ns1__deleteAuthorisation(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteAuthorisation(                             \
           soap, data, "-ns1:deleteAuthorisation", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteAuthorisation *SOAP_FMAC4
soap_get___ns1__deleteAuthorisation(struct soap *,
                                    struct __ns1__deleteAuthorisation *,
                                    const char *, const char *);

#ifndef soap_read___ns1__deleteAuthorisation
#define soap_read___ns1__deleteAuthorisation(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteAuthorisation(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteAuthorisation *SOAP_FMAC2
soap_instantiate___ns1__deleteAuthorisation(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__deleteAuthorisation *
soap_new___ns1__deleteAuthorisation(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteAuthorisation(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__deleteAuthorisation *
soap_new_req___ns1__deleteAuthorisation(struct soap *soap) {
  struct __ns1__deleteAuthorisation *_p =
      soap_instantiate___ns1__deleteAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteAuthorisation(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteAuthorisation *
soap_new_set___ns1__deleteAuthorisation(
    struct soap *soap, ns1__deleteAuthorisation *ns1__deleteAuthorisation_) {
  struct __ns1__deleteAuthorisation *_p =
      soap_instantiate___ns1__deleteAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteAuthorisation(soap, _p);
    _p->ns1__deleteAuthorisation_ = ns1__deleteAuthorisation_;
  }
  return _p;
}

inline void
soap_delete___ns1__deleteAuthorisation(struct soap *soap,
                                       struct __ns1__deleteAuthorisation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteAuthorisation(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteAuthorisationResponse
#define SOAP_TYPE_ICat3___ns1__deleteAuthorisationResponse (862)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteAuthorisationResponse(
    struct soap *, struct __ns1__deleteAuthorisationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteAuthorisationResponse(
    struct soap *, const struct __ns1__deleteAuthorisationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteAuthorisationResponse(
    struct soap *, const char *, int,
    const struct __ns1__deleteAuthorisationResponse *, const char *);
SOAP_FMAC3 struct __ns1__deleteAuthorisationResponse *SOAP_FMAC4
soap_in___ns1__deleteAuthorisationResponse(
    struct soap *, const char *, struct __ns1__deleteAuthorisationResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteAuthorisationResponse(
    struct soap *, const struct __ns1__deleteAuthorisationResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__deleteAuthorisationResponse
#define soap_write___ns1__deleteAuthorisationResponse(soap, data)              \
  (ICat3::soap_serialize___ns1__deleteAuthorisationResponse(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteAuthorisationResponse(                     \
           soap, data, "-ns1:deleteAuthorisationResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteAuthorisationResponse *SOAP_FMAC4
soap_get___ns1__deleteAuthorisationResponse(
    struct soap *, struct __ns1__deleteAuthorisationResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__deleteAuthorisationResponse
#define soap_read___ns1__deleteAuthorisationResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteAuthorisationResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteAuthorisationResponse *SOAP_FMAC2
soap_instantiate___ns1__deleteAuthorisationResponse(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline struct __ns1__deleteAuthorisationResponse *
soap_new___ns1__deleteAuthorisationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteAuthorisationResponse(soap, n, NULL,
                                                             NULL, NULL);
}

inline struct __ns1__deleteAuthorisationResponse *
soap_new_req___ns1__deleteAuthorisationResponse(struct soap *soap) {
  struct __ns1__deleteAuthorisationResponse *_p =
      soap_instantiate___ns1__deleteAuthorisationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__deleteAuthorisationResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteAuthorisationResponse *
soap_new_set___ns1__deleteAuthorisationResponse(
    struct soap *soap,
    ns1__deleteAuthorisationResponse *ns1__deleteAuthorisationResponse_) {
  struct __ns1__deleteAuthorisationResponse *_p =
      soap_instantiate___ns1__deleteAuthorisationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__deleteAuthorisationResponse(soap, _p);
    _p->ns1__deleteAuthorisationResponse_ = ns1__deleteAuthorisationResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteAuthorisationResponse(
    struct soap *soap, struct __ns1__deleteAuthorisationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteAuthorisationResponse(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__addAuthorisation
#define SOAP_TYPE_ICat3___ns1__addAuthorisation (858)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__addAuthorisation(struct soap *,
                                     struct __ns1__addAuthorisation *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__addAuthorisation(struct soap *,
                                       const struct __ns1__addAuthorisation *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__addAuthorisation(struct soap *, const char *, int,
                                 const struct __ns1__addAuthorisation *,
                                 const char *);
SOAP_FMAC3 struct __ns1__addAuthorisation *SOAP_FMAC4
soap_in___ns1__addAuthorisation(struct soap *, const char *,
                                struct __ns1__addAuthorisation *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__addAuthorisation(struct soap *,
                                 const struct __ns1__addAuthorisation *,
                                 const char *, const char *);

#ifndef soap_write___ns1__addAuthorisation
#define soap_write___ns1__addAuthorisation(soap, data)                         \
  (ICat3::soap_serialize___ns1__addAuthorisation(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put___ns1__addAuthorisation(           \
                                soap, data, "-ns1:addAuthorisation", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__addAuthorisation *SOAP_FMAC4
soap_get___ns1__addAuthorisation(struct soap *,
                                 struct __ns1__addAuthorisation *, const char *,
                                 const char *);

#ifndef soap_read___ns1__addAuthorisation
#define soap_read___ns1__addAuthorisation(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__addAuthorisation(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__addAuthorisation *SOAP_FMAC2
soap_instantiate___ns1__addAuthorisation(struct soap *, int, const char *,
                                         const char *, size_t *);

inline struct __ns1__addAuthorisation *
soap_new___ns1__addAuthorisation(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__addAuthorisation(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__addAuthorisation *
soap_new_req___ns1__addAuthorisation(struct soap *soap) {
  struct __ns1__addAuthorisation *_p =
      soap_instantiate___ns1__addAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addAuthorisation(soap, _p);
  }
  return _p;
}

inline struct __ns1__addAuthorisation *soap_new_set___ns1__addAuthorisation(
    struct soap *soap, ns1__addAuthorisation *ns1__addAuthorisation_) {
  struct __ns1__addAuthorisation *_p =
      soap_instantiate___ns1__addAuthorisation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addAuthorisation(soap, _p);
    _p->ns1__addAuthorisation_ = ns1__addAuthorisation_;
  }
  return _p;
}

inline void
soap_delete___ns1__addAuthorisation(struct soap *soap,
                                    struct __ns1__addAuthorisation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__addAuthorisation(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getAuthorisations
#define SOAP_TYPE_ICat3___ns1__getAuthorisations (854)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getAuthorisations(struct soap *,
                                      struct __ns1__getAuthorisations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getAuthorisations(
    struct soap *, const struct __ns1__getAuthorisations *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getAuthorisations(struct soap *, const char *, int,
                                  const struct __ns1__getAuthorisations *,
                                  const char *);
SOAP_FMAC3 struct __ns1__getAuthorisations *SOAP_FMAC4
soap_in___ns1__getAuthorisations(struct soap *, const char *,
                                 struct __ns1__getAuthorisations *,
                                 const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getAuthorisations(struct soap *,
                                  const struct __ns1__getAuthorisations *,
                                  const char *, const char *);

#ifndef soap_write___ns1__getAuthorisations
#define soap_write___ns1__getAuthorisations(soap, data)                        \
  (ICat3::soap_serialize___ns1__getAuthorisations(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put___ns1__getAuthorisations(          \
                                soap, data, "-ns1:getAuthorisations", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getAuthorisations *SOAP_FMAC4
soap_get___ns1__getAuthorisations(struct soap *,
                                  struct __ns1__getAuthorisations *,
                                  const char *, const char *);

#ifndef soap_read___ns1__getAuthorisations
#define soap_read___ns1__getAuthorisations(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getAuthorisations(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getAuthorisations *SOAP_FMAC2
soap_instantiate___ns1__getAuthorisations(struct soap *, int, const char *,
                                          const char *, size_t *);

inline struct __ns1__getAuthorisations *
soap_new___ns1__getAuthorisations(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getAuthorisations(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getAuthorisations *
soap_new_req___ns1__getAuthorisations(struct soap *soap) {
  struct __ns1__getAuthorisations *_p =
      soap_instantiate___ns1__getAuthorisations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getAuthorisations(soap, _p);
  }
  return _p;
}

inline struct __ns1__getAuthorisations *soap_new_set___ns1__getAuthorisations(
    struct soap *soap, ns1__getAuthorisations *ns1__getAuthorisations_) {
  struct __ns1__getAuthorisations *_p =
      soap_instantiate___ns1__getAuthorisations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getAuthorisations(soap, _p);
    _p->ns1__getAuthorisations_ = ns1__getAuthorisations_;
  }
  return _p;
}

inline void
soap_delete___ns1__getAuthorisations(struct soap *soap,
                                     struct __ns1__getAuthorisations *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getAuthorisations(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeDataFileParameter
#define SOAP_TYPE_ICat3___ns1__removeDataFileParameter (850)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeDataFileParameter(
    struct soap *, struct __ns1__removeDataFileParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeDataFileParameter(
    struct soap *, const struct __ns1__removeDataFileParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeDataFileParameter(
    struct soap *, const char *, int,
    const struct __ns1__removeDataFileParameter *, const char *);
SOAP_FMAC3 struct __ns1__removeDataFileParameter *SOAP_FMAC4
soap_in___ns1__removeDataFileParameter(struct soap *, const char *,
                                       struct __ns1__removeDataFileParameter *,
                                       const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeDataFileParameter(
    struct soap *, const struct __ns1__removeDataFileParameter *, const char *,
    const char *);

#ifndef soap_write___ns1__removeDataFileParameter
#define soap_write___ns1__removeDataFileParameter(soap, data)                  \
  (ICat3::soap_serialize___ns1__removeDataFileParameter(soap, data),           \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeDataFileParameter(                         \
           soap, data, "-ns1:removeDataFileParameter", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeDataFileParameter *SOAP_FMAC4
soap_get___ns1__removeDataFileParameter(struct soap *,
                                        struct __ns1__removeDataFileParameter *,
                                        const char *, const char *);

#ifndef soap_read___ns1__removeDataFileParameter
#define soap_read___ns1__removeDataFileParameter(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeDataFileParameter(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeDataFileParameter *SOAP_FMAC2
soap_instantiate___ns1__removeDataFileParameter(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline struct __ns1__removeDataFileParameter *
soap_new___ns1__removeDataFileParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeDataFileParameter(soap, n, NULL, NULL,
                                                         NULL);
}

inline struct __ns1__removeDataFileParameter *
soap_new_req___ns1__removeDataFileParameter(struct soap *soap) {
  struct __ns1__removeDataFileParameter *_p =
      soap_instantiate___ns1__removeDataFileParameter(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    soap_default___ns1__removeDataFileParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeDataFileParameter *
soap_new_set___ns1__removeDataFileParameter(
    struct soap *soap,
    ns1__removeDataFileParameter *ns1__removeDataFileParameter_) {
  struct __ns1__removeDataFileParameter *_p =
      soap_instantiate___ns1__removeDataFileParameter(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    soap_default___ns1__removeDataFileParameter(soap, _p);
    _p->ns1__removeDataFileParameter_ = ns1__removeDataFileParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__removeDataFileParameter(
    struct soap *soap, struct __ns1__removeDataFileParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeDataFileParameter(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeDataFileParameterResponse
#define SOAP_TYPE_ICat3___ns1__removeDataFileParameterResponse (849)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeDataFileParameterResponse(
    struct soap *, struct __ns1__removeDataFileParameterResponse *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__removeDataFileParameterResponse(
    struct soap *, const struct __ns1__removeDataFileParameterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeDataFileParameterResponse(
    struct soap *, const char *, int,
    const struct __ns1__removeDataFileParameterResponse *, const char *);
SOAP_FMAC3 struct __ns1__removeDataFileParameterResponse *SOAP_FMAC4
soap_in___ns1__removeDataFileParameterResponse(
    struct soap *, const char *,
    struct __ns1__removeDataFileParameterResponse *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeDataFileParameterResponse(
    struct soap *, const struct __ns1__removeDataFileParameterResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__removeDataFileParameterResponse
#define soap_write___ns1__removeDataFileParameterResponse(soap, data)          \
  (ICat3::soap_serialize___ns1__removeDataFileParameterResponse(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeDataFileParameterResponse(                 \
           soap, data, "-ns1:removeDataFileParameterResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeDataFileParameterResponse *SOAP_FMAC4
soap_get___ns1__removeDataFileParameterResponse(
    struct soap *, struct __ns1__removeDataFileParameterResponse *,
    const char *, const char *);

#ifndef soap_read___ns1__removeDataFileParameterResponse
#define soap_read___ns1__removeDataFileParameterResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeDataFileParameterResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeDataFileParameterResponse *SOAP_FMAC2
soap_instantiate___ns1__removeDataFileParameterResponse(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline struct __ns1__removeDataFileParameterResponse *
soap_new___ns1__removeDataFileParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeDataFileParameterResponse(soap, n, NULL,
                                                                 NULL, NULL);
}

inline struct __ns1__removeDataFileParameterResponse *
soap_new_req___ns1__removeDataFileParameterResponse(struct soap *soap) {
  struct __ns1__removeDataFileParameterResponse *_p =
      soap_instantiate___ns1__removeDataFileParameterResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__removeDataFileParameterResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeDataFileParameterResponse *
soap_new_set___ns1__removeDataFileParameterResponse(
    struct soap *soap, ns1__removeDataFileParameterResponse *
                           ns1__removeDataFileParameterResponse_) {
  struct __ns1__removeDataFileParameterResponse *_p =
      soap_instantiate___ns1__removeDataFileParameterResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__removeDataFileParameterResponse(soap, _p);
    _p->ns1__removeDataFileParameterResponse_ =
        ns1__removeDataFileParameterResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__removeDataFileParameterResponse(
    struct soap *soap, struct __ns1__removeDataFileParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeDataFileParameterResponse(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeDataFile
#define SOAP_TYPE_ICat3___ns1__removeDataFile (845)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__removeDataFile(struct soap *,
                                   struct __ns1__removeDataFile *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__removeDataFile(struct soap *,
                                     const struct __ns1__removeDataFile *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__removeDataFile(struct soap *, const char *, int,
                               const struct __ns1__removeDataFile *,
                               const char *);
SOAP_FMAC3 struct __ns1__removeDataFile *SOAP_FMAC4
soap_in___ns1__removeDataFile(struct soap *, const char *,
                              struct __ns1__removeDataFile *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__removeDataFile(struct soap *,
                               const struct __ns1__removeDataFile *,
                               const char *, const char *);

#ifndef soap_write___ns1__removeDataFile
#define soap_write___ns1__removeDataFile(soap, data)                           \
  (ICat3::soap_serialize___ns1__removeDataFile(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__removeDataFile(             \
                                soap, data, "-ns1:removeDataFile", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeDataFile *SOAP_FMAC4
soap_get___ns1__removeDataFile(struct soap *, struct __ns1__removeDataFile *,
                               const char *, const char *);

#ifndef soap_read___ns1__removeDataFile
#define soap_read___ns1__removeDataFile(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeDataFile(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeDataFile *SOAP_FMAC2
soap_instantiate___ns1__removeDataFile(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__removeDataFile *
soap_new___ns1__removeDataFile(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeDataFile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__removeDataFile *
soap_new_req___ns1__removeDataFile(struct soap *soap) {
  struct __ns1__removeDataFile *_p =
      soap_instantiate___ns1__removeDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeDataFile(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeDataFile *
soap_new_set___ns1__removeDataFile(struct soap *soap,
                                   ns1__removeDataFile *ns1__removeDataFile_) {
  struct __ns1__removeDataFile *_p =
      soap_instantiate___ns1__removeDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeDataFile(soap, _p);
    _p->ns1__removeDataFile_ = ns1__removeDataFile_;
  }
  return _p;
}

inline void soap_delete___ns1__removeDataFile(struct soap *soap,
                                              struct __ns1__removeDataFile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeDataFile(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeDataFileResponse
#define SOAP_TYPE_ICat3___ns1__removeDataFileResponse (844)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeDataFileResponse(
    struct soap *, struct __ns1__removeDataFileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeDataFileResponse(
    struct soap *, const struct __ns1__removeDataFileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeDataFileResponse(
    struct soap *, const char *, int,
    const struct __ns1__removeDataFileResponse *, const char *);
SOAP_FMAC3 struct __ns1__removeDataFileResponse *SOAP_FMAC4
soap_in___ns1__removeDataFileResponse(struct soap *, const char *,
                                      struct __ns1__removeDataFileResponse *,
                                      const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeDataFileResponse(
    struct soap *, const struct __ns1__removeDataFileResponse *, const char *,
    const char *);

#ifndef soap_write___ns1__removeDataFileResponse
#define soap_write___ns1__removeDataFileResponse(soap, data)                   \
  (ICat3::soap_serialize___ns1__removeDataFileResponse(soap, data),            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeDataFileResponse(                          \
           soap, data, "-ns1:removeDataFileResponse", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeDataFileResponse *SOAP_FMAC4
soap_get___ns1__removeDataFileResponse(struct soap *,
                                       struct __ns1__removeDataFileResponse *,
                                       const char *, const char *);

#ifndef soap_read___ns1__removeDataFileResponse
#define soap_read___ns1__removeDataFileResponse(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeDataFileResponse(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeDataFileResponse *SOAP_FMAC2
soap_instantiate___ns1__removeDataFileResponse(struct soap *, int, const char *,
                                               const char *, size_t *);

inline struct __ns1__removeDataFileResponse *
soap_new___ns1__removeDataFileResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeDataFileResponse(soap, n, NULL, NULL,
                                                        NULL);
}

inline struct __ns1__removeDataFileResponse *
soap_new_req___ns1__removeDataFileResponse(struct soap *soap) {
  struct __ns1__removeDataFileResponse *_p =
      soap_instantiate___ns1__removeDataFileResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__removeDataFileResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeDataFileResponse *
soap_new_set___ns1__removeDataFileResponse(
    struct soap *soap,
    ns1__removeDataFileResponse *ns1__removeDataFileResponse_) {
  struct __ns1__removeDataFileResponse *_p =
      soap_instantiate___ns1__removeDataFileResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__removeDataFileResponse(soap, _p);
    _p->ns1__removeDataFileResponse_ = ns1__removeDataFileResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__removeDataFileResponse(
    struct soap *soap, struct __ns1__removeDataFileResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeDataFileResponse(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteDataFileParameter
#define SOAP_TYPE_ICat3___ns1__deleteDataFileParameter (840)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteDataFileParameter(
    struct soap *, struct __ns1__deleteDataFileParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteDataFileParameter(
    struct soap *, const struct __ns1__deleteDataFileParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteDataFileParameter(
    struct soap *, const char *, int,
    const struct __ns1__deleteDataFileParameter *, const char *);
SOAP_FMAC3 struct __ns1__deleteDataFileParameter *SOAP_FMAC4
soap_in___ns1__deleteDataFileParameter(struct soap *, const char *,
                                       struct __ns1__deleteDataFileParameter *,
                                       const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteDataFileParameter(
    struct soap *, const struct __ns1__deleteDataFileParameter *, const char *,
    const char *);

#ifndef soap_write___ns1__deleteDataFileParameter
#define soap_write___ns1__deleteDataFileParameter(soap, data)                  \
  (ICat3::soap_serialize___ns1__deleteDataFileParameter(soap, data),           \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteDataFileParameter(                         \
           soap, data, "-ns1:deleteDataFileParameter", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteDataFileParameter *SOAP_FMAC4
soap_get___ns1__deleteDataFileParameter(struct soap *,
                                        struct __ns1__deleteDataFileParameter *,
                                        const char *, const char *);

#ifndef soap_read___ns1__deleteDataFileParameter
#define soap_read___ns1__deleteDataFileParameter(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteDataFileParameter(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteDataFileParameter *SOAP_FMAC2
soap_instantiate___ns1__deleteDataFileParameter(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline struct __ns1__deleteDataFileParameter *
soap_new___ns1__deleteDataFileParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteDataFileParameter(soap, n, NULL, NULL,
                                                         NULL);
}

inline struct __ns1__deleteDataFileParameter *
soap_new_req___ns1__deleteDataFileParameter(struct soap *soap) {
  struct __ns1__deleteDataFileParameter *_p =
      soap_instantiate___ns1__deleteDataFileParameter(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    soap_default___ns1__deleteDataFileParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteDataFileParameter *
soap_new_set___ns1__deleteDataFileParameter(
    struct soap *soap,
    ns1__deleteDataFileParameter *ns1__deleteDataFileParameter_) {
  struct __ns1__deleteDataFileParameter *_p =
      soap_instantiate___ns1__deleteDataFileParameter(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    soap_default___ns1__deleteDataFileParameter(soap, _p);
    _p->ns1__deleteDataFileParameter_ = ns1__deleteDataFileParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteDataFileParameter(
    struct soap *soap, struct __ns1__deleteDataFileParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteDataFileParameter(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteDataFileParameterResponse
#define SOAP_TYPE_ICat3___ns1__deleteDataFileParameterResponse (839)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteDataFileParameterResponse(
    struct soap *, struct __ns1__deleteDataFileParameterResponse *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__deleteDataFileParameterResponse(
    struct soap *, const struct __ns1__deleteDataFileParameterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteDataFileParameterResponse(
    struct soap *, const char *, int,
    const struct __ns1__deleteDataFileParameterResponse *, const char *);
SOAP_FMAC3 struct __ns1__deleteDataFileParameterResponse *SOAP_FMAC4
soap_in___ns1__deleteDataFileParameterResponse(
    struct soap *, const char *,
    struct __ns1__deleteDataFileParameterResponse *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteDataFileParameterResponse(
    struct soap *, const struct __ns1__deleteDataFileParameterResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__deleteDataFileParameterResponse
#define soap_write___ns1__deleteDataFileParameterResponse(soap, data)          \
  (ICat3::soap_serialize___ns1__deleteDataFileParameterResponse(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteDataFileParameterResponse(                 \
           soap, data, "-ns1:deleteDataFileParameterResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteDataFileParameterResponse *SOAP_FMAC4
soap_get___ns1__deleteDataFileParameterResponse(
    struct soap *, struct __ns1__deleteDataFileParameterResponse *,
    const char *, const char *);

#ifndef soap_read___ns1__deleteDataFileParameterResponse
#define soap_read___ns1__deleteDataFileParameterResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteDataFileParameterResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteDataFileParameterResponse *SOAP_FMAC2
soap_instantiate___ns1__deleteDataFileParameterResponse(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline struct __ns1__deleteDataFileParameterResponse *
soap_new___ns1__deleteDataFileParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteDataFileParameterResponse(soap, n, NULL,
                                                                 NULL, NULL);
}

inline struct __ns1__deleteDataFileParameterResponse *
soap_new_req___ns1__deleteDataFileParameterResponse(struct soap *soap) {
  struct __ns1__deleteDataFileParameterResponse *_p =
      soap_instantiate___ns1__deleteDataFileParameterResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteDataFileParameterResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteDataFileParameterResponse *
soap_new_set___ns1__deleteDataFileParameterResponse(
    struct soap *soap, ns1__deleteDataFileParameterResponse *
                           ns1__deleteDataFileParameterResponse_) {
  struct __ns1__deleteDataFileParameterResponse *_p =
      soap_instantiate___ns1__deleteDataFileParameterResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteDataFileParameterResponse(soap, _p);
    _p->ns1__deleteDataFileParameterResponse_ =
        ns1__deleteDataFileParameterResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteDataFileParameterResponse(
    struct soap *soap, struct __ns1__deleteDataFileParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteDataFileParameterResponse(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyDataFileParameter
#define SOAP_TYPE_ICat3___ns1__modifyDataFileParameter (835)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifyDataFileParameter(
    struct soap *, struct __ns1__modifyDataFileParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyDataFileParameter(
    struct soap *, const struct __ns1__modifyDataFileParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifyDataFileParameter(
    struct soap *, const char *, int,
    const struct __ns1__modifyDataFileParameter *, const char *);
SOAP_FMAC3 struct __ns1__modifyDataFileParameter *SOAP_FMAC4
soap_in___ns1__modifyDataFileParameter(struct soap *, const char *,
                                       struct __ns1__modifyDataFileParameter *,
                                       const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifyDataFileParameter(
    struct soap *, const struct __ns1__modifyDataFileParameter *, const char *,
    const char *);

#ifndef soap_write___ns1__modifyDataFileParameter
#define soap_write___ns1__modifyDataFileParameter(soap, data)                  \
  (ICat3::soap_serialize___ns1__modifyDataFileParameter(soap, data),           \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifyDataFileParameter(                         \
           soap, data, "-ns1:modifyDataFileParameter", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyDataFileParameter *SOAP_FMAC4
soap_get___ns1__modifyDataFileParameter(struct soap *,
                                        struct __ns1__modifyDataFileParameter *,
                                        const char *, const char *);

#ifndef soap_read___ns1__modifyDataFileParameter
#define soap_read___ns1__modifyDataFileParameter(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyDataFileParameter(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyDataFileParameter *SOAP_FMAC2
soap_instantiate___ns1__modifyDataFileParameter(struct soap *, int,
                                                const char *, const char *,
                                                size_t *);

inline struct __ns1__modifyDataFileParameter *
soap_new___ns1__modifyDataFileParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyDataFileParameter(soap, n, NULL, NULL,
                                                         NULL);
}

inline struct __ns1__modifyDataFileParameter *
soap_new_req___ns1__modifyDataFileParameter(struct soap *soap) {
  struct __ns1__modifyDataFileParameter *_p =
      soap_instantiate___ns1__modifyDataFileParameter(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    soap_default___ns1__modifyDataFileParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyDataFileParameter *
soap_new_set___ns1__modifyDataFileParameter(
    struct soap *soap,
    ns1__modifyDataFileParameter *ns1__modifyDataFileParameter_) {
  struct __ns1__modifyDataFileParameter *_p =
      soap_instantiate___ns1__modifyDataFileParameter(soap, -1, NULL, NULL,
                                                      NULL);
  if (_p) {
    soap_default___ns1__modifyDataFileParameter(soap, _p);
    _p->ns1__modifyDataFileParameter_ = ns1__modifyDataFileParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__modifyDataFileParameter(
    struct soap *soap, struct __ns1__modifyDataFileParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyDataFileParameter(struct soap *, int, int, void *,
                                         size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyDataFileParameterResponse
#define SOAP_TYPE_ICat3___ns1__modifyDataFileParameterResponse (834)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifyDataFileParameterResponse(
    struct soap *, struct __ns1__modifyDataFileParameterResponse *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__modifyDataFileParameterResponse(
    struct soap *, const struct __ns1__modifyDataFileParameterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifyDataFileParameterResponse(
    struct soap *, const char *, int,
    const struct __ns1__modifyDataFileParameterResponse *, const char *);
SOAP_FMAC3 struct __ns1__modifyDataFileParameterResponse *SOAP_FMAC4
soap_in___ns1__modifyDataFileParameterResponse(
    struct soap *, const char *,
    struct __ns1__modifyDataFileParameterResponse *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifyDataFileParameterResponse(
    struct soap *, const struct __ns1__modifyDataFileParameterResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__modifyDataFileParameterResponse
#define soap_write___ns1__modifyDataFileParameterResponse(soap, data)          \
  (ICat3::soap_serialize___ns1__modifyDataFileParameterResponse(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifyDataFileParameterResponse(                 \
           soap, data, "-ns1:modifyDataFileParameterResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyDataFileParameterResponse *SOAP_FMAC4
soap_get___ns1__modifyDataFileParameterResponse(
    struct soap *, struct __ns1__modifyDataFileParameterResponse *,
    const char *, const char *);

#ifndef soap_read___ns1__modifyDataFileParameterResponse
#define soap_read___ns1__modifyDataFileParameterResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyDataFileParameterResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyDataFileParameterResponse *SOAP_FMAC2
soap_instantiate___ns1__modifyDataFileParameterResponse(struct soap *, int,
                                                        const char *,
                                                        const char *, size_t *);

inline struct __ns1__modifyDataFileParameterResponse *
soap_new___ns1__modifyDataFileParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyDataFileParameterResponse(soap, n, NULL,
                                                                 NULL, NULL);
}

inline struct __ns1__modifyDataFileParameterResponse *
soap_new_req___ns1__modifyDataFileParameterResponse(struct soap *soap) {
  struct __ns1__modifyDataFileParameterResponse *_p =
      soap_instantiate___ns1__modifyDataFileParameterResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyDataFileParameterResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyDataFileParameterResponse *
soap_new_set___ns1__modifyDataFileParameterResponse(
    struct soap *soap, ns1__modifyDataFileParameterResponse *
                           ns1__modifyDataFileParameterResponse_) {
  struct __ns1__modifyDataFileParameterResponse *_p =
      soap_instantiate___ns1__modifyDataFileParameterResponse(soap, -1, NULL,
                                                              NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyDataFileParameterResponse(soap, _p);
    _p->ns1__modifyDataFileParameterResponse_ =
        ns1__modifyDataFileParameterResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__modifyDataFileParameterResponse(
    struct soap *soap, struct __ns1__modifyDataFileParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyDataFileParameterResponse(struct soap *, int, int,
                                                 void *, size_t, const void *,
                                                 size_t);

#ifndef SOAP_TYPE_ICat3___ns1__addDataFileParameters
#define SOAP_TYPE_ICat3___ns1__addDataFileParameters (830)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__addDataFileParameters(
    struct soap *, struct __ns1__addDataFileParameters *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__addDataFileParameters(
    struct soap *, const struct __ns1__addDataFileParameters *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__addDataFileParameters(
    struct soap *, const char *, int,
    const struct __ns1__addDataFileParameters *, const char *);
SOAP_FMAC3 struct __ns1__addDataFileParameters *SOAP_FMAC4
soap_in___ns1__addDataFileParameters(struct soap *, const char *,
                                     struct __ns1__addDataFileParameters *,
                                     const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__addDataFileParameters(
    struct soap *, const struct __ns1__addDataFileParameters *, const char *,
    const char *);

#ifndef soap_write___ns1__addDataFileParameters
#define soap_write___ns1__addDataFileParameters(soap, data)                    \
  (ICat3::soap_serialize___ns1__addDataFileParameters(soap, data),             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__addDataFileParameters(                           \
           soap, data, "-ns1:addDataFileParameters", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__addDataFileParameters *SOAP_FMAC4
soap_get___ns1__addDataFileParameters(struct soap *,
                                      struct __ns1__addDataFileParameters *,
                                      const char *, const char *);

#ifndef soap_read___ns1__addDataFileParameters
#define soap_read___ns1__addDataFileParameters(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__addDataFileParameters(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__addDataFileParameters *SOAP_FMAC2
soap_instantiate___ns1__addDataFileParameters(struct soap *, int, const char *,
                                              const char *, size_t *);

inline struct __ns1__addDataFileParameters *
soap_new___ns1__addDataFileParameters(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__addDataFileParameters(soap, n, NULL, NULL,
                                                       NULL);
}

inline struct __ns1__addDataFileParameters *
soap_new_req___ns1__addDataFileParameters(struct soap *soap) {
  struct __ns1__addDataFileParameters *_p =
      soap_instantiate___ns1__addDataFileParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addDataFileParameters(soap, _p);
  }
  return _p;
}

inline struct __ns1__addDataFileParameters *
soap_new_set___ns1__addDataFileParameters(
    struct soap *soap,
    ns1__addDataFileParameters *ns1__addDataFileParameters_) {
  struct __ns1__addDataFileParameters *_p =
      soap_instantiate___ns1__addDataFileParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addDataFileParameters(soap, _p);
    _p->ns1__addDataFileParameters_ = ns1__addDataFileParameters_;
  }
  return _p;
}

inline void soap_delete___ns1__addDataFileParameters(
    struct soap *soap, struct __ns1__addDataFileParameters *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__addDataFileParameters(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__addDataFileParameter
#define SOAP_TYPE_ICat3___ns1__addDataFileParameter (826)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__addDataFileParameter(struct soap *,
                                         struct __ns1__addDataFileParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__addDataFileParameter(
    struct soap *, const struct __ns1__addDataFileParameter *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__addDataFileParameter(struct soap *, const char *, int,
                                     const struct __ns1__addDataFileParameter *,
                                     const char *);
SOAP_FMAC3 struct __ns1__addDataFileParameter *SOAP_FMAC4
soap_in___ns1__addDataFileParameter(struct soap *, const char *,
                                    struct __ns1__addDataFileParameter *,
                                    const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__addDataFileParameter(struct soap *,
                                     const struct __ns1__addDataFileParameter *,
                                     const char *, const char *);

#ifndef soap_write___ns1__addDataFileParameter
#define soap_write___ns1__addDataFileParameter(soap, data)                     \
  (ICat3::soap_serialize___ns1__addDataFileParameter(soap, data),              \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__addDataFileParameter(                            \
           soap, data, "-ns1:addDataFileParameter", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__addDataFileParameter *SOAP_FMAC4
soap_get___ns1__addDataFileParameter(struct soap *,
                                     struct __ns1__addDataFileParameter *,
                                     const char *, const char *);

#ifndef soap_read___ns1__addDataFileParameter
#define soap_read___ns1__addDataFileParameter(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__addDataFileParameter(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__addDataFileParameter *SOAP_FMAC2
soap_instantiate___ns1__addDataFileParameter(struct soap *, int, const char *,
                                             const char *, size_t *);

inline struct __ns1__addDataFileParameter *
soap_new___ns1__addDataFileParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__addDataFileParameter(soap, n, NULL, NULL,
                                                      NULL);
}

inline struct __ns1__addDataFileParameter *
soap_new_req___ns1__addDataFileParameter(struct soap *soap) {
  struct __ns1__addDataFileParameter *_p =
      soap_instantiate___ns1__addDataFileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addDataFileParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__addDataFileParameter *
soap_new_set___ns1__addDataFileParameter(
    struct soap *soap, ns1__addDataFileParameter *ns1__addDataFileParameter_) {
  struct __ns1__addDataFileParameter *_p =
      soap_instantiate___ns1__addDataFileParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addDataFileParameter(soap, _p);
    _p->ns1__addDataFileParameter_ = ns1__addDataFileParameter_;
  }
  return _p;
}

inline void
soap_delete___ns1__addDataFileParameter(struct soap *soap,
                                        struct __ns1__addDataFileParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__addDataFileParameter(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyDataFile
#define SOAP_TYPE_ICat3___ns1__modifyDataFile (822)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__modifyDataFile(struct soap *,
                                   struct __ns1__modifyDataFile *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__modifyDataFile(struct soap *,
                                     const struct __ns1__modifyDataFile *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__modifyDataFile(struct soap *, const char *, int,
                               const struct __ns1__modifyDataFile *,
                               const char *);
SOAP_FMAC3 struct __ns1__modifyDataFile *SOAP_FMAC4
soap_in___ns1__modifyDataFile(struct soap *, const char *,
                              struct __ns1__modifyDataFile *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__modifyDataFile(struct soap *,
                               const struct __ns1__modifyDataFile *,
                               const char *, const char *);

#ifndef soap_write___ns1__modifyDataFile
#define soap_write___ns1__modifyDataFile(soap, data)                           \
  (ICat3::soap_serialize___ns1__modifyDataFile(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__modifyDataFile(             \
                                soap, data, "-ns1:modifyDataFile", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyDataFile *SOAP_FMAC4
soap_get___ns1__modifyDataFile(struct soap *, struct __ns1__modifyDataFile *,
                               const char *, const char *);

#ifndef soap_read___ns1__modifyDataFile
#define soap_read___ns1__modifyDataFile(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyDataFile(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyDataFile *SOAP_FMAC2
soap_instantiate___ns1__modifyDataFile(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__modifyDataFile *
soap_new___ns1__modifyDataFile(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyDataFile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__modifyDataFile *
soap_new_req___ns1__modifyDataFile(struct soap *soap) {
  struct __ns1__modifyDataFile *_p =
      soap_instantiate___ns1__modifyDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyDataFile(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyDataFile *
soap_new_set___ns1__modifyDataFile(struct soap *soap,
                                   ns1__modifyDataFile *ns1__modifyDataFile_) {
  struct __ns1__modifyDataFile *_p =
      soap_instantiate___ns1__modifyDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyDataFile(soap, _p);
    _p->ns1__modifyDataFile_ = ns1__modifyDataFile_;
  }
  return _p;
}

inline void soap_delete___ns1__modifyDataFile(struct soap *soap,
                                              struct __ns1__modifyDataFile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyDataFile(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyDataFileResponse
#define SOAP_TYPE_ICat3___ns1__modifyDataFileResponse (821)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifyDataFileResponse(
    struct soap *, struct __ns1__modifyDataFileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyDataFileResponse(
    struct soap *, const struct __ns1__modifyDataFileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifyDataFileResponse(
    struct soap *, const char *, int,
    const struct __ns1__modifyDataFileResponse *, const char *);
SOAP_FMAC3 struct __ns1__modifyDataFileResponse *SOAP_FMAC4
soap_in___ns1__modifyDataFileResponse(struct soap *, const char *,
                                      struct __ns1__modifyDataFileResponse *,
                                      const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifyDataFileResponse(
    struct soap *, const struct __ns1__modifyDataFileResponse *, const char *,
    const char *);

#ifndef soap_write___ns1__modifyDataFileResponse
#define soap_write___ns1__modifyDataFileResponse(soap, data)                   \
  (ICat3::soap_serialize___ns1__modifyDataFileResponse(soap, data),            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifyDataFileResponse(                          \
           soap, data, "-ns1:modifyDataFileResponse", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyDataFileResponse *SOAP_FMAC4
soap_get___ns1__modifyDataFileResponse(struct soap *,
                                       struct __ns1__modifyDataFileResponse *,
                                       const char *, const char *);

#ifndef soap_read___ns1__modifyDataFileResponse
#define soap_read___ns1__modifyDataFileResponse(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyDataFileResponse(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyDataFileResponse *SOAP_FMAC2
soap_instantiate___ns1__modifyDataFileResponse(struct soap *, int, const char *,
                                               const char *, size_t *);

inline struct __ns1__modifyDataFileResponse *
soap_new___ns1__modifyDataFileResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyDataFileResponse(soap, n, NULL, NULL,
                                                        NULL);
}

inline struct __ns1__modifyDataFileResponse *
soap_new_req___ns1__modifyDataFileResponse(struct soap *soap) {
  struct __ns1__modifyDataFileResponse *_p =
      soap_instantiate___ns1__modifyDataFileResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__modifyDataFileResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyDataFileResponse *
soap_new_set___ns1__modifyDataFileResponse(
    struct soap *soap,
    ns1__modifyDataFileResponse *ns1__modifyDataFileResponse_) {
  struct __ns1__modifyDataFileResponse *_p =
      soap_instantiate___ns1__modifyDataFileResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__modifyDataFileResponse(soap, _p);
    _p->ns1__modifyDataFileResponse_ = ns1__modifyDataFileResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__modifyDataFileResponse(
    struct soap *soap, struct __ns1__modifyDataFileResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyDataFileResponse(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteDataFile
#define SOAP_TYPE_ICat3___ns1__deleteDataFile (817)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__deleteDataFile(struct soap *,
                                   struct __ns1__deleteDataFile *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__deleteDataFile(struct soap *,
                                     const struct __ns1__deleteDataFile *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__deleteDataFile(struct soap *, const char *, int,
                               const struct __ns1__deleteDataFile *,
                               const char *);
SOAP_FMAC3 struct __ns1__deleteDataFile *SOAP_FMAC4
soap_in___ns1__deleteDataFile(struct soap *, const char *,
                              struct __ns1__deleteDataFile *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__deleteDataFile(struct soap *,
                               const struct __ns1__deleteDataFile *,
                               const char *, const char *);

#ifndef soap_write___ns1__deleteDataFile
#define soap_write___ns1__deleteDataFile(soap, data)                           \
  (ICat3::soap_serialize___ns1__deleteDataFile(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__deleteDataFile(             \
                                soap, data, "-ns1:deleteDataFile", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteDataFile *SOAP_FMAC4
soap_get___ns1__deleteDataFile(struct soap *, struct __ns1__deleteDataFile *,
                               const char *, const char *);

#ifndef soap_read___ns1__deleteDataFile
#define soap_read___ns1__deleteDataFile(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteDataFile(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteDataFile *SOAP_FMAC2
soap_instantiate___ns1__deleteDataFile(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__deleteDataFile *
soap_new___ns1__deleteDataFile(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteDataFile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__deleteDataFile *
soap_new_req___ns1__deleteDataFile(struct soap *soap) {
  struct __ns1__deleteDataFile *_p =
      soap_instantiate___ns1__deleteDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteDataFile(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteDataFile *
soap_new_set___ns1__deleteDataFile(struct soap *soap,
                                   ns1__deleteDataFile *ns1__deleteDataFile_) {
  struct __ns1__deleteDataFile *_p =
      soap_instantiate___ns1__deleteDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteDataFile(soap, _p);
    _p->ns1__deleteDataFile_ = ns1__deleteDataFile_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteDataFile(struct soap *soap,
                                              struct __ns1__deleteDataFile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteDataFile(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteDataFileResponse
#define SOAP_TYPE_ICat3___ns1__deleteDataFileResponse (816)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteDataFileResponse(
    struct soap *, struct __ns1__deleteDataFileResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteDataFileResponse(
    struct soap *, const struct __ns1__deleteDataFileResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteDataFileResponse(
    struct soap *, const char *, int,
    const struct __ns1__deleteDataFileResponse *, const char *);
SOAP_FMAC3 struct __ns1__deleteDataFileResponse *SOAP_FMAC4
soap_in___ns1__deleteDataFileResponse(struct soap *, const char *,
                                      struct __ns1__deleteDataFileResponse *,
                                      const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteDataFileResponse(
    struct soap *, const struct __ns1__deleteDataFileResponse *, const char *,
    const char *);

#ifndef soap_write___ns1__deleteDataFileResponse
#define soap_write___ns1__deleteDataFileResponse(soap, data)                   \
  (ICat3::soap_serialize___ns1__deleteDataFileResponse(soap, data),            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteDataFileResponse(                          \
           soap, data, "-ns1:deleteDataFileResponse", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteDataFileResponse *SOAP_FMAC4
soap_get___ns1__deleteDataFileResponse(struct soap *,
                                       struct __ns1__deleteDataFileResponse *,
                                       const char *, const char *);

#ifndef soap_read___ns1__deleteDataFileResponse
#define soap_read___ns1__deleteDataFileResponse(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteDataFileResponse(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteDataFileResponse *SOAP_FMAC2
soap_instantiate___ns1__deleteDataFileResponse(struct soap *, int, const char *,
                                               const char *, size_t *);

inline struct __ns1__deleteDataFileResponse *
soap_new___ns1__deleteDataFileResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteDataFileResponse(soap, n, NULL, NULL,
                                                        NULL);
}

inline struct __ns1__deleteDataFileResponse *
soap_new_req___ns1__deleteDataFileResponse(struct soap *soap) {
  struct __ns1__deleteDataFileResponse *_p =
      soap_instantiate___ns1__deleteDataFileResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__deleteDataFileResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteDataFileResponse *
soap_new_set___ns1__deleteDataFileResponse(
    struct soap *soap,
    ns1__deleteDataFileResponse *ns1__deleteDataFileResponse_) {
  struct __ns1__deleteDataFileResponse *_p =
      soap_instantiate___ns1__deleteDataFileResponse(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__deleteDataFileResponse(soap, _p);
    _p->ns1__deleteDataFileResponse_ = ns1__deleteDataFileResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteDataFileResponse(
    struct soap *soap, struct __ns1__deleteDataFileResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteDataFileResponse(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__createDataFiles
#define SOAP_TYPE_ICat3___ns1__createDataFiles (812)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__createDataFiles(struct soap *,
                                    struct __ns1__createDataFiles *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__createDataFiles(struct soap *,
                                      const struct __ns1__createDataFiles *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__createDataFiles(struct soap *, const char *, int,
                                const struct __ns1__createDataFiles *,
                                const char *);
SOAP_FMAC3 struct __ns1__createDataFiles *SOAP_FMAC4
soap_in___ns1__createDataFiles(struct soap *, const char *,
                               struct __ns1__createDataFiles *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__createDataFiles(struct soap *,
                                const struct __ns1__createDataFiles *,
                                const char *, const char *);

#ifndef soap_write___ns1__createDataFiles
#define soap_write___ns1__createDataFiles(soap, data)                          \
  (ICat3::soap_serialize___ns1__createDataFiles(soap, data),                   \
   soap_begin_send(soap) || ICat3::soap_put___ns1__createDataFiles(            \
                                soap, data, "-ns1:createDataFiles", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__createDataFiles *SOAP_FMAC4
soap_get___ns1__createDataFiles(struct soap *, struct __ns1__createDataFiles *,
                                const char *, const char *);

#ifndef soap_read___ns1__createDataFiles
#define soap_read___ns1__createDataFiles(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__createDataFiles(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__createDataFiles *SOAP_FMAC2
soap_instantiate___ns1__createDataFiles(struct soap *, int, const char *,
                                        const char *, size_t *);

inline struct __ns1__createDataFiles *
soap_new___ns1__createDataFiles(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__createDataFiles(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__createDataFiles *
soap_new_req___ns1__createDataFiles(struct soap *soap) {
  struct __ns1__createDataFiles *_p =
      soap_instantiate___ns1__createDataFiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__createDataFiles(soap, _p);
  }
  return _p;
}

inline struct __ns1__createDataFiles *soap_new_set___ns1__createDataFiles(
    struct soap *soap, ns1__createDataFiles *ns1__createDataFiles_) {
  struct __ns1__createDataFiles *_p =
      soap_instantiate___ns1__createDataFiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__createDataFiles(soap, _p);
    _p->ns1__createDataFiles_ = ns1__createDataFiles_;
  }
  return _p;
}

inline void
soap_delete___ns1__createDataFiles(struct soap *soap,
                                   struct __ns1__createDataFiles *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__createDataFiles(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__createDataFile
#define SOAP_TYPE_ICat3___ns1__createDataFile (808)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__createDataFile(struct soap *,
                                   struct __ns1__createDataFile *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__createDataFile(struct soap *,
                                     const struct __ns1__createDataFile *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__createDataFile(struct soap *, const char *, int,
                               const struct __ns1__createDataFile *,
                               const char *);
SOAP_FMAC3 struct __ns1__createDataFile *SOAP_FMAC4
soap_in___ns1__createDataFile(struct soap *, const char *,
                              struct __ns1__createDataFile *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__createDataFile(struct soap *,
                               const struct __ns1__createDataFile *,
                               const char *, const char *);

#ifndef soap_write___ns1__createDataFile
#define soap_write___ns1__createDataFile(soap, data)                           \
  (ICat3::soap_serialize___ns1__createDataFile(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__createDataFile(             \
                                soap, data, "-ns1:createDataFile", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__createDataFile *SOAP_FMAC4
soap_get___ns1__createDataFile(struct soap *, struct __ns1__createDataFile *,
                               const char *, const char *);

#ifndef soap_read___ns1__createDataFile
#define soap_read___ns1__createDataFile(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__createDataFile(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__createDataFile *SOAP_FMAC2
soap_instantiate___ns1__createDataFile(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__createDataFile *
soap_new___ns1__createDataFile(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__createDataFile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__createDataFile *
soap_new_req___ns1__createDataFile(struct soap *soap) {
  struct __ns1__createDataFile *_p =
      soap_instantiate___ns1__createDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__createDataFile(soap, _p);
  }
  return _p;
}

inline struct __ns1__createDataFile *
soap_new_set___ns1__createDataFile(struct soap *soap,
                                   ns1__createDataFile *ns1__createDataFile_) {
  struct __ns1__createDataFile *_p =
      soap_instantiate___ns1__createDataFile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__createDataFile(soap, _p);
    _p->ns1__createDataFile_ = ns1__createDataFile_;
  }
  return _p;
}

inline void soap_delete___ns1__createDataFile(struct soap *soap,
                                              struct __ns1__createDataFile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__createDataFile(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getDatafiles
#define SOAP_TYPE_ICat3___ns1__getDatafiles (804)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getDatafiles(struct soap *, struct __ns1__getDatafiles *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__getDatafiles(struct soap *,
                                   const struct __ns1__getDatafiles *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getDatafiles(struct soap *, const char *, int,
                             const struct __ns1__getDatafiles *, const char *);
SOAP_FMAC3 struct __ns1__getDatafiles *SOAP_FMAC4
soap_in___ns1__getDatafiles(struct soap *, const char *,
                            struct __ns1__getDatafiles *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getDatafiles(struct soap *, const struct __ns1__getDatafiles *,
                             const char *, const char *);

#ifndef soap_write___ns1__getDatafiles
#define soap_write___ns1__getDatafiles(soap, data)                             \
  (ICat3::soap_serialize___ns1__getDatafiles(soap, data),                      \
   soap_begin_send(soap) || ICat3::soap_put___ns1__getDatafiles(               \
                                soap, data, "-ns1:getDatafiles", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getDatafiles *SOAP_FMAC4
soap_get___ns1__getDatafiles(struct soap *, struct __ns1__getDatafiles *,
                             const char *, const char *);

#ifndef soap_read___ns1__getDatafiles
#define soap_read___ns1__getDatafiles(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getDatafiles(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getDatafiles *SOAP_FMAC2
soap_instantiate___ns1__getDatafiles(struct soap *, int, const char *,
                                     const char *, size_t *);

inline struct __ns1__getDatafiles *
soap_new___ns1__getDatafiles(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getDatafiles(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getDatafiles *
soap_new_req___ns1__getDatafiles(struct soap *soap) {
  struct __ns1__getDatafiles *_p =
      soap_instantiate___ns1__getDatafiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getDatafiles(soap, _p);
  }
  return _p;
}

inline struct __ns1__getDatafiles *
soap_new_set___ns1__getDatafiles(struct soap *soap,
                                 ns1__getDatafiles *ns1__getDatafiles_) {
  struct __ns1__getDatafiles *_p =
      soap_instantiate___ns1__getDatafiles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getDatafiles(soap, _p);
    _p->ns1__getDatafiles_ = ns1__getDatafiles_;
  }
  return _p;
}

inline void soap_delete___ns1__getDatafiles(struct soap *soap,
                                            struct __ns1__getDatafiles *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getDatafiles(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getDatafile
#define SOAP_TYPE_ICat3___ns1__getDatafile (800)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getDatafile(struct soap *, struct __ns1__getDatafile *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__getDatafile(struct soap *,
                                  const struct __ns1__getDatafile *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getDatafile(struct soap *, const char *, int,
                            const struct __ns1__getDatafile *, const char *);
SOAP_FMAC3 struct __ns1__getDatafile *SOAP_FMAC4
soap_in___ns1__getDatafile(struct soap *, const char *,
                           struct __ns1__getDatafile *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getDatafile(struct soap *, const struct __ns1__getDatafile *,
                            const char *, const char *);

#ifndef soap_write___ns1__getDatafile
#define soap_write___ns1__getDatafile(soap, data)                              \
  (ICat3::soap_serialize___ns1__getDatafile(soap, data),                       \
   soap_begin_send(soap) || ICat3::soap_put___ns1__getDatafile(                \
                                soap, data, "-ns1:getDatafile", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getDatafile *SOAP_FMAC4
soap_get___ns1__getDatafile(struct soap *, struct __ns1__getDatafile *,
                            const char *, const char *);

#ifndef soap_read___ns1__getDatafile
#define soap_read___ns1__getDatafile(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getDatafile(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getDatafile *SOAP_FMAC2
soap_instantiate___ns1__getDatafile(struct soap *, int, const char *,
                                    const char *, size_t *);

inline struct __ns1__getDatafile *soap_new___ns1__getDatafile(struct soap *soap,
                                                              int n = -1) {
  return soap_instantiate___ns1__getDatafile(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getDatafile *
soap_new_req___ns1__getDatafile(struct soap *soap) {
  struct __ns1__getDatafile *_p =
      soap_instantiate___ns1__getDatafile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getDatafile(soap, _p);
  }
  return _p;
}

inline struct __ns1__getDatafile *
soap_new_set___ns1__getDatafile(struct soap *soap,
                                ns1__getDatafile *ns1__getDatafile_) {
  struct __ns1__getDatafile *_p =
      soap_instantiate___ns1__getDatafile(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getDatafile(soap, _p);
    _p->ns1__getDatafile_ = ns1__getDatafile_;
  }
  return _p;
}

inline void soap_delete___ns1__getDatafile(struct soap *soap,
                                           struct __ns1__getDatafile *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getDatafile(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeDataSetParameter
#define SOAP_TYPE_ICat3___ns1__removeDataSetParameter (796)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeDataSetParameter(
    struct soap *, struct __ns1__removeDataSetParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeDataSetParameter(
    struct soap *, const struct __ns1__removeDataSetParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeDataSetParameter(
    struct soap *, const char *, int,
    const struct __ns1__removeDataSetParameter *, const char *);
SOAP_FMAC3 struct __ns1__removeDataSetParameter *SOAP_FMAC4
soap_in___ns1__removeDataSetParameter(struct soap *, const char *,
                                      struct __ns1__removeDataSetParameter *,
                                      const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeDataSetParameter(
    struct soap *, const struct __ns1__removeDataSetParameter *, const char *,
    const char *);

#ifndef soap_write___ns1__removeDataSetParameter
#define soap_write___ns1__removeDataSetParameter(soap, data)                   \
  (ICat3::soap_serialize___ns1__removeDataSetParameter(soap, data),            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeDataSetParameter(                          \
           soap, data, "-ns1:removeDataSetParameter", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeDataSetParameter *SOAP_FMAC4
soap_get___ns1__removeDataSetParameter(struct soap *,
                                       struct __ns1__removeDataSetParameter *,
                                       const char *, const char *);

#ifndef soap_read___ns1__removeDataSetParameter
#define soap_read___ns1__removeDataSetParameter(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeDataSetParameter(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeDataSetParameter *SOAP_FMAC2
soap_instantiate___ns1__removeDataSetParameter(struct soap *, int, const char *,
                                               const char *, size_t *);

inline struct __ns1__removeDataSetParameter *
soap_new___ns1__removeDataSetParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeDataSetParameter(soap, n, NULL, NULL,
                                                        NULL);
}

inline struct __ns1__removeDataSetParameter *
soap_new_req___ns1__removeDataSetParameter(struct soap *soap) {
  struct __ns1__removeDataSetParameter *_p =
      soap_instantiate___ns1__removeDataSetParameter(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__removeDataSetParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeDataSetParameter *
soap_new_set___ns1__removeDataSetParameter(
    struct soap *soap,
    ns1__removeDataSetParameter *ns1__removeDataSetParameter_) {
  struct __ns1__removeDataSetParameter *_p =
      soap_instantiate___ns1__removeDataSetParameter(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__removeDataSetParameter(soap, _p);
    _p->ns1__removeDataSetParameter_ = ns1__removeDataSetParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__removeDataSetParameter(
    struct soap *soap, struct __ns1__removeDataSetParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeDataSetParameter(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeDataSetParameterResponse
#define SOAP_TYPE_ICat3___ns1__removeDataSetParameterResponse (795)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeDataSetParameterResponse(
    struct soap *, struct __ns1__removeDataSetParameterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeDataSetParameterResponse(
    struct soap *, const struct __ns1__removeDataSetParameterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeDataSetParameterResponse(
    struct soap *, const char *, int,
    const struct __ns1__removeDataSetParameterResponse *, const char *);
SOAP_FMAC3 struct __ns1__removeDataSetParameterResponse *SOAP_FMAC4
soap_in___ns1__removeDataSetParameterResponse(
    struct soap *, const char *, struct __ns1__removeDataSetParameterResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeDataSetParameterResponse(
    struct soap *, const struct __ns1__removeDataSetParameterResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__removeDataSetParameterResponse
#define soap_write___ns1__removeDataSetParameterResponse(soap, data)           \
  (ICat3::soap_serialize___ns1__removeDataSetParameterResponse(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeDataSetParameterResponse(                  \
           soap, data, "-ns1:removeDataSetParameterResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeDataSetParameterResponse *SOAP_FMAC4
soap_get___ns1__removeDataSetParameterResponse(
    struct soap *, struct __ns1__removeDataSetParameterResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__removeDataSetParameterResponse
#define soap_read___ns1__removeDataSetParameterResponse(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeDataSetParameterResponse(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeDataSetParameterResponse *SOAP_FMAC2
soap_instantiate___ns1__removeDataSetParameterResponse(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline struct __ns1__removeDataSetParameterResponse *
soap_new___ns1__removeDataSetParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeDataSetParameterResponse(soap, n, NULL,
                                                                NULL, NULL);
}

inline struct __ns1__removeDataSetParameterResponse *
soap_new_req___ns1__removeDataSetParameterResponse(struct soap *soap) {
  struct __ns1__removeDataSetParameterResponse *_p =
      soap_instantiate___ns1__removeDataSetParameterResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__removeDataSetParameterResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeDataSetParameterResponse *
soap_new_set___ns1__removeDataSetParameterResponse(
    struct soap *soap,
    ns1__removeDataSetParameterResponse *ns1__removeDataSetParameterResponse_) {
  struct __ns1__removeDataSetParameterResponse *_p =
      soap_instantiate___ns1__removeDataSetParameterResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__removeDataSetParameterResponse(soap, _p);
    _p->ns1__removeDataSetParameterResponse_ =
        ns1__removeDataSetParameterResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__removeDataSetParameterResponse(
    struct soap *soap, struct __ns1__removeDataSetParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeDataSetParameterResponse(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeDataSet
#define SOAP_TYPE_ICat3___ns1__removeDataSet (791)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__removeDataSet(struct soap *, struct __ns1__removeDataSet *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__removeDataSet(struct soap *,
                                    const struct __ns1__removeDataSet *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__removeDataSet(struct soap *, const char *, int,
                              const struct __ns1__removeDataSet *,
                              const char *);
SOAP_FMAC3 struct __ns1__removeDataSet *SOAP_FMAC4
soap_in___ns1__removeDataSet(struct soap *, const char *,
                             struct __ns1__removeDataSet *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__removeDataSet(struct soap *,
                              const struct __ns1__removeDataSet *, const char *,
                              const char *);

#ifndef soap_write___ns1__removeDataSet
#define soap_write___ns1__removeDataSet(soap, data)                            \
  (ICat3::soap_serialize___ns1__removeDataSet(soap, data),                     \
   soap_begin_send(soap) || ICat3::soap_put___ns1__removeDataSet(              \
                                soap, data, "-ns1:removeDataSet", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeDataSet *SOAP_FMAC4
soap_get___ns1__removeDataSet(struct soap *, struct __ns1__removeDataSet *,
                              const char *, const char *);

#ifndef soap_read___ns1__removeDataSet
#define soap_read___ns1__removeDataSet(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeDataSet(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeDataSet *SOAP_FMAC2
soap_instantiate___ns1__removeDataSet(struct soap *, int, const char *,
                                      const char *, size_t *);

inline struct __ns1__removeDataSet *
soap_new___ns1__removeDataSet(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeDataSet(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__removeDataSet *
soap_new_req___ns1__removeDataSet(struct soap *soap) {
  struct __ns1__removeDataSet *_p =
      soap_instantiate___ns1__removeDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeDataSet(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeDataSet *
soap_new_set___ns1__removeDataSet(struct soap *soap,
                                  ns1__removeDataSet *ns1__removeDataSet_) {
  struct __ns1__removeDataSet *_p =
      soap_instantiate___ns1__removeDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeDataSet(soap, _p);
    _p->ns1__removeDataSet_ = ns1__removeDataSet_;
  }
  return _p;
}

inline void soap_delete___ns1__removeDataSet(struct soap *soap,
                                             struct __ns1__removeDataSet *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__removeDataSet(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeDataSetResponse
#define SOAP_TYPE_ICat3___ns1__removeDataSetResponse (790)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeDataSetResponse(
    struct soap *, struct __ns1__removeDataSetResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeDataSetResponse(
    struct soap *, const struct __ns1__removeDataSetResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeDataSetResponse(
    struct soap *, const char *, int,
    const struct __ns1__removeDataSetResponse *, const char *);
SOAP_FMAC3 struct __ns1__removeDataSetResponse *SOAP_FMAC4
soap_in___ns1__removeDataSetResponse(struct soap *, const char *,
                                     struct __ns1__removeDataSetResponse *,
                                     const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeDataSetResponse(
    struct soap *, const struct __ns1__removeDataSetResponse *, const char *,
    const char *);

#ifndef soap_write___ns1__removeDataSetResponse
#define soap_write___ns1__removeDataSetResponse(soap, data)                    \
  (ICat3::soap_serialize___ns1__removeDataSetResponse(soap, data),             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeDataSetResponse(                           \
           soap, data, "-ns1:removeDataSetResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeDataSetResponse *SOAP_FMAC4
soap_get___ns1__removeDataSetResponse(struct soap *,
                                      struct __ns1__removeDataSetResponse *,
                                      const char *, const char *);

#ifndef soap_read___ns1__removeDataSetResponse
#define soap_read___ns1__removeDataSetResponse(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeDataSetResponse(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeDataSetResponse *SOAP_FMAC2
soap_instantiate___ns1__removeDataSetResponse(struct soap *, int, const char *,
                                              const char *, size_t *);

inline struct __ns1__removeDataSetResponse *
soap_new___ns1__removeDataSetResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeDataSetResponse(soap, n, NULL, NULL,
                                                       NULL);
}

inline struct __ns1__removeDataSetResponse *
soap_new_req___ns1__removeDataSetResponse(struct soap *soap) {
  struct __ns1__removeDataSetResponse *_p =
      soap_instantiate___ns1__removeDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeDataSetResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeDataSetResponse *
soap_new_set___ns1__removeDataSetResponse(
    struct soap *soap,
    ns1__removeDataSetResponse *ns1__removeDataSetResponse_) {
  struct __ns1__removeDataSetResponse *_p =
      soap_instantiate___ns1__removeDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeDataSetResponse(soap, _p);
    _p->ns1__removeDataSetResponse_ = ns1__removeDataSetResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__removeDataSetResponse(
    struct soap *soap, struct __ns1__removeDataSetResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeDataSetResponse(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__addDataSetParameters
#define SOAP_TYPE_ICat3___ns1__addDataSetParameters (786)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__addDataSetParameters(struct soap *,
                                         struct __ns1__addDataSetParameters *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__addDataSetParameters(
    struct soap *, const struct __ns1__addDataSetParameters *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__addDataSetParameters(struct soap *, const char *, int,
                                     const struct __ns1__addDataSetParameters *,
                                     const char *);
SOAP_FMAC3 struct __ns1__addDataSetParameters *SOAP_FMAC4
soap_in___ns1__addDataSetParameters(struct soap *, const char *,
                                    struct __ns1__addDataSetParameters *,
                                    const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__addDataSetParameters(struct soap *,
                                     const struct __ns1__addDataSetParameters *,
                                     const char *, const char *);

#ifndef soap_write___ns1__addDataSetParameters
#define soap_write___ns1__addDataSetParameters(soap, data)                     \
  (ICat3::soap_serialize___ns1__addDataSetParameters(soap, data),              \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__addDataSetParameters(                            \
           soap, data, "-ns1:addDataSetParameters", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__addDataSetParameters *SOAP_FMAC4
soap_get___ns1__addDataSetParameters(struct soap *,
                                     struct __ns1__addDataSetParameters *,
                                     const char *, const char *);

#ifndef soap_read___ns1__addDataSetParameters
#define soap_read___ns1__addDataSetParameters(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__addDataSetParameters(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__addDataSetParameters *SOAP_FMAC2
soap_instantiate___ns1__addDataSetParameters(struct soap *, int, const char *,
                                             const char *, size_t *);

inline struct __ns1__addDataSetParameters *
soap_new___ns1__addDataSetParameters(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__addDataSetParameters(soap, n, NULL, NULL,
                                                      NULL);
}

inline struct __ns1__addDataSetParameters *
soap_new_req___ns1__addDataSetParameters(struct soap *soap) {
  struct __ns1__addDataSetParameters *_p =
      soap_instantiate___ns1__addDataSetParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addDataSetParameters(soap, _p);
  }
  return _p;
}

inline struct __ns1__addDataSetParameters *
soap_new_set___ns1__addDataSetParameters(
    struct soap *soap, ns1__addDataSetParameters *ns1__addDataSetParameters_) {
  struct __ns1__addDataSetParameters *_p =
      soap_instantiate___ns1__addDataSetParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addDataSetParameters(soap, _p);
    _p->ns1__addDataSetParameters_ = ns1__addDataSetParameters_;
  }
  return _p;
}

inline void
soap_delete___ns1__addDataSetParameters(struct soap *soap,
                                        struct __ns1__addDataSetParameters *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__addDataSetParameters(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__addDataSetParameter
#define SOAP_TYPE_ICat3___ns1__addDataSetParameter (782)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__addDataSetParameter(struct soap *,
                                        struct __ns1__addDataSetParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__addDataSetParameter(
    struct soap *, const struct __ns1__addDataSetParameter *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__addDataSetParameter(struct soap *, const char *, int,
                                    const struct __ns1__addDataSetParameter *,
                                    const char *);
SOAP_FMAC3 struct __ns1__addDataSetParameter *SOAP_FMAC4
soap_in___ns1__addDataSetParameter(struct soap *, const char *,
                                   struct __ns1__addDataSetParameter *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__addDataSetParameter(struct soap *,
                                    const struct __ns1__addDataSetParameter *,
                                    const char *, const char *);

#ifndef soap_write___ns1__addDataSetParameter
#define soap_write___ns1__addDataSetParameter(soap, data)                      \
  (ICat3::soap_serialize___ns1__addDataSetParameter(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__addDataSetParameter(                             \
           soap, data, "-ns1:addDataSetParameter", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__addDataSetParameter *SOAP_FMAC4
soap_get___ns1__addDataSetParameter(struct soap *,
                                    struct __ns1__addDataSetParameter *,
                                    const char *, const char *);

#ifndef soap_read___ns1__addDataSetParameter
#define soap_read___ns1__addDataSetParameter(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__addDataSetParameter(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__addDataSetParameter *SOAP_FMAC2
soap_instantiate___ns1__addDataSetParameter(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__addDataSetParameter *
soap_new___ns1__addDataSetParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__addDataSetParameter(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__addDataSetParameter *
soap_new_req___ns1__addDataSetParameter(struct soap *soap) {
  struct __ns1__addDataSetParameter *_p =
      soap_instantiate___ns1__addDataSetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addDataSetParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__addDataSetParameter *
soap_new_set___ns1__addDataSetParameter(
    struct soap *soap, ns1__addDataSetParameter *ns1__addDataSetParameter_) {
  struct __ns1__addDataSetParameter *_p =
      soap_instantiate___ns1__addDataSetParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addDataSetParameter(soap, _p);
    _p->ns1__addDataSetParameter_ = ns1__addDataSetParameter_;
  }
  return _p;
}

inline void
soap_delete___ns1__addDataSetParameter(struct soap *soap,
                                       struct __ns1__addDataSetParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__addDataSetParameter(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__setDataSetSample
#define SOAP_TYPE_ICat3___ns1__setDataSetSample (778)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__setDataSetSample(struct soap *,
                                     struct __ns1__setDataSetSample *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__setDataSetSample(struct soap *,
                                       const struct __ns1__setDataSetSample *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__setDataSetSample(struct soap *, const char *, int,
                                 const struct __ns1__setDataSetSample *,
                                 const char *);
SOAP_FMAC3 struct __ns1__setDataSetSample *SOAP_FMAC4
soap_in___ns1__setDataSetSample(struct soap *, const char *,
                                struct __ns1__setDataSetSample *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__setDataSetSample(struct soap *,
                                 const struct __ns1__setDataSetSample *,
                                 const char *, const char *);

#ifndef soap_write___ns1__setDataSetSample
#define soap_write___ns1__setDataSetSample(soap, data)                         \
  (ICat3::soap_serialize___ns1__setDataSetSample(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put___ns1__setDataSetSample(           \
                                soap, data, "-ns1:setDataSetSample", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__setDataSetSample *SOAP_FMAC4
soap_get___ns1__setDataSetSample(struct soap *,
                                 struct __ns1__setDataSetSample *, const char *,
                                 const char *);

#ifndef soap_read___ns1__setDataSetSample
#define soap_read___ns1__setDataSetSample(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__setDataSetSample(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__setDataSetSample *SOAP_FMAC2
soap_instantiate___ns1__setDataSetSample(struct soap *, int, const char *,
                                         const char *, size_t *);

inline struct __ns1__setDataSetSample *
soap_new___ns1__setDataSetSample(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__setDataSetSample(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__setDataSetSample *
soap_new_req___ns1__setDataSetSample(struct soap *soap) {
  struct __ns1__setDataSetSample *_p =
      soap_instantiate___ns1__setDataSetSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__setDataSetSample(soap, _p);
  }
  return _p;
}

inline struct __ns1__setDataSetSample *soap_new_set___ns1__setDataSetSample(
    struct soap *soap, ns1__setDataSetSample *ns1__setDataSetSample_) {
  struct __ns1__setDataSetSample *_p =
      soap_instantiate___ns1__setDataSetSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__setDataSetSample(soap, _p);
    _p->ns1__setDataSetSample_ = ns1__setDataSetSample_;
  }
  return _p;
}

inline void
soap_delete___ns1__setDataSetSample(struct soap *soap,
                                    struct __ns1__setDataSetSample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__setDataSetSample(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__setDataSetSampleResponse
#define SOAP_TYPE_ICat3___ns1__setDataSetSampleResponse (777)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__setDataSetSampleResponse(
    struct soap *, struct __ns1__setDataSetSampleResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__setDataSetSampleResponse(
    struct soap *, const struct __ns1__setDataSetSampleResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__setDataSetSampleResponse(
    struct soap *, const char *, int,
    const struct __ns1__setDataSetSampleResponse *, const char *);
SOAP_FMAC3 struct __ns1__setDataSetSampleResponse *SOAP_FMAC4
soap_in___ns1__setDataSetSampleResponse(
    struct soap *, const char *, struct __ns1__setDataSetSampleResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__setDataSetSampleResponse(
    struct soap *, const struct __ns1__setDataSetSampleResponse *, const char *,
    const char *);

#ifndef soap_write___ns1__setDataSetSampleResponse
#define soap_write___ns1__setDataSetSampleResponse(soap, data)                 \
  (ICat3::soap_serialize___ns1__setDataSetSampleResponse(soap, data),          \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__setDataSetSampleResponse(                        \
           soap, data, "-ns1:setDataSetSampleResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__setDataSetSampleResponse *SOAP_FMAC4
soap_get___ns1__setDataSetSampleResponse(
    struct soap *, struct __ns1__setDataSetSampleResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__setDataSetSampleResponse
#define soap_read___ns1__setDataSetSampleResponse(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__setDataSetSampleResponse(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__setDataSetSampleResponse *SOAP_FMAC2
soap_instantiate___ns1__setDataSetSampleResponse(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline struct __ns1__setDataSetSampleResponse *
soap_new___ns1__setDataSetSampleResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__setDataSetSampleResponse(soap, n, NULL, NULL,
                                                          NULL);
}

inline struct __ns1__setDataSetSampleResponse *
soap_new_req___ns1__setDataSetSampleResponse(struct soap *soap) {
  struct __ns1__setDataSetSampleResponse *_p =
      soap_instantiate___ns1__setDataSetSampleResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    soap_default___ns1__setDataSetSampleResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__setDataSetSampleResponse *
soap_new_set___ns1__setDataSetSampleResponse(
    struct soap *soap,
    ns1__setDataSetSampleResponse *ns1__setDataSetSampleResponse_) {
  struct __ns1__setDataSetSampleResponse *_p =
      soap_instantiate___ns1__setDataSetSampleResponse(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    soap_default___ns1__setDataSetSampleResponse(soap, _p);
    _p->ns1__setDataSetSampleResponse_ = ns1__setDataSetSampleResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__setDataSetSampleResponse(
    struct soap *soap, struct __ns1__setDataSetSampleResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__setDataSetSampleResponse(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyDataSetParameter
#define SOAP_TYPE_ICat3___ns1__modifyDataSetParameter (773)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifyDataSetParameter(
    struct soap *, struct __ns1__modifyDataSetParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyDataSetParameter(
    struct soap *, const struct __ns1__modifyDataSetParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifyDataSetParameter(
    struct soap *, const char *, int,
    const struct __ns1__modifyDataSetParameter *, const char *);
SOAP_FMAC3 struct __ns1__modifyDataSetParameter *SOAP_FMAC4
soap_in___ns1__modifyDataSetParameter(struct soap *, const char *,
                                      struct __ns1__modifyDataSetParameter *,
                                      const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifyDataSetParameter(
    struct soap *, const struct __ns1__modifyDataSetParameter *, const char *,
    const char *);

#ifndef soap_write___ns1__modifyDataSetParameter
#define soap_write___ns1__modifyDataSetParameter(soap, data)                   \
  (ICat3::soap_serialize___ns1__modifyDataSetParameter(soap, data),            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifyDataSetParameter(                          \
           soap, data, "-ns1:modifyDataSetParameter", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyDataSetParameter *SOAP_FMAC4
soap_get___ns1__modifyDataSetParameter(struct soap *,
                                       struct __ns1__modifyDataSetParameter *,
                                       const char *, const char *);

#ifndef soap_read___ns1__modifyDataSetParameter
#define soap_read___ns1__modifyDataSetParameter(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyDataSetParameter(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyDataSetParameter *SOAP_FMAC2
soap_instantiate___ns1__modifyDataSetParameter(struct soap *, int, const char *,
                                               const char *, size_t *);

inline struct __ns1__modifyDataSetParameter *
soap_new___ns1__modifyDataSetParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyDataSetParameter(soap, n, NULL, NULL,
                                                        NULL);
}

inline struct __ns1__modifyDataSetParameter *
soap_new_req___ns1__modifyDataSetParameter(struct soap *soap) {
  struct __ns1__modifyDataSetParameter *_p =
      soap_instantiate___ns1__modifyDataSetParameter(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__modifyDataSetParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyDataSetParameter *
soap_new_set___ns1__modifyDataSetParameter(
    struct soap *soap,
    ns1__modifyDataSetParameter *ns1__modifyDataSetParameter_) {
  struct __ns1__modifyDataSetParameter *_p =
      soap_instantiate___ns1__modifyDataSetParameter(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__modifyDataSetParameter(soap, _p);
    _p->ns1__modifyDataSetParameter_ = ns1__modifyDataSetParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__modifyDataSetParameter(
    struct soap *soap, struct __ns1__modifyDataSetParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyDataSetParameter(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyDataSetParameterResponse
#define SOAP_TYPE_ICat3___ns1__modifyDataSetParameterResponse (772)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifyDataSetParameterResponse(
    struct soap *, struct __ns1__modifyDataSetParameterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyDataSetParameterResponse(
    struct soap *, const struct __ns1__modifyDataSetParameterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifyDataSetParameterResponse(
    struct soap *, const char *, int,
    const struct __ns1__modifyDataSetParameterResponse *, const char *);
SOAP_FMAC3 struct __ns1__modifyDataSetParameterResponse *SOAP_FMAC4
soap_in___ns1__modifyDataSetParameterResponse(
    struct soap *, const char *, struct __ns1__modifyDataSetParameterResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifyDataSetParameterResponse(
    struct soap *, const struct __ns1__modifyDataSetParameterResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__modifyDataSetParameterResponse
#define soap_write___ns1__modifyDataSetParameterResponse(soap, data)           \
  (ICat3::soap_serialize___ns1__modifyDataSetParameterResponse(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifyDataSetParameterResponse(                  \
           soap, data, "-ns1:modifyDataSetParameterResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyDataSetParameterResponse *SOAP_FMAC4
soap_get___ns1__modifyDataSetParameterResponse(
    struct soap *, struct __ns1__modifyDataSetParameterResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__modifyDataSetParameterResponse
#define soap_read___ns1__modifyDataSetParameterResponse(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyDataSetParameterResponse(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyDataSetParameterResponse *SOAP_FMAC2
soap_instantiate___ns1__modifyDataSetParameterResponse(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline struct __ns1__modifyDataSetParameterResponse *
soap_new___ns1__modifyDataSetParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyDataSetParameterResponse(soap, n, NULL,
                                                                NULL, NULL);
}

inline struct __ns1__modifyDataSetParameterResponse *
soap_new_req___ns1__modifyDataSetParameterResponse(struct soap *soap) {
  struct __ns1__modifyDataSetParameterResponse *_p =
      soap_instantiate___ns1__modifyDataSetParameterResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyDataSetParameterResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyDataSetParameterResponse *
soap_new_set___ns1__modifyDataSetParameterResponse(
    struct soap *soap,
    ns1__modifyDataSetParameterResponse *ns1__modifyDataSetParameterResponse_) {
  struct __ns1__modifyDataSetParameterResponse *_p =
      soap_instantiate___ns1__modifyDataSetParameterResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyDataSetParameterResponse(soap, _p);
    _p->ns1__modifyDataSetParameterResponse_ =
        ns1__modifyDataSetParameterResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__modifyDataSetParameterResponse(
    struct soap *soap, struct __ns1__modifyDataSetParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyDataSetParameterResponse(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyDataSet
#define SOAP_TYPE_ICat3___ns1__modifyDataSet (768)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__modifyDataSet(struct soap *, struct __ns1__modifyDataSet *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__modifyDataSet(struct soap *,
                                    const struct __ns1__modifyDataSet *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__modifyDataSet(struct soap *, const char *, int,
                              const struct __ns1__modifyDataSet *,
                              const char *);
SOAP_FMAC3 struct __ns1__modifyDataSet *SOAP_FMAC4
soap_in___ns1__modifyDataSet(struct soap *, const char *,
                             struct __ns1__modifyDataSet *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__modifyDataSet(struct soap *,
                              const struct __ns1__modifyDataSet *, const char *,
                              const char *);

#ifndef soap_write___ns1__modifyDataSet
#define soap_write___ns1__modifyDataSet(soap, data)                            \
  (ICat3::soap_serialize___ns1__modifyDataSet(soap, data),                     \
   soap_begin_send(soap) || ICat3::soap_put___ns1__modifyDataSet(              \
                                soap, data, "-ns1:modifyDataSet", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyDataSet *SOAP_FMAC4
soap_get___ns1__modifyDataSet(struct soap *, struct __ns1__modifyDataSet *,
                              const char *, const char *);

#ifndef soap_read___ns1__modifyDataSet
#define soap_read___ns1__modifyDataSet(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyDataSet(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyDataSet *SOAP_FMAC2
soap_instantiate___ns1__modifyDataSet(struct soap *, int, const char *,
                                      const char *, size_t *);

inline struct __ns1__modifyDataSet *
soap_new___ns1__modifyDataSet(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyDataSet(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__modifyDataSet *
soap_new_req___ns1__modifyDataSet(struct soap *soap) {
  struct __ns1__modifyDataSet *_p =
      soap_instantiate___ns1__modifyDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyDataSet(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyDataSet *
soap_new_set___ns1__modifyDataSet(struct soap *soap,
                                  ns1__modifyDataSet *ns1__modifyDataSet_) {
  struct __ns1__modifyDataSet *_p =
      soap_instantiate___ns1__modifyDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyDataSet(soap, _p);
    _p->ns1__modifyDataSet_ = ns1__modifyDataSet_;
  }
  return _p;
}

inline void soap_delete___ns1__modifyDataSet(struct soap *soap,
                                             struct __ns1__modifyDataSet *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__modifyDataSet(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyDataSetResponse
#define SOAP_TYPE_ICat3___ns1__modifyDataSetResponse (767)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifyDataSetResponse(
    struct soap *, struct __ns1__modifyDataSetResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyDataSetResponse(
    struct soap *, const struct __ns1__modifyDataSetResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifyDataSetResponse(
    struct soap *, const char *, int,
    const struct __ns1__modifyDataSetResponse *, const char *);
SOAP_FMAC3 struct __ns1__modifyDataSetResponse *SOAP_FMAC4
soap_in___ns1__modifyDataSetResponse(struct soap *, const char *,
                                     struct __ns1__modifyDataSetResponse *,
                                     const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifyDataSetResponse(
    struct soap *, const struct __ns1__modifyDataSetResponse *, const char *,
    const char *);

#ifndef soap_write___ns1__modifyDataSetResponse
#define soap_write___ns1__modifyDataSetResponse(soap, data)                    \
  (ICat3::soap_serialize___ns1__modifyDataSetResponse(soap, data),             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifyDataSetResponse(                           \
           soap, data, "-ns1:modifyDataSetResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyDataSetResponse *SOAP_FMAC4
soap_get___ns1__modifyDataSetResponse(struct soap *,
                                      struct __ns1__modifyDataSetResponse *,
                                      const char *, const char *);

#ifndef soap_read___ns1__modifyDataSetResponse
#define soap_read___ns1__modifyDataSetResponse(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyDataSetResponse(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyDataSetResponse *SOAP_FMAC2
soap_instantiate___ns1__modifyDataSetResponse(struct soap *, int, const char *,
                                              const char *, size_t *);

inline struct __ns1__modifyDataSetResponse *
soap_new___ns1__modifyDataSetResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyDataSetResponse(soap, n, NULL, NULL,
                                                       NULL);
}

inline struct __ns1__modifyDataSetResponse *
soap_new_req___ns1__modifyDataSetResponse(struct soap *soap) {
  struct __ns1__modifyDataSetResponse *_p =
      soap_instantiate___ns1__modifyDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyDataSetResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyDataSetResponse *
soap_new_set___ns1__modifyDataSetResponse(
    struct soap *soap,
    ns1__modifyDataSetResponse *ns1__modifyDataSetResponse_) {
  struct __ns1__modifyDataSetResponse *_p =
      soap_instantiate___ns1__modifyDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyDataSetResponse(soap, _p);
    _p->ns1__modifyDataSetResponse_ = ns1__modifyDataSetResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__modifyDataSetResponse(
    struct soap *soap, struct __ns1__modifyDataSetResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyDataSetResponse(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteDataSetParameter
#define SOAP_TYPE_ICat3___ns1__deleteDataSetParameter (763)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteDataSetParameter(
    struct soap *, struct __ns1__deleteDataSetParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteDataSetParameter(
    struct soap *, const struct __ns1__deleteDataSetParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteDataSetParameter(
    struct soap *, const char *, int,
    const struct __ns1__deleteDataSetParameter *, const char *);
SOAP_FMAC3 struct __ns1__deleteDataSetParameter *SOAP_FMAC4
soap_in___ns1__deleteDataSetParameter(struct soap *, const char *,
                                      struct __ns1__deleteDataSetParameter *,
                                      const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteDataSetParameter(
    struct soap *, const struct __ns1__deleteDataSetParameter *, const char *,
    const char *);

#ifndef soap_write___ns1__deleteDataSetParameter
#define soap_write___ns1__deleteDataSetParameter(soap, data)                   \
  (ICat3::soap_serialize___ns1__deleteDataSetParameter(soap, data),            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteDataSetParameter(                          \
           soap, data, "-ns1:deleteDataSetParameter", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteDataSetParameter *SOAP_FMAC4
soap_get___ns1__deleteDataSetParameter(struct soap *,
                                       struct __ns1__deleteDataSetParameter *,
                                       const char *, const char *);

#ifndef soap_read___ns1__deleteDataSetParameter
#define soap_read___ns1__deleteDataSetParameter(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteDataSetParameter(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteDataSetParameter *SOAP_FMAC2
soap_instantiate___ns1__deleteDataSetParameter(struct soap *, int, const char *,
                                               const char *, size_t *);

inline struct __ns1__deleteDataSetParameter *
soap_new___ns1__deleteDataSetParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteDataSetParameter(soap, n, NULL, NULL,
                                                        NULL);
}

inline struct __ns1__deleteDataSetParameter *
soap_new_req___ns1__deleteDataSetParameter(struct soap *soap) {
  struct __ns1__deleteDataSetParameter *_p =
      soap_instantiate___ns1__deleteDataSetParameter(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__deleteDataSetParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteDataSetParameter *
soap_new_set___ns1__deleteDataSetParameter(
    struct soap *soap,
    ns1__deleteDataSetParameter *ns1__deleteDataSetParameter_) {
  struct __ns1__deleteDataSetParameter *_p =
      soap_instantiate___ns1__deleteDataSetParameter(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__deleteDataSetParameter(soap, _p);
    _p->ns1__deleteDataSetParameter_ = ns1__deleteDataSetParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteDataSetParameter(
    struct soap *soap, struct __ns1__deleteDataSetParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteDataSetParameter(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteDataSetParameterResponse
#define SOAP_TYPE_ICat3___ns1__deleteDataSetParameterResponse (762)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteDataSetParameterResponse(
    struct soap *, struct __ns1__deleteDataSetParameterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteDataSetParameterResponse(
    struct soap *, const struct __ns1__deleteDataSetParameterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteDataSetParameterResponse(
    struct soap *, const char *, int,
    const struct __ns1__deleteDataSetParameterResponse *, const char *);
SOAP_FMAC3 struct __ns1__deleteDataSetParameterResponse *SOAP_FMAC4
soap_in___ns1__deleteDataSetParameterResponse(
    struct soap *, const char *, struct __ns1__deleteDataSetParameterResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteDataSetParameterResponse(
    struct soap *, const struct __ns1__deleteDataSetParameterResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__deleteDataSetParameterResponse
#define soap_write___ns1__deleteDataSetParameterResponse(soap, data)           \
  (ICat3::soap_serialize___ns1__deleteDataSetParameterResponse(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteDataSetParameterResponse(                  \
           soap, data, "-ns1:deleteDataSetParameterResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteDataSetParameterResponse *SOAP_FMAC4
soap_get___ns1__deleteDataSetParameterResponse(
    struct soap *, struct __ns1__deleteDataSetParameterResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__deleteDataSetParameterResponse
#define soap_read___ns1__deleteDataSetParameterResponse(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteDataSetParameterResponse(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteDataSetParameterResponse *SOAP_FMAC2
soap_instantiate___ns1__deleteDataSetParameterResponse(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline struct __ns1__deleteDataSetParameterResponse *
soap_new___ns1__deleteDataSetParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteDataSetParameterResponse(soap, n, NULL,
                                                                NULL, NULL);
}

inline struct __ns1__deleteDataSetParameterResponse *
soap_new_req___ns1__deleteDataSetParameterResponse(struct soap *soap) {
  struct __ns1__deleteDataSetParameterResponse *_p =
      soap_instantiate___ns1__deleteDataSetParameterResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteDataSetParameterResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteDataSetParameterResponse *
soap_new_set___ns1__deleteDataSetParameterResponse(
    struct soap *soap,
    ns1__deleteDataSetParameterResponse *ns1__deleteDataSetParameterResponse_) {
  struct __ns1__deleteDataSetParameterResponse *_p =
      soap_instantiate___ns1__deleteDataSetParameterResponse(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteDataSetParameterResponse(soap, _p);
    _p->ns1__deleteDataSetParameterResponse_ =
        ns1__deleteDataSetParameterResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteDataSetParameterResponse(
    struct soap *soap, struct __ns1__deleteDataSetParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteDataSetParameterResponse(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteDataSet
#define SOAP_TYPE_ICat3___ns1__deleteDataSet (758)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__deleteDataSet(struct soap *, struct __ns1__deleteDataSet *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__deleteDataSet(struct soap *,
                                    const struct __ns1__deleteDataSet *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__deleteDataSet(struct soap *, const char *, int,
                              const struct __ns1__deleteDataSet *,
                              const char *);
SOAP_FMAC3 struct __ns1__deleteDataSet *SOAP_FMAC4
soap_in___ns1__deleteDataSet(struct soap *, const char *,
                             struct __ns1__deleteDataSet *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__deleteDataSet(struct soap *,
                              const struct __ns1__deleteDataSet *, const char *,
                              const char *);

#ifndef soap_write___ns1__deleteDataSet
#define soap_write___ns1__deleteDataSet(soap, data)                            \
  (ICat3::soap_serialize___ns1__deleteDataSet(soap, data),                     \
   soap_begin_send(soap) || ICat3::soap_put___ns1__deleteDataSet(              \
                                soap, data, "-ns1:deleteDataSet", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteDataSet *SOAP_FMAC4
soap_get___ns1__deleteDataSet(struct soap *, struct __ns1__deleteDataSet *,
                              const char *, const char *);

#ifndef soap_read___ns1__deleteDataSet
#define soap_read___ns1__deleteDataSet(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteDataSet(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteDataSet *SOAP_FMAC2
soap_instantiate___ns1__deleteDataSet(struct soap *, int, const char *,
                                      const char *, size_t *);

inline struct __ns1__deleteDataSet *
soap_new___ns1__deleteDataSet(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteDataSet(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__deleteDataSet *
soap_new_req___ns1__deleteDataSet(struct soap *soap) {
  struct __ns1__deleteDataSet *_p =
      soap_instantiate___ns1__deleteDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteDataSet(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteDataSet *
soap_new_set___ns1__deleteDataSet(struct soap *soap,
                                  ns1__deleteDataSet *ns1__deleteDataSet_) {
  struct __ns1__deleteDataSet *_p =
      soap_instantiate___ns1__deleteDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteDataSet(soap, _p);
    _p->ns1__deleteDataSet_ = ns1__deleteDataSet_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteDataSet(struct soap *soap,
                                             struct __ns1__deleteDataSet *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__deleteDataSet(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteDataSetResponse
#define SOAP_TYPE_ICat3___ns1__deleteDataSetResponse (757)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteDataSetResponse(
    struct soap *, struct __ns1__deleteDataSetResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteDataSetResponse(
    struct soap *, const struct __ns1__deleteDataSetResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteDataSetResponse(
    struct soap *, const char *, int,
    const struct __ns1__deleteDataSetResponse *, const char *);
SOAP_FMAC3 struct __ns1__deleteDataSetResponse *SOAP_FMAC4
soap_in___ns1__deleteDataSetResponse(struct soap *, const char *,
                                     struct __ns1__deleteDataSetResponse *,
                                     const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteDataSetResponse(
    struct soap *, const struct __ns1__deleteDataSetResponse *, const char *,
    const char *);

#ifndef soap_write___ns1__deleteDataSetResponse
#define soap_write___ns1__deleteDataSetResponse(soap, data)                    \
  (ICat3::soap_serialize___ns1__deleteDataSetResponse(soap, data),             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteDataSetResponse(                           \
           soap, data, "-ns1:deleteDataSetResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteDataSetResponse *SOAP_FMAC4
soap_get___ns1__deleteDataSetResponse(struct soap *,
                                      struct __ns1__deleteDataSetResponse *,
                                      const char *, const char *);

#ifndef soap_read___ns1__deleteDataSetResponse
#define soap_read___ns1__deleteDataSetResponse(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteDataSetResponse(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteDataSetResponse *SOAP_FMAC2
soap_instantiate___ns1__deleteDataSetResponse(struct soap *, int, const char *,
                                              const char *, size_t *);

inline struct __ns1__deleteDataSetResponse *
soap_new___ns1__deleteDataSetResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteDataSetResponse(soap, n, NULL, NULL,
                                                       NULL);
}

inline struct __ns1__deleteDataSetResponse *
soap_new_req___ns1__deleteDataSetResponse(struct soap *soap) {
  struct __ns1__deleteDataSetResponse *_p =
      soap_instantiate___ns1__deleteDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteDataSetResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteDataSetResponse *
soap_new_set___ns1__deleteDataSetResponse(
    struct soap *soap,
    ns1__deleteDataSetResponse *ns1__deleteDataSetResponse_) {
  struct __ns1__deleteDataSetResponse *_p =
      soap_instantiate___ns1__deleteDataSetResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteDataSetResponse(soap, _p);
    _p->ns1__deleteDataSetResponse_ = ns1__deleteDataSetResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteDataSetResponse(
    struct soap *soap, struct __ns1__deleteDataSetResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteDataSetResponse(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__createDataSets
#define SOAP_TYPE_ICat3___ns1__createDataSets (753)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__createDataSets(struct soap *,
                                   struct __ns1__createDataSets *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__createDataSets(struct soap *,
                                     const struct __ns1__createDataSets *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__createDataSets(struct soap *, const char *, int,
                               const struct __ns1__createDataSets *,
                               const char *);
SOAP_FMAC3 struct __ns1__createDataSets *SOAP_FMAC4
soap_in___ns1__createDataSets(struct soap *, const char *,
                              struct __ns1__createDataSets *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__createDataSets(struct soap *,
                               const struct __ns1__createDataSets *,
                               const char *, const char *);

#ifndef soap_write___ns1__createDataSets
#define soap_write___ns1__createDataSets(soap, data)                           \
  (ICat3::soap_serialize___ns1__createDataSets(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__createDataSets(             \
                                soap, data, "-ns1:createDataSets", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__createDataSets *SOAP_FMAC4
soap_get___ns1__createDataSets(struct soap *, struct __ns1__createDataSets *,
                               const char *, const char *);

#ifndef soap_read___ns1__createDataSets
#define soap_read___ns1__createDataSets(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__createDataSets(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__createDataSets *SOAP_FMAC2
soap_instantiate___ns1__createDataSets(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__createDataSets *
soap_new___ns1__createDataSets(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__createDataSets(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__createDataSets *
soap_new_req___ns1__createDataSets(struct soap *soap) {
  struct __ns1__createDataSets *_p =
      soap_instantiate___ns1__createDataSets(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__createDataSets(soap, _p);
  }
  return _p;
}

inline struct __ns1__createDataSets *
soap_new_set___ns1__createDataSets(struct soap *soap,
                                   ns1__createDataSets *ns1__createDataSets_) {
  struct __ns1__createDataSets *_p =
      soap_instantiate___ns1__createDataSets(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__createDataSets(soap, _p);
    _p->ns1__createDataSets_ = ns1__createDataSets_;
  }
  return _p;
}

inline void soap_delete___ns1__createDataSets(struct soap *soap,
                                              struct __ns1__createDataSets *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__createDataSets(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__createDataSet
#define SOAP_TYPE_ICat3___ns1__createDataSet (749)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__createDataSet(struct soap *, struct __ns1__createDataSet *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__createDataSet(struct soap *,
                                    const struct __ns1__createDataSet *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__createDataSet(struct soap *, const char *, int,
                              const struct __ns1__createDataSet *,
                              const char *);
SOAP_FMAC3 struct __ns1__createDataSet *SOAP_FMAC4
soap_in___ns1__createDataSet(struct soap *, const char *,
                             struct __ns1__createDataSet *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__createDataSet(struct soap *,
                              const struct __ns1__createDataSet *, const char *,
                              const char *);

#ifndef soap_write___ns1__createDataSet
#define soap_write___ns1__createDataSet(soap, data)                            \
  (ICat3::soap_serialize___ns1__createDataSet(soap, data),                     \
   soap_begin_send(soap) || ICat3::soap_put___ns1__createDataSet(              \
                                soap, data, "-ns1:createDataSet", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__createDataSet *SOAP_FMAC4
soap_get___ns1__createDataSet(struct soap *, struct __ns1__createDataSet *,
                              const char *, const char *);

#ifndef soap_read___ns1__createDataSet
#define soap_read___ns1__createDataSet(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__createDataSet(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__createDataSet *SOAP_FMAC2
soap_instantiate___ns1__createDataSet(struct soap *, int, const char *,
                                      const char *, size_t *);

inline struct __ns1__createDataSet *
soap_new___ns1__createDataSet(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__createDataSet(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__createDataSet *
soap_new_req___ns1__createDataSet(struct soap *soap) {
  struct __ns1__createDataSet *_p =
      soap_instantiate___ns1__createDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__createDataSet(soap, _p);
  }
  return _p;
}

inline struct __ns1__createDataSet *
soap_new_set___ns1__createDataSet(struct soap *soap,
                                  ns1__createDataSet *ns1__createDataSet_) {
  struct __ns1__createDataSet *_p =
      soap_instantiate___ns1__createDataSet(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__createDataSet(soap, _p);
    _p->ns1__createDataSet_ = ns1__createDataSet_;
  }
  return _p;
}

inline void soap_delete___ns1__createDataSet(struct soap *soap,
                                             struct __ns1__createDataSet *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__createDataSet(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getDatasets
#define SOAP_TYPE_ICat3___ns1__getDatasets (745)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getDatasets(struct soap *, struct __ns1__getDatasets *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__getDatasets(struct soap *,
                                  const struct __ns1__getDatasets *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getDatasets(struct soap *, const char *, int,
                            const struct __ns1__getDatasets *, const char *);
SOAP_FMAC3 struct __ns1__getDatasets *SOAP_FMAC4
soap_in___ns1__getDatasets(struct soap *, const char *,
                           struct __ns1__getDatasets *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getDatasets(struct soap *, const struct __ns1__getDatasets *,
                            const char *, const char *);

#ifndef soap_write___ns1__getDatasets
#define soap_write___ns1__getDatasets(soap, data)                              \
  (ICat3::soap_serialize___ns1__getDatasets(soap, data),                       \
   soap_begin_send(soap) || ICat3::soap_put___ns1__getDatasets(                \
                                soap, data, "-ns1:getDatasets", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getDatasets *SOAP_FMAC4
soap_get___ns1__getDatasets(struct soap *, struct __ns1__getDatasets *,
                            const char *, const char *);

#ifndef soap_read___ns1__getDatasets
#define soap_read___ns1__getDatasets(soap, data)                               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getDatasets(soap, data, NULL, NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getDatasets *SOAP_FMAC2
soap_instantiate___ns1__getDatasets(struct soap *, int, const char *,
                                    const char *, size_t *);

inline struct __ns1__getDatasets *soap_new___ns1__getDatasets(struct soap *soap,
                                                              int n = -1) {
  return soap_instantiate___ns1__getDatasets(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getDatasets *
soap_new_req___ns1__getDatasets(struct soap *soap) {
  struct __ns1__getDatasets *_p =
      soap_instantiate___ns1__getDatasets(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getDatasets(soap, _p);
  }
  return _p;
}

inline struct __ns1__getDatasets *
soap_new_set___ns1__getDatasets(struct soap *soap,
                                ns1__getDatasets *ns1__getDatasets_) {
  struct __ns1__getDatasets *_p =
      soap_instantiate___ns1__getDatasets(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getDatasets(soap, _p);
    _p->ns1__getDatasets_ = ns1__getDatasets_;
  }
  return _p;
}

inline void soap_delete___ns1__getDatasets(struct soap *soap,
                                           struct __ns1__getDatasets *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getDatasets(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getDatasetIncludes
#define SOAP_TYPE_ICat3___ns1__getDatasetIncludes (741)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getDatasetIncludes(struct soap *,
                                       struct __ns1__getDatasetIncludes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getDatasetIncludes(
    struct soap *, const struct __ns1__getDatasetIncludes *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getDatasetIncludes(struct soap *, const char *, int,
                                   const struct __ns1__getDatasetIncludes *,
                                   const char *);
SOAP_FMAC3 struct __ns1__getDatasetIncludes *SOAP_FMAC4
soap_in___ns1__getDatasetIncludes(struct soap *, const char *,
                                  struct __ns1__getDatasetIncludes *,
                                  const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getDatasetIncludes(struct soap *,
                                   const struct __ns1__getDatasetIncludes *,
                                   const char *, const char *);

#ifndef soap_write___ns1__getDatasetIncludes
#define soap_write___ns1__getDatasetIncludes(soap, data)                       \
  (ICat3::soap_serialize___ns1__getDatasetIncludes(soap, data),                \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getDatasetIncludes(                              \
           soap, data, "-ns1:getDatasetIncludes", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getDatasetIncludes *SOAP_FMAC4
soap_get___ns1__getDatasetIncludes(struct soap *,
                                   struct __ns1__getDatasetIncludes *,
                                   const char *, const char *);

#ifndef soap_read___ns1__getDatasetIncludes
#define soap_read___ns1__getDatasetIncludes(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getDatasetIncludes(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getDatasetIncludes *SOAP_FMAC2
soap_instantiate___ns1__getDatasetIncludes(struct soap *, int, const char *,
                                           const char *, size_t *);

inline struct __ns1__getDatasetIncludes *
soap_new___ns1__getDatasetIncludes(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getDatasetIncludes(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getDatasetIncludes *
soap_new_req___ns1__getDatasetIncludes(struct soap *soap) {
  struct __ns1__getDatasetIncludes *_p =
      soap_instantiate___ns1__getDatasetIncludes(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getDatasetIncludes(soap, _p);
  }
  return _p;
}

inline struct __ns1__getDatasetIncludes *soap_new_set___ns1__getDatasetIncludes(
    struct soap *soap, ns1__getDatasetIncludes *ns1__getDatasetIncludes_) {
  struct __ns1__getDatasetIncludes *_p =
      soap_instantiate___ns1__getDatasetIncludes(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getDatasetIncludes(soap, _p);
    _p->ns1__getDatasetIncludes_ = ns1__getDatasetIncludes_;
  }
  return _p;
}

inline void
soap_delete___ns1__getDatasetIncludes(struct soap *soap,
                                      struct __ns1__getDatasetIncludes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getDatasetIncludes(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getDataset
#define SOAP_TYPE_ICat3___ns1__getDataset (737)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getDataset(struct soap *, struct __ns1__getDataset *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__getDataset(struct soap *,
                                 const struct __ns1__getDataset *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getDataset(struct soap *, const char *, int,
                           const struct __ns1__getDataset *, const char *);
SOAP_FMAC3 struct __ns1__getDataset *SOAP_FMAC4
soap_in___ns1__getDataset(struct soap *, const char *,
                          struct __ns1__getDataset *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getDataset(struct soap *, const struct __ns1__getDataset *,
                           const char *, const char *);

#ifndef soap_write___ns1__getDataset
#define soap_write___ns1__getDataset(soap, data)                               \
  (ICat3::soap_serialize___ns1__getDataset(soap, data),                        \
   soap_begin_send(soap) || ICat3::soap_put___ns1__getDataset(                 \
                                soap, data, "-ns1:getDataset", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getDataset *SOAP_FMAC4
soap_get___ns1__getDataset(struct soap *, struct __ns1__getDataset *,
                           const char *, const char *);

#ifndef soap_read___ns1__getDataset
#define soap_read___ns1__getDataset(soap, data)                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getDataset(soap, data, NULL, NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getDataset *SOAP_FMAC2
soap_instantiate___ns1__getDataset(struct soap *, int, const char *,
                                   const char *, size_t *);

inline struct __ns1__getDataset *soap_new___ns1__getDataset(struct soap *soap,
                                                            int n = -1) {
  return soap_instantiate___ns1__getDataset(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getDataset *
soap_new_req___ns1__getDataset(struct soap *soap) {
  struct __ns1__getDataset *_p =
      soap_instantiate___ns1__getDataset(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getDataset(soap, _p);
  }
  return _p;
}

inline struct __ns1__getDataset *
soap_new_set___ns1__getDataset(struct soap *soap,
                               ns1__getDataset *ns1__getDataset_) {
  struct __ns1__getDataset *_p =
      soap_instantiate___ns1__getDataset(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getDataset(soap, _p);
    _p->ns1__getDataset_ = ns1__getDataset_;
  }
  return _p;
}

inline void soap_delete___ns1__getDataset(struct soap *soap,
                                          struct __ns1__getDataset *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__getDataset(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeSampleParameter
#define SOAP_TYPE_ICat3___ns1__removeSampleParameter (733)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeSampleParameter(
    struct soap *, struct __ns1__removeSampleParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeSampleParameter(
    struct soap *, const struct __ns1__removeSampleParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeSampleParameter(
    struct soap *, const char *, int,
    const struct __ns1__removeSampleParameter *, const char *);
SOAP_FMAC3 struct __ns1__removeSampleParameter *SOAP_FMAC4
soap_in___ns1__removeSampleParameter(struct soap *, const char *,
                                     struct __ns1__removeSampleParameter *,
                                     const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeSampleParameter(
    struct soap *, const struct __ns1__removeSampleParameter *, const char *,
    const char *);

#ifndef soap_write___ns1__removeSampleParameter
#define soap_write___ns1__removeSampleParameter(soap, data)                    \
  (ICat3::soap_serialize___ns1__removeSampleParameter(soap, data),             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeSampleParameter(                           \
           soap, data, "-ns1:removeSampleParameter", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeSampleParameter *SOAP_FMAC4
soap_get___ns1__removeSampleParameter(struct soap *,
                                      struct __ns1__removeSampleParameter *,
                                      const char *, const char *);

#ifndef soap_read___ns1__removeSampleParameter
#define soap_read___ns1__removeSampleParameter(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeSampleParameter(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeSampleParameter *SOAP_FMAC2
soap_instantiate___ns1__removeSampleParameter(struct soap *, int, const char *,
                                              const char *, size_t *);

inline struct __ns1__removeSampleParameter *
soap_new___ns1__removeSampleParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeSampleParameter(soap, n, NULL, NULL,
                                                       NULL);
}

inline struct __ns1__removeSampleParameter *
soap_new_req___ns1__removeSampleParameter(struct soap *soap) {
  struct __ns1__removeSampleParameter *_p =
      soap_instantiate___ns1__removeSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeSampleParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeSampleParameter *
soap_new_set___ns1__removeSampleParameter(
    struct soap *soap,
    ns1__removeSampleParameter *ns1__removeSampleParameter_) {
  struct __ns1__removeSampleParameter *_p =
      soap_instantiate___ns1__removeSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeSampleParameter(soap, _p);
    _p->ns1__removeSampleParameter_ = ns1__removeSampleParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__removeSampleParameter(
    struct soap *soap, struct __ns1__removeSampleParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeSampleParameter(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeSampleParameterResponse
#define SOAP_TYPE_ICat3___ns1__removeSampleParameterResponse (732)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeSampleParameterResponse(
    struct soap *, struct __ns1__removeSampleParameterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeSampleParameterResponse(
    struct soap *, const struct __ns1__removeSampleParameterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeSampleParameterResponse(
    struct soap *, const char *, int,
    const struct __ns1__removeSampleParameterResponse *, const char *);
SOAP_FMAC3 struct __ns1__removeSampleParameterResponse *SOAP_FMAC4
soap_in___ns1__removeSampleParameterResponse(
    struct soap *, const char *, struct __ns1__removeSampleParameterResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeSampleParameterResponse(
    struct soap *, const struct __ns1__removeSampleParameterResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__removeSampleParameterResponse
#define soap_write___ns1__removeSampleParameterResponse(soap, data)            \
  (ICat3::soap_serialize___ns1__removeSampleParameterResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeSampleParameterResponse(                   \
           soap, data, "-ns1:removeSampleParameterResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeSampleParameterResponse *SOAP_FMAC4
soap_get___ns1__removeSampleParameterResponse(
    struct soap *, struct __ns1__removeSampleParameterResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__removeSampleParameterResponse
#define soap_read___ns1__removeSampleParameterResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeSampleParameterResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeSampleParameterResponse *SOAP_FMAC2
soap_instantiate___ns1__removeSampleParameterResponse(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline struct __ns1__removeSampleParameterResponse *
soap_new___ns1__removeSampleParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeSampleParameterResponse(soap, n, NULL,
                                                               NULL, NULL);
}

inline struct __ns1__removeSampleParameterResponse *
soap_new_req___ns1__removeSampleParameterResponse(struct soap *soap) {
  struct __ns1__removeSampleParameterResponse *_p =
      soap_instantiate___ns1__removeSampleParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    soap_default___ns1__removeSampleParameterResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeSampleParameterResponse *
soap_new_set___ns1__removeSampleParameterResponse(
    struct soap *soap,
    ns1__removeSampleParameterResponse *ns1__removeSampleParameterResponse_) {
  struct __ns1__removeSampleParameterResponse *_p =
      soap_instantiate___ns1__removeSampleParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    soap_default___ns1__removeSampleParameterResponse(soap, _p);
    _p->ns1__removeSampleParameterResponse_ =
        ns1__removeSampleParameterResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__removeSampleParameterResponse(
    struct soap *soap, struct __ns1__removeSampleParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeSampleParameterResponse(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeSample
#define SOAP_TYPE_ICat3___ns1__removeSample (728)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__removeSample(struct soap *, struct __ns1__removeSample *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__removeSample(struct soap *,
                                   const struct __ns1__removeSample *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__removeSample(struct soap *, const char *, int,
                             const struct __ns1__removeSample *, const char *);
SOAP_FMAC3 struct __ns1__removeSample *SOAP_FMAC4
soap_in___ns1__removeSample(struct soap *, const char *,
                            struct __ns1__removeSample *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__removeSample(struct soap *, const struct __ns1__removeSample *,
                             const char *, const char *);

#ifndef soap_write___ns1__removeSample
#define soap_write___ns1__removeSample(soap, data)                             \
  (ICat3::soap_serialize___ns1__removeSample(soap, data),                      \
   soap_begin_send(soap) || ICat3::soap_put___ns1__removeSample(               \
                                soap, data, "-ns1:removeSample", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeSample *SOAP_FMAC4
soap_get___ns1__removeSample(struct soap *, struct __ns1__removeSample *,
                             const char *, const char *);

#ifndef soap_read___ns1__removeSample
#define soap_read___ns1__removeSample(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeSample(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeSample *SOAP_FMAC2
soap_instantiate___ns1__removeSample(struct soap *, int, const char *,
                                     const char *, size_t *);

inline struct __ns1__removeSample *
soap_new___ns1__removeSample(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeSample(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__removeSample *
soap_new_req___ns1__removeSample(struct soap *soap) {
  struct __ns1__removeSample *_p =
      soap_instantiate___ns1__removeSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeSample(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeSample *
soap_new_set___ns1__removeSample(struct soap *soap,
                                 ns1__removeSample *ns1__removeSample_) {
  struct __ns1__removeSample *_p =
      soap_instantiate___ns1__removeSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeSample(soap, _p);
    _p->ns1__removeSample_ = ns1__removeSample_;
  }
  return _p;
}

inline void soap_delete___ns1__removeSample(struct soap *soap,
                                            struct __ns1__removeSample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__removeSample(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeSampleResponse
#define SOAP_TYPE_ICat3___ns1__removeSampleResponse (727)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__removeSampleResponse(struct soap *,
                                         struct __ns1__removeSampleResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeSampleResponse(
    struct soap *, const struct __ns1__removeSampleResponse *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__removeSampleResponse(struct soap *, const char *, int,
                                     const struct __ns1__removeSampleResponse *,
                                     const char *);
SOAP_FMAC3 struct __ns1__removeSampleResponse *SOAP_FMAC4
soap_in___ns1__removeSampleResponse(struct soap *, const char *,
                                    struct __ns1__removeSampleResponse *,
                                    const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__removeSampleResponse(struct soap *,
                                     const struct __ns1__removeSampleResponse *,
                                     const char *, const char *);

#ifndef soap_write___ns1__removeSampleResponse
#define soap_write___ns1__removeSampleResponse(soap, data)                     \
  (ICat3::soap_serialize___ns1__removeSampleResponse(soap, data),              \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeSampleResponse(                            \
           soap, data, "-ns1:removeSampleResponse", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeSampleResponse *SOAP_FMAC4
soap_get___ns1__removeSampleResponse(struct soap *,
                                     struct __ns1__removeSampleResponse *,
                                     const char *, const char *);

#ifndef soap_read___ns1__removeSampleResponse
#define soap_read___ns1__removeSampleResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeSampleResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeSampleResponse *SOAP_FMAC2
soap_instantiate___ns1__removeSampleResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline struct __ns1__removeSampleResponse *
soap_new___ns1__removeSampleResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeSampleResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline struct __ns1__removeSampleResponse *
soap_new_req___ns1__removeSampleResponse(struct soap *soap) {
  struct __ns1__removeSampleResponse *_p =
      soap_instantiate___ns1__removeSampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeSampleResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeSampleResponse *
soap_new_set___ns1__removeSampleResponse(
    struct soap *soap, ns1__removeSampleResponse *ns1__removeSampleResponse_) {
  struct __ns1__removeSampleResponse *_p =
      soap_instantiate___ns1__removeSampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeSampleResponse(soap, _p);
    _p->ns1__removeSampleResponse_ = ns1__removeSampleResponse_;
  }
  return _p;
}

inline void
soap_delete___ns1__removeSampleResponse(struct soap *soap,
                                        struct __ns1__removeSampleResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeSampleResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removePublication
#define SOAP_TYPE_ICat3___ns1__removePublication (723)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__removePublication(struct soap *,
                                      struct __ns1__removePublication *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removePublication(
    struct soap *, const struct __ns1__removePublication *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__removePublication(struct soap *, const char *, int,
                                  const struct __ns1__removePublication *,
                                  const char *);
SOAP_FMAC3 struct __ns1__removePublication *SOAP_FMAC4
soap_in___ns1__removePublication(struct soap *, const char *,
                                 struct __ns1__removePublication *,
                                 const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__removePublication(struct soap *,
                                  const struct __ns1__removePublication *,
                                  const char *, const char *);

#ifndef soap_write___ns1__removePublication
#define soap_write___ns1__removePublication(soap, data)                        \
  (ICat3::soap_serialize___ns1__removePublication(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put___ns1__removePublication(          \
                                soap, data, "-ns1:removePublication", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removePublication *SOAP_FMAC4
soap_get___ns1__removePublication(struct soap *,
                                  struct __ns1__removePublication *,
                                  const char *, const char *);

#ifndef soap_read___ns1__removePublication
#define soap_read___ns1__removePublication(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removePublication(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removePublication *SOAP_FMAC2
soap_instantiate___ns1__removePublication(struct soap *, int, const char *,
                                          const char *, size_t *);

inline struct __ns1__removePublication *
soap_new___ns1__removePublication(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removePublication(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__removePublication *
soap_new_req___ns1__removePublication(struct soap *soap) {
  struct __ns1__removePublication *_p =
      soap_instantiate___ns1__removePublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removePublication(soap, _p);
  }
  return _p;
}

inline struct __ns1__removePublication *soap_new_set___ns1__removePublication(
    struct soap *soap, ns1__removePublication *ns1__removePublication_) {
  struct __ns1__removePublication *_p =
      soap_instantiate___ns1__removePublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removePublication(soap, _p);
    _p->ns1__removePublication_ = ns1__removePublication_;
  }
  return _p;
}

inline void
soap_delete___ns1__removePublication(struct soap *soap,
                                     struct __ns1__removePublication *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removePublication(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removePublicationResponse
#define SOAP_TYPE_ICat3___ns1__removePublicationResponse (722)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removePublicationResponse(
    struct soap *, struct __ns1__removePublicationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removePublicationResponse(
    struct soap *, const struct __ns1__removePublicationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removePublicationResponse(
    struct soap *, const char *, int,
    const struct __ns1__removePublicationResponse *, const char *);
SOAP_FMAC3 struct __ns1__removePublicationResponse *SOAP_FMAC4
soap_in___ns1__removePublicationResponse(
    struct soap *, const char *, struct __ns1__removePublicationResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removePublicationResponse(
    struct soap *, const struct __ns1__removePublicationResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__removePublicationResponse
#define soap_write___ns1__removePublicationResponse(soap, data)                \
  (ICat3::soap_serialize___ns1__removePublicationResponse(soap, data),         \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removePublicationResponse(                       \
           soap, data, "-ns1:removePublicationResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removePublicationResponse *SOAP_FMAC4
soap_get___ns1__removePublicationResponse(
    struct soap *, struct __ns1__removePublicationResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__removePublicationResponse
#define soap_read___ns1__removePublicationResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removePublicationResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removePublicationResponse *SOAP_FMAC2
soap_instantiate___ns1__removePublicationResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline struct __ns1__removePublicationResponse *
soap_new___ns1__removePublicationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removePublicationResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline struct __ns1__removePublicationResponse *
soap_new_req___ns1__removePublicationResponse(struct soap *soap) {
  struct __ns1__removePublicationResponse *_p =
      soap_instantiate___ns1__removePublicationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__removePublicationResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__removePublicationResponse *
soap_new_set___ns1__removePublicationResponse(
    struct soap *soap,
    ns1__removePublicationResponse *ns1__removePublicationResponse_) {
  struct __ns1__removePublicationResponse *_p =
      soap_instantiate___ns1__removePublicationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__removePublicationResponse(soap, _p);
    _p->ns1__removePublicationResponse_ = ns1__removePublicationResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__removePublicationResponse(
    struct soap *soap, struct __ns1__removePublicationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removePublicationResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeInvestigator
#define SOAP_TYPE_ICat3___ns1__removeInvestigator (718)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__removeInvestigator(struct soap *,
                                       struct __ns1__removeInvestigator *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeInvestigator(
    struct soap *, const struct __ns1__removeInvestigator *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__removeInvestigator(struct soap *, const char *, int,
                                   const struct __ns1__removeInvestigator *,
                                   const char *);
SOAP_FMAC3 struct __ns1__removeInvestigator *SOAP_FMAC4
soap_in___ns1__removeInvestigator(struct soap *, const char *,
                                  struct __ns1__removeInvestigator *,
                                  const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__removeInvestigator(struct soap *,
                                   const struct __ns1__removeInvestigator *,
                                   const char *, const char *);

#ifndef soap_write___ns1__removeInvestigator
#define soap_write___ns1__removeInvestigator(soap, data)                       \
  (ICat3::soap_serialize___ns1__removeInvestigator(soap, data),                \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeInvestigator(                              \
           soap, data, "-ns1:removeInvestigator", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeInvestigator *SOAP_FMAC4
soap_get___ns1__removeInvestigator(struct soap *,
                                   struct __ns1__removeInvestigator *,
                                   const char *, const char *);

#ifndef soap_read___ns1__removeInvestigator
#define soap_read___ns1__removeInvestigator(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeInvestigator(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeInvestigator *SOAP_FMAC2
soap_instantiate___ns1__removeInvestigator(struct soap *, int, const char *,
                                           const char *, size_t *);

inline struct __ns1__removeInvestigator *
soap_new___ns1__removeInvestigator(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeInvestigator(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__removeInvestigator *
soap_new_req___ns1__removeInvestigator(struct soap *soap) {
  struct __ns1__removeInvestigator *_p =
      soap_instantiate___ns1__removeInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeInvestigator(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeInvestigator *soap_new_set___ns1__removeInvestigator(
    struct soap *soap, ns1__removeInvestigator *ns1__removeInvestigator_) {
  struct __ns1__removeInvestigator *_p =
      soap_instantiate___ns1__removeInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeInvestigator(soap, _p);
    _p->ns1__removeInvestigator_ = ns1__removeInvestigator_;
  }
  return _p;
}

inline void
soap_delete___ns1__removeInvestigator(struct soap *soap,
                                      struct __ns1__removeInvestigator *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeInvestigator(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeInvestigatorResponse
#define SOAP_TYPE_ICat3___ns1__removeInvestigatorResponse (717)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeInvestigatorResponse(
    struct soap *, struct __ns1__removeInvestigatorResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeInvestigatorResponse(
    struct soap *, const struct __ns1__removeInvestigatorResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeInvestigatorResponse(
    struct soap *, const char *, int,
    const struct __ns1__removeInvestigatorResponse *, const char *);
SOAP_FMAC3 struct __ns1__removeInvestigatorResponse *SOAP_FMAC4
soap_in___ns1__removeInvestigatorResponse(
    struct soap *, const char *, struct __ns1__removeInvestigatorResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeInvestigatorResponse(
    struct soap *, const struct __ns1__removeInvestigatorResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__removeInvestigatorResponse
#define soap_write___ns1__removeInvestigatorResponse(soap, data)               \
  (ICat3::soap_serialize___ns1__removeInvestigatorResponse(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeInvestigatorResponse(                      \
           soap, data, "-ns1:removeInvestigatorResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeInvestigatorResponse *SOAP_FMAC4
soap_get___ns1__removeInvestigatorResponse(
    struct soap *, struct __ns1__removeInvestigatorResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__removeInvestigatorResponse
#define soap_read___ns1__removeInvestigatorResponse(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeInvestigatorResponse(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeInvestigatorResponse *SOAP_FMAC2
soap_instantiate___ns1__removeInvestigatorResponse(struct soap *, int,
                                                   const char *, const char *,
                                                   size_t *);

inline struct __ns1__removeInvestigatorResponse *
soap_new___ns1__removeInvestigatorResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeInvestigatorResponse(soap, n, NULL, NULL,
                                                            NULL);
}

inline struct __ns1__removeInvestigatorResponse *
soap_new_req___ns1__removeInvestigatorResponse(struct soap *soap) {
  struct __ns1__removeInvestigatorResponse *_p =
      soap_instantiate___ns1__removeInvestigatorResponse(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__removeInvestigatorResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeInvestigatorResponse *
soap_new_set___ns1__removeInvestigatorResponse(
    struct soap *soap,
    ns1__removeInvestigatorResponse *ns1__removeInvestigatorResponse_) {
  struct __ns1__removeInvestigatorResponse *_p =
      soap_instantiate___ns1__removeInvestigatorResponse(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__removeInvestigatorResponse(soap, _p);
    _p->ns1__removeInvestigatorResponse_ = ns1__removeInvestigatorResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__removeInvestigatorResponse(
    struct soap *soap, struct __ns1__removeInvestigatorResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeInvestigatorResponse(struct soap *, int, int, void *,
                                            size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeKeyword
#define SOAP_TYPE_ICat3___ns1__removeKeyword (713)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__removeKeyword(struct soap *, struct __ns1__removeKeyword *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__removeKeyword(struct soap *,
                                    const struct __ns1__removeKeyword *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__removeKeyword(struct soap *, const char *, int,
                              const struct __ns1__removeKeyword *,
                              const char *);
SOAP_FMAC3 struct __ns1__removeKeyword *SOAP_FMAC4
soap_in___ns1__removeKeyword(struct soap *, const char *,
                             struct __ns1__removeKeyword *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__removeKeyword(struct soap *,
                              const struct __ns1__removeKeyword *, const char *,
                              const char *);

#ifndef soap_write___ns1__removeKeyword
#define soap_write___ns1__removeKeyword(soap, data)                            \
  (ICat3::soap_serialize___ns1__removeKeyword(soap, data),                     \
   soap_begin_send(soap) || ICat3::soap_put___ns1__removeKeyword(              \
                                soap, data, "-ns1:removeKeyword", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeKeyword *SOAP_FMAC4
soap_get___ns1__removeKeyword(struct soap *, struct __ns1__removeKeyword *,
                              const char *, const char *);

#ifndef soap_read___ns1__removeKeyword
#define soap_read___ns1__removeKeyword(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeKeyword(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeKeyword *SOAP_FMAC2
soap_instantiate___ns1__removeKeyword(struct soap *, int, const char *,
                                      const char *, size_t *);

inline struct __ns1__removeKeyword *
soap_new___ns1__removeKeyword(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeKeyword(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__removeKeyword *
soap_new_req___ns1__removeKeyword(struct soap *soap) {
  struct __ns1__removeKeyword *_p =
      soap_instantiate___ns1__removeKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeKeyword(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeKeyword *
soap_new_set___ns1__removeKeyword(struct soap *soap,
                                  ns1__removeKeyword *ns1__removeKeyword_) {
  struct __ns1__removeKeyword *_p =
      soap_instantiate___ns1__removeKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeKeyword(soap, _p);
    _p->ns1__removeKeyword_ = ns1__removeKeyword_;
  }
  return _p;
}

inline void soap_delete___ns1__removeKeyword(struct soap *soap,
                                             struct __ns1__removeKeyword *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__removeKeyword(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeKeywordResponse
#define SOAP_TYPE_ICat3___ns1__removeKeywordResponse (712)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeKeywordResponse(
    struct soap *, struct __ns1__removeKeywordResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeKeywordResponse(
    struct soap *, const struct __ns1__removeKeywordResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeKeywordResponse(
    struct soap *, const char *, int,
    const struct __ns1__removeKeywordResponse *, const char *);
SOAP_FMAC3 struct __ns1__removeKeywordResponse *SOAP_FMAC4
soap_in___ns1__removeKeywordResponse(struct soap *, const char *,
                                     struct __ns1__removeKeywordResponse *,
                                     const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeKeywordResponse(
    struct soap *, const struct __ns1__removeKeywordResponse *, const char *,
    const char *);

#ifndef soap_write___ns1__removeKeywordResponse
#define soap_write___ns1__removeKeywordResponse(soap, data)                    \
  (ICat3::soap_serialize___ns1__removeKeywordResponse(soap, data),             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeKeywordResponse(                           \
           soap, data, "-ns1:removeKeywordResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeKeywordResponse *SOAP_FMAC4
soap_get___ns1__removeKeywordResponse(struct soap *,
                                      struct __ns1__removeKeywordResponse *,
                                      const char *, const char *);

#ifndef soap_read___ns1__removeKeywordResponse
#define soap_read___ns1__removeKeywordResponse(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeKeywordResponse(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeKeywordResponse *SOAP_FMAC2
soap_instantiate___ns1__removeKeywordResponse(struct soap *, int, const char *,
                                              const char *, size_t *);

inline struct __ns1__removeKeywordResponse *
soap_new___ns1__removeKeywordResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeKeywordResponse(soap, n, NULL, NULL,
                                                       NULL);
}

inline struct __ns1__removeKeywordResponse *
soap_new_req___ns1__removeKeywordResponse(struct soap *soap) {
  struct __ns1__removeKeywordResponse *_p =
      soap_instantiate___ns1__removeKeywordResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeKeywordResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeKeywordResponse *
soap_new_set___ns1__removeKeywordResponse(
    struct soap *soap,
    ns1__removeKeywordResponse *ns1__removeKeywordResponse_) {
  struct __ns1__removeKeywordResponse *_p =
      soap_instantiate___ns1__removeKeywordResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeKeywordResponse(soap, _p);
    _p->ns1__removeKeywordResponse_ = ns1__removeKeywordResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__removeKeywordResponse(
    struct soap *soap, struct __ns1__removeKeywordResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeKeywordResponse(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifySampleParameter
#define SOAP_TYPE_ICat3___ns1__modifySampleParameter (708)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifySampleParameter(
    struct soap *, struct __ns1__modifySampleParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifySampleParameter(
    struct soap *, const struct __ns1__modifySampleParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifySampleParameter(
    struct soap *, const char *, int,
    const struct __ns1__modifySampleParameter *, const char *);
SOAP_FMAC3 struct __ns1__modifySampleParameter *SOAP_FMAC4
soap_in___ns1__modifySampleParameter(struct soap *, const char *,
                                     struct __ns1__modifySampleParameter *,
                                     const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifySampleParameter(
    struct soap *, const struct __ns1__modifySampleParameter *, const char *,
    const char *);

#ifndef soap_write___ns1__modifySampleParameter
#define soap_write___ns1__modifySampleParameter(soap, data)                    \
  (ICat3::soap_serialize___ns1__modifySampleParameter(soap, data),             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifySampleParameter(                           \
           soap, data, "-ns1:modifySampleParameter", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifySampleParameter *SOAP_FMAC4
soap_get___ns1__modifySampleParameter(struct soap *,
                                      struct __ns1__modifySampleParameter *,
                                      const char *, const char *);

#ifndef soap_read___ns1__modifySampleParameter
#define soap_read___ns1__modifySampleParameter(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifySampleParameter(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifySampleParameter *SOAP_FMAC2
soap_instantiate___ns1__modifySampleParameter(struct soap *, int, const char *,
                                              const char *, size_t *);

inline struct __ns1__modifySampleParameter *
soap_new___ns1__modifySampleParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifySampleParameter(soap, n, NULL, NULL,
                                                       NULL);
}

inline struct __ns1__modifySampleParameter *
soap_new_req___ns1__modifySampleParameter(struct soap *soap) {
  struct __ns1__modifySampleParameter *_p =
      soap_instantiate___ns1__modifySampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifySampleParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifySampleParameter *
soap_new_set___ns1__modifySampleParameter(
    struct soap *soap,
    ns1__modifySampleParameter *ns1__modifySampleParameter_) {
  struct __ns1__modifySampleParameter *_p =
      soap_instantiate___ns1__modifySampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifySampleParameter(soap, _p);
    _p->ns1__modifySampleParameter_ = ns1__modifySampleParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__modifySampleParameter(
    struct soap *soap, struct __ns1__modifySampleParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifySampleParameter(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifySampleParameterResponse
#define SOAP_TYPE_ICat3___ns1__modifySampleParameterResponse (707)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifySampleParameterResponse(
    struct soap *, struct __ns1__modifySampleParameterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifySampleParameterResponse(
    struct soap *, const struct __ns1__modifySampleParameterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifySampleParameterResponse(
    struct soap *, const char *, int,
    const struct __ns1__modifySampleParameterResponse *, const char *);
SOAP_FMAC3 struct __ns1__modifySampleParameterResponse *SOAP_FMAC4
soap_in___ns1__modifySampleParameterResponse(
    struct soap *, const char *, struct __ns1__modifySampleParameterResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifySampleParameterResponse(
    struct soap *, const struct __ns1__modifySampleParameterResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__modifySampleParameterResponse
#define soap_write___ns1__modifySampleParameterResponse(soap, data)            \
  (ICat3::soap_serialize___ns1__modifySampleParameterResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifySampleParameterResponse(                   \
           soap, data, "-ns1:modifySampleParameterResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifySampleParameterResponse *SOAP_FMAC4
soap_get___ns1__modifySampleParameterResponse(
    struct soap *, struct __ns1__modifySampleParameterResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__modifySampleParameterResponse
#define soap_read___ns1__modifySampleParameterResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifySampleParameterResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifySampleParameterResponse *SOAP_FMAC2
soap_instantiate___ns1__modifySampleParameterResponse(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline struct __ns1__modifySampleParameterResponse *
soap_new___ns1__modifySampleParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifySampleParameterResponse(soap, n, NULL,
                                                               NULL, NULL);
}

inline struct __ns1__modifySampleParameterResponse *
soap_new_req___ns1__modifySampleParameterResponse(struct soap *soap) {
  struct __ns1__modifySampleParameterResponse *_p =
      soap_instantiate___ns1__modifySampleParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    soap_default___ns1__modifySampleParameterResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifySampleParameterResponse *
soap_new_set___ns1__modifySampleParameterResponse(
    struct soap *soap,
    ns1__modifySampleParameterResponse *ns1__modifySampleParameterResponse_) {
  struct __ns1__modifySampleParameterResponse *_p =
      soap_instantiate___ns1__modifySampleParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    soap_default___ns1__modifySampleParameterResponse(soap, _p);
    _p->ns1__modifySampleParameterResponse_ =
        ns1__modifySampleParameterResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__modifySampleParameterResponse(
    struct soap *soap, struct __ns1__modifySampleParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifySampleParameterResponse(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyPublication
#define SOAP_TYPE_ICat3___ns1__modifyPublication (703)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__modifyPublication(struct soap *,
                                      struct __ns1__modifyPublication *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyPublication(
    struct soap *, const struct __ns1__modifyPublication *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__modifyPublication(struct soap *, const char *, int,
                                  const struct __ns1__modifyPublication *,
                                  const char *);
SOAP_FMAC3 struct __ns1__modifyPublication *SOAP_FMAC4
soap_in___ns1__modifyPublication(struct soap *, const char *,
                                 struct __ns1__modifyPublication *,
                                 const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__modifyPublication(struct soap *,
                                  const struct __ns1__modifyPublication *,
                                  const char *, const char *);

#ifndef soap_write___ns1__modifyPublication
#define soap_write___ns1__modifyPublication(soap, data)                        \
  (ICat3::soap_serialize___ns1__modifyPublication(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put___ns1__modifyPublication(          \
                                soap, data, "-ns1:modifyPublication", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyPublication *SOAP_FMAC4
soap_get___ns1__modifyPublication(struct soap *,
                                  struct __ns1__modifyPublication *,
                                  const char *, const char *);

#ifndef soap_read___ns1__modifyPublication
#define soap_read___ns1__modifyPublication(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyPublication(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyPublication *SOAP_FMAC2
soap_instantiate___ns1__modifyPublication(struct soap *, int, const char *,
                                          const char *, size_t *);

inline struct __ns1__modifyPublication *
soap_new___ns1__modifyPublication(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyPublication(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__modifyPublication *
soap_new_req___ns1__modifyPublication(struct soap *soap) {
  struct __ns1__modifyPublication *_p =
      soap_instantiate___ns1__modifyPublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyPublication(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyPublication *soap_new_set___ns1__modifyPublication(
    struct soap *soap, ns1__modifyPublication *ns1__modifyPublication_) {
  struct __ns1__modifyPublication *_p =
      soap_instantiate___ns1__modifyPublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyPublication(soap, _p);
    _p->ns1__modifyPublication_ = ns1__modifyPublication_;
  }
  return _p;
}

inline void
soap_delete___ns1__modifyPublication(struct soap *soap,
                                     struct __ns1__modifyPublication *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyPublication(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyPublicationResponse
#define SOAP_TYPE_ICat3___ns1__modifyPublicationResponse (702)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifyPublicationResponse(
    struct soap *, struct __ns1__modifyPublicationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyPublicationResponse(
    struct soap *, const struct __ns1__modifyPublicationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifyPublicationResponse(
    struct soap *, const char *, int,
    const struct __ns1__modifyPublicationResponse *, const char *);
SOAP_FMAC3 struct __ns1__modifyPublicationResponse *SOAP_FMAC4
soap_in___ns1__modifyPublicationResponse(
    struct soap *, const char *, struct __ns1__modifyPublicationResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifyPublicationResponse(
    struct soap *, const struct __ns1__modifyPublicationResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__modifyPublicationResponse
#define soap_write___ns1__modifyPublicationResponse(soap, data)                \
  (ICat3::soap_serialize___ns1__modifyPublicationResponse(soap, data),         \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifyPublicationResponse(                       \
           soap, data, "-ns1:modifyPublicationResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyPublicationResponse *SOAP_FMAC4
soap_get___ns1__modifyPublicationResponse(
    struct soap *, struct __ns1__modifyPublicationResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__modifyPublicationResponse
#define soap_read___ns1__modifyPublicationResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyPublicationResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyPublicationResponse *SOAP_FMAC2
soap_instantiate___ns1__modifyPublicationResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline struct __ns1__modifyPublicationResponse *
soap_new___ns1__modifyPublicationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyPublicationResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline struct __ns1__modifyPublicationResponse *
soap_new_req___ns1__modifyPublicationResponse(struct soap *soap) {
  struct __ns1__modifyPublicationResponse *_p =
      soap_instantiate___ns1__modifyPublicationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__modifyPublicationResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyPublicationResponse *
soap_new_set___ns1__modifyPublicationResponse(
    struct soap *soap,
    ns1__modifyPublicationResponse *ns1__modifyPublicationResponse_) {
  struct __ns1__modifyPublicationResponse *_p =
      soap_instantiate___ns1__modifyPublicationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__modifyPublicationResponse(soap, _p);
    _p->ns1__modifyPublicationResponse_ = ns1__modifyPublicationResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__modifyPublicationResponse(
    struct soap *soap, struct __ns1__modifyPublicationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyPublicationResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifySample
#define SOAP_TYPE_ICat3___ns1__modifySample (698)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__modifySample(struct soap *, struct __ns1__modifySample *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__modifySample(struct soap *,
                                   const struct __ns1__modifySample *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__modifySample(struct soap *, const char *, int,
                             const struct __ns1__modifySample *, const char *);
SOAP_FMAC3 struct __ns1__modifySample *SOAP_FMAC4
soap_in___ns1__modifySample(struct soap *, const char *,
                            struct __ns1__modifySample *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__modifySample(struct soap *, const struct __ns1__modifySample *,
                             const char *, const char *);

#ifndef soap_write___ns1__modifySample
#define soap_write___ns1__modifySample(soap, data)                             \
  (ICat3::soap_serialize___ns1__modifySample(soap, data),                      \
   soap_begin_send(soap) || ICat3::soap_put___ns1__modifySample(               \
                                soap, data, "-ns1:modifySample", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifySample *SOAP_FMAC4
soap_get___ns1__modifySample(struct soap *, struct __ns1__modifySample *,
                             const char *, const char *);

#ifndef soap_read___ns1__modifySample
#define soap_read___ns1__modifySample(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifySample(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifySample *SOAP_FMAC2
soap_instantiate___ns1__modifySample(struct soap *, int, const char *,
                                     const char *, size_t *);

inline struct __ns1__modifySample *
soap_new___ns1__modifySample(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifySample(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__modifySample *
soap_new_req___ns1__modifySample(struct soap *soap) {
  struct __ns1__modifySample *_p =
      soap_instantiate___ns1__modifySample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifySample(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifySample *
soap_new_set___ns1__modifySample(struct soap *soap,
                                 ns1__modifySample *ns1__modifySample_) {
  struct __ns1__modifySample *_p =
      soap_instantiate___ns1__modifySample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifySample(soap, _p);
    _p->ns1__modifySample_ = ns1__modifySample_;
  }
  return _p;
}

inline void soap_delete___ns1__modifySample(struct soap *soap,
                                            struct __ns1__modifySample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__modifySample(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifySampleResponse
#define SOAP_TYPE_ICat3___ns1__modifySampleResponse (697)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__modifySampleResponse(struct soap *,
                                         struct __ns1__modifySampleResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifySampleResponse(
    struct soap *, const struct __ns1__modifySampleResponse *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__modifySampleResponse(struct soap *, const char *, int,
                                     const struct __ns1__modifySampleResponse *,
                                     const char *);
SOAP_FMAC3 struct __ns1__modifySampleResponse *SOAP_FMAC4
soap_in___ns1__modifySampleResponse(struct soap *, const char *,
                                    struct __ns1__modifySampleResponse *,
                                    const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__modifySampleResponse(struct soap *,
                                     const struct __ns1__modifySampleResponse *,
                                     const char *, const char *);

#ifndef soap_write___ns1__modifySampleResponse
#define soap_write___ns1__modifySampleResponse(soap, data)                     \
  (ICat3::soap_serialize___ns1__modifySampleResponse(soap, data),              \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifySampleResponse(                            \
           soap, data, "-ns1:modifySampleResponse", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifySampleResponse *SOAP_FMAC4
soap_get___ns1__modifySampleResponse(struct soap *,
                                     struct __ns1__modifySampleResponse *,
                                     const char *, const char *);

#ifndef soap_read___ns1__modifySampleResponse
#define soap_read___ns1__modifySampleResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifySampleResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifySampleResponse *SOAP_FMAC2
soap_instantiate___ns1__modifySampleResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline struct __ns1__modifySampleResponse *
soap_new___ns1__modifySampleResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifySampleResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline struct __ns1__modifySampleResponse *
soap_new_req___ns1__modifySampleResponse(struct soap *soap) {
  struct __ns1__modifySampleResponse *_p =
      soap_instantiate___ns1__modifySampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifySampleResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifySampleResponse *
soap_new_set___ns1__modifySampleResponse(
    struct soap *soap, ns1__modifySampleResponse *ns1__modifySampleResponse_) {
  struct __ns1__modifySampleResponse *_p =
      soap_instantiate___ns1__modifySampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifySampleResponse(soap, _p);
    _p->ns1__modifySampleResponse_ = ns1__modifySampleResponse_;
  }
  return _p;
}

inline void
soap_delete___ns1__modifySampleResponse(struct soap *soap,
                                        struct __ns1__modifySampleResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifySampleResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyInvestigator
#define SOAP_TYPE_ICat3___ns1__modifyInvestigator (693)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__modifyInvestigator(struct soap *,
                                       struct __ns1__modifyInvestigator *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyInvestigator(
    struct soap *, const struct __ns1__modifyInvestigator *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__modifyInvestigator(struct soap *, const char *, int,
                                   const struct __ns1__modifyInvestigator *,
                                   const char *);
SOAP_FMAC3 struct __ns1__modifyInvestigator *SOAP_FMAC4
soap_in___ns1__modifyInvestigator(struct soap *, const char *,
                                  struct __ns1__modifyInvestigator *,
                                  const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__modifyInvestigator(struct soap *,
                                   const struct __ns1__modifyInvestigator *,
                                   const char *, const char *);

#ifndef soap_write___ns1__modifyInvestigator
#define soap_write___ns1__modifyInvestigator(soap, data)                       \
  (ICat3::soap_serialize___ns1__modifyInvestigator(soap, data),                \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifyInvestigator(                              \
           soap, data, "-ns1:modifyInvestigator", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyInvestigator *SOAP_FMAC4
soap_get___ns1__modifyInvestigator(struct soap *,
                                   struct __ns1__modifyInvestigator *,
                                   const char *, const char *);

#ifndef soap_read___ns1__modifyInvestigator
#define soap_read___ns1__modifyInvestigator(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyInvestigator(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyInvestigator *SOAP_FMAC2
soap_instantiate___ns1__modifyInvestigator(struct soap *, int, const char *,
                                           const char *, size_t *);

inline struct __ns1__modifyInvestigator *
soap_new___ns1__modifyInvestigator(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyInvestigator(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__modifyInvestigator *
soap_new_req___ns1__modifyInvestigator(struct soap *soap) {
  struct __ns1__modifyInvestigator *_p =
      soap_instantiate___ns1__modifyInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyInvestigator(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyInvestigator *soap_new_set___ns1__modifyInvestigator(
    struct soap *soap, ns1__modifyInvestigator *ns1__modifyInvestigator_) {
  struct __ns1__modifyInvestigator *_p =
      soap_instantiate___ns1__modifyInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyInvestigator(soap, _p);
    _p->ns1__modifyInvestigator_ = ns1__modifyInvestigator_;
  }
  return _p;
}

inline void
soap_delete___ns1__modifyInvestigator(struct soap *soap,
                                      struct __ns1__modifyInvestigator *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyInvestigator(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyInvestigatorResponse
#define SOAP_TYPE_ICat3___ns1__modifyInvestigatorResponse (692)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifyInvestigatorResponse(
    struct soap *, struct __ns1__modifyInvestigatorResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyInvestigatorResponse(
    struct soap *, const struct __ns1__modifyInvestigatorResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifyInvestigatorResponse(
    struct soap *, const char *, int,
    const struct __ns1__modifyInvestigatorResponse *, const char *);
SOAP_FMAC3 struct __ns1__modifyInvestigatorResponse *SOAP_FMAC4
soap_in___ns1__modifyInvestigatorResponse(
    struct soap *, const char *, struct __ns1__modifyInvestigatorResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifyInvestigatorResponse(
    struct soap *, const struct __ns1__modifyInvestigatorResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__modifyInvestigatorResponse
#define soap_write___ns1__modifyInvestigatorResponse(soap, data)               \
  (ICat3::soap_serialize___ns1__modifyInvestigatorResponse(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifyInvestigatorResponse(                      \
           soap, data, "-ns1:modifyInvestigatorResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyInvestigatorResponse *SOAP_FMAC4
soap_get___ns1__modifyInvestigatorResponse(
    struct soap *, struct __ns1__modifyInvestigatorResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__modifyInvestigatorResponse
#define soap_read___ns1__modifyInvestigatorResponse(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyInvestigatorResponse(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyInvestigatorResponse *SOAP_FMAC2
soap_instantiate___ns1__modifyInvestigatorResponse(struct soap *, int,
                                                   const char *, const char *,
                                                   size_t *);

inline struct __ns1__modifyInvestigatorResponse *
soap_new___ns1__modifyInvestigatorResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyInvestigatorResponse(soap, n, NULL, NULL,
                                                            NULL);
}

inline struct __ns1__modifyInvestigatorResponse *
soap_new_req___ns1__modifyInvestigatorResponse(struct soap *soap) {
  struct __ns1__modifyInvestigatorResponse *_p =
      soap_instantiate___ns1__modifyInvestigatorResponse(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__modifyInvestigatorResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyInvestigatorResponse *
soap_new_set___ns1__modifyInvestigatorResponse(
    struct soap *soap,
    ns1__modifyInvestigatorResponse *ns1__modifyInvestigatorResponse_) {
  struct __ns1__modifyInvestigatorResponse *_p =
      soap_instantiate___ns1__modifyInvestigatorResponse(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__modifyInvestigatorResponse(soap, _p);
    _p->ns1__modifyInvestigatorResponse_ = ns1__modifyInvestigatorResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__modifyInvestigatorResponse(
    struct soap *soap, struct __ns1__modifyInvestigatorResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyInvestigatorResponse(struct soap *, int, int, void *,
                                            size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyInvestigation
#define SOAP_TYPE_ICat3___ns1__modifyInvestigation (688)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__modifyInvestigation(struct soap *,
                                        struct __ns1__modifyInvestigation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyInvestigation(
    struct soap *, const struct __ns1__modifyInvestigation *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__modifyInvestigation(struct soap *, const char *, int,
                                    const struct __ns1__modifyInvestigation *,
                                    const char *);
SOAP_FMAC3 struct __ns1__modifyInvestigation *SOAP_FMAC4
soap_in___ns1__modifyInvestigation(struct soap *, const char *,
                                   struct __ns1__modifyInvestigation *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__modifyInvestigation(struct soap *,
                                    const struct __ns1__modifyInvestigation *,
                                    const char *, const char *);

#ifndef soap_write___ns1__modifyInvestigation
#define soap_write___ns1__modifyInvestigation(soap, data)                      \
  (ICat3::soap_serialize___ns1__modifyInvestigation(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifyInvestigation(                             \
           soap, data, "-ns1:modifyInvestigation", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyInvestigation *SOAP_FMAC4
soap_get___ns1__modifyInvestigation(struct soap *,
                                    struct __ns1__modifyInvestigation *,
                                    const char *, const char *);

#ifndef soap_read___ns1__modifyInvestigation
#define soap_read___ns1__modifyInvestigation(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyInvestigation(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyInvestigation *SOAP_FMAC2
soap_instantiate___ns1__modifyInvestigation(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__modifyInvestigation *
soap_new___ns1__modifyInvestigation(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyInvestigation(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__modifyInvestigation *
soap_new_req___ns1__modifyInvestigation(struct soap *soap) {
  struct __ns1__modifyInvestigation *_p =
      soap_instantiate___ns1__modifyInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyInvestigation(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyInvestigation *
soap_new_set___ns1__modifyInvestigation(
    struct soap *soap, ns1__modifyInvestigation *ns1__modifyInvestigation_) {
  struct __ns1__modifyInvestigation *_p =
      soap_instantiate___ns1__modifyInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__modifyInvestigation(soap, _p);
    _p->ns1__modifyInvestigation_ = ns1__modifyInvestigation_;
  }
  return _p;
}

inline void
soap_delete___ns1__modifyInvestigation(struct soap *soap,
                                       struct __ns1__modifyInvestigation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyInvestigation(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__modifyInvestigationResponse
#define SOAP_TYPE_ICat3___ns1__modifyInvestigationResponse (687)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__modifyInvestigationResponse(
    struct soap *, struct __ns1__modifyInvestigationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__modifyInvestigationResponse(
    struct soap *, const struct __ns1__modifyInvestigationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__modifyInvestigationResponse(
    struct soap *, const char *, int,
    const struct __ns1__modifyInvestigationResponse *, const char *);
SOAP_FMAC3 struct __ns1__modifyInvestigationResponse *SOAP_FMAC4
soap_in___ns1__modifyInvestigationResponse(
    struct soap *, const char *, struct __ns1__modifyInvestigationResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__modifyInvestigationResponse(
    struct soap *, const struct __ns1__modifyInvestigationResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__modifyInvestigationResponse
#define soap_write___ns1__modifyInvestigationResponse(soap, data)              \
  (ICat3::soap_serialize___ns1__modifyInvestigationResponse(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__modifyInvestigationResponse(                     \
           soap, data, "-ns1:modifyInvestigationResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__modifyInvestigationResponse *SOAP_FMAC4
soap_get___ns1__modifyInvestigationResponse(
    struct soap *, struct __ns1__modifyInvestigationResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__modifyInvestigationResponse
#define soap_read___ns1__modifyInvestigationResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__modifyInvestigationResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__modifyInvestigationResponse *SOAP_FMAC2
soap_instantiate___ns1__modifyInvestigationResponse(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline struct __ns1__modifyInvestigationResponse *
soap_new___ns1__modifyInvestigationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__modifyInvestigationResponse(soap, n, NULL,
                                                             NULL, NULL);
}

inline struct __ns1__modifyInvestigationResponse *
soap_new_req___ns1__modifyInvestigationResponse(struct soap *soap) {
  struct __ns1__modifyInvestigationResponse *_p =
      soap_instantiate___ns1__modifyInvestigationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__modifyInvestigationResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__modifyInvestigationResponse *
soap_new_set___ns1__modifyInvestigationResponse(
    struct soap *soap,
    ns1__modifyInvestigationResponse *ns1__modifyInvestigationResponse_) {
  struct __ns1__modifyInvestigationResponse *_p =
      soap_instantiate___ns1__modifyInvestigationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__modifyInvestigationResponse(soap, _p);
    _p->ns1__modifyInvestigationResponse_ = ns1__modifyInvestigationResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__modifyInvestigationResponse(
    struct soap *soap, struct __ns1__modifyInvestigationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__modifyInvestigationResponse(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteSampleParameter
#define SOAP_TYPE_ICat3___ns1__deleteSampleParameter (683)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteSampleParameter(
    struct soap *, struct __ns1__deleteSampleParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteSampleParameter(
    struct soap *, const struct __ns1__deleteSampleParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteSampleParameter(
    struct soap *, const char *, int,
    const struct __ns1__deleteSampleParameter *, const char *);
SOAP_FMAC3 struct __ns1__deleteSampleParameter *SOAP_FMAC4
soap_in___ns1__deleteSampleParameter(struct soap *, const char *,
                                     struct __ns1__deleteSampleParameter *,
                                     const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteSampleParameter(
    struct soap *, const struct __ns1__deleteSampleParameter *, const char *,
    const char *);

#ifndef soap_write___ns1__deleteSampleParameter
#define soap_write___ns1__deleteSampleParameter(soap, data)                    \
  (ICat3::soap_serialize___ns1__deleteSampleParameter(soap, data),             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteSampleParameter(                           \
           soap, data, "-ns1:deleteSampleParameter", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteSampleParameter *SOAP_FMAC4
soap_get___ns1__deleteSampleParameter(struct soap *,
                                      struct __ns1__deleteSampleParameter *,
                                      const char *, const char *);

#ifndef soap_read___ns1__deleteSampleParameter
#define soap_read___ns1__deleteSampleParameter(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteSampleParameter(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteSampleParameter *SOAP_FMAC2
soap_instantiate___ns1__deleteSampleParameter(struct soap *, int, const char *,
                                              const char *, size_t *);

inline struct __ns1__deleteSampleParameter *
soap_new___ns1__deleteSampleParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteSampleParameter(soap, n, NULL, NULL,
                                                       NULL);
}

inline struct __ns1__deleteSampleParameter *
soap_new_req___ns1__deleteSampleParameter(struct soap *soap) {
  struct __ns1__deleteSampleParameter *_p =
      soap_instantiate___ns1__deleteSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteSampleParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteSampleParameter *
soap_new_set___ns1__deleteSampleParameter(
    struct soap *soap,
    ns1__deleteSampleParameter *ns1__deleteSampleParameter_) {
  struct __ns1__deleteSampleParameter *_p =
      soap_instantiate___ns1__deleteSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteSampleParameter(soap, _p);
    _p->ns1__deleteSampleParameter_ = ns1__deleteSampleParameter_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteSampleParameter(
    struct soap *soap, struct __ns1__deleteSampleParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteSampleParameter(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteSampleParameterResponse
#define SOAP_TYPE_ICat3___ns1__deleteSampleParameterResponse (682)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteSampleParameterResponse(
    struct soap *, struct __ns1__deleteSampleParameterResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteSampleParameterResponse(
    struct soap *, const struct __ns1__deleteSampleParameterResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteSampleParameterResponse(
    struct soap *, const char *, int,
    const struct __ns1__deleteSampleParameterResponse *, const char *);
SOAP_FMAC3 struct __ns1__deleteSampleParameterResponse *SOAP_FMAC4
soap_in___ns1__deleteSampleParameterResponse(
    struct soap *, const char *, struct __ns1__deleteSampleParameterResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteSampleParameterResponse(
    struct soap *, const struct __ns1__deleteSampleParameterResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__deleteSampleParameterResponse
#define soap_write___ns1__deleteSampleParameterResponse(soap, data)            \
  (ICat3::soap_serialize___ns1__deleteSampleParameterResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteSampleParameterResponse(                   \
           soap, data, "-ns1:deleteSampleParameterResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteSampleParameterResponse *SOAP_FMAC4
soap_get___ns1__deleteSampleParameterResponse(
    struct soap *, struct __ns1__deleteSampleParameterResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__deleteSampleParameterResponse
#define soap_read___ns1__deleteSampleParameterResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteSampleParameterResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteSampleParameterResponse *SOAP_FMAC2
soap_instantiate___ns1__deleteSampleParameterResponse(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline struct __ns1__deleteSampleParameterResponse *
soap_new___ns1__deleteSampleParameterResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteSampleParameterResponse(soap, n, NULL,
                                                               NULL, NULL);
}

inline struct __ns1__deleteSampleParameterResponse *
soap_new_req___ns1__deleteSampleParameterResponse(struct soap *soap) {
  struct __ns1__deleteSampleParameterResponse *_p =
      soap_instantiate___ns1__deleteSampleParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteSampleParameterResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteSampleParameterResponse *
soap_new_set___ns1__deleteSampleParameterResponse(
    struct soap *soap,
    ns1__deleteSampleParameterResponse *ns1__deleteSampleParameterResponse_) {
  struct __ns1__deleteSampleParameterResponse *_p =
      soap_instantiate___ns1__deleteSampleParameterResponse(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteSampleParameterResponse(soap, _p);
    _p->ns1__deleteSampleParameterResponse_ =
        ns1__deleteSampleParameterResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteSampleParameterResponse(
    struct soap *soap, struct __ns1__deleteSampleParameterResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteSampleParameterResponse(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteSample
#define SOAP_TYPE_ICat3___ns1__deleteSample (678)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__deleteSample(struct soap *, struct __ns1__deleteSample *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__deleteSample(struct soap *,
                                   const struct __ns1__deleteSample *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__deleteSample(struct soap *, const char *, int,
                             const struct __ns1__deleteSample *, const char *);
SOAP_FMAC3 struct __ns1__deleteSample *SOAP_FMAC4
soap_in___ns1__deleteSample(struct soap *, const char *,
                            struct __ns1__deleteSample *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__deleteSample(struct soap *, const struct __ns1__deleteSample *,
                             const char *, const char *);

#ifndef soap_write___ns1__deleteSample
#define soap_write___ns1__deleteSample(soap, data)                             \
  (ICat3::soap_serialize___ns1__deleteSample(soap, data),                      \
   soap_begin_send(soap) || ICat3::soap_put___ns1__deleteSample(               \
                                soap, data, "-ns1:deleteSample", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteSample *SOAP_FMAC4
soap_get___ns1__deleteSample(struct soap *, struct __ns1__deleteSample *,
                             const char *, const char *);

#ifndef soap_read___ns1__deleteSample
#define soap_read___ns1__deleteSample(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteSample(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteSample *SOAP_FMAC2
soap_instantiate___ns1__deleteSample(struct soap *, int, const char *,
                                     const char *, size_t *);

inline struct __ns1__deleteSample *
soap_new___ns1__deleteSample(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteSample(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__deleteSample *
soap_new_req___ns1__deleteSample(struct soap *soap) {
  struct __ns1__deleteSample *_p =
      soap_instantiate___ns1__deleteSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteSample(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteSample *
soap_new_set___ns1__deleteSample(struct soap *soap,
                                 ns1__deleteSample *ns1__deleteSample_) {
  struct __ns1__deleteSample *_p =
      soap_instantiate___ns1__deleteSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteSample(soap, _p);
    _p->ns1__deleteSample_ = ns1__deleteSample_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteSample(struct soap *soap,
                                            struct __ns1__deleteSample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__deleteSample(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteSampleResponse
#define SOAP_TYPE_ICat3___ns1__deleteSampleResponse (677)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__deleteSampleResponse(struct soap *,
                                         struct __ns1__deleteSampleResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteSampleResponse(
    struct soap *, const struct __ns1__deleteSampleResponse *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__deleteSampleResponse(struct soap *, const char *, int,
                                     const struct __ns1__deleteSampleResponse *,
                                     const char *);
SOAP_FMAC3 struct __ns1__deleteSampleResponse *SOAP_FMAC4
soap_in___ns1__deleteSampleResponse(struct soap *, const char *,
                                    struct __ns1__deleteSampleResponse *,
                                    const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__deleteSampleResponse(struct soap *,
                                     const struct __ns1__deleteSampleResponse *,
                                     const char *, const char *);

#ifndef soap_write___ns1__deleteSampleResponse
#define soap_write___ns1__deleteSampleResponse(soap, data)                     \
  (ICat3::soap_serialize___ns1__deleteSampleResponse(soap, data),              \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteSampleResponse(                            \
           soap, data, "-ns1:deleteSampleResponse", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteSampleResponse *SOAP_FMAC4
soap_get___ns1__deleteSampleResponse(struct soap *,
                                     struct __ns1__deleteSampleResponse *,
                                     const char *, const char *);

#ifndef soap_read___ns1__deleteSampleResponse
#define soap_read___ns1__deleteSampleResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteSampleResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteSampleResponse *SOAP_FMAC2
soap_instantiate___ns1__deleteSampleResponse(struct soap *, int, const char *,
                                             const char *, size_t *);

inline struct __ns1__deleteSampleResponse *
soap_new___ns1__deleteSampleResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteSampleResponse(soap, n, NULL, NULL,
                                                      NULL);
}

inline struct __ns1__deleteSampleResponse *
soap_new_req___ns1__deleteSampleResponse(struct soap *soap) {
  struct __ns1__deleteSampleResponse *_p =
      soap_instantiate___ns1__deleteSampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteSampleResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteSampleResponse *
soap_new_set___ns1__deleteSampleResponse(
    struct soap *soap, ns1__deleteSampleResponse *ns1__deleteSampleResponse_) {
  struct __ns1__deleteSampleResponse *_p =
      soap_instantiate___ns1__deleteSampleResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteSampleResponse(soap, _p);
    _p->ns1__deleteSampleResponse_ = ns1__deleteSampleResponse_;
  }
  return _p;
}

inline void
soap_delete___ns1__deleteSampleResponse(struct soap *soap,
                                        struct __ns1__deleteSampleResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteSampleResponse(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deletePublication
#define SOAP_TYPE_ICat3___ns1__deletePublication (673)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__deletePublication(struct soap *,
                                      struct __ns1__deletePublication *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deletePublication(
    struct soap *, const struct __ns1__deletePublication *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__deletePublication(struct soap *, const char *, int,
                                  const struct __ns1__deletePublication *,
                                  const char *);
SOAP_FMAC3 struct __ns1__deletePublication *SOAP_FMAC4
soap_in___ns1__deletePublication(struct soap *, const char *,
                                 struct __ns1__deletePublication *,
                                 const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__deletePublication(struct soap *,
                                  const struct __ns1__deletePublication *,
                                  const char *, const char *);

#ifndef soap_write___ns1__deletePublication
#define soap_write___ns1__deletePublication(soap, data)                        \
  (ICat3::soap_serialize___ns1__deletePublication(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put___ns1__deletePublication(          \
                                soap, data, "-ns1:deletePublication", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deletePublication *SOAP_FMAC4
soap_get___ns1__deletePublication(struct soap *,
                                  struct __ns1__deletePublication *,
                                  const char *, const char *);

#ifndef soap_read___ns1__deletePublication
#define soap_read___ns1__deletePublication(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deletePublication(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deletePublication *SOAP_FMAC2
soap_instantiate___ns1__deletePublication(struct soap *, int, const char *,
                                          const char *, size_t *);

inline struct __ns1__deletePublication *
soap_new___ns1__deletePublication(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deletePublication(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__deletePublication *
soap_new_req___ns1__deletePublication(struct soap *soap) {
  struct __ns1__deletePublication *_p =
      soap_instantiate___ns1__deletePublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deletePublication(soap, _p);
  }
  return _p;
}

inline struct __ns1__deletePublication *soap_new_set___ns1__deletePublication(
    struct soap *soap, ns1__deletePublication *ns1__deletePublication_) {
  struct __ns1__deletePublication *_p =
      soap_instantiate___ns1__deletePublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deletePublication(soap, _p);
    _p->ns1__deletePublication_ = ns1__deletePublication_;
  }
  return _p;
}

inline void
soap_delete___ns1__deletePublication(struct soap *soap,
                                     struct __ns1__deletePublication *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deletePublication(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deletePublicationResponse
#define SOAP_TYPE_ICat3___ns1__deletePublicationResponse (672)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deletePublicationResponse(
    struct soap *, struct __ns1__deletePublicationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deletePublicationResponse(
    struct soap *, const struct __ns1__deletePublicationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deletePublicationResponse(
    struct soap *, const char *, int,
    const struct __ns1__deletePublicationResponse *, const char *);
SOAP_FMAC3 struct __ns1__deletePublicationResponse *SOAP_FMAC4
soap_in___ns1__deletePublicationResponse(
    struct soap *, const char *, struct __ns1__deletePublicationResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deletePublicationResponse(
    struct soap *, const struct __ns1__deletePublicationResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__deletePublicationResponse
#define soap_write___ns1__deletePublicationResponse(soap, data)                \
  (ICat3::soap_serialize___ns1__deletePublicationResponse(soap, data),         \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deletePublicationResponse(                       \
           soap, data, "-ns1:deletePublicationResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deletePublicationResponse *SOAP_FMAC4
soap_get___ns1__deletePublicationResponse(
    struct soap *, struct __ns1__deletePublicationResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__deletePublicationResponse
#define soap_read___ns1__deletePublicationResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deletePublicationResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deletePublicationResponse *SOAP_FMAC2
soap_instantiate___ns1__deletePublicationResponse(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline struct __ns1__deletePublicationResponse *
soap_new___ns1__deletePublicationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deletePublicationResponse(soap, n, NULL, NULL,
                                                           NULL);
}

inline struct __ns1__deletePublicationResponse *
soap_new_req___ns1__deletePublicationResponse(struct soap *soap) {
  struct __ns1__deletePublicationResponse *_p =
      soap_instantiate___ns1__deletePublicationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__deletePublicationResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__deletePublicationResponse *
soap_new_set___ns1__deletePublicationResponse(
    struct soap *soap,
    ns1__deletePublicationResponse *ns1__deletePublicationResponse_) {
  struct __ns1__deletePublicationResponse *_p =
      soap_instantiate___ns1__deletePublicationResponse(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__deletePublicationResponse(soap, _p);
    _p->ns1__deletePublicationResponse_ = ns1__deletePublicationResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__deletePublicationResponse(
    struct soap *soap, struct __ns1__deletePublicationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deletePublicationResponse(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteKeyword
#define SOAP_TYPE_ICat3___ns1__deleteKeyword (668)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__deleteKeyword(struct soap *, struct __ns1__deleteKeyword *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__deleteKeyword(struct soap *,
                                    const struct __ns1__deleteKeyword *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__deleteKeyword(struct soap *, const char *, int,
                              const struct __ns1__deleteKeyword *,
                              const char *);
SOAP_FMAC3 struct __ns1__deleteKeyword *SOAP_FMAC4
soap_in___ns1__deleteKeyword(struct soap *, const char *,
                             struct __ns1__deleteKeyword *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__deleteKeyword(struct soap *,
                              const struct __ns1__deleteKeyword *, const char *,
                              const char *);

#ifndef soap_write___ns1__deleteKeyword
#define soap_write___ns1__deleteKeyword(soap, data)                            \
  (ICat3::soap_serialize___ns1__deleteKeyword(soap, data),                     \
   soap_begin_send(soap) || ICat3::soap_put___ns1__deleteKeyword(              \
                                soap, data, "-ns1:deleteKeyword", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteKeyword *SOAP_FMAC4
soap_get___ns1__deleteKeyword(struct soap *, struct __ns1__deleteKeyword *,
                              const char *, const char *);

#ifndef soap_read___ns1__deleteKeyword
#define soap_read___ns1__deleteKeyword(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteKeyword(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteKeyword *SOAP_FMAC2
soap_instantiate___ns1__deleteKeyword(struct soap *, int, const char *,
                                      const char *, size_t *);

inline struct __ns1__deleteKeyword *
soap_new___ns1__deleteKeyword(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteKeyword(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__deleteKeyword *
soap_new_req___ns1__deleteKeyword(struct soap *soap) {
  struct __ns1__deleteKeyword *_p =
      soap_instantiate___ns1__deleteKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteKeyword(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteKeyword *
soap_new_set___ns1__deleteKeyword(struct soap *soap,
                                  ns1__deleteKeyword *ns1__deleteKeyword_) {
  struct __ns1__deleteKeyword *_p =
      soap_instantiate___ns1__deleteKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteKeyword(soap, _p);
    _p->ns1__deleteKeyword_ = ns1__deleteKeyword_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteKeyword(struct soap *soap,
                                             struct __ns1__deleteKeyword *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__deleteKeyword(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteKeywordResponse
#define SOAP_TYPE_ICat3___ns1__deleteKeywordResponse (667)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteKeywordResponse(
    struct soap *, struct __ns1__deleteKeywordResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteKeywordResponse(
    struct soap *, const struct __ns1__deleteKeywordResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteKeywordResponse(
    struct soap *, const char *, int,
    const struct __ns1__deleteKeywordResponse *, const char *);
SOAP_FMAC3 struct __ns1__deleteKeywordResponse *SOAP_FMAC4
soap_in___ns1__deleteKeywordResponse(struct soap *, const char *,
                                     struct __ns1__deleteKeywordResponse *,
                                     const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteKeywordResponse(
    struct soap *, const struct __ns1__deleteKeywordResponse *, const char *,
    const char *);

#ifndef soap_write___ns1__deleteKeywordResponse
#define soap_write___ns1__deleteKeywordResponse(soap, data)                    \
  (ICat3::soap_serialize___ns1__deleteKeywordResponse(soap, data),             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteKeywordResponse(                           \
           soap, data, "-ns1:deleteKeywordResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteKeywordResponse *SOAP_FMAC4
soap_get___ns1__deleteKeywordResponse(struct soap *,
                                      struct __ns1__deleteKeywordResponse *,
                                      const char *, const char *);

#ifndef soap_read___ns1__deleteKeywordResponse
#define soap_read___ns1__deleteKeywordResponse(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteKeywordResponse(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteKeywordResponse *SOAP_FMAC2
soap_instantiate___ns1__deleteKeywordResponse(struct soap *, int, const char *,
                                              const char *, size_t *);

inline struct __ns1__deleteKeywordResponse *
soap_new___ns1__deleteKeywordResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteKeywordResponse(soap, n, NULL, NULL,
                                                       NULL);
}

inline struct __ns1__deleteKeywordResponse *
soap_new_req___ns1__deleteKeywordResponse(struct soap *soap) {
  struct __ns1__deleteKeywordResponse *_p =
      soap_instantiate___ns1__deleteKeywordResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteKeywordResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteKeywordResponse *
soap_new_set___ns1__deleteKeywordResponse(
    struct soap *soap,
    ns1__deleteKeywordResponse *ns1__deleteKeywordResponse_) {
  struct __ns1__deleteKeywordResponse *_p =
      soap_instantiate___ns1__deleteKeywordResponse(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteKeywordResponse(soap, _p);
    _p->ns1__deleteKeywordResponse_ = ns1__deleteKeywordResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteKeywordResponse(
    struct soap *soap, struct __ns1__deleteKeywordResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteKeywordResponse(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteInvestigator
#define SOAP_TYPE_ICat3___ns1__deleteInvestigator (663)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__deleteInvestigator(struct soap *,
                                       struct __ns1__deleteInvestigator *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteInvestigator(
    struct soap *, const struct __ns1__deleteInvestigator *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__deleteInvestigator(struct soap *, const char *, int,
                                   const struct __ns1__deleteInvestigator *,
                                   const char *);
SOAP_FMAC3 struct __ns1__deleteInvestigator *SOAP_FMAC4
soap_in___ns1__deleteInvestigator(struct soap *, const char *,
                                  struct __ns1__deleteInvestigator *,
                                  const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__deleteInvestigator(struct soap *,
                                   const struct __ns1__deleteInvestigator *,
                                   const char *, const char *);

#ifndef soap_write___ns1__deleteInvestigator
#define soap_write___ns1__deleteInvestigator(soap, data)                       \
  (ICat3::soap_serialize___ns1__deleteInvestigator(soap, data),                \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteInvestigator(                              \
           soap, data, "-ns1:deleteInvestigator", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteInvestigator *SOAP_FMAC4
soap_get___ns1__deleteInvestigator(struct soap *,
                                   struct __ns1__deleteInvestigator *,
                                   const char *, const char *);

#ifndef soap_read___ns1__deleteInvestigator
#define soap_read___ns1__deleteInvestigator(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteInvestigator(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteInvestigator *SOAP_FMAC2
soap_instantiate___ns1__deleteInvestigator(struct soap *, int, const char *,
                                           const char *, size_t *);

inline struct __ns1__deleteInvestigator *
soap_new___ns1__deleteInvestigator(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteInvestigator(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__deleteInvestigator *
soap_new_req___ns1__deleteInvestigator(struct soap *soap) {
  struct __ns1__deleteInvestigator *_p =
      soap_instantiate___ns1__deleteInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteInvestigator(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteInvestigator *soap_new_set___ns1__deleteInvestigator(
    struct soap *soap, ns1__deleteInvestigator *ns1__deleteInvestigator_) {
  struct __ns1__deleteInvestigator *_p =
      soap_instantiate___ns1__deleteInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteInvestigator(soap, _p);
    _p->ns1__deleteInvestigator_ = ns1__deleteInvestigator_;
  }
  return _p;
}

inline void
soap_delete___ns1__deleteInvestigator(struct soap *soap,
                                      struct __ns1__deleteInvestigator *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteInvestigator(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteInvestigatorResponse
#define SOAP_TYPE_ICat3___ns1__deleteInvestigatorResponse (662)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteInvestigatorResponse(
    struct soap *, struct __ns1__deleteInvestigatorResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteInvestigatorResponse(
    struct soap *, const struct __ns1__deleteInvestigatorResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteInvestigatorResponse(
    struct soap *, const char *, int,
    const struct __ns1__deleteInvestigatorResponse *, const char *);
SOAP_FMAC3 struct __ns1__deleteInvestigatorResponse *SOAP_FMAC4
soap_in___ns1__deleteInvestigatorResponse(
    struct soap *, const char *, struct __ns1__deleteInvestigatorResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteInvestigatorResponse(
    struct soap *, const struct __ns1__deleteInvestigatorResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__deleteInvestigatorResponse
#define soap_write___ns1__deleteInvestigatorResponse(soap, data)               \
  (ICat3::soap_serialize___ns1__deleteInvestigatorResponse(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteInvestigatorResponse(                      \
           soap, data, "-ns1:deleteInvestigatorResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteInvestigatorResponse *SOAP_FMAC4
soap_get___ns1__deleteInvestigatorResponse(
    struct soap *, struct __ns1__deleteInvestigatorResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__deleteInvestigatorResponse
#define soap_read___ns1__deleteInvestigatorResponse(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteInvestigatorResponse(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteInvestigatorResponse *SOAP_FMAC2
soap_instantiate___ns1__deleteInvestigatorResponse(struct soap *, int,
                                                   const char *, const char *,
                                                   size_t *);

inline struct __ns1__deleteInvestigatorResponse *
soap_new___ns1__deleteInvestigatorResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteInvestigatorResponse(soap, n, NULL, NULL,
                                                            NULL);
}

inline struct __ns1__deleteInvestigatorResponse *
soap_new_req___ns1__deleteInvestigatorResponse(struct soap *soap) {
  struct __ns1__deleteInvestigatorResponse *_p =
      soap_instantiate___ns1__deleteInvestigatorResponse(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__deleteInvestigatorResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteInvestigatorResponse *
soap_new_set___ns1__deleteInvestigatorResponse(
    struct soap *soap,
    ns1__deleteInvestigatorResponse *ns1__deleteInvestigatorResponse_) {
  struct __ns1__deleteInvestigatorResponse *_p =
      soap_instantiate___ns1__deleteInvestigatorResponse(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__deleteInvestigatorResponse(soap, _p);
    _p->ns1__deleteInvestigatorResponse_ = ns1__deleteInvestigatorResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteInvestigatorResponse(
    struct soap *soap, struct __ns1__deleteInvestigatorResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteInvestigatorResponse(struct soap *, int, int, void *,
                                            size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__addSampleParameter
#define SOAP_TYPE_ICat3___ns1__addSampleParameter (658)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__addSampleParameter(struct soap *,
                                       struct __ns1__addSampleParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__addSampleParameter(
    struct soap *, const struct __ns1__addSampleParameter *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__addSampleParameter(struct soap *, const char *, int,
                                   const struct __ns1__addSampleParameter *,
                                   const char *);
SOAP_FMAC3 struct __ns1__addSampleParameter *SOAP_FMAC4
soap_in___ns1__addSampleParameter(struct soap *, const char *,
                                  struct __ns1__addSampleParameter *,
                                  const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__addSampleParameter(struct soap *,
                                   const struct __ns1__addSampleParameter *,
                                   const char *, const char *);

#ifndef soap_write___ns1__addSampleParameter
#define soap_write___ns1__addSampleParameter(soap, data)                       \
  (ICat3::soap_serialize___ns1__addSampleParameter(soap, data),                \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__addSampleParameter(                              \
           soap, data, "-ns1:addSampleParameter", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__addSampleParameter *SOAP_FMAC4
soap_get___ns1__addSampleParameter(struct soap *,
                                   struct __ns1__addSampleParameter *,
                                   const char *, const char *);

#ifndef soap_read___ns1__addSampleParameter
#define soap_read___ns1__addSampleParameter(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__addSampleParameter(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__addSampleParameter *SOAP_FMAC2
soap_instantiate___ns1__addSampleParameter(struct soap *, int, const char *,
                                           const char *, size_t *);

inline struct __ns1__addSampleParameter *
soap_new___ns1__addSampleParameter(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__addSampleParameter(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__addSampleParameter *
soap_new_req___ns1__addSampleParameter(struct soap *soap) {
  struct __ns1__addSampleParameter *_p =
      soap_instantiate___ns1__addSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addSampleParameter(soap, _p);
  }
  return _p;
}

inline struct __ns1__addSampleParameter *soap_new_set___ns1__addSampleParameter(
    struct soap *soap, ns1__addSampleParameter *ns1__addSampleParameter_) {
  struct __ns1__addSampleParameter *_p =
      soap_instantiate___ns1__addSampleParameter(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addSampleParameter(soap, _p);
    _p->ns1__addSampleParameter_ = ns1__addSampleParameter_;
  }
  return _p;
}

inline void
soap_delete___ns1__addSampleParameter(struct soap *soap,
                                      struct __ns1__addSampleParameter *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__addSampleParameter(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__addPublication
#define SOAP_TYPE_ICat3___ns1__addPublication (654)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__addPublication(struct soap *,
                                   struct __ns1__addPublication *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__addPublication(struct soap *,
                                     const struct __ns1__addPublication *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__addPublication(struct soap *, const char *, int,
                               const struct __ns1__addPublication *,
                               const char *);
SOAP_FMAC3 struct __ns1__addPublication *SOAP_FMAC4
soap_in___ns1__addPublication(struct soap *, const char *,
                              struct __ns1__addPublication *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__addPublication(struct soap *,
                               const struct __ns1__addPublication *,
                               const char *, const char *);

#ifndef soap_write___ns1__addPublication
#define soap_write___ns1__addPublication(soap, data)                           \
  (ICat3::soap_serialize___ns1__addPublication(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__addPublication(             \
                                soap, data, "-ns1:addPublication", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__addPublication *SOAP_FMAC4
soap_get___ns1__addPublication(struct soap *, struct __ns1__addPublication *,
                               const char *, const char *);

#ifndef soap_read___ns1__addPublication
#define soap_read___ns1__addPublication(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__addPublication(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__addPublication *SOAP_FMAC2
soap_instantiate___ns1__addPublication(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__addPublication *
soap_new___ns1__addPublication(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__addPublication(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__addPublication *
soap_new_req___ns1__addPublication(struct soap *soap) {
  struct __ns1__addPublication *_p =
      soap_instantiate___ns1__addPublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addPublication(soap, _p);
  }
  return _p;
}

inline struct __ns1__addPublication *
soap_new_set___ns1__addPublication(struct soap *soap,
                                   ns1__addPublication *ns1__addPublication_) {
  struct __ns1__addPublication *_p =
      soap_instantiate___ns1__addPublication(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addPublication(soap, _p);
    _p->ns1__addPublication_ = ns1__addPublication_;
  }
  return _p;
}

inline void soap_delete___ns1__addPublication(struct soap *soap,
                                              struct __ns1__addPublication *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__addPublication(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__addSample
#define SOAP_TYPE_ICat3___ns1__addSample (650)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__addSample(struct soap *, struct __ns1__addSample *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__addSample(struct soap *, const struct __ns1__addSample *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__addSample(struct soap *, const char *, int,
                          const struct __ns1__addSample *, const char *);
SOAP_FMAC3 struct __ns1__addSample *SOAP_FMAC4
soap_in___ns1__addSample(struct soap *, const char *, struct __ns1__addSample *,
                         const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__addSample(struct soap *, const struct __ns1__addSample *,
                          const char *, const char *);

#ifndef soap_write___ns1__addSample
#define soap_write___ns1__addSample(soap, data)                                \
  (ICat3::soap_serialize___ns1__addSample(soap, data),                         \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__addSample(soap, data, "-ns1:addSample", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__addSample *SOAP_FMAC4
soap_get___ns1__addSample(struct soap *, struct __ns1__addSample *,
                          const char *, const char *);

#ifndef soap_read___ns1__addSample
#define soap_read___ns1__addSample(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__addSample(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__addSample *SOAP_FMAC2
soap_instantiate___ns1__addSample(struct soap *, int, const char *,
                                  const char *, size_t *);

inline struct __ns1__addSample *soap_new___ns1__addSample(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate___ns1__addSample(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__addSample *
soap_new_req___ns1__addSample(struct soap *soap) {
  struct __ns1__addSample *_p =
      soap_instantiate___ns1__addSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addSample(soap, _p);
  }
  return _p;
}

inline struct __ns1__addSample *
soap_new_set___ns1__addSample(struct soap *soap,
                              ns1__addSample *ns1__addSample_) {
  struct __ns1__addSample *_p =
      soap_instantiate___ns1__addSample(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addSample(soap, _p);
    _p->ns1__addSample_ = ns1__addSample_;
  }
  return _p;
}

inline void soap_delete___ns1__addSample(struct soap *soap,
                                         struct __ns1__addSample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__addSample(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__addInvestigator
#define SOAP_TYPE_ICat3___ns1__addInvestigator (646)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__addInvestigator(struct soap *,
                                    struct __ns1__addInvestigator *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__addInvestigator(struct soap *,
                                      const struct __ns1__addInvestigator *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__addInvestigator(struct soap *, const char *, int,
                                const struct __ns1__addInvestigator *,
                                const char *);
SOAP_FMAC3 struct __ns1__addInvestigator *SOAP_FMAC4
soap_in___ns1__addInvestigator(struct soap *, const char *,
                               struct __ns1__addInvestigator *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__addInvestigator(struct soap *,
                                const struct __ns1__addInvestigator *,
                                const char *, const char *);

#ifndef soap_write___ns1__addInvestigator
#define soap_write___ns1__addInvestigator(soap, data)                          \
  (ICat3::soap_serialize___ns1__addInvestigator(soap, data),                   \
   soap_begin_send(soap) || ICat3::soap_put___ns1__addInvestigator(            \
                                soap, data, "-ns1:addInvestigator", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__addInvestigator *SOAP_FMAC4
soap_get___ns1__addInvestigator(struct soap *, struct __ns1__addInvestigator *,
                                const char *, const char *);

#ifndef soap_read___ns1__addInvestigator
#define soap_read___ns1__addInvestigator(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__addInvestigator(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__addInvestigator *SOAP_FMAC2
soap_instantiate___ns1__addInvestigator(struct soap *, int, const char *,
                                        const char *, size_t *);

inline struct __ns1__addInvestigator *
soap_new___ns1__addInvestigator(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__addInvestigator(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__addInvestigator *
soap_new_req___ns1__addInvestigator(struct soap *soap) {
  struct __ns1__addInvestigator *_p =
      soap_instantiate___ns1__addInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addInvestigator(soap, _p);
  }
  return _p;
}

inline struct __ns1__addInvestigator *soap_new_set___ns1__addInvestigator(
    struct soap *soap, ns1__addInvestigator *ns1__addInvestigator_) {
  struct __ns1__addInvestigator *_p =
      soap_instantiate___ns1__addInvestigator(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addInvestigator(soap, _p);
    _p->ns1__addInvestigator_ = ns1__addInvestigator_;
  }
  return _p;
}

inline void
soap_delete___ns1__addInvestigator(struct soap *soap,
                                   struct __ns1__addInvestigator *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__addInvestigator(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__addKeyword
#define SOAP_TYPE_ICat3___ns1__addKeyword (642)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__addKeyword(struct soap *, struct __ns1__addKeyword *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__addKeyword(struct soap *,
                                 const struct __ns1__addKeyword *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__addKeyword(struct soap *, const char *, int,
                           const struct __ns1__addKeyword *, const char *);
SOAP_FMAC3 struct __ns1__addKeyword *SOAP_FMAC4
soap_in___ns1__addKeyword(struct soap *, const char *,
                          struct __ns1__addKeyword *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__addKeyword(struct soap *, const struct __ns1__addKeyword *,
                           const char *, const char *);

#ifndef soap_write___ns1__addKeyword
#define soap_write___ns1__addKeyword(soap, data)                               \
  (ICat3::soap_serialize___ns1__addKeyword(soap, data),                        \
   soap_begin_send(soap) || ICat3::soap_put___ns1__addKeyword(                 \
                                soap, data, "-ns1:addKeyword", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__addKeyword *SOAP_FMAC4
soap_get___ns1__addKeyword(struct soap *, struct __ns1__addKeyword *,
                           const char *, const char *);

#ifndef soap_read___ns1__addKeyword
#define soap_read___ns1__addKeyword(soap, data)                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__addKeyword(soap, data, NULL, NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__addKeyword *SOAP_FMAC2
soap_instantiate___ns1__addKeyword(struct soap *, int, const char *,
                                   const char *, size_t *);

inline struct __ns1__addKeyword *soap_new___ns1__addKeyword(struct soap *soap,
                                                            int n = -1) {
  return soap_instantiate___ns1__addKeyword(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__addKeyword *
soap_new_req___ns1__addKeyword(struct soap *soap) {
  struct __ns1__addKeyword *_p =
      soap_instantiate___ns1__addKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addKeyword(soap, _p);
  }
  return _p;
}

inline struct __ns1__addKeyword *
soap_new_set___ns1__addKeyword(struct soap *soap,
                               ns1__addKeyword *ns1__addKeyword_) {
  struct __ns1__addKeyword *_p =
      soap_instantiate___ns1__addKeyword(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__addKeyword(soap, _p);
    _p->ns1__addKeyword_ = ns1__addKeyword_;
  }
  return _p;
}

inline void soap_delete___ns1__addKeyword(struct soap *soap,
                                          struct __ns1__addKeyword *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__addKeyword(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeInvestigation
#define SOAP_TYPE_ICat3___ns1__removeInvestigation (638)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__removeInvestigation(struct soap *,
                                        struct __ns1__removeInvestigation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeInvestigation(
    struct soap *, const struct __ns1__removeInvestigation *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__removeInvestigation(struct soap *, const char *, int,
                                    const struct __ns1__removeInvestigation *,
                                    const char *);
SOAP_FMAC3 struct __ns1__removeInvestigation *SOAP_FMAC4
soap_in___ns1__removeInvestigation(struct soap *, const char *,
                                   struct __ns1__removeInvestigation *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__removeInvestigation(struct soap *,
                                    const struct __ns1__removeInvestigation *,
                                    const char *, const char *);

#ifndef soap_write___ns1__removeInvestigation
#define soap_write___ns1__removeInvestigation(soap, data)                      \
  (ICat3::soap_serialize___ns1__removeInvestigation(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeInvestigation(                             \
           soap, data, "-ns1:removeInvestigation", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeInvestigation *SOAP_FMAC4
soap_get___ns1__removeInvestigation(struct soap *,
                                    struct __ns1__removeInvestigation *,
                                    const char *, const char *);

#ifndef soap_read___ns1__removeInvestigation
#define soap_read___ns1__removeInvestigation(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeInvestigation(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeInvestigation *SOAP_FMAC2
soap_instantiate___ns1__removeInvestigation(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__removeInvestigation *
soap_new___ns1__removeInvestigation(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeInvestigation(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__removeInvestigation *
soap_new_req___ns1__removeInvestigation(struct soap *soap) {
  struct __ns1__removeInvestigation *_p =
      soap_instantiate___ns1__removeInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeInvestigation(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeInvestigation *
soap_new_set___ns1__removeInvestigation(
    struct soap *soap, ns1__removeInvestigation *ns1__removeInvestigation_) {
  struct __ns1__removeInvestigation *_p =
      soap_instantiate___ns1__removeInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__removeInvestigation(soap, _p);
    _p->ns1__removeInvestigation_ = ns1__removeInvestigation_;
  }
  return _p;
}

inline void
soap_delete___ns1__removeInvestigation(struct soap *soap,
                                       struct __ns1__removeInvestigation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeInvestigation(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__removeInvestigationResponse
#define SOAP_TYPE_ICat3___ns1__removeInvestigationResponse (637)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__removeInvestigationResponse(
    struct soap *, struct __ns1__removeInvestigationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__removeInvestigationResponse(
    struct soap *, const struct __ns1__removeInvestigationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__removeInvestigationResponse(
    struct soap *, const char *, int,
    const struct __ns1__removeInvestigationResponse *, const char *);
SOAP_FMAC3 struct __ns1__removeInvestigationResponse *SOAP_FMAC4
soap_in___ns1__removeInvestigationResponse(
    struct soap *, const char *, struct __ns1__removeInvestigationResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__removeInvestigationResponse(
    struct soap *, const struct __ns1__removeInvestigationResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__removeInvestigationResponse
#define soap_write___ns1__removeInvestigationResponse(soap, data)              \
  (ICat3::soap_serialize___ns1__removeInvestigationResponse(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__removeInvestigationResponse(                     \
           soap, data, "-ns1:removeInvestigationResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__removeInvestigationResponse *SOAP_FMAC4
soap_get___ns1__removeInvestigationResponse(
    struct soap *, struct __ns1__removeInvestigationResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__removeInvestigationResponse
#define soap_read___ns1__removeInvestigationResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__removeInvestigationResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__removeInvestigationResponse *SOAP_FMAC2
soap_instantiate___ns1__removeInvestigationResponse(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline struct __ns1__removeInvestigationResponse *
soap_new___ns1__removeInvestigationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__removeInvestigationResponse(soap, n, NULL,
                                                             NULL, NULL);
}

inline struct __ns1__removeInvestigationResponse *
soap_new_req___ns1__removeInvestigationResponse(struct soap *soap) {
  struct __ns1__removeInvestigationResponse *_p =
      soap_instantiate___ns1__removeInvestigationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__removeInvestigationResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__removeInvestigationResponse *
soap_new_set___ns1__removeInvestigationResponse(
    struct soap *soap,
    ns1__removeInvestigationResponse *ns1__removeInvestigationResponse_) {
  struct __ns1__removeInvestigationResponse *_p =
      soap_instantiate___ns1__removeInvestigationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__removeInvestigationResponse(soap, _p);
    _p->ns1__removeInvestigationResponse_ = ns1__removeInvestigationResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__removeInvestigationResponse(
    struct soap *soap, struct __ns1__removeInvestigationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__removeInvestigationResponse(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteInvestigation
#define SOAP_TYPE_ICat3___ns1__deleteInvestigation (633)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__deleteInvestigation(struct soap *,
                                        struct __ns1__deleteInvestigation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteInvestigation(
    struct soap *, const struct __ns1__deleteInvestigation *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__deleteInvestigation(struct soap *, const char *, int,
                                    const struct __ns1__deleteInvestigation *,
                                    const char *);
SOAP_FMAC3 struct __ns1__deleteInvestigation *SOAP_FMAC4
soap_in___ns1__deleteInvestigation(struct soap *, const char *,
                                   struct __ns1__deleteInvestigation *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__deleteInvestigation(struct soap *,
                                    const struct __ns1__deleteInvestigation *,
                                    const char *, const char *);

#ifndef soap_write___ns1__deleteInvestigation
#define soap_write___ns1__deleteInvestigation(soap, data)                      \
  (ICat3::soap_serialize___ns1__deleteInvestigation(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteInvestigation(                             \
           soap, data, "-ns1:deleteInvestigation", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteInvestigation *SOAP_FMAC4
soap_get___ns1__deleteInvestigation(struct soap *,
                                    struct __ns1__deleteInvestigation *,
                                    const char *, const char *);

#ifndef soap_read___ns1__deleteInvestigation
#define soap_read___ns1__deleteInvestigation(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteInvestigation(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteInvestigation *SOAP_FMAC2
soap_instantiate___ns1__deleteInvestigation(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__deleteInvestigation *
soap_new___ns1__deleteInvestigation(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteInvestigation(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__deleteInvestigation *
soap_new_req___ns1__deleteInvestigation(struct soap *soap) {
  struct __ns1__deleteInvestigation *_p =
      soap_instantiate___ns1__deleteInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteInvestigation(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteInvestigation *
soap_new_set___ns1__deleteInvestigation(
    struct soap *soap, ns1__deleteInvestigation *ns1__deleteInvestigation_) {
  struct __ns1__deleteInvestigation *_p =
      soap_instantiate___ns1__deleteInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__deleteInvestigation(soap, _p);
    _p->ns1__deleteInvestigation_ = ns1__deleteInvestigation_;
  }
  return _p;
}

inline void
soap_delete___ns1__deleteInvestigation(struct soap *soap,
                                       struct __ns1__deleteInvestigation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteInvestigation(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__deleteInvestigationResponse
#define SOAP_TYPE_ICat3___ns1__deleteInvestigationResponse (632)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__deleteInvestigationResponse(
    struct soap *, struct __ns1__deleteInvestigationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__deleteInvestigationResponse(
    struct soap *, const struct __ns1__deleteInvestigationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__deleteInvestigationResponse(
    struct soap *, const char *, int,
    const struct __ns1__deleteInvestigationResponse *, const char *);
SOAP_FMAC3 struct __ns1__deleteInvestigationResponse *SOAP_FMAC4
soap_in___ns1__deleteInvestigationResponse(
    struct soap *, const char *, struct __ns1__deleteInvestigationResponse *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__deleteInvestigationResponse(
    struct soap *, const struct __ns1__deleteInvestigationResponse *,
    const char *, const char *);

#ifndef soap_write___ns1__deleteInvestigationResponse
#define soap_write___ns1__deleteInvestigationResponse(soap, data)              \
  (ICat3::soap_serialize___ns1__deleteInvestigationResponse(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__deleteInvestigationResponse(                     \
           soap, data, "-ns1:deleteInvestigationResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__deleteInvestigationResponse *SOAP_FMAC4
soap_get___ns1__deleteInvestigationResponse(
    struct soap *, struct __ns1__deleteInvestigationResponse *, const char *,
    const char *);

#ifndef soap_read___ns1__deleteInvestigationResponse
#define soap_read___ns1__deleteInvestigationResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__deleteInvestigationResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__deleteInvestigationResponse *SOAP_FMAC2
soap_instantiate___ns1__deleteInvestigationResponse(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline struct __ns1__deleteInvestigationResponse *
soap_new___ns1__deleteInvestigationResponse(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__deleteInvestigationResponse(soap, n, NULL,
                                                             NULL, NULL);
}

inline struct __ns1__deleteInvestigationResponse *
soap_new_req___ns1__deleteInvestigationResponse(struct soap *soap) {
  struct __ns1__deleteInvestigationResponse *_p =
      soap_instantiate___ns1__deleteInvestigationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__deleteInvestigationResponse(soap, _p);
  }
  return _p;
}

inline struct __ns1__deleteInvestigationResponse *
soap_new_set___ns1__deleteInvestigationResponse(
    struct soap *soap,
    ns1__deleteInvestigationResponse *ns1__deleteInvestigationResponse_) {
  struct __ns1__deleteInvestigationResponse *_p =
      soap_instantiate___ns1__deleteInvestigationResponse(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__deleteInvestigationResponse(soap, _p);
    _p->ns1__deleteInvestigationResponse_ = ns1__deleteInvestigationResponse_;
  }
  return _p;
}

inline void soap_delete___ns1__deleteInvestigationResponse(
    struct soap *soap, struct __ns1__deleteInvestigationResponse *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__deleteInvestigationResponse(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__createInvestigation
#define SOAP_TYPE_ICat3___ns1__createInvestigation (628)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__createInvestigation(struct soap *,
                                        struct __ns1__createInvestigation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__createInvestigation(
    struct soap *, const struct __ns1__createInvestigation *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__createInvestigation(struct soap *, const char *, int,
                                    const struct __ns1__createInvestigation *,
                                    const char *);
SOAP_FMAC3 struct __ns1__createInvestigation *SOAP_FMAC4
soap_in___ns1__createInvestigation(struct soap *, const char *,
                                   struct __ns1__createInvestigation *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__createInvestigation(struct soap *,
                                    const struct __ns1__createInvestigation *,
                                    const char *, const char *);

#ifndef soap_write___ns1__createInvestigation
#define soap_write___ns1__createInvestigation(soap, data)                      \
  (ICat3::soap_serialize___ns1__createInvestigation(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__createInvestigation(                             \
           soap, data, "-ns1:createInvestigation", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__createInvestigation *SOAP_FMAC4
soap_get___ns1__createInvestigation(struct soap *,
                                    struct __ns1__createInvestigation *,
                                    const char *, const char *);

#ifndef soap_read___ns1__createInvestigation
#define soap_read___ns1__createInvestigation(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__createInvestigation(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__createInvestigation *SOAP_FMAC2
soap_instantiate___ns1__createInvestigation(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__createInvestigation *
soap_new___ns1__createInvestigation(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__createInvestigation(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__createInvestigation *
soap_new_req___ns1__createInvestigation(struct soap *soap) {
  struct __ns1__createInvestigation *_p =
      soap_instantiate___ns1__createInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__createInvestigation(soap, _p);
  }
  return _p;
}

inline struct __ns1__createInvestigation *
soap_new_set___ns1__createInvestigation(
    struct soap *soap, ns1__createInvestigation *ns1__createInvestigation_) {
  struct __ns1__createInvestigation *_p =
      soap_instantiate___ns1__createInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__createInvestigation(soap, _p);
    _p->ns1__createInvestigation_ = ns1__createInvestigation_;
  }
  return _p;
}

inline void
soap_delete___ns1__createInvestigation(struct soap *soap,
                                       struct __ns1__createInvestigation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__createInvestigation(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getInvestigationsIncludes
#define SOAP_TYPE_ICat3___ns1__getInvestigationsIncludes (624)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getInvestigationsIncludes(
    struct soap *, struct __ns1__getInvestigationsIncludes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getInvestigationsIncludes(
    struct soap *, const struct __ns1__getInvestigationsIncludes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getInvestigationsIncludes(
    struct soap *, const char *, int,
    const struct __ns1__getInvestigationsIncludes *, const char *);
SOAP_FMAC3 struct __ns1__getInvestigationsIncludes *SOAP_FMAC4
soap_in___ns1__getInvestigationsIncludes(
    struct soap *, const char *, struct __ns1__getInvestigationsIncludes *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getInvestigationsIncludes(
    struct soap *, const struct __ns1__getInvestigationsIncludes *,
    const char *, const char *);

#ifndef soap_write___ns1__getInvestigationsIncludes
#define soap_write___ns1__getInvestigationsIncludes(soap, data)                \
  (ICat3::soap_serialize___ns1__getInvestigationsIncludes(soap, data),         \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getInvestigationsIncludes(                       \
           soap, data, "-ns1:getInvestigationsIncludes", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getInvestigationsIncludes *SOAP_FMAC4
soap_get___ns1__getInvestigationsIncludes(
    struct soap *, struct __ns1__getInvestigationsIncludes *, const char *,
    const char *);

#ifndef soap_read___ns1__getInvestigationsIncludes
#define soap_read___ns1__getInvestigationsIncludes(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getInvestigationsIncludes(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getInvestigationsIncludes *SOAP_FMAC2
soap_instantiate___ns1__getInvestigationsIncludes(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline struct __ns1__getInvestigationsIncludes *
soap_new___ns1__getInvestigationsIncludes(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getInvestigationsIncludes(soap, n, NULL, NULL,
                                                           NULL);
}

inline struct __ns1__getInvestigationsIncludes *
soap_new_req___ns1__getInvestigationsIncludes(struct soap *soap) {
  struct __ns1__getInvestigationsIncludes *_p =
      soap_instantiate___ns1__getInvestigationsIncludes(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__getInvestigationsIncludes(soap, _p);
  }
  return _p;
}

inline struct __ns1__getInvestigationsIncludes *
soap_new_set___ns1__getInvestigationsIncludes(
    struct soap *soap,
    ns1__getInvestigationsIncludes *ns1__getInvestigationsIncludes_) {
  struct __ns1__getInvestigationsIncludes *_p =
      soap_instantiate___ns1__getInvestigationsIncludes(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__getInvestigationsIncludes(soap, _p);
    _p->ns1__getInvestigationsIncludes_ = ns1__getInvestigationsIncludes_;
  }
  return _p;
}

inline void soap_delete___ns1__getInvestigationsIncludes(
    struct soap *soap, struct __ns1__getInvestigationsIncludes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getInvestigationsIncludes(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getInvestigations
#define SOAP_TYPE_ICat3___ns1__getInvestigations (620)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getInvestigations(struct soap *,
                                      struct __ns1__getInvestigations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getInvestigations(
    struct soap *, const struct __ns1__getInvestigations *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getInvestigations(struct soap *, const char *, int,
                                  const struct __ns1__getInvestigations *,
                                  const char *);
SOAP_FMAC3 struct __ns1__getInvestigations *SOAP_FMAC4
soap_in___ns1__getInvestigations(struct soap *, const char *,
                                 struct __ns1__getInvestigations *,
                                 const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getInvestigations(struct soap *,
                                  const struct __ns1__getInvestigations *,
                                  const char *, const char *);

#ifndef soap_write___ns1__getInvestigations
#define soap_write___ns1__getInvestigations(soap, data)                        \
  (ICat3::soap_serialize___ns1__getInvestigations(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put___ns1__getInvestigations(          \
                                soap, data, "-ns1:getInvestigations", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getInvestigations *SOAP_FMAC4
soap_get___ns1__getInvestigations(struct soap *,
                                  struct __ns1__getInvestigations *,
                                  const char *, const char *);

#ifndef soap_read___ns1__getInvestigations
#define soap_read___ns1__getInvestigations(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getInvestigations(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getInvestigations *SOAP_FMAC2
soap_instantiate___ns1__getInvestigations(struct soap *, int, const char *,
                                          const char *, size_t *);

inline struct __ns1__getInvestigations *
soap_new___ns1__getInvestigations(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getInvestigations(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getInvestigations *
soap_new_req___ns1__getInvestigations(struct soap *soap) {
  struct __ns1__getInvestigations *_p =
      soap_instantiate___ns1__getInvestigations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getInvestigations(soap, _p);
  }
  return _p;
}

inline struct __ns1__getInvestigations *soap_new_set___ns1__getInvestigations(
    struct soap *soap, ns1__getInvestigations *ns1__getInvestigations_) {
  struct __ns1__getInvestigations *_p =
      soap_instantiate___ns1__getInvestigations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getInvestigations(soap, _p);
    _p->ns1__getInvestigations_ = ns1__getInvestigations_;
  }
  return _p;
}

inline void
soap_delete___ns1__getInvestigations(struct soap *soap,
                                     struct __ns1__getInvestigations *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getInvestigations(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getInvestigationIncludes
#define SOAP_TYPE_ICat3___ns1__getInvestigationIncludes (616)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getInvestigationIncludes(
    struct soap *, struct __ns1__getInvestigationIncludes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getInvestigationIncludes(
    struct soap *, const struct __ns1__getInvestigationIncludes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getInvestigationIncludes(
    struct soap *, const char *, int,
    const struct __ns1__getInvestigationIncludes *, const char *);
SOAP_FMAC3 struct __ns1__getInvestigationIncludes *SOAP_FMAC4
soap_in___ns1__getInvestigationIncludes(
    struct soap *, const char *, struct __ns1__getInvestigationIncludes *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getInvestigationIncludes(
    struct soap *, const struct __ns1__getInvestigationIncludes *, const char *,
    const char *);

#ifndef soap_write___ns1__getInvestigationIncludes
#define soap_write___ns1__getInvestigationIncludes(soap, data)                 \
  (ICat3::soap_serialize___ns1__getInvestigationIncludes(soap, data),          \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getInvestigationIncludes(                        \
           soap, data, "-ns1:getInvestigationIncludes", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getInvestigationIncludes *SOAP_FMAC4
soap_get___ns1__getInvestigationIncludes(
    struct soap *, struct __ns1__getInvestigationIncludes *, const char *,
    const char *);

#ifndef soap_read___ns1__getInvestigationIncludes
#define soap_read___ns1__getInvestigationIncludes(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getInvestigationIncludes(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getInvestigationIncludes *SOAP_FMAC2
soap_instantiate___ns1__getInvestigationIncludes(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline struct __ns1__getInvestigationIncludes *
soap_new___ns1__getInvestigationIncludes(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getInvestigationIncludes(soap, n, NULL, NULL,
                                                          NULL);
}

inline struct __ns1__getInvestigationIncludes *
soap_new_req___ns1__getInvestigationIncludes(struct soap *soap) {
  struct __ns1__getInvestigationIncludes *_p =
      soap_instantiate___ns1__getInvestigationIncludes(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    soap_default___ns1__getInvestigationIncludes(soap, _p);
  }
  return _p;
}

inline struct __ns1__getInvestigationIncludes *
soap_new_set___ns1__getInvestigationIncludes(
    struct soap *soap,
    ns1__getInvestigationIncludes *ns1__getInvestigationIncludes_) {
  struct __ns1__getInvestigationIncludes *_p =
      soap_instantiate___ns1__getInvestigationIncludes(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    soap_default___ns1__getInvestigationIncludes(soap, _p);
    _p->ns1__getInvestigationIncludes_ = ns1__getInvestigationIncludes_;
  }
  return _p;
}

inline void soap_delete___ns1__getInvestigationIncludes(
    struct soap *soap, struct __ns1__getInvestigationIncludes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getInvestigationIncludes(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getInvestigation
#define SOAP_TYPE_ICat3___ns1__getInvestigation (612)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getInvestigation(struct soap *,
                                     struct __ns1__getInvestigation *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__getInvestigation(struct soap *,
                                       const struct __ns1__getInvestigation *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getInvestigation(struct soap *, const char *, int,
                                 const struct __ns1__getInvestigation *,
                                 const char *);
SOAP_FMAC3 struct __ns1__getInvestigation *SOAP_FMAC4
soap_in___ns1__getInvestigation(struct soap *, const char *,
                                struct __ns1__getInvestigation *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getInvestigation(struct soap *,
                                 const struct __ns1__getInvestigation *,
                                 const char *, const char *);

#ifndef soap_write___ns1__getInvestigation
#define soap_write___ns1__getInvestigation(soap, data)                         \
  (ICat3::soap_serialize___ns1__getInvestigation(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put___ns1__getInvestigation(           \
                                soap, data, "-ns1:getInvestigation", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getInvestigation *SOAP_FMAC4
soap_get___ns1__getInvestigation(struct soap *,
                                 struct __ns1__getInvestigation *, const char *,
                                 const char *);

#ifndef soap_read___ns1__getInvestigation
#define soap_read___ns1__getInvestigation(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getInvestigation(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getInvestigation *SOAP_FMAC2
soap_instantiate___ns1__getInvestigation(struct soap *, int, const char *,
                                         const char *, size_t *);

inline struct __ns1__getInvestigation *
soap_new___ns1__getInvestigation(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getInvestigation(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getInvestigation *
soap_new_req___ns1__getInvestigation(struct soap *soap) {
  struct __ns1__getInvestigation *_p =
      soap_instantiate___ns1__getInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getInvestigation(soap, _p);
  }
  return _p;
}

inline struct __ns1__getInvestigation *soap_new_set___ns1__getInvestigation(
    struct soap *soap, ns1__getInvestigation *ns1__getInvestigation_) {
  struct __ns1__getInvestigation *_p =
      soap_instantiate___ns1__getInvestigation(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getInvestigation(soap, _p);
    _p->ns1__getInvestigation_ = ns1__getInvestigation_;
  }
  return _p;
}

inline void
soap_delete___ns1__getInvestigation(struct soap *soap,
                                    struct __ns1__getInvestigation *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getInvestigation(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__listDatafileFormats
#define SOAP_TYPE_ICat3___ns1__listDatafileFormats (608)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__listDatafileFormats(struct soap *,
                                        struct __ns1__listDatafileFormats *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__listDatafileFormats(
    struct soap *, const struct __ns1__listDatafileFormats *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__listDatafileFormats(struct soap *, const char *, int,
                                    const struct __ns1__listDatafileFormats *,
                                    const char *);
SOAP_FMAC3 struct __ns1__listDatafileFormats *SOAP_FMAC4
soap_in___ns1__listDatafileFormats(struct soap *, const char *,
                                   struct __ns1__listDatafileFormats *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__listDatafileFormats(struct soap *,
                                    const struct __ns1__listDatafileFormats *,
                                    const char *, const char *);

#ifndef soap_write___ns1__listDatafileFormats
#define soap_write___ns1__listDatafileFormats(soap, data)                      \
  (ICat3::soap_serialize___ns1__listDatafileFormats(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__listDatafileFormats(                             \
           soap, data, "-ns1:listDatafileFormats", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__listDatafileFormats *SOAP_FMAC4
soap_get___ns1__listDatafileFormats(struct soap *,
                                    struct __ns1__listDatafileFormats *,
                                    const char *, const char *);

#ifndef soap_read___ns1__listDatafileFormats
#define soap_read___ns1__listDatafileFormats(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__listDatafileFormats(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__listDatafileFormats *SOAP_FMAC2
soap_instantiate___ns1__listDatafileFormats(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__listDatafileFormats *
soap_new___ns1__listDatafileFormats(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__listDatafileFormats(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__listDatafileFormats *
soap_new_req___ns1__listDatafileFormats(struct soap *soap) {
  struct __ns1__listDatafileFormats *_p =
      soap_instantiate___ns1__listDatafileFormats(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listDatafileFormats(soap, _p);
  }
  return _p;
}

inline struct __ns1__listDatafileFormats *
soap_new_set___ns1__listDatafileFormats(
    struct soap *soap, ns1__listDatafileFormats *ns1__listDatafileFormats_) {
  struct __ns1__listDatafileFormats *_p =
      soap_instantiate___ns1__listDatafileFormats(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listDatafileFormats(soap, _p);
    _p->ns1__listDatafileFormats_ = ns1__listDatafileFormats_;
  }
  return _p;
}

inline void
soap_delete___ns1__listDatafileFormats(struct soap *soap,
                                       struct __ns1__listDatafileFormats *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__listDatafileFormats(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchByRunNumberPagination
#define SOAP_TYPE_ICat3___ns1__searchByRunNumberPagination (604)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchByRunNumberPagination(
    struct soap *, struct __ns1__searchByRunNumberPagination *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchByRunNumberPagination(
    struct soap *, const struct __ns1__searchByRunNumberPagination *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchByRunNumberPagination(
    struct soap *, const char *, int,
    const struct __ns1__searchByRunNumberPagination *, const char *);
SOAP_FMAC3 struct __ns1__searchByRunNumberPagination *SOAP_FMAC4
soap_in___ns1__searchByRunNumberPagination(
    struct soap *, const char *, struct __ns1__searchByRunNumberPagination *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchByRunNumberPagination(
    struct soap *, const struct __ns1__searchByRunNumberPagination *,
    const char *, const char *);

#ifndef soap_write___ns1__searchByRunNumberPagination
#define soap_write___ns1__searchByRunNumberPagination(soap, data)              \
  (ICat3::soap_serialize___ns1__searchByRunNumberPagination(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchByRunNumberPagination(                     \
           soap, data, "-ns1:searchByRunNumberPagination", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchByRunNumberPagination *SOAP_FMAC4
soap_get___ns1__searchByRunNumberPagination(
    struct soap *, struct __ns1__searchByRunNumberPagination *, const char *,
    const char *);

#ifndef soap_read___ns1__searchByRunNumberPagination
#define soap_read___ns1__searchByRunNumberPagination(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchByRunNumberPagination(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchByRunNumberPagination *SOAP_FMAC2
soap_instantiate___ns1__searchByRunNumberPagination(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline struct __ns1__searchByRunNumberPagination *
soap_new___ns1__searchByRunNumberPagination(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchByRunNumberPagination(soap, n, NULL,
                                                             NULL, NULL);
}

inline struct __ns1__searchByRunNumberPagination *
soap_new_req___ns1__searchByRunNumberPagination(struct soap *soap) {
  struct __ns1__searchByRunNumberPagination *_p =
      soap_instantiate___ns1__searchByRunNumberPagination(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__searchByRunNumberPagination(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchByRunNumberPagination *
soap_new_set___ns1__searchByRunNumberPagination(
    struct soap *soap,
    ns1__searchByRunNumberPagination *ns1__searchByRunNumberPagination_) {
  struct __ns1__searchByRunNumberPagination *_p =
      soap_instantiate___ns1__searchByRunNumberPagination(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__searchByRunNumberPagination(soap, _p);
    _p->ns1__searchByRunNumberPagination_ = ns1__searchByRunNumberPagination_;
  }
  return _p;
}

inline void soap_delete___ns1__searchByRunNumberPagination(
    struct soap *soap, struct __ns1__searchByRunNumberPagination *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchByRunNumberPagination(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchByRunNumber
#define SOAP_TYPE_ICat3___ns1__searchByRunNumber (600)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchByRunNumber(struct soap *,
                                      struct __ns1__searchByRunNumber *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchByRunNumber(
    struct soap *, const struct __ns1__searchByRunNumber *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__searchByRunNumber(struct soap *, const char *, int,
                                  const struct __ns1__searchByRunNumber *,
                                  const char *);
SOAP_FMAC3 struct __ns1__searchByRunNumber *SOAP_FMAC4
soap_in___ns1__searchByRunNumber(struct soap *, const char *,
                                 struct __ns1__searchByRunNumber *,
                                 const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__searchByRunNumber(struct soap *,
                                  const struct __ns1__searchByRunNumber *,
                                  const char *, const char *);

#ifndef soap_write___ns1__searchByRunNumber
#define soap_write___ns1__searchByRunNumber(soap, data)                        \
  (ICat3::soap_serialize___ns1__searchByRunNumber(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put___ns1__searchByRunNumber(          \
                                soap, data, "-ns1:searchByRunNumber", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchByRunNumber *SOAP_FMAC4
soap_get___ns1__searchByRunNumber(struct soap *,
                                  struct __ns1__searchByRunNumber *,
                                  const char *, const char *);

#ifndef soap_read___ns1__searchByRunNumber
#define soap_read___ns1__searchByRunNumber(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchByRunNumber(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchByRunNumber *SOAP_FMAC2
soap_instantiate___ns1__searchByRunNumber(struct soap *, int, const char *,
                                          const char *, size_t *);

inline struct __ns1__searchByRunNumber *
soap_new___ns1__searchByRunNumber(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchByRunNumber(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchByRunNumber *
soap_new_req___ns1__searchByRunNumber(struct soap *soap) {
  struct __ns1__searchByRunNumber *_p =
      soap_instantiate___ns1__searchByRunNumber(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByRunNumber(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchByRunNumber *soap_new_set___ns1__searchByRunNumber(
    struct soap *soap, ns1__searchByRunNumber *ns1__searchByRunNumber_) {
  struct __ns1__searchByRunNumber *_p =
      soap_instantiate___ns1__searchByRunNumber(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByRunNumber(soap, _p);
    _p->ns1__searchByRunNumber_ = ns1__searchByRunNumber_;
  }
  return _p;
}

inline void
soap_delete___ns1__searchByRunNumber(struct soap *soap,
                                     struct __ns1__searchByRunNumber *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchByRunNumber(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__listDatasetStatus
#define SOAP_TYPE_ICat3___ns1__listDatasetStatus (596)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__listDatasetStatus(struct soap *,
                                      struct __ns1__listDatasetStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__listDatasetStatus(
    struct soap *, const struct __ns1__listDatasetStatus *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__listDatasetStatus(struct soap *, const char *, int,
                                  const struct __ns1__listDatasetStatus *,
                                  const char *);
SOAP_FMAC3 struct __ns1__listDatasetStatus *SOAP_FMAC4
soap_in___ns1__listDatasetStatus(struct soap *, const char *,
                                 struct __ns1__listDatasetStatus *,
                                 const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__listDatasetStatus(struct soap *,
                                  const struct __ns1__listDatasetStatus *,
                                  const char *, const char *);

#ifndef soap_write___ns1__listDatasetStatus
#define soap_write___ns1__listDatasetStatus(soap, data)                        \
  (ICat3::soap_serialize___ns1__listDatasetStatus(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put___ns1__listDatasetStatus(          \
                                soap, data, "-ns1:listDatasetStatus", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__listDatasetStatus *SOAP_FMAC4
soap_get___ns1__listDatasetStatus(struct soap *,
                                  struct __ns1__listDatasetStatus *,
                                  const char *, const char *);

#ifndef soap_read___ns1__listDatasetStatus
#define soap_read___ns1__listDatasetStatus(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__listDatasetStatus(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__listDatasetStatus *SOAP_FMAC2
soap_instantiate___ns1__listDatasetStatus(struct soap *, int, const char *,
                                          const char *, size_t *);

inline struct __ns1__listDatasetStatus *
soap_new___ns1__listDatasetStatus(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__listDatasetStatus(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__listDatasetStatus *
soap_new_req___ns1__listDatasetStatus(struct soap *soap) {
  struct __ns1__listDatasetStatus *_p =
      soap_instantiate___ns1__listDatasetStatus(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listDatasetStatus(soap, _p);
  }
  return _p;
}

inline struct __ns1__listDatasetStatus *soap_new_set___ns1__listDatasetStatus(
    struct soap *soap, ns1__listDatasetStatus *ns1__listDatasetStatus_) {
  struct __ns1__listDatasetStatus *_p =
      soap_instantiate___ns1__listDatasetStatus(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listDatasetStatus(soap, _p);
    _p->ns1__listDatasetStatus_ = ns1__listDatasetStatus_;
  }
  return _p;
}

inline void
soap_delete___ns1__listDatasetStatus(struct soap *soap,
                                     struct __ns1__listDatasetStatus *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__listDatasetStatus(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__listDatasetTypes
#define SOAP_TYPE_ICat3___ns1__listDatasetTypes (592)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__listDatasetTypes(struct soap *,
                                     struct __ns1__listDatasetTypes *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__listDatasetTypes(struct soap *,
                                       const struct __ns1__listDatasetTypes *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__listDatasetTypes(struct soap *, const char *, int,
                                 const struct __ns1__listDatasetTypes *,
                                 const char *);
SOAP_FMAC3 struct __ns1__listDatasetTypes *SOAP_FMAC4
soap_in___ns1__listDatasetTypes(struct soap *, const char *,
                                struct __ns1__listDatasetTypes *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__listDatasetTypes(struct soap *,
                                 const struct __ns1__listDatasetTypes *,
                                 const char *, const char *);

#ifndef soap_write___ns1__listDatasetTypes
#define soap_write___ns1__listDatasetTypes(soap, data)                         \
  (ICat3::soap_serialize___ns1__listDatasetTypes(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put___ns1__listDatasetTypes(           \
                                soap, data, "-ns1:listDatasetTypes", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__listDatasetTypes *SOAP_FMAC4
soap_get___ns1__listDatasetTypes(struct soap *,
                                 struct __ns1__listDatasetTypes *, const char *,
                                 const char *);

#ifndef soap_read___ns1__listDatasetTypes
#define soap_read___ns1__listDatasetTypes(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__listDatasetTypes(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__listDatasetTypes *SOAP_FMAC2
soap_instantiate___ns1__listDatasetTypes(struct soap *, int, const char *,
                                         const char *, size_t *);

inline struct __ns1__listDatasetTypes *
soap_new___ns1__listDatasetTypes(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__listDatasetTypes(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__listDatasetTypes *
soap_new_req___ns1__listDatasetTypes(struct soap *soap) {
  struct __ns1__listDatasetTypes *_p =
      soap_instantiate___ns1__listDatasetTypes(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listDatasetTypes(soap, _p);
  }
  return _p;
}

inline struct __ns1__listDatasetTypes *soap_new_set___ns1__listDatasetTypes(
    struct soap *soap, ns1__listDatasetTypes *ns1__listDatasetTypes_) {
  struct __ns1__listDatasetTypes *_p =
      soap_instantiate___ns1__listDatasetTypes(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listDatasetTypes(soap, _p);
    _p->ns1__listDatasetTypes_ = ns1__listDatasetTypes_;
  }
  return _p;
}

inline void
soap_delete___ns1__listDatasetTypes(struct soap *soap,
                                    struct __ns1__listDatasetTypes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__listDatasetTypes(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchDatasetsBySample
#define SOAP_TYPE_ICat3___ns1__searchDatasetsBySample (588)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchDatasetsBySample(
    struct soap *, struct __ns1__searchDatasetsBySample *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchDatasetsBySample(
    struct soap *, const struct __ns1__searchDatasetsBySample *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchDatasetsBySample(
    struct soap *, const char *, int,
    const struct __ns1__searchDatasetsBySample *, const char *);
SOAP_FMAC3 struct __ns1__searchDatasetsBySample *SOAP_FMAC4
soap_in___ns1__searchDatasetsBySample(struct soap *, const char *,
                                      struct __ns1__searchDatasetsBySample *,
                                      const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchDatasetsBySample(
    struct soap *, const struct __ns1__searchDatasetsBySample *, const char *,
    const char *);

#ifndef soap_write___ns1__searchDatasetsBySample
#define soap_write___ns1__searchDatasetsBySample(soap, data)                   \
  (ICat3::soap_serialize___ns1__searchDatasetsBySample(soap, data),            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchDatasetsBySample(                          \
           soap, data, "-ns1:searchDatasetsBySample", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchDatasetsBySample *SOAP_FMAC4
soap_get___ns1__searchDatasetsBySample(struct soap *,
                                       struct __ns1__searchDatasetsBySample *,
                                       const char *, const char *);

#ifndef soap_read___ns1__searchDatasetsBySample
#define soap_read___ns1__searchDatasetsBySample(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchDatasetsBySample(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchDatasetsBySample *SOAP_FMAC2
soap_instantiate___ns1__searchDatasetsBySample(struct soap *, int, const char *,
                                               const char *, size_t *);

inline struct __ns1__searchDatasetsBySample *
soap_new___ns1__searchDatasetsBySample(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchDatasetsBySample(soap, n, NULL, NULL,
                                                        NULL);
}

inline struct __ns1__searchDatasetsBySample *
soap_new_req___ns1__searchDatasetsBySample(struct soap *soap) {
  struct __ns1__searchDatasetsBySample *_p =
      soap_instantiate___ns1__searchDatasetsBySample(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__searchDatasetsBySample(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchDatasetsBySample *
soap_new_set___ns1__searchDatasetsBySample(
    struct soap *soap,
    ns1__searchDatasetsBySample *ns1__searchDatasetsBySample_) {
  struct __ns1__searchDatasetsBySample *_p =
      soap_instantiate___ns1__searchDatasetsBySample(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__searchDatasetsBySample(soap, _p);
    _p->ns1__searchDatasetsBySample_ = ns1__searchDatasetsBySample_;
  }
  return _p;
}

inline void soap_delete___ns1__searchDatasetsBySample(
    struct soap *soap, struct __ns1__searchDatasetsBySample *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchDatasetsBySample(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchSamplesBySampleName
#define SOAP_TYPE_ICat3___ns1__searchSamplesBySampleName (584)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchSamplesBySampleName(
    struct soap *, struct __ns1__searchSamplesBySampleName *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchSamplesBySampleName(
    struct soap *, const struct __ns1__searchSamplesBySampleName *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchSamplesBySampleName(
    struct soap *, const char *, int,
    const struct __ns1__searchSamplesBySampleName *, const char *);
SOAP_FMAC3 struct __ns1__searchSamplesBySampleName *SOAP_FMAC4
soap_in___ns1__searchSamplesBySampleName(
    struct soap *, const char *, struct __ns1__searchSamplesBySampleName *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchSamplesBySampleName(
    struct soap *, const struct __ns1__searchSamplesBySampleName *,
    const char *, const char *);

#ifndef soap_write___ns1__searchSamplesBySampleName
#define soap_write___ns1__searchSamplesBySampleName(soap, data)                \
  (ICat3::soap_serialize___ns1__searchSamplesBySampleName(soap, data),         \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchSamplesBySampleName(                       \
           soap, data, "-ns1:searchSamplesBySampleName", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchSamplesBySampleName *SOAP_FMAC4
soap_get___ns1__searchSamplesBySampleName(
    struct soap *, struct __ns1__searchSamplesBySampleName *, const char *,
    const char *);

#ifndef soap_read___ns1__searchSamplesBySampleName
#define soap_read___ns1__searchSamplesBySampleName(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchSamplesBySampleName(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchSamplesBySampleName *SOAP_FMAC2
soap_instantiate___ns1__searchSamplesBySampleName(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline struct __ns1__searchSamplesBySampleName *
soap_new___ns1__searchSamplesBySampleName(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchSamplesBySampleName(soap, n, NULL, NULL,
                                                           NULL);
}

inline struct __ns1__searchSamplesBySampleName *
soap_new_req___ns1__searchSamplesBySampleName(struct soap *soap) {
  struct __ns1__searchSamplesBySampleName *_p =
      soap_instantiate___ns1__searchSamplesBySampleName(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__searchSamplesBySampleName(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchSamplesBySampleName *
soap_new_set___ns1__searchSamplesBySampleName(
    struct soap *soap,
    ns1__searchSamplesBySampleName *ns1__searchSamplesBySampleName_) {
  struct __ns1__searchSamplesBySampleName *_p =
      soap_instantiate___ns1__searchSamplesBySampleName(soap, -1, NULL, NULL,
                                                        NULL);
  if (_p) {
    soap_default___ns1__searchSamplesBySampleName(soap, _p);
    _p->ns1__searchSamplesBySampleName_ = ns1__searchSamplesBySampleName_;
  }
  return _p;
}

inline void soap_delete___ns1__searchSamplesBySampleName(
    struct soap *soap, struct __ns1__searchSamplesBySampleName *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchSamplesBySampleName(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__listInvestigationTypes
#define SOAP_TYPE_ICat3___ns1__listInvestigationTypes (580)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__listInvestigationTypes(
    struct soap *, struct __ns1__listInvestigationTypes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__listInvestigationTypes(
    struct soap *, const struct __ns1__listInvestigationTypes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__listInvestigationTypes(
    struct soap *, const char *, int,
    const struct __ns1__listInvestigationTypes *, const char *);
SOAP_FMAC3 struct __ns1__listInvestigationTypes *SOAP_FMAC4
soap_in___ns1__listInvestigationTypes(struct soap *, const char *,
                                      struct __ns1__listInvestigationTypes *,
                                      const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__listInvestigationTypes(
    struct soap *, const struct __ns1__listInvestigationTypes *, const char *,
    const char *);

#ifndef soap_write___ns1__listInvestigationTypes
#define soap_write___ns1__listInvestigationTypes(soap, data)                   \
  (ICat3::soap_serialize___ns1__listInvestigationTypes(soap, data),            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__listInvestigationTypes(                          \
           soap, data, "-ns1:listInvestigationTypes", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__listInvestigationTypes *SOAP_FMAC4
soap_get___ns1__listInvestigationTypes(struct soap *,
                                       struct __ns1__listInvestigationTypes *,
                                       const char *, const char *);

#ifndef soap_read___ns1__listInvestigationTypes
#define soap_read___ns1__listInvestigationTypes(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__listInvestigationTypes(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__listInvestigationTypes *SOAP_FMAC2
soap_instantiate___ns1__listInvestigationTypes(struct soap *, int, const char *,
                                               const char *, size_t *);

inline struct __ns1__listInvestigationTypes *
soap_new___ns1__listInvestigationTypes(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__listInvestigationTypes(soap, n, NULL, NULL,
                                                        NULL);
}

inline struct __ns1__listInvestigationTypes *
soap_new_req___ns1__listInvestigationTypes(struct soap *soap) {
  struct __ns1__listInvestigationTypes *_p =
      soap_instantiate___ns1__listInvestigationTypes(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__listInvestigationTypes(soap, _p);
  }
  return _p;
}

inline struct __ns1__listInvestigationTypes *
soap_new_set___ns1__listInvestigationTypes(
    struct soap *soap,
    ns1__listInvestigationTypes *ns1__listInvestigationTypes_) {
  struct __ns1__listInvestigationTypes *_p =
      soap_instantiate___ns1__listInvestigationTypes(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__listInvestigationTypes(soap, _p);
    _p->ns1__listInvestigationTypes_ = ns1__listInvestigationTypes_;
  }
  return _p;
}

inline void soap_delete___ns1__listInvestigationTypes(
    struct soap *soap, struct __ns1__listInvestigationTypes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__listInvestigationTypes(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getInstrumentsWithData
#define SOAP_TYPE_ICat3___ns1__getInstrumentsWithData (576)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getInstrumentsWithData(
    struct soap *, struct __ns1__getInstrumentsWithData *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getInstrumentsWithData(
    struct soap *, const struct __ns1__getInstrumentsWithData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getInstrumentsWithData(
    struct soap *, const char *, int,
    const struct __ns1__getInstrumentsWithData *, const char *);
SOAP_FMAC3 struct __ns1__getInstrumentsWithData *SOAP_FMAC4
soap_in___ns1__getInstrumentsWithData(struct soap *, const char *,
                                      struct __ns1__getInstrumentsWithData *,
                                      const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getInstrumentsWithData(
    struct soap *, const struct __ns1__getInstrumentsWithData *, const char *,
    const char *);

#ifndef soap_write___ns1__getInstrumentsWithData
#define soap_write___ns1__getInstrumentsWithData(soap, data)                   \
  (ICat3::soap_serialize___ns1__getInstrumentsWithData(soap, data),            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getInstrumentsWithData(                          \
           soap, data, "-ns1:getInstrumentsWithData", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getInstrumentsWithData *SOAP_FMAC4
soap_get___ns1__getInstrumentsWithData(struct soap *,
                                       struct __ns1__getInstrumentsWithData *,
                                       const char *, const char *);

#ifndef soap_read___ns1__getInstrumentsWithData
#define soap_read___ns1__getInstrumentsWithData(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getInstrumentsWithData(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getInstrumentsWithData *SOAP_FMAC2
soap_instantiate___ns1__getInstrumentsWithData(struct soap *, int, const char *,
                                               const char *, size_t *);

inline struct __ns1__getInstrumentsWithData *
soap_new___ns1__getInstrumentsWithData(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getInstrumentsWithData(soap, n, NULL, NULL,
                                                        NULL);
}

inline struct __ns1__getInstrumentsWithData *
soap_new_req___ns1__getInstrumentsWithData(struct soap *soap) {
  struct __ns1__getInstrumentsWithData *_p =
      soap_instantiate___ns1__getInstrumentsWithData(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__getInstrumentsWithData(soap, _p);
  }
  return _p;
}

inline struct __ns1__getInstrumentsWithData *
soap_new_set___ns1__getInstrumentsWithData(
    struct soap *soap,
    ns1__getInstrumentsWithData *ns1__getInstrumentsWithData_) {
  struct __ns1__getInstrumentsWithData *_p =
      soap_instantiate___ns1__getInstrumentsWithData(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__getInstrumentsWithData(soap, _p);
    _p->ns1__getInstrumentsWithData_ = ns1__getInstrumentsWithData_;
  }
  return _p;
}

inline void soap_delete___ns1__getInstrumentsWithData(
    struct soap *soap, struct __ns1__getInstrumentsWithData *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getInstrumentsWithData(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getFacilityCyclesWithDataForInstrument
#define SOAP_TYPE_ICat3___ns1__getFacilityCyclesWithDataForInstrument (572)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *, struct __ns1__getFacilityCyclesWithDataForInstrument *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *,
    const struct __ns1__getFacilityCyclesWithDataForInstrument *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *, const char *, int,
    const struct __ns1__getFacilityCyclesWithDataForInstrument *, const char *);
SOAP_FMAC3 struct __ns1__getFacilityCyclesWithDataForInstrument *SOAP_FMAC4
soap_in___ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *, const char *,
    struct __ns1__getFacilityCyclesWithDataForInstrument *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *, const struct __ns1__getFacilityCyclesWithDataForInstrument *,
    const char *, const char *);

#ifndef soap_write___ns1__getFacilityCyclesWithDataForInstrument
#define soap_write___ns1__getFacilityCyclesWithDataForInstrument(soap, data)   \
  (ICat3::soap_serialize___ns1__getFacilityCyclesWithDataForInstrument(soap,   \
                                                                       data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getFacilityCyclesWithDataForInstrument(          \
           soap, data, "-ns1:getFacilityCyclesWithDataForInstrument", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getFacilityCyclesWithDataForInstrument *SOAP_FMAC4
soap_get___ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *, struct __ns1__getFacilityCyclesWithDataForInstrument *,
    const char *, const char *);

#ifndef soap_read___ns1__getFacilityCyclesWithDataForInstrument
#define soap_read___ns1__getFacilityCyclesWithDataForInstrument(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getFacilityCyclesWithDataForInstrument(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getFacilityCyclesWithDataForInstrument *SOAP_FMAC2
soap_instantiate___ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *, int, const char *, const char *, size_t *);

inline struct __ns1__getFacilityCyclesWithDataForInstrument *
soap_new___ns1__getFacilityCyclesWithDataForInstrument(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate___ns1__getFacilityCyclesWithDataForInstrument(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getFacilityCyclesWithDataForInstrument *
soap_new_req___ns1__getFacilityCyclesWithDataForInstrument(struct soap *soap) {
  struct __ns1__getFacilityCyclesWithDataForInstrument *_p =
      soap_instantiate___ns1__getFacilityCyclesWithDataForInstrument(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getFacilityCyclesWithDataForInstrument(soap, _p);
  }
  return _p;
}

inline struct __ns1__getFacilityCyclesWithDataForInstrument *
soap_new_set___ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *soap, ns1__getFacilityCyclesWithDataForInstrument *
                           ns1__getFacilityCyclesWithDataForInstrument_) {
  struct __ns1__getFacilityCyclesWithDataForInstrument *_p =
      soap_instantiate___ns1__getFacilityCyclesWithDataForInstrument(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getFacilityCyclesWithDataForInstrument(soap, _p);
    _p->ns1__getFacilityCyclesWithDataForInstrument_ =
        ns1__getFacilityCyclesWithDataForInstrument_;
  }
  return _p;
}

inline void soap_delete___ns1__getFacilityCyclesWithDataForInstrument(
    struct soap *soap,
    struct __ns1__getFacilityCyclesWithDataForInstrument *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getFacilityCyclesWithDataForInstrument(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__listFacilityCycles
#define SOAP_TYPE_ICat3___ns1__listFacilityCycles (568)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__listFacilityCycles(struct soap *,
                                       struct __ns1__listFacilityCycles *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__listFacilityCycles(
    struct soap *, const struct __ns1__listFacilityCycles *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__listFacilityCycles(struct soap *, const char *, int,
                                   const struct __ns1__listFacilityCycles *,
                                   const char *);
SOAP_FMAC3 struct __ns1__listFacilityCycles *SOAP_FMAC4
soap_in___ns1__listFacilityCycles(struct soap *, const char *,
                                  struct __ns1__listFacilityCycles *,
                                  const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__listFacilityCycles(struct soap *,
                                   const struct __ns1__listFacilityCycles *,
                                   const char *, const char *);

#ifndef soap_write___ns1__listFacilityCycles
#define soap_write___ns1__listFacilityCycles(soap, data)                       \
  (ICat3::soap_serialize___ns1__listFacilityCycles(soap, data),                \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__listFacilityCycles(                              \
           soap, data, "-ns1:listFacilityCycles", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__listFacilityCycles *SOAP_FMAC4
soap_get___ns1__listFacilityCycles(struct soap *,
                                   struct __ns1__listFacilityCycles *,
                                   const char *, const char *);

#ifndef soap_read___ns1__listFacilityCycles
#define soap_read___ns1__listFacilityCycles(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__listFacilityCycles(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__listFacilityCycles *SOAP_FMAC2
soap_instantiate___ns1__listFacilityCycles(struct soap *, int, const char *,
                                           const char *, size_t *);

inline struct __ns1__listFacilityCycles *
soap_new___ns1__listFacilityCycles(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__listFacilityCycles(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__listFacilityCycles *
soap_new_req___ns1__listFacilityCycles(struct soap *soap) {
  struct __ns1__listFacilityCycles *_p =
      soap_instantiate___ns1__listFacilityCycles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listFacilityCycles(soap, _p);
  }
  return _p;
}

inline struct __ns1__listFacilityCycles *soap_new_set___ns1__listFacilityCycles(
    struct soap *soap, ns1__listFacilityCycles *ns1__listFacilityCycles_) {
  struct __ns1__listFacilityCycles *_p =
      soap_instantiate___ns1__listFacilityCycles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listFacilityCycles(soap, _p);
    _p->ns1__listFacilityCycles_ = ns1__listFacilityCycles_;
  }
  return _p;
}

inline void
soap_delete___ns1__listFacilityCycles(struct soap *soap,
                                      struct __ns1__listFacilityCycles *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__listFacilityCycles(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__listParameters
#define SOAP_TYPE_ICat3___ns1__listParameters (564)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__listParameters(struct soap *,
                                   struct __ns1__listParameters *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__listParameters(struct soap *,
                                     const struct __ns1__listParameters *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__listParameters(struct soap *, const char *, int,
                               const struct __ns1__listParameters *,
                               const char *);
SOAP_FMAC3 struct __ns1__listParameters *SOAP_FMAC4
soap_in___ns1__listParameters(struct soap *, const char *,
                              struct __ns1__listParameters *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__listParameters(struct soap *,
                               const struct __ns1__listParameters *,
                               const char *, const char *);

#ifndef soap_write___ns1__listParameters
#define soap_write___ns1__listParameters(soap, data)                           \
  (ICat3::soap_serialize___ns1__listParameters(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__listParameters(             \
                                soap, data, "-ns1:listParameters", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__listParameters *SOAP_FMAC4
soap_get___ns1__listParameters(struct soap *, struct __ns1__listParameters *,
                               const char *, const char *);

#ifndef soap_read___ns1__listParameters
#define soap_read___ns1__listParameters(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__listParameters(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__listParameters *SOAP_FMAC2
soap_instantiate___ns1__listParameters(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__listParameters *
soap_new___ns1__listParameters(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__listParameters(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__listParameters *
soap_new_req___ns1__listParameters(struct soap *soap) {
  struct __ns1__listParameters *_p =
      soap_instantiate___ns1__listParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listParameters(soap, _p);
  }
  return _p;
}

inline struct __ns1__listParameters *
soap_new_set___ns1__listParameters(struct soap *soap,
                                   ns1__listParameters *ns1__listParameters_) {
  struct __ns1__listParameters *_p =
      soap_instantiate___ns1__listParameters(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listParameters(soap, _p);
    _p->ns1__listParameters_ = ns1__listParameters_;
  }
  return _p;
}

inline void soap_delete___ns1__listParameters(struct soap *soap,
                                              struct __ns1__listParameters *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__listParameters(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__listRoles
#define SOAP_TYPE_ICat3___ns1__listRoles (560)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__listRoles(struct soap *, struct __ns1__listRoles *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__listRoles(struct soap *, const struct __ns1__listRoles *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__listRoles(struct soap *, const char *, int,
                          const struct __ns1__listRoles *, const char *);
SOAP_FMAC3 struct __ns1__listRoles *SOAP_FMAC4
soap_in___ns1__listRoles(struct soap *, const char *, struct __ns1__listRoles *,
                         const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__listRoles(struct soap *, const struct __ns1__listRoles *,
                          const char *, const char *);

#ifndef soap_write___ns1__listRoles
#define soap_write___ns1__listRoles(soap, data)                                \
  (ICat3::soap_serialize___ns1__listRoles(soap, data),                         \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__listRoles(soap, data, "-ns1:listRoles", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__listRoles *SOAP_FMAC4
soap_get___ns1__listRoles(struct soap *, struct __ns1__listRoles *,
                          const char *, const char *);

#ifndef soap_read___ns1__listRoles
#define soap_read___ns1__listRoles(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__listRoles(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__listRoles *SOAP_FMAC2
soap_instantiate___ns1__listRoles(struct soap *, int, const char *,
                                  const char *, size_t *);

inline struct __ns1__listRoles *soap_new___ns1__listRoles(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate___ns1__listRoles(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__listRoles *
soap_new_req___ns1__listRoles(struct soap *soap) {
  struct __ns1__listRoles *_p =
      soap_instantiate___ns1__listRoles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listRoles(soap, _p);
  }
  return _p;
}

inline struct __ns1__listRoles *
soap_new_set___ns1__listRoles(struct soap *soap,
                              ns1__listRoles *ns1__listRoles_) {
  struct __ns1__listRoles *_p =
      soap_instantiate___ns1__listRoles(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listRoles(soap, _p);
    _p->ns1__listRoles_ = ns1__listRoles_;
  }
  return _p;
}

inline void soap_delete___ns1__listRoles(struct soap *soap,
                                         struct __ns1__listRoles *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__listRoles(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getAllInstruments
#define SOAP_TYPE_ICat3___ns1__getAllInstruments (556)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getAllInstruments(struct soap *,
                                      struct __ns1__getAllInstruments *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getAllInstruments(
    struct soap *, const struct __ns1__getAllInstruments *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getAllInstruments(struct soap *, const char *, int,
                                  const struct __ns1__getAllInstruments *,
                                  const char *);
SOAP_FMAC3 struct __ns1__getAllInstruments *SOAP_FMAC4
soap_in___ns1__getAllInstruments(struct soap *, const char *,
                                 struct __ns1__getAllInstruments *,
                                 const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getAllInstruments(struct soap *,
                                  const struct __ns1__getAllInstruments *,
                                  const char *, const char *);

#ifndef soap_write___ns1__getAllInstruments
#define soap_write___ns1__getAllInstruments(soap, data)                        \
  (ICat3::soap_serialize___ns1__getAllInstruments(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put___ns1__getAllInstruments(          \
                                soap, data, "-ns1:getAllInstruments", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getAllInstruments *SOAP_FMAC4
soap_get___ns1__getAllInstruments(struct soap *,
                                  struct __ns1__getAllInstruments *,
                                  const char *, const char *);

#ifndef soap_read___ns1__getAllInstruments
#define soap_read___ns1__getAllInstruments(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getAllInstruments(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getAllInstruments *SOAP_FMAC2
soap_instantiate___ns1__getAllInstruments(struct soap *, int, const char *,
                                          const char *, size_t *);

inline struct __ns1__getAllInstruments *
soap_new___ns1__getAllInstruments(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getAllInstruments(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getAllInstruments *
soap_new_req___ns1__getAllInstruments(struct soap *soap) {
  struct __ns1__getAllInstruments *_p =
      soap_instantiate___ns1__getAllInstruments(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getAllInstruments(soap, _p);
  }
  return _p;
}

inline struct __ns1__getAllInstruments *soap_new_set___ns1__getAllInstruments(
    struct soap *soap, ns1__getAllInstruments *ns1__getAllInstruments_) {
  struct __ns1__getAllInstruments *_p =
      soap_instantiate___ns1__getAllInstruments(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getAllInstruments(soap, _p);
    _p->ns1__getAllInstruments_ = ns1__getAllInstruments_;
  }
  return _p;
}

inline void
soap_delete___ns1__getAllInstruments(struct soap *soap,
                                     struct __ns1__getAllInstruments *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getAllInstruments(struct soap *, int, int, void *, size_t,
                                   const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__listInstruments
#define SOAP_TYPE_ICat3___ns1__listInstruments (552)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__listInstruments(struct soap *,
                                    struct __ns1__listInstruments *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__listInstruments(struct soap *,
                                      const struct __ns1__listInstruments *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__listInstruments(struct soap *, const char *, int,
                                const struct __ns1__listInstruments *,
                                const char *);
SOAP_FMAC3 struct __ns1__listInstruments *SOAP_FMAC4
soap_in___ns1__listInstruments(struct soap *, const char *,
                               struct __ns1__listInstruments *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__listInstruments(struct soap *,
                                const struct __ns1__listInstruments *,
                                const char *, const char *);

#ifndef soap_write___ns1__listInstruments
#define soap_write___ns1__listInstruments(soap, data)                          \
  (ICat3::soap_serialize___ns1__listInstruments(soap, data),                   \
   soap_begin_send(soap) || ICat3::soap_put___ns1__listInstruments(            \
                                soap, data, "-ns1:listInstruments", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__listInstruments *SOAP_FMAC4
soap_get___ns1__listInstruments(struct soap *, struct __ns1__listInstruments *,
                                const char *, const char *);

#ifndef soap_read___ns1__listInstruments
#define soap_read___ns1__listInstruments(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__listInstruments(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__listInstruments *SOAP_FMAC2
soap_instantiate___ns1__listInstruments(struct soap *, int, const char *,
                                        const char *, size_t *);

inline struct __ns1__listInstruments *
soap_new___ns1__listInstruments(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__listInstruments(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__listInstruments *
soap_new_req___ns1__listInstruments(struct soap *soap) {
  struct __ns1__listInstruments *_p =
      soap_instantiate___ns1__listInstruments(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listInstruments(soap, _p);
  }
  return _p;
}

inline struct __ns1__listInstruments *soap_new_set___ns1__listInstruments(
    struct soap *soap, ns1__listInstruments *ns1__listInstruments_) {
  struct __ns1__listInstruments *_p =
      soap_instantiate___ns1__listInstruments(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__listInstruments(soap, _p);
    _p->ns1__listInstruments_ = ns1__listInstruments_;
  }
  return _p;
}

inline void
soap_delete___ns1__listInstruments(struct soap *soap,
                                   struct __ns1__listInstruments *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__listInstruments(struct soap *, int, int, void *, size_t,
                                 const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchByUserSurnamePagination
#define SOAP_TYPE_ICat3___ns1__searchByUserSurnamePagination (548)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchByUserSurnamePagination(
    struct soap *, struct __ns1__searchByUserSurnamePagination *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchByUserSurnamePagination(
    struct soap *, const struct __ns1__searchByUserSurnamePagination *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchByUserSurnamePagination(
    struct soap *, const char *, int,
    const struct __ns1__searchByUserSurnamePagination *, const char *);
SOAP_FMAC3 struct __ns1__searchByUserSurnamePagination *SOAP_FMAC4
soap_in___ns1__searchByUserSurnamePagination(
    struct soap *, const char *, struct __ns1__searchByUserSurnamePagination *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchByUserSurnamePagination(
    struct soap *, const struct __ns1__searchByUserSurnamePagination *,
    const char *, const char *);

#ifndef soap_write___ns1__searchByUserSurnamePagination
#define soap_write___ns1__searchByUserSurnamePagination(soap, data)            \
  (ICat3::soap_serialize___ns1__searchByUserSurnamePagination(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchByUserSurnamePagination(                   \
           soap, data, "-ns1:searchByUserSurnamePagination", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchByUserSurnamePagination *SOAP_FMAC4
soap_get___ns1__searchByUserSurnamePagination(
    struct soap *, struct __ns1__searchByUserSurnamePagination *, const char *,
    const char *);

#ifndef soap_read___ns1__searchByUserSurnamePagination
#define soap_read___ns1__searchByUserSurnamePagination(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchByUserSurnamePagination(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchByUserSurnamePagination *SOAP_FMAC2
soap_instantiate___ns1__searchByUserSurnamePagination(struct soap *, int,
                                                      const char *,
                                                      const char *, size_t *);

inline struct __ns1__searchByUserSurnamePagination *
soap_new___ns1__searchByUserSurnamePagination(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchByUserSurnamePagination(soap, n, NULL,
                                                               NULL, NULL);
}

inline struct __ns1__searchByUserSurnamePagination *
soap_new_req___ns1__searchByUserSurnamePagination(struct soap *soap) {
  struct __ns1__searchByUserSurnamePagination *_p =
      soap_instantiate___ns1__searchByUserSurnamePagination(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByUserSurnamePagination(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchByUserSurnamePagination *
soap_new_set___ns1__searchByUserSurnamePagination(
    struct soap *soap,
    ns1__searchByUserSurnamePagination *ns1__searchByUserSurnamePagination_) {
  struct __ns1__searchByUserSurnamePagination *_p =
      soap_instantiate___ns1__searchByUserSurnamePagination(soap, -1, NULL,
                                                            NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByUserSurnamePagination(soap, _p);
    _p->ns1__searchByUserSurnamePagination_ =
        ns1__searchByUserSurnamePagination_;
  }
  return _p;
}

inline void soap_delete___ns1__searchByUserSurnamePagination(
    struct soap *soap, struct __ns1__searchByUserSurnamePagination *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchByUserSurnamePagination(struct soap *, int, int, void *,
                                               size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchByUserSurname
#define SOAP_TYPE_ICat3___ns1__searchByUserSurname (544)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchByUserSurname(struct soap *,
                                        struct __ns1__searchByUserSurname *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchByUserSurname(
    struct soap *, const struct __ns1__searchByUserSurname *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__searchByUserSurname(struct soap *, const char *, int,
                                    const struct __ns1__searchByUserSurname *,
                                    const char *);
SOAP_FMAC3 struct __ns1__searchByUserSurname *SOAP_FMAC4
soap_in___ns1__searchByUserSurname(struct soap *, const char *,
                                   struct __ns1__searchByUserSurname *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__searchByUserSurname(struct soap *,
                                    const struct __ns1__searchByUserSurname *,
                                    const char *, const char *);

#ifndef soap_write___ns1__searchByUserSurname
#define soap_write___ns1__searchByUserSurname(soap, data)                      \
  (ICat3::soap_serialize___ns1__searchByUserSurname(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchByUserSurname(                             \
           soap, data, "-ns1:searchByUserSurname", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchByUserSurname *SOAP_FMAC4
soap_get___ns1__searchByUserSurname(struct soap *,
                                    struct __ns1__searchByUserSurname *,
                                    const char *, const char *);

#ifndef soap_read___ns1__searchByUserSurname
#define soap_read___ns1__searchByUserSurname(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchByUserSurname(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchByUserSurname *SOAP_FMAC2
soap_instantiate___ns1__searchByUserSurname(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__searchByUserSurname *
soap_new___ns1__searchByUserSurname(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchByUserSurname(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchByUserSurname *
soap_new_req___ns1__searchByUserSurname(struct soap *soap) {
  struct __ns1__searchByUserSurname *_p =
      soap_instantiate___ns1__searchByUserSurname(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByUserSurname(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchByUserSurname *
soap_new_set___ns1__searchByUserSurname(
    struct soap *soap, ns1__searchByUserSurname *ns1__searchByUserSurname_) {
  struct __ns1__searchByUserSurname *_p =
      soap_instantiate___ns1__searchByUserSurname(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByUserSurname(soap, _p);
    _p->ns1__searchByUserSurname_ = ns1__searchByUserSurname_;
  }
  return _p;
}

inline void
soap_delete___ns1__searchByUserSurname(struct soap *soap,
                                       struct __ns1__searchByUserSurname *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchByUserSurname(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchByUserIDPagination
#define SOAP_TYPE_ICat3___ns1__searchByUserIDPagination (540)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchByUserIDPagination(
    struct soap *, struct __ns1__searchByUserIDPagination *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchByUserIDPagination(
    struct soap *, const struct __ns1__searchByUserIDPagination *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchByUserIDPagination(
    struct soap *, const char *, int,
    const struct __ns1__searchByUserIDPagination *, const char *);
SOAP_FMAC3 struct __ns1__searchByUserIDPagination *SOAP_FMAC4
soap_in___ns1__searchByUserIDPagination(
    struct soap *, const char *, struct __ns1__searchByUserIDPagination *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchByUserIDPagination(
    struct soap *, const struct __ns1__searchByUserIDPagination *, const char *,
    const char *);

#ifndef soap_write___ns1__searchByUserIDPagination
#define soap_write___ns1__searchByUserIDPagination(soap, data)                 \
  (ICat3::soap_serialize___ns1__searchByUserIDPagination(soap, data),          \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchByUserIDPagination(                        \
           soap, data, "-ns1:searchByUserIDPagination", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchByUserIDPagination *SOAP_FMAC4
soap_get___ns1__searchByUserIDPagination(
    struct soap *, struct __ns1__searchByUserIDPagination *, const char *,
    const char *);

#ifndef soap_read___ns1__searchByUserIDPagination
#define soap_read___ns1__searchByUserIDPagination(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchByUserIDPagination(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchByUserIDPagination *SOAP_FMAC2
soap_instantiate___ns1__searchByUserIDPagination(struct soap *, int,
                                                 const char *, const char *,
                                                 size_t *);

inline struct __ns1__searchByUserIDPagination *
soap_new___ns1__searchByUserIDPagination(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchByUserIDPagination(soap, n, NULL, NULL,
                                                          NULL);
}

inline struct __ns1__searchByUserIDPagination *
soap_new_req___ns1__searchByUserIDPagination(struct soap *soap) {
  struct __ns1__searchByUserIDPagination *_p =
      soap_instantiate___ns1__searchByUserIDPagination(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    soap_default___ns1__searchByUserIDPagination(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchByUserIDPagination *
soap_new_set___ns1__searchByUserIDPagination(
    struct soap *soap,
    ns1__searchByUserIDPagination *ns1__searchByUserIDPagination_) {
  struct __ns1__searchByUserIDPagination *_p =
      soap_instantiate___ns1__searchByUserIDPagination(soap, -1, NULL, NULL,
                                                       NULL);
  if (_p) {
    soap_default___ns1__searchByUserIDPagination(soap, _p);
    _p->ns1__searchByUserIDPagination_ = ns1__searchByUserIDPagination_;
  }
  return _p;
}

inline void soap_delete___ns1__searchByUserIDPagination(
    struct soap *soap, struct __ns1__searchByUserIDPagination *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchByUserIDPagination(struct soap *, int, int, void *,
                                          size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchByUserID
#define SOAP_TYPE_ICat3___ns1__searchByUserID (536)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchByUserID(struct soap *,
                                   struct __ns1__searchByUserID *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchByUserID(struct soap *,
                                     const struct __ns1__searchByUserID *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__searchByUserID(struct soap *, const char *, int,
                               const struct __ns1__searchByUserID *,
                               const char *);
SOAP_FMAC3 struct __ns1__searchByUserID *SOAP_FMAC4
soap_in___ns1__searchByUserID(struct soap *, const char *,
                              struct __ns1__searchByUserID *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__searchByUserID(struct soap *,
                               const struct __ns1__searchByUserID *,
                               const char *, const char *);

#ifndef soap_write___ns1__searchByUserID
#define soap_write___ns1__searchByUserID(soap, data)                           \
  (ICat3::soap_serialize___ns1__searchByUserID(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__searchByUserID(             \
                                soap, data, "-ns1:searchByUserID", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchByUserID *SOAP_FMAC4
soap_get___ns1__searchByUserID(struct soap *, struct __ns1__searchByUserID *,
                               const char *, const char *);

#ifndef soap_read___ns1__searchByUserID
#define soap_read___ns1__searchByUserID(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchByUserID(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchByUserID *SOAP_FMAC2
soap_instantiate___ns1__searchByUserID(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__searchByUserID *
soap_new___ns1__searchByUserID(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchByUserID(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchByUserID *
soap_new_req___ns1__searchByUserID(struct soap *soap) {
  struct __ns1__searchByUserID *_p =
      soap_instantiate___ns1__searchByUserID(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByUserID(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchByUserID *
soap_new_set___ns1__searchByUserID(struct soap *soap,
                                   ns1__searchByUserID *ns1__searchByUserID_) {
  struct __ns1__searchByUserID *_p =
      soap_instantiate___ns1__searchByUserID(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByUserID(soap, _p);
    _p->ns1__searchByUserID_ = ns1__searchByUserID_;
  }
  return _p;
}

inline void soap_delete___ns1__searchByUserID(struct soap *soap,
                                              struct __ns1__searchByUserID *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchByUserID(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getMyInvestigationsIncludesPagination
#define SOAP_TYPE_ICat3___ns1__getMyInvestigationsIncludesPagination (532)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getMyInvestigationsIncludesPagination(
    struct soap *, struct __ns1__getMyInvestigationsIncludesPagination *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__getMyInvestigationsIncludesPagination(
    struct soap *, const struct __ns1__getMyInvestigationsIncludesPagination *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getMyInvestigationsIncludesPagination(
    struct soap *, const char *, int,
    const struct __ns1__getMyInvestigationsIncludesPagination *, const char *);
SOAP_FMAC3 struct __ns1__getMyInvestigationsIncludesPagination *SOAP_FMAC4
soap_in___ns1__getMyInvestigationsIncludesPagination(
    struct soap *, const char *,
    struct __ns1__getMyInvestigationsIncludesPagination *, const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getMyInvestigationsIncludesPagination(
    struct soap *, const struct __ns1__getMyInvestigationsIncludesPagination *,
    const char *, const char *);

#ifndef soap_write___ns1__getMyInvestigationsIncludesPagination
#define soap_write___ns1__getMyInvestigationsIncludesPagination(soap, data)    \
  (ICat3::soap_serialize___ns1__getMyInvestigationsIncludesPagination(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getMyInvestigationsIncludesPagination(           \
           soap, data, "-ns1:getMyInvestigationsIncludesPagination", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getMyInvestigationsIncludesPagination *SOAP_FMAC4
soap_get___ns1__getMyInvestigationsIncludesPagination(
    struct soap *, struct __ns1__getMyInvestigationsIncludesPagination *,
    const char *, const char *);

#ifndef soap_read___ns1__getMyInvestigationsIncludesPagination
#define soap_read___ns1__getMyInvestigationsIncludesPagination(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getMyInvestigationsIncludesPagination(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getMyInvestigationsIncludesPagination *SOAP_FMAC2
soap_instantiate___ns1__getMyInvestigationsIncludesPagination(struct soap *,
                                                              int, const char *,
                                                              const char *,
                                                              size_t *);

inline struct __ns1__getMyInvestigationsIncludesPagination *
soap_new___ns1__getMyInvestigationsIncludesPagination(struct soap *soap,
                                                      int n = -1) {
  return soap_instantiate___ns1__getMyInvestigationsIncludesPagination(
      soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getMyInvestigationsIncludesPagination *
soap_new_req___ns1__getMyInvestigationsIncludesPagination(struct soap *soap) {
  struct __ns1__getMyInvestigationsIncludesPagination *_p =
      soap_instantiate___ns1__getMyInvestigationsIncludesPagination(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getMyInvestigationsIncludesPagination(soap, _p);
  }
  return _p;
}

inline struct __ns1__getMyInvestigationsIncludesPagination *
soap_new_set___ns1__getMyInvestigationsIncludesPagination(
    struct soap *soap, ns1__getMyInvestigationsIncludesPagination *
                           ns1__getMyInvestigationsIncludesPagination_) {
  struct __ns1__getMyInvestigationsIncludesPagination *_p =
      soap_instantiate___ns1__getMyInvestigationsIncludesPagination(
          soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getMyInvestigationsIncludesPagination(soap, _p);
    _p->ns1__getMyInvestigationsIncludesPagination_ =
        ns1__getMyInvestigationsIncludesPagination_;
  }
  return _p;
}

inline void soap_delete___ns1__getMyInvestigationsIncludesPagination(
    struct soap *soap, struct __ns1__getMyInvestigationsIncludesPagination *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getMyInvestigationsIncludesPagination(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getMyInvestigationsIncludes
#define SOAP_TYPE_ICat3___ns1__getMyInvestigationsIncludes (528)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getMyInvestigationsIncludes(
    struct soap *, struct __ns1__getMyInvestigationsIncludes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getMyInvestigationsIncludes(
    struct soap *, const struct __ns1__getMyInvestigationsIncludes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getMyInvestigationsIncludes(
    struct soap *, const char *, int,
    const struct __ns1__getMyInvestigationsIncludes *, const char *);
SOAP_FMAC3 struct __ns1__getMyInvestigationsIncludes *SOAP_FMAC4
soap_in___ns1__getMyInvestigationsIncludes(
    struct soap *, const char *, struct __ns1__getMyInvestigationsIncludes *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getMyInvestigationsIncludes(
    struct soap *, const struct __ns1__getMyInvestigationsIncludes *,
    const char *, const char *);

#ifndef soap_write___ns1__getMyInvestigationsIncludes
#define soap_write___ns1__getMyInvestigationsIncludes(soap, data)              \
  (ICat3::soap_serialize___ns1__getMyInvestigationsIncludes(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getMyInvestigationsIncludes(                     \
           soap, data, "-ns1:getMyInvestigationsIncludes", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getMyInvestigationsIncludes *SOAP_FMAC4
soap_get___ns1__getMyInvestigationsIncludes(
    struct soap *, struct __ns1__getMyInvestigationsIncludes *, const char *,
    const char *);

#ifndef soap_read___ns1__getMyInvestigationsIncludes
#define soap_read___ns1__getMyInvestigationsIncludes(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getMyInvestigationsIncludes(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getMyInvestigationsIncludes *SOAP_FMAC2
soap_instantiate___ns1__getMyInvestigationsIncludes(struct soap *, int,
                                                    const char *, const char *,
                                                    size_t *);

inline struct __ns1__getMyInvestigationsIncludes *
soap_new___ns1__getMyInvestigationsIncludes(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getMyInvestigationsIncludes(soap, n, NULL,
                                                             NULL, NULL);
}

inline struct __ns1__getMyInvestigationsIncludes *
soap_new_req___ns1__getMyInvestigationsIncludes(struct soap *soap) {
  struct __ns1__getMyInvestigationsIncludes *_p =
      soap_instantiate___ns1__getMyInvestigationsIncludes(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__getMyInvestigationsIncludes(soap, _p);
  }
  return _p;
}

inline struct __ns1__getMyInvestigationsIncludes *
soap_new_set___ns1__getMyInvestigationsIncludes(
    struct soap *soap,
    ns1__getMyInvestigationsIncludes *ns1__getMyInvestigationsIncludes_) {
  struct __ns1__getMyInvestigationsIncludes *_p =
      soap_instantiate___ns1__getMyInvestigationsIncludes(soap, -1, NULL, NULL,
                                                          NULL);
  if (_p) {
    soap_default___ns1__getMyInvestigationsIncludes(soap, _p);
    _p->ns1__getMyInvestigationsIncludes_ = ns1__getMyInvestigationsIncludes_;
  }
  return _p;
}

inline void soap_delete___ns1__getMyInvestigationsIncludes(
    struct soap *soap, struct __ns1__getMyInvestigationsIncludes *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getMyInvestigationsIncludes(struct soap *, int, int, void *,
                                             size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getMyInvestigations
#define SOAP_TYPE_ICat3___ns1__getMyInvestigations (524)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getMyInvestigations(struct soap *,
                                        struct __ns1__getMyInvestigations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getMyInvestigations(
    struct soap *, const struct __ns1__getMyInvestigations *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getMyInvestigations(struct soap *, const char *, int,
                                    const struct __ns1__getMyInvestigations *,
                                    const char *);
SOAP_FMAC3 struct __ns1__getMyInvestigations *SOAP_FMAC4
soap_in___ns1__getMyInvestigations(struct soap *, const char *,
                                   struct __ns1__getMyInvestigations *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getMyInvestigations(struct soap *,
                                    const struct __ns1__getMyInvestigations *,
                                    const char *, const char *);

#ifndef soap_write___ns1__getMyInvestigations
#define soap_write___ns1__getMyInvestigations(soap, data)                      \
  (ICat3::soap_serialize___ns1__getMyInvestigations(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getMyInvestigations(                             \
           soap, data, "-ns1:getMyInvestigations", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getMyInvestigations *SOAP_FMAC4
soap_get___ns1__getMyInvestigations(struct soap *,
                                    struct __ns1__getMyInvestigations *,
                                    const char *, const char *);

#ifndef soap_read___ns1__getMyInvestigations
#define soap_read___ns1__getMyInvestigations(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getMyInvestigations(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getMyInvestigations *SOAP_FMAC2
soap_instantiate___ns1__getMyInvestigations(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__getMyInvestigations *
soap_new___ns1__getMyInvestigations(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getMyInvestigations(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getMyInvestigations *
soap_new_req___ns1__getMyInvestigations(struct soap *soap) {
  struct __ns1__getMyInvestigations *_p =
      soap_instantiate___ns1__getMyInvestigations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getMyInvestigations(soap, _p);
  }
  return _p;
}

inline struct __ns1__getMyInvestigations *
soap_new_set___ns1__getMyInvestigations(
    struct soap *soap, ns1__getMyInvestigations *ns1__getMyInvestigations_) {
  struct __ns1__getMyInvestigations *_p =
      soap_instantiate___ns1__getMyInvestigations(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getMyInvestigations(soap, _p);
    _p->ns1__getMyInvestigations_ = ns1__getMyInvestigations_;
  }
  return _p;
}

inline void
soap_delete___ns1__getMyInvestigations(struct soap *soap,
                                       struct __ns1__getMyInvestigations *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getMyInvestigations(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchByKeywordsAll
#define SOAP_TYPE_ICat3___ns1__searchByKeywordsAll (520)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchByKeywordsAll(struct soap *,
                                        struct __ns1__searchByKeywordsAll *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchByKeywordsAll(
    struct soap *, const struct __ns1__searchByKeywordsAll *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__searchByKeywordsAll(struct soap *, const char *, int,
                                    const struct __ns1__searchByKeywordsAll *,
                                    const char *);
SOAP_FMAC3 struct __ns1__searchByKeywordsAll *SOAP_FMAC4
soap_in___ns1__searchByKeywordsAll(struct soap *, const char *,
                                   struct __ns1__searchByKeywordsAll *,
                                   const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__searchByKeywordsAll(struct soap *,
                                    const struct __ns1__searchByKeywordsAll *,
                                    const char *, const char *);

#ifndef soap_write___ns1__searchByKeywordsAll
#define soap_write___ns1__searchByKeywordsAll(soap, data)                      \
  (ICat3::soap_serialize___ns1__searchByKeywordsAll(soap, data),               \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchByKeywordsAll(                             \
           soap, data, "-ns1:searchByKeywordsAll", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchByKeywordsAll *SOAP_FMAC4
soap_get___ns1__searchByKeywordsAll(struct soap *,
                                    struct __ns1__searchByKeywordsAll *,
                                    const char *, const char *);

#ifndef soap_read___ns1__searchByKeywordsAll
#define soap_read___ns1__searchByKeywordsAll(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchByKeywordsAll(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchByKeywordsAll *SOAP_FMAC2
soap_instantiate___ns1__searchByKeywordsAll(struct soap *, int, const char *,
                                            const char *, size_t *);

inline struct __ns1__searchByKeywordsAll *
soap_new___ns1__searchByKeywordsAll(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchByKeywordsAll(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchByKeywordsAll *
soap_new_req___ns1__searchByKeywordsAll(struct soap *soap) {
  struct __ns1__searchByKeywordsAll *_p =
      soap_instantiate___ns1__searchByKeywordsAll(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByKeywordsAll(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchByKeywordsAll *
soap_new_set___ns1__searchByKeywordsAll(
    struct soap *soap, ns1__searchByKeywordsAll *ns1__searchByKeywordsAll_) {
  struct __ns1__searchByKeywordsAll *_p =
      soap_instantiate___ns1__searchByKeywordsAll(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByKeywordsAll(soap, _p);
    _p->ns1__searchByKeywordsAll_ = ns1__searchByKeywordsAll_;
  }
  return _p;
}

inline void
soap_delete___ns1__searchByKeywordsAll(struct soap *soap,
                                       struct __ns1__searchByKeywordsAll *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchByKeywordsAll(struct soap *, int, int, void *, size_t,
                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchByKeywords
#define SOAP_TYPE_ICat3___ns1__searchByKeywords (516)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchByKeywords(struct soap *,
                                     struct __ns1__searchByKeywords *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchByKeywords(struct soap *,
                                       const struct __ns1__searchByKeywords *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__searchByKeywords(struct soap *, const char *, int,
                                 const struct __ns1__searchByKeywords *,
                                 const char *);
SOAP_FMAC3 struct __ns1__searchByKeywords *SOAP_FMAC4
soap_in___ns1__searchByKeywords(struct soap *, const char *,
                                struct __ns1__searchByKeywords *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__searchByKeywords(struct soap *,
                                 const struct __ns1__searchByKeywords *,
                                 const char *, const char *);

#ifndef soap_write___ns1__searchByKeywords
#define soap_write___ns1__searchByKeywords(soap, data)                         \
  (ICat3::soap_serialize___ns1__searchByKeywords(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put___ns1__searchByKeywords(           \
                                soap, data, "-ns1:searchByKeywords", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchByKeywords *SOAP_FMAC4
soap_get___ns1__searchByKeywords(struct soap *,
                                 struct __ns1__searchByKeywords *, const char *,
                                 const char *);

#ifndef soap_read___ns1__searchByKeywords
#define soap_read___ns1__searchByKeywords(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchByKeywords(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchByKeywords *SOAP_FMAC2
soap_instantiate___ns1__searchByKeywords(struct soap *, int, const char *,
                                         const char *, size_t *);

inline struct __ns1__searchByKeywords *
soap_new___ns1__searchByKeywords(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchByKeywords(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchByKeywords *
soap_new_req___ns1__searchByKeywords(struct soap *soap) {
  struct __ns1__searchByKeywords *_p =
      soap_instantiate___ns1__searchByKeywords(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByKeywords(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchByKeywords *soap_new_set___ns1__searchByKeywords(
    struct soap *soap, ns1__searchByKeywords *ns1__searchByKeywords_) {
  struct __ns1__searchByKeywords *_p =
      soap_instantiate___ns1__searchByKeywords(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByKeywords(soap, _p);
    _p->ns1__searchByKeywords_ = ns1__searchByKeywords_;
  }
  return _p;
}

inline void
soap_delete___ns1__searchByKeywords(struct soap *soap,
                                    struct __ns1__searchByKeywords *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchByKeywords(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchByAdvancedPagination
#define SOAP_TYPE_ICat3___ns1__searchByAdvancedPagination (512)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__searchByAdvancedPagination(
    struct soap *, struct __ns1__searchByAdvancedPagination *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__searchByAdvancedPagination(
    struct soap *, const struct __ns1__searchByAdvancedPagination *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__searchByAdvancedPagination(
    struct soap *, const char *, int,
    const struct __ns1__searchByAdvancedPagination *, const char *);
SOAP_FMAC3 struct __ns1__searchByAdvancedPagination *SOAP_FMAC4
soap_in___ns1__searchByAdvancedPagination(
    struct soap *, const char *, struct __ns1__searchByAdvancedPagination *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__searchByAdvancedPagination(
    struct soap *, const struct __ns1__searchByAdvancedPagination *,
    const char *, const char *);

#ifndef soap_write___ns1__searchByAdvancedPagination
#define soap_write___ns1__searchByAdvancedPagination(soap, data)               \
  (ICat3::soap_serialize___ns1__searchByAdvancedPagination(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__searchByAdvancedPagination(                      \
           soap, data, "-ns1:searchByAdvancedPagination", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchByAdvancedPagination *SOAP_FMAC4
soap_get___ns1__searchByAdvancedPagination(
    struct soap *, struct __ns1__searchByAdvancedPagination *, const char *,
    const char *);

#ifndef soap_read___ns1__searchByAdvancedPagination
#define soap_read___ns1__searchByAdvancedPagination(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchByAdvancedPagination(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchByAdvancedPagination *SOAP_FMAC2
soap_instantiate___ns1__searchByAdvancedPagination(struct soap *, int,
                                                   const char *, const char *,
                                                   size_t *);

inline struct __ns1__searchByAdvancedPagination *
soap_new___ns1__searchByAdvancedPagination(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchByAdvancedPagination(soap, n, NULL, NULL,
                                                            NULL);
}

inline struct __ns1__searchByAdvancedPagination *
soap_new_req___ns1__searchByAdvancedPagination(struct soap *soap) {
  struct __ns1__searchByAdvancedPagination *_p =
      soap_instantiate___ns1__searchByAdvancedPagination(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__searchByAdvancedPagination(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchByAdvancedPagination *
soap_new_set___ns1__searchByAdvancedPagination(
    struct soap *soap,
    ns1__searchByAdvancedPagination *ns1__searchByAdvancedPagination_) {
  struct __ns1__searchByAdvancedPagination *_p =
      soap_instantiate___ns1__searchByAdvancedPagination(soap, -1, NULL, NULL,
                                                         NULL);
  if (_p) {
    soap_default___ns1__searchByAdvancedPagination(soap, _p);
    _p->ns1__searchByAdvancedPagination_ = ns1__searchByAdvancedPagination_;
  }
  return _p;
}

inline void soap_delete___ns1__searchByAdvancedPagination(
    struct soap *soap, struct __ns1__searchByAdvancedPagination *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchByAdvancedPagination(struct soap *, int, int, void *,
                                            size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__searchByAdvanced
#define SOAP_TYPE_ICat3___ns1__searchByAdvanced (508)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__searchByAdvanced(struct soap *,
                                     struct __ns1__searchByAdvanced *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__searchByAdvanced(struct soap *,
                                       const struct __ns1__searchByAdvanced *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__searchByAdvanced(struct soap *, const char *, int,
                                 const struct __ns1__searchByAdvanced *,
                                 const char *);
SOAP_FMAC3 struct __ns1__searchByAdvanced *SOAP_FMAC4
soap_in___ns1__searchByAdvanced(struct soap *, const char *,
                                struct __ns1__searchByAdvanced *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__searchByAdvanced(struct soap *,
                                 const struct __ns1__searchByAdvanced *,
                                 const char *, const char *);

#ifndef soap_write___ns1__searchByAdvanced
#define soap_write___ns1__searchByAdvanced(soap, data)                         \
  (ICat3::soap_serialize___ns1__searchByAdvanced(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put___ns1__searchByAdvanced(           \
                                soap, data, "-ns1:searchByAdvanced", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__searchByAdvanced *SOAP_FMAC4
soap_get___ns1__searchByAdvanced(struct soap *,
                                 struct __ns1__searchByAdvanced *, const char *,
                                 const char *);

#ifndef soap_read___ns1__searchByAdvanced
#define soap_read___ns1__searchByAdvanced(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__searchByAdvanced(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__searchByAdvanced *SOAP_FMAC2
soap_instantiate___ns1__searchByAdvanced(struct soap *, int, const char *,
                                         const char *, size_t *);

inline struct __ns1__searchByAdvanced *
soap_new___ns1__searchByAdvanced(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__searchByAdvanced(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__searchByAdvanced *
soap_new_req___ns1__searchByAdvanced(struct soap *soap) {
  struct __ns1__searchByAdvanced *_p =
      soap_instantiate___ns1__searchByAdvanced(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByAdvanced(soap, _p);
  }
  return _p;
}

inline struct __ns1__searchByAdvanced *soap_new_set___ns1__searchByAdvanced(
    struct soap *soap, ns1__searchByAdvanced *ns1__searchByAdvanced_) {
  struct __ns1__searchByAdvanced *_p =
      soap_instantiate___ns1__searchByAdvanced(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__searchByAdvanced(soap, _p);
    _p->ns1__searchByAdvanced_ = ns1__searchByAdvanced_;
  }
  return _p;
}

inline void
soap_delete___ns1__searchByAdvanced(struct soap *soap,
                                    struct __ns1__searchByAdvanced *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__searchByAdvanced(struct soap *, int, int, void *, size_t,
                                  const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getAllKeywords
#define SOAP_TYPE_ICat3___ns1__getAllKeywords (504)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getAllKeywords(struct soap *,
                                   struct __ns1__getAllKeywords *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__getAllKeywords(struct soap *,
                                     const struct __ns1__getAllKeywords *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getAllKeywords(struct soap *, const char *, int,
                               const struct __ns1__getAllKeywords *,
                               const char *);
SOAP_FMAC3 struct __ns1__getAllKeywords *SOAP_FMAC4
soap_in___ns1__getAllKeywords(struct soap *, const char *,
                              struct __ns1__getAllKeywords *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getAllKeywords(struct soap *,
                               const struct __ns1__getAllKeywords *,
                               const char *, const char *);

#ifndef soap_write___ns1__getAllKeywords
#define soap_write___ns1__getAllKeywords(soap, data)                           \
  (ICat3::soap_serialize___ns1__getAllKeywords(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__getAllKeywords(             \
                                soap, data, "-ns1:getAllKeywords", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getAllKeywords *SOAP_FMAC4
soap_get___ns1__getAllKeywords(struct soap *, struct __ns1__getAllKeywords *,
                               const char *, const char *);

#ifndef soap_read___ns1__getAllKeywords
#define soap_read___ns1__getAllKeywords(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getAllKeywords(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getAllKeywords *SOAP_FMAC2
soap_instantiate___ns1__getAllKeywords(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__getAllKeywords *
soap_new___ns1__getAllKeywords(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getAllKeywords(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getAllKeywords *
soap_new_req___ns1__getAllKeywords(struct soap *soap) {
  struct __ns1__getAllKeywords *_p =
      soap_instantiate___ns1__getAllKeywords(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getAllKeywords(soap, _p);
  }
  return _p;
}

inline struct __ns1__getAllKeywords *
soap_new_set___ns1__getAllKeywords(struct soap *soap,
                                   ns1__getAllKeywords *ns1__getAllKeywords_) {
  struct __ns1__getAllKeywords *_p =
      soap_instantiate___ns1__getAllKeywords(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getAllKeywords(soap, _p);
    _p->ns1__getAllKeywords_ = ns1__getAllKeywords_;
  }
  return _p;
}

inline void soap_delete___ns1__getAllKeywords(struct soap *soap,
                                              struct __ns1__getAllKeywords *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getAllKeywords(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getKeywordsForUserType
#define SOAP_TYPE_ICat3___ns1__getKeywordsForUserType (500)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getKeywordsForUserType(
    struct soap *, struct __ns1__getKeywordsForUserType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getKeywordsForUserType(
    struct soap *, const struct __ns1__getKeywordsForUserType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getKeywordsForUserType(
    struct soap *, const char *, int,
    const struct __ns1__getKeywordsForUserType *, const char *);
SOAP_FMAC3 struct __ns1__getKeywordsForUserType *SOAP_FMAC4
soap_in___ns1__getKeywordsForUserType(struct soap *, const char *,
                                      struct __ns1__getKeywordsForUserType *,
                                      const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getKeywordsForUserType(
    struct soap *, const struct __ns1__getKeywordsForUserType *, const char *,
    const char *);

#ifndef soap_write___ns1__getKeywordsForUserType
#define soap_write___ns1__getKeywordsForUserType(soap, data)                   \
  (ICat3::soap_serialize___ns1__getKeywordsForUserType(soap, data),            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getKeywordsForUserType(                          \
           soap, data, "-ns1:getKeywordsForUserType", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getKeywordsForUserType *SOAP_FMAC4
soap_get___ns1__getKeywordsForUserType(struct soap *,
                                       struct __ns1__getKeywordsForUserType *,
                                       const char *, const char *);

#ifndef soap_read___ns1__getKeywordsForUserType
#define soap_read___ns1__getKeywordsForUserType(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getKeywordsForUserType(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getKeywordsForUserType *SOAP_FMAC2
soap_instantiate___ns1__getKeywordsForUserType(struct soap *, int, const char *,
                                               const char *, size_t *);

inline struct __ns1__getKeywordsForUserType *
soap_new___ns1__getKeywordsForUserType(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getKeywordsForUserType(soap, n, NULL, NULL,
                                                        NULL);
}

inline struct __ns1__getKeywordsForUserType *
soap_new_req___ns1__getKeywordsForUserType(struct soap *soap) {
  struct __ns1__getKeywordsForUserType *_p =
      soap_instantiate___ns1__getKeywordsForUserType(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__getKeywordsForUserType(soap, _p);
  }
  return _p;
}

inline struct __ns1__getKeywordsForUserType *
soap_new_set___ns1__getKeywordsForUserType(
    struct soap *soap,
    ns1__getKeywordsForUserType *ns1__getKeywordsForUserType_) {
  struct __ns1__getKeywordsForUserType *_p =
      soap_instantiate___ns1__getKeywordsForUserType(soap, -1, NULL, NULL,
                                                     NULL);
  if (_p) {
    soap_default___ns1__getKeywordsForUserType(soap, _p);
    _p->ns1__getKeywordsForUserType_ = ns1__getKeywordsForUserType_;
  }
  return _p;
}

inline void soap_delete___ns1__getKeywordsForUserType(
    struct soap *soap, struct __ns1__getKeywordsForUserType *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getKeywordsForUserType(struct soap *, int, int, void *, size_t,
                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getKeywordsForUserMax
#define SOAP_TYPE_ICat3___ns1__getKeywordsForUserMax (496)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getKeywordsForUserMax(
    struct soap *, struct __ns1__getKeywordsForUserMax *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getKeywordsForUserMax(
    struct soap *, const struct __ns1__getKeywordsForUserMax *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getKeywordsForUserMax(
    struct soap *, const char *, int,
    const struct __ns1__getKeywordsForUserMax *, const char *);
SOAP_FMAC3 struct __ns1__getKeywordsForUserMax *SOAP_FMAC4
soap_in___ns1__getKeywordsForUserMax(struct soap *, const char *,
                                     struct __ns1__getKeywordsForUserMax *,
                                     const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getKeywordsForUserMax(
    struct soap *, const struct __ns1__getKeywordsForUserMax *, const char *,
    const char *);

#ifndef soap_write___ns1__getKeywordsForUserMax
#define soap_write___ns1__getKeywordsForUserMax(soap, data)                    \
  (ICat3::soap_serialize___ns1__getKeywordsForUserMax(soap, data),             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getKeywordsForUserMax(                           \
           soap, data, "-ns1:getKeywordsForUserMax", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getKeywordsForUserMax *SOAP_FMAC4
soap_get___ns1__getKeywordsForUserMax(struct soap *,
                                      struct __ns1__getKeywordsForUserMax *,
                                      const char *, const char *);

#ifndef soap_read___ns1__getKeywordsForUserMax
#define soap_read___ns1__getKeywordsForUserMax(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getKeywordsForUserMax(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getKeywordsForUserMax *SOAP_FMAC2
soap_instantiate___ns1__getKeywordsForUserMax(struct soap *, int, const char *,
                                              const char *, size_t *);

inline struct __ns1__getKeywordsForUserMax *
soap_new___ns1__getKeywordsForUserMax(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getKeywordsForUserMax(soap, n, NULL, NULL,
                                                       NULL);
}

inline struct __ns1__getKeywordsForUserMax *
soap_new_req___ns1__getKeywordsForUserMax(struct soap *soap) {
  struct __ns1__getKeywordsForUserMax *_p =
      soap_instantiate___ns1__getKeywordsForUserMax(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getKeywordsForUserMax(soap, _p);
  }
  return _p;
}

inline struct __ns1__getKeywordsForUserMax *
soap_new_set___ns1__getKeywordsForUserMax(
    struct soap *soap,
    ns1__getKeywordsForUserMax *ns1__getKeywordsForUserMax_) {
  struct __ns1__getKeywordsForUserMax *_p =
      soap_instantiate___ns1__getKeywordsForUserMax(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getKeywordsForUserMax(soap, _p);
    _p->ns1__getKeywordsForUserMax_ = ns1__getKeywordsForUserMax_;
  }
  return _p;
}

inline void soap_delete___ns1__getKeywordsForUserMax(
    struct soap *soap, struct __ns1__getKeywordsForUserMax *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getKeywordsForUserMax(struct soap *, int, int, void *, size_t,
                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getKeywordsForUserStartWithMax
#define SOAP_TYPE_ICat3___ns1__getKeywordsForUserStartWithMax (492)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__getKeywordsForUserStartWithMax(
    struct soap *, struct __ns1__getKeywordsForUserStartWithMax *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getKeywordsForUserStartWithMax(
    struct soap *, const struct __ns1__getKeywordsForUserStartWithMax *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__getKeywordsForUserStartWithMax(
    struct soap *, const char *, int,
    const struct __ns1__getKeywordsForUserStartWithMax *, const char *);
SOAP_FMAC3 struct __ns1__getKeywordsForUserStartWithMax *SOAP_FMAC4
soap_in___ns1__getKeywordsForUserStartWithMax(
    struct soap *, const char *, struct __ns1__getKeywordsForUserStartWithMax *,
    const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__getKeywordsForUserStartWithMax(
    struct soap *, const struct __ns1__getKeywordsForUserStartWithMax *,
    const char *, const char *);

#ifndef soap_write___ns1__getKeywordsForUserStartWithMax
#define soap_write___ns1__getKeywordsForUserStartWithMax(soap, data)           \
  (ICat3::soap_serialize___ns1__getKeywordsForUserStartWithMax(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getKeywordsForUserStartWithMax(                  \
           soap, data, "-ns1:getKeywordsForUserStartWithMax", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getKeywordsForUserStartWithMax *SOAP_FMAC4
soap_get___ns1__getKeywordsForUserStartWithMax(
    struct soap *, struct __ns1__getKeywordsForUserStartWithMax *, const char *,
    const char *);

#ifndef soap_read___ns1__getKeywordsForUserStartWithMax
#define soap_read___ns1__getKeywordsForUserStartWithMax(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getKeywordsForUserStartWithMax(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getKeywordsForUserStartWithMax *SOAP_FMAC2
soap_instantiate___ns1__getKeywordsForUserStartWithMax(struct soap *, int,
                                                       const char *,
                                                       const char *, size_t *);

inline struct __ns1__getKeywordsForUserStartWithMax *
soap_new___ns1__getKeywordsForUserStartWithMax(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getKeywordsForUserStartWithMax(soap, n, NULL,
                                                                NULL, NULL);
}

inline struct __ns1__getKeywordsForUserStartWithMax *
soap_new_req___ns1__getKeywordsForUserStartWithMax(struct soap *soap) {
  struct __ns1__getKeywordsForUserStartWithMax *_p =
      soap_instantiate___ns1__getKeywordsForUserStartWithMax(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__getKeywordsForUserStartWithMax(soap, _p);
  }
  return _p;
}

inline struct __ns1__getKeywordsForUserStartWithMax *
soap_new_set___ns1__getKeywordsForUserStartWithMax(
    struct soap *soap,
    ns1__getKeywordsForUserStartWithMax *ns1__getKeywordsForUserStartWithMax_) {
  struct __ns1__getKeywordsForUserStartWithMax *_p =
      soap_instantiate___ns1__getKeywordsForUserStartWithMax(soap, -1, NULL,
                                                             NULL, NULL);
  if (_p) {
    soap_default___ns1__getKeywordsForUserStartWithMax(soap, _p);
    _p->ns1__getKeywordsForUserStartWithMax_ =
        ns1__getKeywordsForUserStartWithMax_;
  }
  return _p;
}

inline void soap_delete___ns1__getKeywordsForUserStartWithMax(
    struct soap *soap, struct __ns1__getKeywordsForUserStartWithMax *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getKeywordsForUserStartWithMax(struct soap *, int, int, void *,
                                                size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getKeywordsForUser
#define SOAP_TYPE_ICat3___ns1__getKeywordsForUser (488)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getKeywordsForUser(struct soap *,
                                       struct __ns1__getKeywordsForUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__getKeywordsForUser(
    struct soap *, const struct __ns1__getKeywordsForUser *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getKeywordsForUser(struct soap *, const char *, int,
                                   const struct __ns1__getKeywordsForUser *,
                                   const char *);
SOAP_FMAC3 struct __ns1__getKeywordsForUser *SOAP_FMAC4
soap_in___ns1__getKeywordsForUser(struct soap *, const char *,
                                  struct __ns1__getKeywordsForUser *,
                                  const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getKeywordsForUser(struct soap *,
                                   const struct __ns1__getKeywordsForUser *,
                                   const char *, const char *);

#ifndef soap_write___ns1__getKeywordsForUser
#define soap_write___ns1__getKeywordsForUser(soap, data)                       \
  (ICat3::soap_serialize___ns1__getKeywordsForUser(soap, data),                \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__getKeywordsForUser(                              \
           soap, data, "-ns1:getKeywordsForUser", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getKeywordsForUser *SOAP_FMAC4
soap_get___ns1__getKeywordsForUser(struct soap *,
                                   struct __ns1__getKeywordsForUser *,
                                   const char *, const char *);

#ifndef soap_read___ns1__getKeywordsForUser
#define soap_read___ns1__getKeywordsForUser(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getKeywordsForUser(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getKeywordsForUser *SOAP_FMAC2
soap_instantiate___ns1__getKeywordsForUser(struct soap *, int, const char *,
                                           const char *, size_t *);

inline struct __ns1__getKeywordsForUser *
soap_new___ns1__getKeywordsForUser(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getKeywordsForUser(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getKeywordsForUser *
soap_new_req___ns1__getKeywordsForUser(struct soap *soap) {
  struct __ns1__getKeywordsForUser *_p =
      soap_instantiate___ns1__getKeywordsForUser(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getKeywordsForUser(soap, _p);
  }
  return _p;
}

inline struct __ns1__getKeywordsForUser *soap_new_set___ns1__getKeywordsForUser(
    struct soap *soap, ns1__getKeywordsForUser *ns1__getKeywordsForUser_) {
  struct __ns1__getKeywordsForUser *_p =
      soap_instantiate___ns1__getKeywordsForUser(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getKeywordsForUser(soap, _p);
    _p->ns1__getKeywordsForUser_ = ns1__getKeywordsForUser_;
  }
  return _p;
}

inline void
soap_delete___ns1__getKeywordsForUser(struct soap *soap,
                                      struct __ns1__getKeywordsForUser *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getKeywordsForUser(struct soap *, int, int, void *, size_t,
                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__isSessionValid
#define SOAP_TYPE_ICat3___ns1__isSessionValid (484)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__isSessionValid(struct soap *,
                                   struct __ns1__isSessionValid *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__isSessionValid(struct soap *,
                                     const struct __ns1__isSessionValid *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__isSessionValid(struct soap *, const char *, int,
                               const struct __ns1__isSessionValid *,
                               const char *);
SOAP_FMAC3 struct __ns1__isSessionValid *SOAP_FMAC4
soap_in___ns1__isSessionValid(struct soap *, const char *,
                              struct __ns1__isSessionValid *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__isSessionValid(struct soap *,
                               const struct __ns1__isSessionValid *,
                               const char *, const char *);

#ifndef soap_write___ns1__isSessionValid
#define soap_write___ns1__isSessionValid(soap, data)                           \
  (ICat3::soap_serialize___ns1__isSessionValid(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__isSessionValid(             \
                                soap, data, "-ns1:isSessionValid", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__isSessionValid *SOAP_FMAC4
soap_get___ns1__isSessionValid(struct soap *, struct __ns1__isSessionValid *,
                               const char *, const char *);

#ifndef soap_read___ns1__isSessionValid
#define soap_read___ns1__isSessionValid(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__isSessionValid(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__isSessionValid *SOAP_FMAC2
soap_instantiate___ns1__isSessionValid(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__isSessionValid *
soap_new___ns1__isSessionValid(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__isSessionValid(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__isSessionValid *
soap_new_req___ns1__isSessionValid(struct soap *soap) {
  struct __ns1__isSessionValid *_p =
      soap_instantiate___ns1__isSessionValid(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__isSessionValid(soap, _p);
  }
  return _p;
}

inline struct __ns1__isSessionValid *
soap_new_set___ns1__isSessionValid(struct soap *soap,
                                   ns1__isSessionValid *ns1__isSessionValid_) {
  struct __ns1__isSessionValid *_p =
      soap_instantiate___ns1__isSessionValid(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__isSessionValid(soap, _p);
    _p->ns1__isSessionValid_ = ns1__isSessionValid_;
  }
  return _p;
}

inline void soap_delete___ns1__isSessionValid(struct soap *soap,
                                              struct __ns1__isSessionValid *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__isSessionValid(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__getUserDetails
#define SOAP_TYPE_ICat3___ns1__getUserDetails (480)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__getUserDetails(struct soap *,
                                   struct __ns1__getUserDetails *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__getUserDetails(struct soap *,
                                     const struct __ns1__getUserDetails *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__getUserDetails(struct soap *, const char *, int,
                               const struct __ns1__getUserDetails *,
                               const char *);
SOAP_FMAC3 struct __ns1__getUserDetails *SOAP_FMAC4
soap_in___ns1__getUserDetails(struct soap *, const char *,
                              struct __ns1__getUserDetails *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__getUserDetails(struct soap *,
                               const struct __ns1__getUserDetails *,
                               const char *, const char *);

#ifndef soap_write___ns1__getUserDetails
#define soap_write___ns1__getUserDetails(soap, data)                           \
  (ICat3::soap_serialize___ns1__getUserDetails(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put___ns1__getUserDetails(             \
                                soap, data, "-ns1:getUserDetails", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__getUserDetails *SOAP_FMAC4
soap_get___ns1__getUserDetails(struct soap *, struct __ns1__getUserDetails *,
                               const char *, const char *);

#ifndef soap_read___ns1__getUserDetails
#define soap_read___ns1__getUserDetails(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__getUserDetails(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__getUserDetails *SOAP_FMAC2
soap_instantiate___ns1__getUserDetails(struct soap *, int, const char *,
                                       const char *, size_t *);

inline struct __ns1__getUserDetails *
soap_new___ns1__getUserDetails(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__getUserDetails(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__getUserDetails *
soap_new_req___ns1__getUserDetails(struct soap *soap) {
  struct __ns1__getUserDetails *_p =
      soap_instantiate___ns1__getUserDetails(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getUserDetails(soap, _p);
  }
  return _p;
}

inline struct __ns1__getUserDetails *
soap_new_set___ns1__getUserDetails(struct soap *soap,
                                   ns3__getUserDetails *ns1__getUserDetails) {
  struct __ns1__getUserDetails *_p =
      soap_instantiate___ns1__getUserDetails(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__getUserDetails(soap, _p);
    _p->ns1__getUserDetails = ns1__getUserDetails;
  }
  return _p;
}

inline void soap_delete___ns1__getUserDetails(struct soap *soap,
                                              struct __ns1__getUserDetails *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy___ns1__getUserDetails(struct soap *, int, int, void *, size_t,
                                const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__logout
#define SOAP_TYPE_ICat3___ns1__logout (476)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__logout(struct soap *, struct __ns1__logout *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__logout(struct soap *, const struct __ns1__logout *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__logout(struct soap *, const char *, int,
                       const struct __ns1__logout *, const char *);
SOAP_FMAC3 struct __ns1__logout *SOAP_FMAC4
soap_in___ns1__logout(struct soap *, const char *, struct __ns1__logout *,
                      const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__logout(struct soap *,
                                                 const struct __ns1__logout *,
                                                 const char *, const char *);

#ifndef soap_write___ns1__logout
#define soap_write___ns1__logout(soap, data)                                   \
  (ICat3::soap_serialize___ns1__logout(soap, data),                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__logout(soap, data, "-ns1:logout", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__logout *SOAP_FMAC4
soap_get___ns1__logout(struct soap *, struct __ns1__logout *, const char *,
                       const char *);

#ifndef soap_read___ns1__logout
#define soap_read___ns1__logout(soap, data)                                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__logout(soap, data, NULL, NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__logout *SOAP_FMAC2
soap_instantiate___ns1__logout(struct soap *, int, const char *, const char *,
                               size_t *);

inline struct __ns1__logout *soap_new___ns1__logout(struct soap *soap,
                                                    int n = -1) {
  return soap_instantiate___ns1__logout(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__logout *soap_new_req___ns1__logout(struct soap *soap) {
  struct __ns1__logout *_p =
      soap_instantiate___ns1__logout(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__logout(soap, _p);
  }
  return _p;
}

inline struct __ns1__logout *
soap_new_set___ns1__logout(struct soap *soap, ns1__logout *ns1__logout_) {
  struct __ns1__logout *_p =
      soap_instantiate___ns1__logout(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__logout(soap, _p);
    _p->ns1__logout_ = ns1__logout_;
  }
  return _p;
}

inline void soap_delete___ns1__logout(struct soap *soap,
                                      struct __ns1__logout *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__logout(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3___ns1__loginLifetime
#define SOAP_TYPE_ICat3___ns1__loginLifetime (472)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__loginLifetime(struct soap *, struct __ns1__loginLifetime *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__loginLifetime(struct soap *,
                                    const struct __ns1__loginLifetime *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__loginLifetime(struct soap *, const char *, int,
                              const struct __ns1__loginLifetime *,
                              const char *);
SOAP_FMAC3 struct __ns1__loginLifetime *SOAP_FMAC4
soap_in___ns1__loginLifetime(struct soap *, const char *,
                             struct __ns1__loginLifetime *, const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put___ns1__loginLifetime(struct soap *,
                              const struct __ns1__loginLifetime *, const char *,
                              const char *);

#ifndef soap_write___ns1__loginLifetime
#define soap_write___ns1__loginLifetime(soap, data)                            \
  (ICat3::soap_serialize___ns1__loginLifetime(soap, data),                     \
   soap_begin_send(soap) || ICat3::soap_put___ns1__loginLifetime(              \
                                soap, data, "-ns1:loginLifetime", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__loginLifetime *SOAP_FMAC4
soap_get___ns1__loginLifetime(struct soap *, struct __ns1__loginLifetime *,
                              const char *, const char *);

#ifndef soap_read___ns1__loginLifetime
#define soap_read___ns1__loginLifetime(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__loginLifetime(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__loginLifetime *SOAP_FMAC2
soap_instantiate___ns1__loginLifetime(struct soap *, int, const char *,
                                      const char *, size_t *);

inline struct __ns1__loginLifetime *
soap_new___ns1__loginLifetime(struct soap *soap, int n = -1) {
  return soap_instantiate___ns1__loginLifetime(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__loginLifetime *
soap_new_req___ns1__loginLifetime(struct soap *soap) {
  struct __ns1__loginLifetime *_p =
      soap_instantiate___ns1__loginLifetime(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__loginLifetime(soap, _p);
  }
  return _p;
}

inline struct __ns1__loginLifetime *
soap_new_set___ns1__loginLifetime(struct soap *soap,
                                  ns1__loginLifetime *ns1__loginLifetime_) {
  struct __ns1__loginLifetime *_p =
      soap_instantiate___ns1__loginLifetime(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__loginLifetime(soap, _p);
    _p->ns1__loginLifetime_ = ns1__loginLifetime_;
  }
  return _p;
}

inline void soap_delete___ns1__loginLifetime(struct soap *soap,
                                             struct __ns1__loginLifetime *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__loginLifetime(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3___ns1__login
#define SOAP_TYPE_ICat3___ns1__login (468)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default___ns1__login(struct soap *, struct __ns1__login *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize___ns1__login(struct soap *, const struct __ns1__login *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out___ns1__login(struct soap *, const char *, int,
                      const struct __ns1__login *, const char *);
SOAP_FMAC3 struct __ns1__login *SOAP_FMAC4
soap_in___ns1__login(struct soap *, const char *, struct __ns1__login *,
                     const char *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__login(struct soap *,
                                                const struct __ns1__login *,
                                                const char *, const char *);

#ifndef soap_write___ns1__login
#define soap_write___ns1__login(soap, data)                                    \
  (ICat3::soap_serialize___ns1__login(soap, data),                             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put___ns1__login(soap, data, "-ns1:login", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct __ns1__login *SOAP_FMAC4
soap_get___ns1__login(struct soap *, struct __ns1__login *, const char *,
                      const char *);

#ifndef soap_read___ns1__login
#define soap_read___ns1__login(soap, data)                                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get___ns1__login(soap, data, NULL, NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct __ns1__login *SOAP_FMAC2
soap_instantiate___ns1__login(struct soap *, int, const char *, const char *,
                              size_t *);

inline struct __ns1__login *soap_new___ns1__login(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate___ns1__login(soap, n, NULL, NULL, NULL);
}

inline struct __ns1__login *soap_new_req___ns1__login(struct soap *soap) {
  struct __ns1__login *_p =
      soap_instantiate___ns1__login(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__login(soap, _p);
  }
  return _p;
}

inline struct __ns1__login *soap_new_set___ns1__login(struct soap *soap,
                                                      ns1__login *ns1__login_) {
  struct __ns1__login *_p =
      soap_instantiate___ns1__login(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default___ns1__login(soap, _p);
    _p->ns1__login_ = ns1__login_;
  }
  return _p;
}

inline void soap_delete___ns1__login(struct soap *soap,
                                     struct __ns1__login *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__login(struct soap *, int, int,
                                                  void *, size_t, const void *,
                                                  size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ICat3_SOAP_ENV__Detail
#define SOAP_TYPE_ICat3_SOAP_ENV__Detail (456)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_SOAP_ENV__Detail(struct soap *, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_SOAP_ENV__Detail(struct soap *, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_SOAP_ENV__Detail(struct soap *, const char *, int,
                          const struct SOAP_ENV__Detail *, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail *SOAP_FMAC4
soap_in_SOAP_ENV__Detail(struct soap *, const char *, struct SOAP_ENV__Detail *,
                         const char *);

SOAP_FMAC3 int SOAP_FMAC4
soap_put_SOAP_ENV__Detail(struct soap *, const struct SOAP_ENV__Detail *,
                          const char *, const char *);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data)                                \
  (ICat3::soap_serialize_SOAP_ENV__Detail(soap, data),                         \
   soap_begin_send(soap) || ICat3::soap_put_SOAP_ENV__Detail(                  \
                                soap, data, "SOAP-ENV:Detail", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail *SOAP_FMAC4
soap_get_SOAP_ENV__Detail(struct soap *, struct SOAP_ENV__Detail *,
                          const char *, const char *);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data)                                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail *SOAP_FMAC2
soap_instantiate_SOAP_ENV__Detail(struct soap *, int, const char *,
                                  const char *, size_t *);

inline struct SOAP_ENV__Detail *soap_new_SOAP_ENV__Detail(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL);
}

inline struct SOAP_ENV__Detail *
soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) {
  struct SOAP_ENV__Detail *_p =
      soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_SOAP_ENV__Detail(soap, _p);
    _p->__type = __type;
    _p->fault = fault;
  }
  return _p;
}

inline struct SOAP_ENV__Detail *soap_new_set_SOAP_ENV__Detail(
    struct soap *soap, char *__any,
    ns1__ICATAPIException *ns1__ICATAPIException_,
    ns1__InsufficientPrivilegesException *ns1__InsufficientPrivilegesException_,
    ns3__NoSuchObjectFoundException *ns1__NoSuchObjectFoundException,
    ns3__NoSuchUserException *ns1__NoSuchUserException,
    ns3__SessionException *ns1__SessionException,
    ns3__ValidationException *ns1__ValidationException, int __type,
    void *fault) {
  struct SOAP_ENV__Detail *_p =
      soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL);
  if (_p) {
    soap_default_SOAP_ENV__Detail(soap, _p);
    _p->__any = __any;
    _p->ns1__ICATAPIException_ = ns1__ICATAPIException_;
    _p->ns1__InsufficientPrivilegesException_ =
        ns1__InsufficientPrivilegesException_;
    _p->ns1__NoSuchObjectFoundException = ns1__NoSuchObjectFoundException;
    _p->ns1__NoSuchUserException = ns1__NoSuchUserException;
    _p->ns1__SessionException = ns1__SessionException;
    _p->ns1__ValidationException = ns1__ValidationException;
    _p->__type = __type;
    _p->fault = fault;
  }
  return _p;
}

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap,
                                         struct SOAP_ENV__Detail *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ICat3_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_ICat3_PointerToSOAP_ENV__Reason (1064)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerToSOAP_ENV__Reason(struct soap *,
                                         struct SOAP_ENV__Reason *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerToSOAP_ENV__Reason(struct soap *, const char *, int,
                                   struct SOAP_ENV__Reason *const *,
                                   const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason **SOAP_FMAC4
soap_in_PointerToSOAP_ENV__Reason(struct soap *, const char *,
                                  struct SOAP_ENV__Reason **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerToSOAP_ENV__Reason(struct soap *,
                                   struct SOAP_ENV__Reason *const *,
                                   const char *, const char *);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data)                       \
  (ICat3::soap_serialize_PointerToSOAP_ENV__Reason(soap, data),                \
   soap_begin_send(soap) || ICat3::soap_put_PointerToSOAP_ENV__Reason(         \
                                soap, data, "SOAP-ENV:Reason", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason **SOAP_FMAC4
soap_get_PointerToSOAP_ENV__Reason(struct soap *, struct SOAP_ENV__Reason **,
                                   const char *, const char *);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ICat3_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_ICat3_PointerToSOAP_ENV__Detail (1063)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerToSOAP_ENV__Detail(struct soap *,
                                         struct SOAP_ENV__Detail *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerToSOAP_ENV__Detail(struct soap *, const char *, int,
                                   struct SOAP_ENV__Detail *const *,
                                   const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail **SOAP_FMAC4
soap_in_PointerToSOAP_ENV__Detail(struct soap *, const char *,
                                  struct SOAP_ENV__Detail **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerToSOAP_ENV__Detail(struct soap *,
                                   struct SOAP_ENV__Detail *const *,
                                   const char *, const char *);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data)                       \
  (ICat3::soap_serialize_PointerToSOAP_ENV__Detail(soap, data),                \
   soap_begin_send(soap) || ICat3::soap_put_PointerToSOAP_ENV__Detail(         \
                                soap, data, "SOAP-ENV:Detail", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail **SOAP_FMAC4
soap_get_PointerToSOAP_ENV__Detail(struct soap *, struct SOAP_ENV__Detail **,
                                   const char *, const char *);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_ICat3_PointerToSOAP_ENV__Code
#define SOAP_TYPE_ICat3_PointerToSOAP_ENV__Code (1060)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerToSOAP_ENV__Code(struct soap *,
                                       struct SOAP_ENV__Code *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerToSOAP_ENV__Code(struct soap *, const char *, int,
                                 struct SOAP_ENV__Code *const *, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code **SOAP_FMAC4
soap_in_PointerToSOAP_ENV__Code(struct soap *, const char *,
                                struct SOAP_ENV__Code **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerToSOAP_ENV__Code(struct soap *, struct SOAP_ENV__Code *const *,
                                 const char *, const char *);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data)                         \
  (ICat3::soap_serialize_PointerToSOAP_ENV__Code(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put_PointerToSOAP_ENV__Code(           \
                                soap, data, "SOAP-ENV:Code", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 struct SOAP_ENV__Code **SOAP_FMAC4
soap_get_PointerToSOAP_ENV__Code(struct soap *, struct SOAP_ENV__Code **,
                                 const char *, const char *);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchFacilityUserByRestrictionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchFacilityUserByRestrictionResponse  \
  (1055)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchFacilityUserByRestrictionResponse(
    struct soap *, ns1__searchFacilityUserByRestrictionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchFacilityUserByRestrictionResponse(
    struct soap *, const char *, int,
    ns1__searchFacilityUserByRestrictionResponse *const *, const char *);
SOAP_FMAC3 ns1__searchFacilityUserByRestrictionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchFacilityUserByRestrictionResponse(
    struct soap *, const char *,
    ns1__searchFacilityUserByRestrictionResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchFacilityUserByRestrictionResponse(
    struct soap *, ns1__searchFacilityUserByRestrictionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchFacilityUserByRestrictionResponse
#define soap_write_PointerTons1__searchFacilityUserByRestrictionResponse(soap, \
                                                                         data) \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchFacilityUserByRestrictionResponse(   \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchFacilityUserByRestrictionResponse(  \
           soap, data, "ns1:searchFacilityUserByRestrictionResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchFacilityUserByRestrictionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchFacilityUserByRestrictionResponse(
    struct soap *, ns1__searchFacilityUserByRestrictionResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchFacilityUserByRestrictionResponse
#define soap_read_PointerTons1__searchFacilityUserByRestrictionResponse(soap,  \
                                                                        data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchFacilityUserByRestrictionResponse( \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchFacilityUserByRestriction
#define SOAP_TYPE_ICat3_PointerTons1__searchFacilityUserByRestriction (1054)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchFacilityUserByRestriction(
    struct soap *, ns1__searchFacilityUserByRestriction *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchFacilityUserByRestriction(
    struct soap *, const char *, int,
    ns1__searchFacilityUserByRestriction *const *, const char *);
SOAP_FMAC3 ns1__searchFacilityUserByRestriction **SOAP_FMAC4
soap_in_PointerTons1__searchFacilityUserByRestriction(
    struct soap *, const char *, ns1__searchFacilityUserByRestriction **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchFacilityUserByRestriction(
    struct soap *, ns1__searchFacilityUserByRestriction *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchFacilityUserByRestriction
#define soap_write_PointerTons1__searchFacilityUserByRestriction(soap, data)   \
  (ICat3::soap_serialize_PointerTons1__searchFacilityUserByRestriction(soap,   \
                                                                       data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchFacilityUserByRestriction(          \
           soap, data, "ns1:searchFacilityUserByRestriction", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchFacilityUserByRestriction **SOAP_FMAC4
soap_get_PointerTons1__searchFacilityUserByRestriction(
    struct soap *, ns1__searchFacilityUserByRestriction **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchFacilityUserByRestriction
#define soap_read_PointerTons1__searchFacilityUserByRestriction(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchFacilityUserByRestriction(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterLogicalResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterLogicalResponse   \
  (1051)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByParameterLogicalResponse(
    struct soap *, ns1__searchSampleByParameterLogicalResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByParameterLogicalResponse(
    struct soap *, const char *, int,
    ns1__searchSampleByParameterLogicalResponse *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterLogicalResponse **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByParameterLogicalResponse(
    struct soap *, const char *, ns1__searchSampleByParameterLogicalResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByParameterLogicalResponse(
    struct soap *, ns1__searchSampleByParameterLogicalResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchSampleByParameterLogicalResponse
#define soap_write_PointerTons1__searchSampleByParameterLogicalResponse(soap,  \
                                                                        data)  \
  (ICat3::soap_serialize_PointerTons1__searchSampleByParameterLogicalResponse( \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByParameterLogicalResponse(   \
           soap, data, "ns1:searchSampleByParameterLogicalResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterLogicalResponse **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByParameterLogicalResponse(
    struct soap *, ns1__searchSampleByParameterLogicalResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSampleByParameterLogicalResponse
#define soap_read_PointerTons1__searchSampleByParameterLogicalResponse(soap,   \
                                                                       data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSampleByParameterLogicalResponse(  \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterLogical
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterLogical (1050)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByParameterLogical(
    struct soap *, ns1__searchSampleByParameterLogical *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchSampleByParameterLogical(
    struct soap *, const char *, int,
    ns1__searchSampleByParameterLogical *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterLogical **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByParameterLogical(
    struct soap *, const char *, ns1__searchSampleByParameterLogical **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchSampleByParameterLogical(
    struct soap *, ns1__searchSampleByParameterLogical *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchSampleByParameterLogical
#define soap_write_PointerTons1__searchSampleByParameterLogical(soap, data)    \
  (ICat3::soap_serialize_PointerTons1__searchSampleByParameterLogical(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByParameterLogical(           \
           soap, data, "ns1:searchSampleByParameterLogical", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterLogical **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByParameterLogical(
    struct soap *, ns1__searchSampleByParameterLogical **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSampleByParameterLogical
#define soap_read_PointerTons1__searchSampleByParameterLogical(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSampleByParameterLogical(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterLogicalResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterLogicalResponse  \
  (1047)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByParameterLogicalResponse(
    struct soap *, ns1__searchDatasetByParameterLogicalResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByParameterLogicalResponse(
    struct soap *, const char *, int,
    ns1__searchDatasetByParameterLogicalResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterLogicalResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByParameterLogicalResponse(
    struct soap *, const char *,
    ns1__searchDatasetByParameterLogicalResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByParameterLogicalResponse(
    struct soap *, ns1__searchDatasetByParameterLogicalResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByParameterLogicalResponse
#define soap_write_PointerTons1__searchDatasetByParameterLogicalResponse(soap, \
                                                                         data) \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchDatasetByParameterLogicalResponse(   \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetByParameterLogicalResponse(  \
           soap, data, "ns1:searchDatasetByParameterLogicalResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterLogicalResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByParameterLogicalResponse(
    struct soap *, ns1__searchDatasetByParameterLogicalResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatasetByParameterLogicalResponse
#define soap_read_PointerTons1__searchDatasetByParameterLogicalResponse(soap,  \
                                                                        data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetByParameterLogicalResponse( \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterLogical
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterLogical (1046)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByParameterLogical(
    struct soap *, ns1__searchDatasetByParameterLogical *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByParameterLogical(
    struct soap *, const char *, int,
    ns1__searchDatasetByParameterLogical *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterLogical **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByParameterLogical(
    struct soap *, const char *, ns1__searchDatasetByParameterLogical **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByParameterLogical(
    struct soap *, ns1__searchDatasetByParameterLogical *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchDatasetByParameterLogical
#define soap_write_PointerTons1__searchDatasetByParameterLogical(soap, data)   \
  (ICat3::soap_serialize_PointerTons1__searchDatasetByParameterLogical(soap,   \
                                                                       data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetByParameterLogical(          \
           soap, data, "ns1:searchDatasetByParameterLogical", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterLogical **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByParameterLogical(
    struct soap *, ns1__searchDatasetByParameterLogical **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatasetByParameterLogical
#define soap_read_PointerTons1__searchDatasetByParameterLogical(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetByParameterLogical(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterLogicalResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterLogicalResponse \
  (1043)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByParameterLogicalResponse(
    struct soap *, ns1__searchDatafileByParameterLogicalResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByParameterLogicalResponse(
    struct soap *, const char *, int,
    ns1__searchDatafileByParameterLogicalResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterLogicalResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByParameterLogicalResponse(
    struct soap *, const char *,
    ns1__searchDatafileByParameterLogicalResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByParameterLogicalResponse(
    struct soap *, ns1__searchDatafileByParameterLogicalResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByParameterLogicalResponse
#define soap_write_PointerTons1__searchDatafileByParameterLogicalResponse(     \
    soap, data)                                                                \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchDatafileByParameterLogicalResponse(  \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatafileByParameterLogicalResponse( \
           soap, data, "ns1:searchDatafileByParameterLogicalResponse",         \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterLogicalResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByParameterLogicalResponse(
    struct soap *, ns1__searchDatafileByParameterLogicalResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatafileByParameterLogicalResponse
#define soap_read_PointerTons1__searchDatafileByParameterLogicalResponse(soap, \
                                                                         data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchDatafileByParameterLogicalResponse(    \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterLogical
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterLogical (1042)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByParameterLogical(
    struct soap *, ns1__searchDatafileByParameterLogical *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByParameterLogical(
    struct soap *, const char *, int,
    ns1__searchDatafileByParameterLogical *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterLogical **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByParameterLogical(
    struct soap *, const char *, ns1__searchDatafileByParameterLogical **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByParameterLogical(
    struct soap *, ns1__searchDatafileByParameterLogical *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchDatafileByParameterLogical
#define soap_write_PointerTons1__searchDatafileByParameterLogical(soap, data)  \
  (ICat3::soap_serialize_PointerTons1__searchDatafileByParameterLogical(soap,  \
                                                                        data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatafileByParameterLogical(         \
           soap, data, "ns1:searchDatafileByParameterLogical", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterLogical **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByParameterLogical(
    struct soap *, ns1__searchDatafileByParameterLogical **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatafileByParameterLogical
#define soap_read_PointerTons1__searchDatafileByParameterLogical(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatafileByParameterLogical(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterLogicalResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterLogicalResponse \
  (1039)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByParameterLogicalResponse(
    struct soap *, ns1__searchInvestigationByParameterLogicalResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByParameterLogicalResponse(
    struct soap *, const char *, int,
    ns1__searchInvestigationByParameterLogicalResponse *const *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterLogicalResponse **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByParameterLogicalResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterLogicalResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByParameterLogicalResponse(
    struct soap *, ns1__searchInvestigationByParameterLogicalResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByParameterLogicalResponse
#define soap_write_PointerTons1__searchInvestigationByParameterLogicalResponse(    \
    soap, data)                                                                    \
  (ICat3::                                                                         \
       soap_serialize_PointerTons1__searchInvestigationByParameterLogicalResponse( \
           soap, data),                                                            \
   soap_begin_send(soap) ||                                                        \
       ICat3::                                                                     \
           soap_put_PointerTons1__searchInvestigationByParameterLogicalResponse(   \
               soap, data,                                                         \
               "ns1:searchInvestigationByParameterLogicalResponse", NULL) ||       \
       soap_end_send(soap),                                                        \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterLogicalResponse **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByParameterLogicalResponse(
    struct soap *, ns1__searchInvestigationByParameterLogicalResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByParameterLogicalResponse
#define soap_read_PointerTons1__searchInvestigationByParameterLogicalResponse(   \
    soap, data)                                                                  \
  (soap_begin_recv(soap) ||                                                      \
       !ICat3::                                                                  \
           soap_get_PointerTons1__searchInvestigationByParameterLogicalResponse( \
               soap, data, NULL, NULL) ||                                        \
       soap_end_recv(soap),                                                      \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterLogical
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterLogical    \
  (1038)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByParameterLogical(
    struct soap *, ns1__searchInvestigationByParameterLogical *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByParameterLogical(
    struct soap *, const char *, int,
    ns1__searchInvestigationByParameterLogical *const *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterLogical **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByParameterLogical(
    struct soap *, const char *, ns1__searchInvestigationByParameterLogical **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByParameterLogical(
    struct soap *, ns1__searchInvestigationByParameterLogical *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByParameterLogical
#define soap_write_PointerTons1__searchInvestigationByParameterLogical(soap,   \
                                                                       data)   \
  (ICat3::soap_serialize_PointerTons1__searchInvestigationByParameterLogical(  \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchInvestigationByParameterLogical(    \
           soap, data, "ns1:searchInvestigationByParameterLogical", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterLogical **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByParameterLogical(
    struct soap *, ns1__searchInvestigationByParameterLogical **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByParameterLogical
#define soap_read_PointerTons1__searchInvestigationByParameterLogical(soap,    \
                                                                      data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchInvestigationByParameterLogical(   \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestrictionLogicalResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestrictionLogicalResponse \
  (1035)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByRestrictionLogicalResponse(
    struct soap *, ns1__searchDatafileByRestrictionLogicalResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByRestrictionLogicalResponse(
    struct soap *, const char *, int,
    ns1__searchDatafileByRestrictionLogicalResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByRestrictionLogicalResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByRestrictionLogicalResponse(
    struct soap *, const char *,
    ns1__searchDatafileByRestrictionLogicalResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByRestrictionLogicalResponse(
    struct soap *, ns1__searchDatafileByRestrictionLogicalResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByRestrictionLogicalResponse
#define soap_write_PointerTons1__searchDatafileByRestrictionLogicalResponse(    \
    soap, data)                                                                 \
  (ICat3::                                                                      \
       soap_serialize_PointerTons1__searchDatafileByRestrictionLogicalResponse( \
           soap, data),                                                         \
   soap_begin_send(soap) ||                                                     \
       ICat3::                                                                  \
           soap_put_PointerTons1__searchDatafileByRestrictionLogicalResponse(   \
               soap, data, "ns1:searchDatafileByRestrictionLogicalResponse",    \
               NULL) ||                                                         \
       soap_end_send(soap),                                                     \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestrictionLogicalResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByRestrictionLogicalResponse(
    struct soap *, ns1__searchDatafileByRestrictionLogicalResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatafileByRestrictionLogicalResponse
#define soap_read_PointerTons1__searchDatafileByRestrictionLogicalResponse(    \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchDatafileByRestrictionLogicalResponse(  \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestrictionLogical
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestrictionLogical (1034)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByRestrictionLogical(
    struct soap *, ns1__searchDatafileByRestrictionLogical *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByRestrictionLogical(
    struct soap *, const char *, int,
    ns1__searchDatafileByRestrictionLogical *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByRestrictionLogical **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByRestrictionLogical(
    struct soap *, const char *, ns1__searchDatafileByRestrictionLogical **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByRestrictionLogical(
    struct soap *, ns1__searchDatafileByRestrictionLogical *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByRestrictionLogical
#define soap_write_PointerTons1__searchDatafileByRestrictionLogical(soap,      \
                                                                    data)      \
  (ICat3::soap_serialize_PointerTons1__searchDatafileByRestrictionLogical(     \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatafileByRestrictionLogical(       \
           soap, data, "ns1:searchDatafileByRestrictionLogical", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestrictionLogical **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByRestrictionLogical(
    struct soap *, ns1__searchDatafileByRestrictionLogical **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatafileByRestrictionLogical
#define soap_read_PointerTons1__searchDatafileByRestrictionLogical(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatafileByRestrictionLogical(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestrictionLogicalResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestrictionLogicalResponse \
  (1031)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *,
    ns1__searchInvestigationByRestrictionLogicalResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *, const char *, int,
    ns1__searchInvestigationByRestrictionLogicalResponse *const *,
    const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestrictionLogicalResponse **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByRestrictionLogicalResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *,
    ns1__searchInvestigationByRestrictionLogicalResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByRestrictionLogicalResponse
#define soap_write_PointerTons1__searchInvestigationByRestrictionLogicalResponse(    \
    soap, data)                                                                      \
  (ICat3::                                                                           \
       soap_serialize_PointerTons1__searchInvestigationByRestrictionLogicalResponse( \
           soap, data),                                                              \
   soap_begin_send(soap) ||                                                          \
       ICat3::                                                                       \
           soap_put_PointerTons1__searchInvestigationByRestrictionLogicalResponse(   \
               soap, data,                                                           \
               "ns1:searchInvestigationByRestrictionLogicalResponse", NULL) ||       \
       soap_end_send(soap),                                                          \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestrictionLogicalResponse **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByRestrictionLogicalResponse(
    struct soap *, ns1__searchInvestigationByRestrictionLogicalResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByRestrictionLogicalResponse
#define soap_read_PointerTons1__searchInvestigationByRestrictionLogicalResponse(   \
    soap, data)                                                                    \
  (soap_begin_recv(soap) ||                                                        \
       !ICat3::                                                                    \
           soap_get_PointerTons1__searchInvestigationByRestrictionLogicalResponse( \
               soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                        \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestrictionLogical
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestrictionLogical  \
  (1030)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByRestrictionLogical(
    struct soap *, ns1__searchInvestigationByRestrictionLogical *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByRestrictionLogical(
    struct soap *, const char *, int,
    ns1__searchInvestigationByRestrictionLogical *const *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestrictionLogical **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByRestrictionLogical(
    struct soap *, const char *,
    ns1__searchInvestigationByRestrictionLogical **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByRestrictionLogical(
    struct soap *, ns1__searchInvestigationByRestrictionLogical *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByRestrictionLogical
#define soap_write_PointerTons1__searchInvestigationByRestrictionLogical(soap, \
                                                                         data) \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchInvestigationByRestrictionLogical(   \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchInvestigationByRestrictionLogical(  \
           soap, data, "ns1:searchInvestigationByRestrictionLogical", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestrictionLogical **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByRestrictionLogical(
    struct soap *, ns1__searchInvestigationByRestrictionLogical **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByRestrictionLogical
#define soap_read_PointerTons1__searchInvestigationByRestrictionLogical(soap,  \
                                                                        data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchInvestigationByRestrictionLogical( \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestrictionLogicalResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestrictionLogicalResponse \
  (1027)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByRestrictionLogicalResponse(
    struct soap *, ns1__searchDatasetByRestrictionLogicalResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByRestrictionLogicalResponse(
    struct soap *, const char *, int,
    ns1__searchDatasetByRestrictionLogicalResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByRestrictionLogicalResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByRestrictionLogicalResponse(
    struct soap *, const char *,
    ns1__searchDatasetByRestrictionLogicalResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByRestrictionLogicalResponse(
    struct soap *, ns1__searchDatasetByRestrictionLogicalResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByRestrictionLogicalResponse
#define soap_write_PointerTons1__searchDatasetByRestrictionLogicalResponse(    \
    soap, data)                                                                \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchDatasetByRestrictionLogicalResponse( \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::                                                                 \
           soap_put_PointerTons1__searchDatasetByRestrictionLogicalResponse(   \
               soap, data, "ns1:searchDatasetByRestrictionLogicalResponse",    \
               NULL) ||                                                        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestrictionLogicalResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByRestrictionLogicalResponse(
    struct soap *, ns1__searchDatasetByRestrictionLogicalResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatasetByRestrictionLogicalResponse
#define soap_read_PointerTons1__searchDatasetByRestrictionLogicalResponse(     \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchDatasetByRestrictionLogicalResponse(   \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestrictionLogical
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestrictionLogical (1026)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByRestrictionLogical(
    struct soap *, ns1__searchDatasetByRestrictionLogical *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByRestrictionLogical(
    struct soap *, const char *, int,
    ns1__searchDatasetByRestrictionLogical *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByRestrictionLogical **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByRestrictionLogical(
    struct soap *, const char *, ns1__searchDatasetByRestrictionLogical **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByRestrictionLogical(
    struct soap *, ns1__searchDatasetByRestrictionLogical *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByRestrictionLogical
#define soap_write_PointerTons1__searchDatasetByRestrictionLogical(soap, data) \
  (ICat3::soap_serialize_PointerTons1__searchDatasetByRestrictionLogical(      \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetByRestrictionLogical(        \
           soap, data, "ns1:searchDatasetByRestrictionLogical", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestrictionLogical **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByRestrictionLogical(
    struct soap *, ns1__searchDatasetByRestrictionLogical **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatasetByRestrictionLogical
#define soap_read_PointerTons1__searchDatasetByRestrictionLogical(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetByRestrictionLogical(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestrictionLogicalResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestrictionLogicalResponse \
  (1023)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByRestrictionLogicalResponse(
    struct soap *, ns1__searchSampleByRestrictionLogicalResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByRestrictionLogicalResponse(
    struct soap *, const char *, int,
    ns1__searchSampleByRestrictionLogicalResponse *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByRestrictionLogicalResponse **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByRestrictionLogicalResponse(
    struct soap *, const char *,
    ns1__searchSampleByRestrictionLogicalResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByRestrictionLogicalResponse(
    struct soap *, ns1__searchSampleByRestrictionLogicalResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchSampleByRestrictionLogicalResponse
#define soap_write_PointerTons1__searchSampleByRestrictionLogicalResponse(     \
    soap, data)                                                                \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchSampleByRestrictionLogicalResponse(  \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByRestrictionLogicalResponse( \
           soap, data, "ns1:searchSampleByRestrictionLogicalResponse",         \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestrictionLogicalResponse **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByRestrictionLogicalResponse(
    struct soap *, ns1__searchSampleByRestrictionLogicalResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchSampleByRestrictionLogicalResponse
#define soap_read_PointerTons1__searchSampleByRestrictionLogicalResponse(soap, \
                                                                         data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchSampleByRestrictionLogicalResponse(    \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestrictionLogical
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestrictionLogical (1022)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByRestrictionLogical(
    struct soap *, ns1__searchSampleByRestrictionLogical *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByRestrictionLogical(
    struct soap *, const char *, int,
    ns1__searchSampleByRestrictionLogical *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByRestrictionLogical **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByRestrictionLogical(
    struct soap *, const char *, ns1__searchSampleByRestrictionLogical **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByRestrictionLogical(
    struct soap *, ns1__searchSampleByRestrictionLogical *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchSampleByRestrictionLogical
#define soap_write_PointerTons1__searchSampleByRestrictionLogical(soap, data)  \
  (ICat3::soap_serialize_PointerTons1__searchSampleByRestrictionLogical(soap,  \
                                                                        data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByRestrictionLogical(         \
           soap, data, "ns1:searchSampleByRestrictionLogical", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestrictionLogical **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByRestrictionLogical(
    struct soap *, ns1__searchSampleByRestrictionLogical **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSampleByRestrictionLogical
#define soap_read_PointerTons1__searchSampleByRestrictionLogical(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSampleByRestrictionLogical(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestrictionComparisonResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestrictionComparisonResponse \
  (1019)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByRestrictionComparisonResponse(
    struct soap *, ns1__searchSampleByRestrictionComparisonResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByRestrictionComparisonResponse(
    struct soap *, const char *, int,
    ns1__searchSampleByRestrictionComparisonResponse *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByRestrictionComparisonResponse **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByRestrictionComparisonResponse(
    struct soap *, const char *,
    ns1__searchSampleByRestrictionComparisonResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByRestrictionComparisonResponse(
    struct soap *, ns1__searchSampleByRestrictionComparisonResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchSampleByRestrictionComparisonResponse
#define soap_write_PointerTons1__searchSampleByRestrictionComparisonResponse(    \
    soap, data)                                                                  \
  (ICat3::                                                                       \
       soap_serialize_PointerTons1__searchSampleByRestrictionComparisonResponse( \
           soap, data),                                                          \
   soap_begin_send(soap) ||                                                      \
       ICat3::                                                                   \
           soap_put_PointerTons1__searchSampleByRestrictionComparisonResponse(   \
               soap, data, "ns1:searchSampleByRestrictionComparisonResponse",    \
               NULL) ||                                                          \
       soap_end_send(soap),                                                      \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestrictionComparisonResponse **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByRestrictionComparisonResponse(
    struct soap *, ns1__searchSampleByRestrictionComparisonResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchSampleByRestrictionComparisonResponse
#define soap_read_PointerTons1__searchSampleByRestrictionComparisonResponse(   \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchSampleByRestrictionComparisonResponse( \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestrictionComparison
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestrictionComparison (1018)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByRestrictionComparison(
    struct soap *, ns1__searchSampleByRestrictionComparison *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByRestrictionComparison(
    struct soap *, const char *, int,
    ns1__searchSampleByRestrictionComparison *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByRestrictionComparison **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByRestrictionComparison(
    struct soap *, const char *, ns1__searchSampleByRestrictionComparison **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByRestrictionComparison(
    struct soap *, ns1__searchSampleByRestrictionComparison *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchSampleByRestrictionComparison
#define soap_write_PointerTons1__searchSampleByRestrictionComparison(soap,     \
                                                                     data)     \
  (ICat3::soap_serialize_PointerTons1__searchSampleByRestrictionComparison(    \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByRestrictionComparison(      \
           soap, data, "ns1:searchSampleByRestrictionComparison", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestrictionComparison **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByRestrictionComparison(
    struct soap *, ns1__searchSampleByRestrictionComparison **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSampleByRestrictionComparison
#define soap_read_PointerTons1__searchSampleByRestrictionComparison(soap,      \
                                                                    data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSampleByRestrictionComparison(     \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestrictionComparisonResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestrictionComparisonResponse \
  (1015)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByRestrictionComparisonResponse(
    struct soap *, ns1__searchDatafileByRestrictionComparisonResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByRestrictionComparisonResponse(
    struct soap *, const char *, int,
    ns1__searchDatafileByRestrictionComparisonResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByRestrictionComparisonResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByRestrictionComparisonResponse(
    struct soap *, const char *,
    ns1__searchDatafileByRestrictionComparisonResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByRestrictionComparisonResponse(
    struct soap *, ns1__searchDatafileByRestrictionComparisonResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByRestrictionComparisonResponse
#define soap_write_PointerTons1__searchDatafileByRestrictionComparisonResponse(    \
    soap, data)                                                                    \
  (ICat3::                                                                         \
       soap_serialize_PointerTons1__searchDatafileByRestrictionComparisonResponse( \
           soap, data),                                                            \
   soap_begin_send(soap) ||                                                        \
       ICat3::                                                                     \
           soap_put_PointerTons1__searchDatafileByRestrictionComparisonResponse(   \
               soap, data,                                                         \
               "ns1:searchDatafileByRestrictionComparisonResponse", NULL) ||       \
       soap_end_send(soap),                                                        \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestrictionComparisonResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByRestrictionComparisonResponse(
    struct soap *, ns1__searchDatafileByRestrictionComparisonResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatafileByRestrictionComparisonResponse
#define soap_read_PointerTons1__searchDatafileByRestrictionComparisonResponse(   \
    soap, data)                                                                  \
  (soap_begin_recv(soap) ||                                                      \
       !ICat3::                                                                  \
           soap_get_PointerTons1__searchDatafileByRestrictionComparisonResponse( \
               soap, data, NULL, NULL) ||                                        \
       soap_end_recv(soap),                                                      \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestrictionComparison
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestrictionComparison    \
  (1014)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByRestrictionComparison(
    struct soap *, ns1__searchDatafileByRestrictionComparison *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByRestrictionComparison(
    struct soap *, const char *, int,
    ns1__searchDatafileByRestrictionComparison *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByRestrictionComparison **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByRestrictionComparison(
    struct soap *, const char *, ns1__searchDatafileByRestrictionComparison **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByRestrictionComparison(
    struct soap *, ns1__searchDatafileByRestrictionComparison *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByRestrictionComparison
#define soap_write_PointerTons1__searchDatafileByRestrictionComparison(soap,   \
                                                                       data)   \
  (ICat3::soap_serialize_PointerTons1__searchDatafileByRestrictionComparison(  \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatafileByRestrictionComparison(    \
           soap, data, "ns1:searchDatafileByRestrictionComparison", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestrictionComparison **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByRestrictionComparison(
    struct soap *, ns1__searchDatafileByRestrictionComparison **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatafileByRestrictionComparison
#define soap_read_PointerTons1__searchDatafileByRestrictionComparison(soap,    \
                                                                      data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatafileByRestrictionComparison(   \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestrictionComparisonResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestrictionComparisonResponse \
  (1011)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByRestrictionComparisonResponse(
    struct soap *, ns1__searchDatasetByRestrictionComparisonResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByRestrictionComparisonResponse(
    struct soap *, const char *, int,
    ns1__searchDatasetByRestrictionComparisonResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByRestrictionComparisonResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByRestrictionComparisonResponse(
    struct soap *, const char *,
    ns1__searchDatasetByRestrictionComparisonResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByRestrictionComparisonResponse(
    struct soap *, ns1__searchDatasetByRestrictionComparisonResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByRestrictionComparisonResponse
#define soap_write_PointerTons1__searchDatasetByRestrictionComparisonResponse(    \
    soap, data)                                                                   \
  (ICat3::                                                                        \
       soap_serialize_PointerTons1__searchDatasetByRestrictionComparisonResponse( \
           soap, data),                                                           \
   soap_begin_send(soap) ||                                                       \
       ICat3::                                                                    \
           soap_put_PointerTons1__searchDatasetByRestrictionComparisonResponse(   \
               soap, data, "ns1:searchDatasetByRestrictionComparisonResponse",    \
               NULL) ||                                                           \
       soap_end_send(soap),                                                       \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestrictionComparisonResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByRestrictionComparisonResponse(
    struct soap *, ns1__searchDatasetByRestrictionComparisonResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatasetByRestrictionComparisonResponse
#define soap_read_PointerTons1__searchDatasetByRestrictionComparisonResponse(   \
    soap, data)                                                                 \
  (soap_begin_recv(soap) ||                                                     \
       !ICat3::                                                                 \
           soap_get_PointerTons1__searchDatasetByRestrictionComparisonResponse( \
               soap, data, NULL, NULL) ||                                       \
       soap_end_recv(soap),                                                     \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestrictionComparison
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestrictionComparison     \
  (1010)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByRestrictionComparison(
    struct soap *, ns1__searchDatasetByRestrictionComparison *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByRestrictionComparison(
    struct soap *, const char *, int,
    ns1__searchDatasetByRestrictionComparison *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByRestrictionComparison **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByRestrictionComparison(
    struct soap *, const char *, ns1__searchDatasetByRestrictionComparison **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByRestrictionComparison(
    struct soap *, ns1__searchDatasetByRestrictionComparison *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByRestrictionComparison
#define soap_write_PointerTons1__searchDatasetByRestrictionComparison(soap,    \
                                                                      data)    \
  (ICat3::soap_serialize_PointerTons1__searchDatasetByRestrictionComparison(   \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetByRestrictionComparison(     \
           soap, data, "ns1:searchDatasetByRestrictionComparison", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestrictionComparison **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByRestrictionComparison(
    struct soap *, ns1__searchDatasetByRestrictionComparison **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatasetByRestrictionComparison
#define soap_read_PointerTons1__searchDatasetByRestrictionComparison(soap,     \
                                                                     data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetByRestrictionComparison(    \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestrictionComparasionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestrictionComparasionResponse \
  (1007)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *,
    ns1__searchInvestigationByRestrictionComparasionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *, const char *, int,
    ns1__searchInvestigationByRestrictionComparasionResponse *const *,
    const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestrictionComparasionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByRestrictionComparasionResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *,
    ns1__searchInvestigationByRestrictionComparasionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByRestrictionComparasionResponse
#define soap_write_PointerTons1__searchInvestigationByRestrictionComparasionResponse(    \
    soap, data)                                                                          \
  (ICat3::                                                                               \
       soap_serialize_PointerTons1__searchInvestigationByRestrictionComparasionResponse( \
           soap, data),                                                                  \
   soap_begin_send(soap) ||                                                              \
       ICat3::                                                                           \
           soap_put_PointerTons1__searchInvestigationByRestrictionComparasionResponse(   \
               soap, data,                                                               \
               "ns1:searchInvestigationByRestrictionComparasionResponse",                \
               NULL) ||                                                                  \
       soap_end_send(soap),                                                              \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestrictionComparasionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByRestrictionComparasionResponse(
    struct soap *, ns1__searchInvestigationByRestrictionComparasionResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByRestrictionComparasionResponse
#define soap_read_PointerTons1__searchInvestigationByRestrictionComparasionResponse(   \
    soap, data)                                                                        \
  (soap_begin_recv(soap) ||                                                            \
       !ICat3::                                                                        \
           soap_get_PointerTons1__searchInvestigationByRestrictionComparasionResponse( \
               soap, data, NULL, NULL) ||                                              \
       soap_end_recv(soap),                                                            \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestrictionComparasion
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestrictionComparasion \
  (1006)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByRestrictionComparasion(
    struct soap *, ns1__searchInvestigationByRestrictionComparasion *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByRestrictionComparasion(
    struct soap *, const char *, int,
    ns1__searchInvestigationByRestrictionComparasion *const *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestrictionComparasion **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByRestrictionComparasion(
    struct soap *, const char *,
    ns1__searchInvestigationByRestrictionComparasion **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByRestrictionComparasion(
    struct soap *, ns1__searchInvestigationByRestrictionComparasion *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByRestrictionComparasion
#define soap_write_PointerTons1__searchInvestigationByRestrictionComparasion(    \
    soap, data)                                                                  \
  (ICat3::                                                                       \
       soap_serialize_PointerTons1__searchInvestigationByRestrictionComparasion( \
           soap, data),                                                          \
   soap_begin_send(soap) ||                                                      \
       ICat3::                                                                   \
           soap_put_PointerTons1__searchInvestigationByRestrictionComparasion(   \
               soap, data, "ns1:searchInvestigationByRestrictionComparasion",    \
               NULL) ||                                                          \
       soap_end_send(soap),                                                      \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestrictionComparasion **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByRestrictionComparasion(
    struct soap *, ns1__searchInvestigationByRestrictionComparasion **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByRestrictionComparasion
#define soap_read_PointerTons1__searchInvestigationByRestrictionComparasion(   \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchInvestigationByRestrictionComparasion( \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestrictionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestrictionResponse (1003)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByRestrictionResponse(
    struct soap *, ns1__searchSampleByRestrictionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByRestrictionResponse(
    struct soap *, const char *, int,
    ns1__searchSampleByRestrictionResponse *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByRestrictionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByRestrictionResponse(
    struct soap *, const char *, ns1__searchSampleByRestrictionResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByRestrictionResponse(
    struct soap *, ns1__searchSampleByRestrictionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchSampleByRestrictionResponse
#define soap_write_PointerTons1__searchSampleByRestrictionResponse(soap, data) \
  (ICat3::soap_serialize_PointerTons1__searchSampleByRestrictionResponse(      \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByRestrictionResponse(        \
           soap, data, "ns1:searchSampleByRestrictionResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestrictionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByRestrictionResponse(
    struct soap *, ns1__searchSampleByRestrictionResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSampleByRestrictionResponse
#define soap_read_PointerTons1__searchSampleByRestrictionResponse(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSampleByRestrictionResponse(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestriction
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByRestriction (1002)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByRestriction(
    struct soap *, ns1__searchSampleByRestriction *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchSampleByRestriction(
    struct soap *, const char *, int, ns1__searchSampleByRestriction *const *,
    const char *);
SOAP_FMAC3 ns1__searchSampleByRestriction **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByRestriction(
    struct soap *, const char *, ns1__searchSampleByRestriction **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchSampleByRestriction(
    struct soap *, ns1__searchSampleByRestriction *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchSampleByRestriction
#define soap_write_PointerTons1__searchSampleByRestriction(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__searchSampleByRestriction(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByRestriction(                \
           soap, data, "ns1:searchSampleByRestriction", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByRestriction **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByRestriction(
    struct soap *, ns1__searchSampleByRestriction **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSampleByRestriction
#define soap_read_PointerTons1__searchSampleByRestriction(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSampleByRestriction(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestrictionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestrictionResponse (999)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByRestrictionResponse(
    struct soap *, ns1__searchDatafileByRestrictionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByRestrictionResponse(
    struct soap *, const char *, int,
    ns1__searchDatafileByRestrictionResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByRestrictionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByRestrictionResponse(
    struct soap *, const char *, ns1__searchDatafileByRestrictionResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByRestrictionResponse(
    struct soap *, ns1__searchDatafileByRestrictionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByRestrictionResponse
#define soap_write_PointerTons1__searchDatafileByRestrictionResponse(soap,     \
                                                                     data)     \
  (ICat3::soap_serialize_PointerTons1__searchDatafileByRestrictionResponse(    \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatafileByRestrictionResponse(      \
           soap, data, "ns1:searchDatafileByRestrictionResponse", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestrictionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByRestrictionResponse(
    struct soap *, ns1__searchDatafileByRestrictionResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatafileByRestrictionResponse
#define soap_read_PointerTons1__searchDatafileByRestrictionResponse(soap,      \
                                                                    data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatafileByRestrictionResponse(     \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestriction
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByRestriction (998)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByRestriction(
    struct soap *, ns1__searchDatafileByRestriction *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchDatafileByRestriction(
    struct soap *, const char *, int, ns1__searchDatafileByRestriction *const *,
    const char *);
SOAP_FMAC3 ns1__searchDatafileByRestriction **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByRestriction(
    struct soap *, const char *, ns1__searchDatafileByRestriction **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchDatafileByRestriction(
    struct soap *, ns1__searchDatafileByRestriction *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchDatafileByRestriction
#define soap_write_PointerTons1__searchDatafileByRestriction(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__searchDatafileByRestriction(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatafileByRestriction(              \
           soap, data, "ns1:searchDatafileByRestriction", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByRestriction **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByRestriction(
    struct soap *, ns1__searchDatafileByRestriction **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatafileByRestriction
#define soap_read_PointerTons1__searchDatafileByRestriction(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatafileByRestriction(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestrictionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestrictionResponse (995)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByRestrictionResponse(
    struct soap *, ns1__searchDatasetByRestrictionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByRestrictionResponse(
    struct soap *, const char *, int,
    ns1__searchDatasetByRestrictionResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByRestrictionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByRestrictionResponse(
    struct soap *, const char *, ns1__searchDatasetByRestrictionResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByRestrictionResponse(
    struct soap *, ns1__searchDatasetByRestrictionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByRestrictionResponse
#define soap_write_PointerTons1__searchDatasetByRestrictionResponse(soap,      \
                                                                    data)      \
  (ICat3::soap_serialize_PointerTons1__searchDatasetByRestrictionResponse(     \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetByRestrictionResponse(       \
           soap, data, "ns1:searchDatasetByRestrictionResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestrictionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByRestrictionResponse(
    struct soap *, ns1__searchDatasetByRestrictionResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatasetByRestrictionResponse
#define soap_read_PointerTons1__searchDatasetByRestrictionResponse(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetByRestrictionResponse(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestriction
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByRestriction (994)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByRestriction(
    struct soap *, ns1__searchDatasetByRestriction *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchDatasetByRestriction(
    struct soap *, const char *, int, ns1__searchDatasetByRestriction *const *,
    const char *);
SOAP_FMAC3 ns1__searchDatasetByRestriction **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByRestriction(
    struct soap *, const char *, ns1__searchDatasetByRestriction **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchDatasetByRestriction(
    struct soap *, ns1__searchDatasetByRestriction *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchDatasetByRestriction
#define soap_write_PointerTons1__searchDatasetByRestriction(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__searchDatasetByRestriction(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetByRestriction(               \
           soap, data, "ns1:searchDatasetByRestriction", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByRestriction **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByRestriction(
    struct soap *, ns1__searchDatasetByRestriction **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatasetByRestriction
#define soap_read_PointerTons1__searchDatasetByRestriction(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetByRestriction(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestrictionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestrictionResponse \
  (991)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByRestrictionResponse(
    struct soap *, ns1__searchInvestigationByRestrictionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByRestrictionResponse(
    struct soap *, const char *, int,
    ns1__searchInvestigationByRestrictionResponse *const *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestrictionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByRestrictionResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByRestrictionResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByRestrictionResponse(
    struct soap *, ns1__searchInvestigationByRestrictionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByRestrictionResponse
#define soap_write_PointerTons1__searchInvestigationByRestrictionResponse(     \
    soap, data)                                                                \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchInvestigationByRestrictionResponse(  \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchInvestigationByRestrictionResponse( \
           soap, data, "ns1:searchInvestigationByRestrictionResponse",         \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestrictionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByRestrictionResponse(
    struct soap *, ns1__searchInvestigationByRestrictionResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByRestrictionResponse
#define soap_read_PointerTons1__searchInvestigationByRestrictionResponse(soap, \
                                                                         data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchInvestigationByRestrictionResponse(    \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestriction
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByRestriction (990)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByRestriction(
    struct soap *, ns1__searchInvestigationByRestriction *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByRestriction(
    struct soap *, const char *, int,
    ns1__searchInvestigationByRestriction *const *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByRestriction **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByRestriction(
    struct soap *, const char *, ns1__searchInvestigationByRestriction **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByRestriction(
    struct soap *, ns1__searchInvestigationByRestriction *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByRestriction
#define soap_write_PointerTons1__searchInvestigationByRestriction(soap, data)  \
  (ICat3::soap_serialize_PointerTons1__searchInvestigationByRestriction(soap,  \
                                                                        data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchInvestigationByRestriction(         \
           soap, data, "ns1:searchInvestigationByRestriction", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByRestriction **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByRestriction(
    struct soap *, ns1__searchInvestigationByRestriction **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByRestriction
#define soap_read_PointerTons1__searchInvestigationByRestriction(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchInvestigationByRestriction(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterRestrictionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterRestrictionResponse \
  (987)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByParameterRestrictionResponse(
    struct soap *,
    ns1__searchInvestigationByParameterRestrictionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByParameterRestrictionResponse(
    struct soap *, const char *, int,
    ns1__searchInvestigationByParameterRestrictionResponse *const *,
    const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterRestrictionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByParameterRestrictionResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterRestrictionResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByParameterRestrictionResponse(
    struct soap *,
    ns1__searchInvestigationByParameterRestrictionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByParameterRestrictionResponse
#define soap_write_PointerTons1__searchInvestigationByParameterRestrictionResponse(    \
    soap, data)                                                                        \
  (ICat3::                                                                             \
       soap_serialize_PointerTons1__searchInvestigationByParameterRestrictionResponse( \
           soap, data),                                                                \
   soap_begin_send(soap) ||                                                            \
       ICat3::                                                                         \
           soap_put_PointerTons1__searchInvestigationByParameterRestrictionResponse(   \
               soap, data,                                                             \
               "ns1:searchInvestigationByParameterRestrictionResponse",                \
               NULL) ||                                                                \
       soap_end_send(soap),                                                            \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterRestrictionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByParameterRestrictionResponse(
    struct soap *, ns1__searchInvestigationByParameterRestrictionResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByParameterRestrictionResponse
#define soap_read_PointerTons1__searchInvestigationByParameterRestrictionResponse(   \
    soap, data)                                                                      \
  (soap_begin_recv(soap) ||                                                          \
       !ICat3::                                                                      \
           soap_get_PointerTons1__searchInvestigationByParameterRestrictionResponse( \
               soap, data, NULL, NULL) ||                                            \
       soap_end_recv(soap),                                                          \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterRestriction
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterRestriction \
  (986)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByParameterRestriction(
    struct soap *, ns1__searchInvestigationByParameterRestriction *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByParameterRestriction(
    struct soap *, const char *, int,
    ns1__searchInvestigationByParameterRestriction *const *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterRestriction **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByParameterRestriction(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterRestriction **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByParameterRestriction(
    struct soap *, ns1__searchInvestigationByParameterRestriction *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByParameterRestriction
#define soap_write_PointerTons1__searchInvestigationByParameterRestriction(    \
    soap, data)                                                                \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchInvestigationByParameterRestriction( \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::                                                                 \
           soap_put_PointerTons1__searchInvestigationByParameterRestriction(   \
               soap, data, "ns1:searchInvestigationByParameterRestriction",    \
               NULL) ||                                                        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterRestriction **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByParameterRestriction(
    struct soap *, ns1__searchInvestigationByParameterRestriction **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByParameterRestriction
#define soap_read_PointerTons1__searchInvestigationByParameterRestriction(     \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchInvestigationByParameterRestriction(   \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterRestrictionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterRestrictionResponse \
  (983)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByParameterRestrictionResponse(
    struct soap *, ns1__searchDatafileByParameterRestrictionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByParameterRestrictionResponse(
    struct soap *, const char *, int,
    ns1__searchDatafileByParameterRestrictionResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterRestrictionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByParameterRestrictionResponse(
    struct soap *, const char *,
    ns1__searchDatafileByParameterRestrictionResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByParameterRestrictionResponse(
    struct soap *, ns1__searchDatafileByParameterRestrictionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByParameterRestrictionResponse
#define soap_write_PointerTons1__searchDatafileByParameterRestrictionResponse(    \
    soap, data)                                                                   \
  (ICat3::                                                                        \
       soap_serialize_PointerTons1__searchDatafileByParameterRestrictionResponse( \
           soap, data),                                                           \
   soap_begin_send(soap) ||                                                       \
       ICat3::                                                                    \
           soap_put_PointerTons1__searchDatafileByParameterRestrictionResponse(   \
               soap, data, "ns1:searchDatafileByParameterRestrictionResponse",    \
               NULL) ||                                                           \
       soap_end_send(soap),                                                       \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterRestrictionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByParameterRestrictionResponse(
    struct soap *, ns1__searchDatafileByParameterRestrictionResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatafileByParameterRestrictionResponse
#define soap_read_PointerTons1__searchDatafileByParameterRestrictionResponse(   \
    soap, data)                                                                 \
  (soap_begin_recv(soap) ||                                                     \
       !ICat3::                                                                 \
           soap_get_PointerTons1__searchDatafileByParameterRestrictionResponse( \
               soap, data, NULL, NULL) ||                                       \
       soap_end_recv(soap),                                                     \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterRestriction
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterRestriction (982)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByParameterRestriction(
    struct soap *, ns1__searchDatafileByParameterRestriction *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByParameterRestriction(
    struct soap *, const char *, int,
    ns1__searchDatafileByParameterRestriction *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterRestriction **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByParameterRestriction(
    struct soap *, const char *, ns1__searchDatafileByParameterRestriction **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByParameterRestriction(
    struct soap *, ns1__searchDatafileByParameterRestriction *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByParameterRestriction
#define soap_write_PointerTons1__searchDatafileByParameterRestriction(soap,    \
                                                                      data)    \
  (ICat3::soap_serialize_PointerTons1__searchDatafileByParameterRestriction(   \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatafileByParameterRestriction(     \
           soap, data, "ns1:searchDatafileByParameterRestriction", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterRestriction **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByParameterRestriction(
    struct soap *, ns1__searchDatafileByParameterRestriction **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatafileByParameterRestriction
#define soap_read_PointerTons1__searchDatafileByParameterRestriction(soap,     \
                                                                     data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatafileByParameterRestriction(    \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterRestrictionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterRestrictionResponse \
  (979)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByParameterRestrictionResponse(
    struct soap *, ns1__searchSampleByParameterRestrictionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByParameterRestrictionResponse(
    struct soap *, const char *, int,
    ns1__searchSampleByParameterRestrictionResponse *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterRestrictionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByParameterRestrictionResponse(
    struct soap *, const char *,
    ns1__searchSampleByParameterRestrictionResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByParameterRestrictionResponse(
    struct soap *, ns1__searchSampleByParameterRestrictionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchSampleByParameterRestrictionResponse
#define soap_write_PointerTons1__searchSampleByParameterRestrictionResponse(    \
    soap, data)                                                                 \
  (ICat3::                                                                      \
       soap_serialize_PointerTons1__searchSampleByParameterRestrictionResponse( \
           soap, data),                                                         \
   soap_begin_send(soap) ||                                                     \
       ICat3::                                                                  \
           soap_put_PointerTons1__searchSampleByParameterRestrictionResponse(   \
               soap, data, "ns1:searchSampleByParameterRestrictionResponse",    \
               NULL) ||                                                         \
       soap_end_send(soap),                                                     \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterRestrictionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByParameterRestrictionResponse(
    struct soap *, ns1__searchSampleByParameterRestrictionResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchSampleByParameterRestrictionResponse
#define soap_read_PointerTons1__searchSampleByParameterRestrictionResponse(    \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchSampleByParameterRestrictionResponse(  \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterRestriction
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterRestriction (978)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByParameterRestriction(
    struct soap *, ns1__searchSampleByParameterRestriction *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByParameterRestriction(
    struct soap *, const char *, int,
    ns1__searchSampleByParameterRestriction *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterRestriction **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByParameterRestriction(
    struct soap *, const char *, ns1__searchSampleByParameterRestriction **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByParameterRestriction(
    struct soap *, ns1__searchSampleByParameterRestriction *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchSampleByParameterRestriction
#define soap_write_PointerTons1__searchSampleByParameterRestriction(soap,      \
                                                                    data)      \
  (ICat3::soap_serialize_PointerTons1__searchSampleByParameterRestriction(     \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByParameterRestriction(       \
           soap, data, "ns1:searchSampleByParameterRestriction", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterRestriction **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByParameterRestriction(
    struct soap *, ns1__searchSampleByParameterRestriction **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSampleByParameterRestriction
#define soap_read_PointerTons1__searchSampleByParameterRestriction(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSampleByParameterRestriction(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterRestrictionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterRestrictionResponse \
  (975)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByParameterRestrictionResponse(
    struct soap *, ns1__searchDatasetByParameterRestrictionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByParameterRestrictionResponse(
    struct soap *, const char *, int,
    ns1__searchDatasetByParameterRestrictionResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterRestrictionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByParameterRestrictionResponse(
    struct soap *, const char *,
    ns1__searchDatasetByParameterRestrictionResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByParameterRestrictionResponse(
    struct soap *, ns1__searchDatasetByParameterRestrictionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByParameterRestrictionResponse
#define soap_write_PointerTons1__searchDatasetByParameterRestrictionResponse(    \
    soap, data)                                                                  \
  (ICat3::                                                                       \
       soap_serialize_PointerTons1__searchDatasetByParameterRestrictionResponse( \
           soap, data),                                                          \
   soap_begin_send(soap) ||                                                      \
       ICat3::                                                                   \
           soap_put_PointerTons1__searchDatasetByParameterRestrictionResponse(   \
               soap, data, "ns1:searchDatasetByParameterRestrictionResponse",    \
               NULL) ||                                                          \
       soap_end_send(soap),                                                      \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterRestrictionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByParameterRestrictionResponse(
    struct soap *, ns1__searchDatasetByParameterRestrictionResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatasetByParameterRestrictionResponse
#define soap_read_PointerTons1__searchDatasetByParameterRestrictionResponse(   \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchDatasetByParameterRestrictionResponse( \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterRestriction
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterRestriction (974)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByParameterRestriction(
    struct soap *, ns1__searchDatasetByParameterRestriction *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByParameterRestriction(
    struct soap *, const char *, int,
    ns1__searchDatasetByParameterRestriction *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterRestriction **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByParameterRestriction(
    struct soap *, const char *, ns1__searchDatasetByParameterRestriction **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByParameterRestriction(
    struct soap *, ns1__searchDatasetByParameterRestriction *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByParameterRestriction
#define soap_write_PointerTons1__searchDatasetByParameterRestriction(soap,     \
                                                                     data)     \
  (ICat3::soap_serialize_PointerTons1__searchDatasetByParameterRestriction(    \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetByParameterRestriction(      \
           soap, data, "ns1:searchDatasetByParameterRestriction", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterRestriction **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByParameterRestriction(
    struct soap *, ns1__searchDatasetByParameterRestriction **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatasetByParameterRestriction
#define soap_read_PointerTons1__searchDatasetByParameterRestriction(soap,      \
                                                                    data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetByParameterRestriction(     \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getParameterByUnitsResponse
#define SOAP_TYPE_ICat3_PointerTons1__getParameterByUnitsResponse (971)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getParameterByUnitsResponse(
    struct soap *, ns1__getParameterByUnitsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getParameterByUnitsResponse(
    struct soap *, const char *, int, ns1__getParameterByUnitsResponse *const *,
    const char *);
SOAP_FMAC3 ns1__getParameterByUnitsResponse **SOAP_FMAC4
soap_in_PointerTons1__getParameterByUnitsResponse(
    struct soap *, const char *, ns1__getParameterByUnitsResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getParameterByUnitsResponse(
    struct soap *, ns1__getParameterByUnitsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getParameterByUnitsResponse
#define soap_write_PointerTons1__getParameterByUnitsResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__getParameterByUnitsResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getParameterByUnitsResponse(              \
           soap, data, "ns1:getParameterByUnitsResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByUnitsResponse **SOAP_FMAC4
soap_get_PointerTons1__getParameterByUnitsResponse(
    struct soap *, ns1__getParameterByUnitsResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getParameterByUnitsResponse
#define soap_read_PointerTons1__getParameterByUnitsResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getParameterByUnitsResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getParameterByUnits
#define SOAP_TYPE_ICat3_PointerTons1__getParameterByUnits (970)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getParameterByUnits(
    struct soap *, ns1__getParameterByUnits *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getParameterByUnits(struct soap *, const char *, int,
                                           ns1__getParameterByUnits *const *,
                                           const char *);
SOAP_FMAC3 ns1__getParameterByUnits **SOAP_FMAC4
soap_in_PointerTons1__getParameterByUnits(struct soap *, const char *,
                                          ns1__getParameterByUnits **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getParameterByUnits(struct soap *,
                                           ns1__getParameterByUnits *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__getParameterByUnits
#define soap_write_PointerTons1__getParameterByUnits(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__getParameterByUnits(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getParameterByUnits(                      \
           soap, data, "ns1:getParameterByUnits", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByUnits **SOAP_FMAC4
soap_get_PointerTons1__getParameterByUnits(struct soap *,
                                           ns1__getParameterByUnits **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__getParameterByUnits
#define soap_read_PointerTons1__getParameterByUnits(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getParameterByUnits(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getParameterByRestrictionResponse
#define SOAP_TYPE_ICat3_PointerTons1__getParameterByRestrictionResponse (967)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getParameterByRestrictionResponse(
    struct soap *, ns1__getParameterByRestrictionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getParameterByRestrictionResponse(
    struct soap *, const char *, int,
    ns1__getParameterByRestrictionResponse *const *, const char *);
SOAP_FMAC3 ns1__getParameterByRestrictionResponse **SOAP_FMAC4
soap_in_PointerTons1__getParameterByRestrictionResponse(
    struct soap *, const char *, ns1__getParameterByRestrictionResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getParameterByRestrictionResponse(
    struct soap *, ns1__getParameterByRestrictionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__getParameterByRestrictionResponse
#define soap_write_PointerTons1__getParameterByRestrictionResponse(soap, data) \
  (ICat3::soap_serialize_PointerTons1__getParameterByRestrictionResponse(      \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getParameterByRestrictionResponse(        \
           soap, data, "ns1:getParameterByRestrictionResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByRestrictionResponse **SOAP_FMAC4
soap_get_PointerTons1__getParameterByRestrictionResponse(
    struct soap *, ns1__getParameterByRestrictionResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getParameterByRestrictionResponse
#define soap_read_PointerTons1__getParameterByRestrictionResponse(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getParameterByRestrictionResponse(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getParameterByRestriction
#define SOAP_TYPE_ICat3_PointerTons1__getParameterByRestriction (966)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getParameterByRestriction(
    struct soap *, ns1__getParameterByRestriction *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getParameterByRestriction(
    struct soap *, const char *, int, ns1__getParameterByRestriction *const *,
    const char *);
SOAP_FMAC3 ns1__getParameterByRestriction **SOAP_FMAC4
soap_in_PointerTons1__getParameterByRestriction(
    struct soap *, const char *, ns1__getParameterByRestriction **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getParameterByRestriction(
    struct soap *, ns1__getParameterByRestriction *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getParameterByRestriction
#define soap_write_PointerTons1__getParameterByRestriction(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__getParameterByRestriction(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getParameterByRestriction(                \
           soap, data, "ns1:getParameterByRestriction", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByRestriction **SOAP_FMAC4
soap_get_PointerTons1__getParameterByRestriction(
    struct soap *, ns1__getParameterByRestriction **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getParameterByRestriction
#define soap_read_PointerTons1__getParameterByRestriction(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getParameterByRestriction(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getParameterByNameResponse
#define SOAP_TYPE_ICat3_PointerTons1__getParameterByNameResponse (963)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getParameterByNameResponse(
    struct soap *, ns1__getParameterByNameResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getParameterByNameResponse(
    struct soap *, const char *, int, ns1__getParameterByNameResponse *const *,
    const char *);
SOAP_FMAC3 ns1__getParameterByNameResponse **SOAP_FMAC4
soap_in_PointerTons1__getParameterByNameResponse(
    struct soap *, const char *, ns1__getParameterByNameResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getParameterByNameResponse(
    struct soap *, ns1__getParameterByNameResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getParameterByNameResponse
#define soap_write_PointerTons1__getParameterByNameResponse(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__getParameterByNameResponse(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getParameterByNameResponse(               \
           soap, data, "ns1:getParameterByNameResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByNameResponse **SOAP_FMAC4
soap_get_PointerTons1__getParameterByNameResponse(
    struct soap *, ns1__getParameterByNameResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getParameterByNameResponse
#define soap_read_PointerTons1__getParameterByNameResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getParameterByNameResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getParameterByName
#define SOAP_TYPE_ICat3_PointerTons1__getParameterByName (962)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getParameterByName(
    struct soap *, ns1__getParameterByName *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getParameterByName(struct soap *, const char *, int,
                                          ns1__getParameterByName *const *,
                                          const char *);
SOAP_FMAC3 ns1__getParameterByName **SOAP_FMAC4
soap_in_PointerTons1__getParameterByName(struct soap *, const char *,
                                         ns1__getParameterByName **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getParameterByName(struct soap *,
                                          ns1__getParameterByName *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__getParameterByName
#define soap_write_PointerTons1__getParameterByName(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__getParameterByName(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getParameterByName(  \
                                soap, data, "ns1:getParameterByName", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByName **SOAP_FMAC4
soap_get_PointerTons1__getParameterByName(struct soap *,
                                          ns1__getParameterByName **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__getParameterByName
#define soap_read_PointerTons1__getParameterByName(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getParameterByName(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getParameterByNameUnitsResponse
#define SOAP_TYPE_ICat3_PointerTons1__getParameterByNameUnitsResponse (959)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getParameterByNameUnitsResponse(
    struct soap *, ns1__getParameterByNameUnitsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getParameterByNameUnitsResponse(
    struct soap *, const char *, int,
    ns1__getParameterByNameUnitsResponse *const *, const char *);
SOAP_FMAC3 ns1__getParameterByNameUnitsResponse **SOAP_FMAC4
soap_in_PointerTons1__getParameterByNameUnitsResponse(
    struct soap *, const char *, ns1__getParameterByNameUnitsResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getParameterByNameUnitsResponse(
    struct soap *, ns1__getParameterByNameUnitsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getParameterByNameUnitsResponse
#define soap_write_PointerTons1__getParameterByNameUnitsResponse(soap, data)   \
  (ICat3::soap_serialize_PointerTons1__getParameterByNameUnitsResponse(soap,   \
                                                                       data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getParameterByNameUnitsResponse(          \
           soap, data, "ns1:getParameterByNameUnitsResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByNameUnitsResponse **SOAP_FMAC4
soap_get_PointerTons1__getParameterByNameUnitsResponse(
    struct soap *, ns1__getParameterByNameUnitsResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getParameterByNameUnitsResponse
#define soap_read_PointerTons1__getParameterByNameUnitsResponse(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getParameterByNameUnitsResponse(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getParameterByNameUnits
#define SOAP_TYPE_ICat3_PointerTons1__getParameterByNameUnits (958)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getParameterByNameUnits(
    struct soap *, ns1__getParameterByNameUnits *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getParameterByNameUnits(
    struct soap *, const char *, int, ns1__getParameterByNameUnits *const *,
    const char *);
SOAP_FMAC3 ns1__getParameterByNameUnits **SOAP_FMAC4
soap_in_PointerTons1__getParameterByNameUnits(struct soap *, const char *,
                                              ns1__getParameterByNameUnits **,
                                              const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getParameterByNameUnits(
    struct soap *, ns1__getParameterByNameUnits *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getParameterByNameUnits
#define soap_write_PointerTons1__getParameterByNameUnits(soap, data)           \
  (ICat3::soap_serialize_PointerTons1__getParameterByNameUnits(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getParameterByNameUnits(                  \
           soap, data, "ns1:getParameterByNameUnits", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getParameterByNameUnits **SOAP_FMAC4
soap_get_PointerTons1__getParameterByNameUnits(struct soap *,
                                               ns1__getParameterByNameUnits **,
                                               const char *, const char *);

#ifndef soap_read_PointerTons1__getParameterByNameUnits
#define soap_read_PointerTons1__getParameterByNameUnits(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getParameterByNameUnits(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterResponse (955)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByParameterResponse(
    struct soap *, ns1__searchSampleByParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByParameterResponse(
    struct soap *, const char *, int,
    ns1__searchSampleByParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByParameterResponse(
    struct soap *, const char *, ns1__searchSampleByParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByParameterResponse(
    struct soap *, ns1__searchSampleByParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchSampleByParameterResponse
#define soap_write_PointerTons1__searchSampleByParameterResponse(soap, data)   \
  (ICat3::soap_serialize_PointerTons1__searchSampleByParameterResponse(soap,   \
                                                                       data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByParameterResponse(          \
           soap, data, "ns1:searchSampleByParameterResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByParameterResponse(
    struct soap *, ns1__searchSampleByParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSampleByParameterResponse
#define soap_read_PointerTons1__searchSampleByParameterResponse(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSampleByParameterResponse(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameter
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameter (954)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__searchSampleByParameter(
    struct soap *, ns1__searchSampleByParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchSampleByParameter(
    struct soap *, const char *, int, ns1__searchSampleByParameter *const *,
    const char *);
SOAP_FMAC3 ns1__searchSampleByParameter **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByParameter(struct soap *, const char *,
                                              ns1__searchSampleByParameter **,
                                              const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchSampleByParameter(
    struct soap *, ns1__searchSampleByParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchSampleByParameter
#define soap_write_PointerTons1__searchSampleByParameter(soap, data)           \
  (ICat3::soap_serialize_PointerTons1__searchSampleByParameter(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByParameter(                  \
           soap, data, "ns1:searchSampleByParameter", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameter **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByParameter(struct soap *,
                                               ns1__searchSampleByParameter **,
                                               const char *, const char *);

#ifndef soap_read_PointerTons1__searchSampleByParameter
#define soap_read_PointerTons1__searchSampleByParameter(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSampleByParameter(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterResponse (951)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByParameterResponse(
    struct soap *, ns1__searchDatasetByParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByParameterResponse(
    struct soap *, const char *, int,
    ns1__searchDatasetByParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByParameterResponse(
    struct soap *, const char *, ns1__searchDatasetByParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByParameterResponse(
    struct soap *, ns1__searchDatasetByParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchDatasetByParameterResponse
#define soap_write_PointerTons1__searchDatasetByParameterResponse(soap, data)  \
  (ICat3::soap_serialize_PointerTons1__searchDatasetByParameterResponse(soap,  \
                                                                        data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetByParameterResponse(         \
           soap, data, "ns1:searchDatasetByParameterResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByParameterResponse(
    struct soap *, ns1__searchDatasetByParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatasetByParameterResponse
#define soap_read_PointerTons1__searchDatasetByParameterResponse(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetByParameterResponse(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameter
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameter (950)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByParameter(
    struct soap *, ns1__searchDatasetByParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchDatasetByParameter(
    struct soap *, const char *, int, ns1__searchDatasetByParameter *const *,
    const char *);
SOAP_FMAC3 ns1__searchDatasetByParameter **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByParameter(struct soap *, const char *,
                                               ns1__searchDatasetByParameter **,
                                               const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchDatasetByParameter(
    struct soap *, ns1__searchDatasetByParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchDatasetByParameter
#define soap_write_PointerTons1__searchDatasetByParameter(soap, data)          \
  (ICat3::soap_serialize_PointerTons1__searchDatasetByParameter(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetByParameter(                 \
           soap, data, "ns1:searchDatasetByParameter", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameter **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByParameter(
    struct soap *, ns1__searchDatasetByParameter **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatasetByParameter
#define soap_read_PointerTons1__searchDatasetByParameter(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetByParameter(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterResponse (947)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByParameterResponse(
    struct soap *, ns1__searchDatafileByParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByParameterResponse(
    struct soap *, const char *, int,
    ns1__searchDatafileByParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByParameterResponse(
    struct soap *, const char *, ns1__searchDatafileByParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByParameterResponse(
    struct soap *, ns1__searchDatafileByParameterResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByParameterResponse
#define soap_write_PointerTons1__searchDatafileByParameterResponse(soap, data) \
  (ICat3::soap_serialize_PointerTons1__searchDatafileByParameterResponse(      \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatafileByParameterResponse(        \
           soap, data, "ns1:searchDatafileByParameterResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByParameterResponse(
    struct soap *, ns1__searchDatafileByParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatafileByParameterResponse
#define soap_read_PointerTons1__searchDatafileByParameterResponse(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatafileByParameterResponse(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameter
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameter (946)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByParameter(
    struct soap *, ns1__searchDatafileByParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchDatafileByParameter(
    struct soap *, const char *, int, ns1__searchDatafileByParameter *const *,
    const char *);
SOAP_FMAC3 ns1__searchDatafileByParameter **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByParameter(
    struct soap *, const char *, ns1__searchDatafileByParameter **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchDatafileByParameter(
    struct soap *, ns1__searchDatafileByParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchDatafileByParameter
#define soap_write_PointerTons1__searchDatafileByParameter(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__searchDatafileByParameter(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatafileByParameter(                \
           soap, data, "ns1:searchDatafileByParameter", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameter **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByParameter(
    struct soap *, ns1__searchDatafileByParameter **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatafileByParameter
#define soap_read_PointerTons1__searchDatafileByParameter(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatafileByParameter(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterResponse   \
  (943)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByParameterResponse(
    struct soap *, ns1__searchInvestigationByParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByParameterResponse(
    struct soap *, const char *, int,
    ns1__searchInvestigationByParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByParameterResponse(
    struct soap *, const char *, ns1__searchInvestigationByParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByParameterResponse(
    struct soap *, ns1__searchInvestigationByParameterResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByParameterResponse
#define soap_write_PointerTons1__searchInvestigationByParameterResponse(soap,  \
                                                                        data)  \
  (ICat3::soap_serialize_PointerTons1__searchInvestigationByParameterResponse( \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchInvestigationByParameterResponse(   \
           soap, data, "ns1:searchInvestigationByParameterResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByParameterResponse(
    struct soap *, ns1__searchInvestigationByParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByParameterResponse
#define soap_read_PointerTons1__searchInvestigationByParameterResponse(soap,   \
                                                                       data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchInvestigationByParameterResponse(  \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameter
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameter (942)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByParameter(
    struct soap *, ns1__searchInvestigationByParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchInvestigationByParameter(
    struct soap *, const char *, int,
    ns1__searchInvestigationByParameter *const *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameter **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByParameter(
    struct soap *, const char *, ns1__searchInvestigationByParameter **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchInvestigationByParameter(
    struct soap *, ns1__searchInvestigationByParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByParameter
#define soap_write_PointerTons1__searchInvestigationByParameter(soap, data)    \
  (ICat3::soap_serialize_PointerTons1__searchInvestigationByParameter(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchInvestigationByParameter(           \
           soap, data, "ns1:searchInvestigationByParameter", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameter **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByParameter(
    struct soap *, ns1__searchInvestigationByParameter **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByParameter
#define soap_read_PointerTons1__searchInvestigationByParameter(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchInvestigationByParameter(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterComparisonResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterComparisonResponse \
  (939)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByParameterComparisonResponse(
    struct soap *, ns1__searchSampleByParameterComparisonResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByParameterComparisonResponse(
    struct soap *, const char *, int,
    ns1__searchSampleByParameterComparisonResponse *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterComparisonResponse **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByParameterComparisonResponse(
    struct soap *, const char *,
    ns1__searchSampleByParameterComparisonResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByParameterComparisonResponse(
    struct soap *, ns1__searchSampleByParameterComparisonResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchSampleByParameterComparisonResponse
#define soap_write_PointerTons1__searchSampleByParameterComparisonResponse(    \
    soap, data)                                                                \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchSampleByParameterComparisonResponse( \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::                                                                 \
           soap_put_PointerTons1__searchSampleByParameterComparisonResponse(   \
               soap, data, "ns1:searchSampleByParameterComparisonResponse",    \
               NULL) ||                                                        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterComparisonResponse **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByParameterComparisonResponse(
    struct soap *, ns1__searchSampleByParameterComparisonResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchSampleByParameterComparisonResponse
#define soap_read_PointerTons1__searchSampleByParameterComparisonResponse(     \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchSampleByParameterComparisonResponse(   \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterComparison
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterComparison (938)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByParameterComparison(
    struct soap *, ns1__searchSampleByParameterComparison *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByParameterComparison(
    struct soap *, const char *, int,
    ns1__searchSampleByParameterComparison *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterComparison **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByParameterComparison(
    struct soap *, const char *, ns1__searchSampleByParameterComparison **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByParameterComparison(
    struct soap *, ns1__searchSampleByParameterComparison *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchSampleByParameterComparison
#define soap_write_PointerTons1__searchSampleByParameterComparison(soap, data) \
  (ICat3::soap_serialize_PointerTons1__searchSampleByParameterComparison(      \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByParameterComparison(        \
           soap, data, "ns1:searchSampleByParameterComparison", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterComparison **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByParameterComparison(
    struct soap *, ns1__searchSampleByParameterComparison **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSampleByParameterComparison
#define soap_read_PointerTons1__searchSampleByParameterComparison(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSampleByParameterComparison(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterComparisonResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterComparisonResponse \
  (935)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByParameterComparisonResponse(
    struct soap *, ns1__searchDatasetByParameterComparisonResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByParameterComparisonResponse(
    struct soap *, const char *, int,
    ns1__searchDatasetByParameterComparisonResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterComparisonResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByParameterComparisonResponse(
    struct soap *, const char *,
    ns1__searchDatasetByParameterComparisonResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByParameterComparisonResponse(
    struct soap *, ns1__searchDatasetByParameterComparisonResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByParameterComparisonResponse
#define soap_write_PointerTons1__searchDatasetByParameterComparisonResponse(    \
    soap, data)                                                                 \
  (ICat3::                                                                      \
       soap_serialize_PointerTons1__searchDatasetByParameterComparisonResponse( \
           soap, data),                                                         \
   soap_begin_send(soap) ||                                                     \
       ICat3::                                                                  \
           soap_put_PointerTons1__searchDatasetByParameterComparisonResponse(   \
               soap, data, "ns1:searchDatasetByParameterComparisonResponse",    \
               NULL) ||                                                         \
       soap_end_send(soap),                                                     \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterComparisonResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByParameterComparisonResponse(
    struct soap *, ns1__searchDatasetByParameterComparisonResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatasetByParameterComparisonResponse
#define soap_read_PointerTons1__searchDatasetByParameterComparisonResponse(    \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchDatasetByParameterComparisonResponse(  \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterComparison
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterComparison (934)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByParameterComparison(
    struct soap *, ns1__searchDatasetByParameterComparison *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByParameterComparison(
    struct soap *, const char *, int,
    ns1__searchDatasetByParameterComparison *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterComparison **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByParameterComparison(
    struct soap *, const char *, ns1__searchDatasetByParameterComparison **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByParameterComparison(
    struct soap *, ns1__searchDatasetByParameterComparison *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByParameterComparison
#define soap_write_PointerTons1__searchDatasetByParameterComparison(soap,      \
                                                                    data)      \
  (ICat3::soap_serialize_PointerTons1__searchDatasetByParameterComparison(     \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetByParameterComparison(       \
           soap, data, "ns1:searchDatasetByParameterComparison", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterComparison **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByParameterComparison(
    struct soap *, ns1__searchDatasetByParameterComparison **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatasetByParameterComparison
#define soap_read_PointerTons1__searchDatasetByParameterComparison(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetByParameterComparison(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterComparisonResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterComparisonResponse \
  (931)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByParameterComparisonResponse(
    struct soap *, ns1__searchDatafileByParameterComparisonResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByParameterComparisonResponse(
    struct soap *, const char *, int,
    ns1__searchDatafileByParameterComparisonResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterComparisonResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByParameterComparisonResponse(
    struct soap *, const char *,
    ns1__searchDatafileByParameterComparisonResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByParameterComparisonResponse(
    struct soap *, ns1__searchDatafileByParameterComparisonResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByParameterComparisonResponse
#define soap_write_PointerTons1__searchDatafileByParameterComparisonResponse(    \
    soap, data)                                                                  \
  (ICat3::                                                                       \
       soap_serialize_PointerTons1__searchDatafileByParameterComparisonResponse( \
           soap, data),                                                          \
   soap_begin_send(soap) ||                                                      \
       ICat3::                                                                   \
           soap_put_PointerTons1__searchDatafileByParameterComparisonResponse(   \
               soap, data, "ns1:searchDatafileByParameterComparisonResponse",    \
               NULL) ||                                                          \
       soap_end_send(soap),                                                      \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterComparisonResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByParameterComparisonResponse(
    struct soap *, ns1__searchDatafileByParameterComparisonResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatafileByParameterComparisonResponse
#define soap_read_PointerTons1__searchDatafileByParameterComparisonResponse(   \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchDatafileByParameterComparisonResponse( \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterComparison
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterComparison (930)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByParameterComparison(
    struct soap *, ns1__searchDatafileByParameterComparison *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByParameterComparison(
    struct soap *, const char *, int,
    ns1__searchDatafileByParameterComparison *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterComparison **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByParameterComparison(
    struct soap *, const char *, ns1__searchDatafileByParameterComparison **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByParameterComparison(
    struct soap *, ns1__searchDatafileByParameterComparison *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByParameterComparison
#define soap_write_PointerTons1__searchDatafileByParameterComparison(soap,     \
                                                                     data)     \
  (ICat3::soap_serialize_PointerTons1__searchDatafileByParameterComparison(    \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatafileByParameterComparison(      \
           soap, data, "ns1:searchDatafileByParameterComparison", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterComparison **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByParameterComparison(
    struct soap *, ns1__searchDatafileByParameterComparison **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatafileByParameterComparison
#define soap_read_PointerTons1__searchDatafileByParameterComparison(soap,      \
                                                                    data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatafileByParameterComparison(     \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterComparisonResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterComparisonResponse \
  (927)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByParameterComparisonResponse(
    struct soap *,
    ns1__searchInvestigationByParameterComparisonResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByParameterComparisonResponse(
    struct soap *, const char *, int,
    ns1__searchInvestigationByParameterComparisonResponse *const *,
    const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterComparisonResponse **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByParameterComparisonResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterComparisonResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByParameterComparisonResponse(
    struct soap *,
    ns1__searchInvestigationByParameterComparisonResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByParameterComparisonResponse
#define soap_write_PointerTons1__searchInvestigationByParameterComparisonResponse(    \
    soap, data)                                                                       \
  (ICat3::                                                                            \
       soap_serialize_PointerTons1__searchInvestigationByParameterComparisonResponse( \
           soap, data),                                                               \
   soap_begin_send(soap) ||                                                           \
       ICat3::                                                                        \
           soap_put_PointerTons1__searchInvestigationByParameterComparisonResponse(   \
               soap, data,                                                            \
               "ns1:searchInvestigationByParameterComparisonResponse",                \
               NULL) ||                                                               \
       soap_end_send(soap),                                                           \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterComparisonResponse **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByParameterComparisonResponse(
    struct soap *, ns1__searchInvestigationByParameterComparisonResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByParameterComparisonResponse
#define soap_read_PointerTons1__searchInvestigationByParameterComparisonResponse(   \
    soap, data)                                                                     \
  (soap_begin_recv(soap) ||                                                         \
       !ICat3::                                                                     \
           soap_get_PointerTons1__searchInvestigationByParameterComparisonResponse( \
               soap, data, NULL, NULL) ||                                           \
       soap_end_recv(soap),                                                         \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterComparison
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterComparison \
  (926)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByParameterComparison(
    struct soap *, ns1__searchInvestigationByParameterComparison *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByParameterComparison(
    struct soap *, const char *, int,
    ns1__searchInvestigationByParameterComparison *const *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterComparison **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByParameterComparison(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterComparison **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByParameterComparison(
    struct soap *, ns1__searchInvestigationByParameterComparison *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByParameterComparison
#define soap_write_PointerTons1__searchInvestigationByParameterComparison(     \
    soap, data)                                                                \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchInvestigationByParameterComparison(  \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchInvestigationByParameterComparison( \
           soap, data, "ns1:searchInvestigationByParameterComparison",         \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterComparison **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByParameterComparison(
    struct soap *, ns1__searchInvestigationByParameterComparison **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByParameterComparison
#define soap_read_PointerTons1__searchInvestigationByParameterComparison(soap, \
                                                                         data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchInvestigationByParameterComparison(    \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterConditionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterConditionResponse \
  (923)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByParameterConditionResponse(
    struct soap *, ns1__searchSampleByParameterConditionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByParameterConditionResponse(
    struct soap *, const char *, int,
    ns1__searchSampleByParameterConditionResponse *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterConditionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByParameterConditionResponse(
    struct soap *, const char *,
    ns1__searchSampleByParameterConditionResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByParameterConditionResponse(
    struct soap *, ns1__searchSampleByParameterConditionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchSampleByParameterConditionResponse
#define soap_write_PointerTons1__searchSampleByParameterConditionResponse(     \
    soap, data)                                                                \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchSampleByParameterConditionResponse(  \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByParameterConditionResponse( \
           soap, data, "ns1:searchSampleByParameterConditionResponse",         \
           NULL) ||                                                            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterConditionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByParameterConditionResponse(
    struct soap *, ns1__searchSampleByParameterConditionResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchSampleByParameterConditionResponse
#define soap_read_PointerTons1__searchSampleByParameterConditionResponse(soap, \
                                                                         data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchSampleByParameterConditionResponse(    \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterCondition
#define SOAP_TYPE_ICat3_PointerTons1__searchSampleByParameterCondition (922)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSampleByParameterCondition(
    struct soap *, ns1__searchSampleByParameterCondition *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSampleByParameterCondition(
    struct soap *, const char *, int,
    ns1__searchSampleByParameterCondition *const *, const char *);
SOAP_FMAC3 ns1__searchSampleByParameterCondition **SOAP_FMAC4
soap_in_PointerTons1__searchSampleByParameterCondition(
    struct soap *, const char *, ns1__searchSampleByParameterCondition **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSampleByParameterCondition(
    struct soap *, ns1__searchSampleByParameterCondition *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchSampleByParameterCondition
#define soap_write_PointerTons1__searchSampleByParameterCondition(soap, data)  \
  (ICat3::soap_serialize_PointerTons1__searchSampleByParameterCondition(soap,  \
                                                                        data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSampleByParameterCondition(         \
           soap, data, "ns1:searchSampleByParameterCondition", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSampleByParameterCondition **SOAP_FMAC4
soap_get_PointerTons1__searchSampleByParameterCondition(
    struct soap *, ns1__searchSampleByParameterCondition **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSampleByParameterCondition
#define soap_read_PointerTons1__searchSampleByParameterCondition(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSampleByParameterCondition(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterConditionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterConditionResponse \
  (919)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByParameterConditionResponse(
    struct soap *, ns1__searchDatasetByParameterConditionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByParameterConditionResponse(
    struct soap *, const char *, int,
    ns1__searchDatasetByParameterConditionResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterConditionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByParameterConditionResponse(
    struct soap *, const char *,
    ns1__searchDatasetByParameterConditionResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByParameterConditionResponse(
    struct soap *, ns1__searchDatasetByParameterConditionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByParameterConditionResponse
#define soap_write_PointerTons1__searchDatasetByParameterConditionResponse(    \
    soap, data)                                                                \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchDatasetByParameterConditionResponse( \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::                                                                 \
           soap_put_PointerTons1__searchDatasetByParameterConditionResponse(   \
               soap, data, "ns1:searchDatasetByParameterConditionResponse",    \
               NULL) ||                                                        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterConditionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByParameterConditionResponse(
    struct soap *, ns1__searchDatasetByParameterConditionResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatasetByParameterConditionResponse
#define soap_read_PointerTons1__searchDatasetByParameterConditionResponse(     \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchDatasetByParameterConditionResponse(   \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterCondition
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetByParameterCondition (918)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetByParameterCondition(
    struct soap *, ns1__searchDatasetByParameterCondition *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatasetByParameterCondition(
    struct soap *, const char *, int,
    ns1__searchDatasetByParameterCondition *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetByParameterCondition **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetByParameterCondition(
    struct soap *, const char *, ns1__searchDatasetByParameterCondition **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatasetByParameterCondition(
    struct soap *, ns1__searchDatasetByParameterCondition *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatasetByParameterCondition
#define soap_write_PointerTons1__searchDatasetByParameterCondition(soap, data) \
  (ICat3::soap_serialize_PointerTons1__searchDatasetByParameterCondition(      \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetByParameterCondition(        \
           soap, data, "ns1:searchDatasetByParameterCondition", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetByParameterCondition **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetByParameterCondition(
    struct soap *, ns1__searchDatasetByParameterCondition **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatasetByParameterCondition
#define soap_read_PointerTons1__searchDatasetByParameterCondition(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetByParameterCondition(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterConditionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterConditionResponse \
  (915)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByParameterConditionResponse(
    struct soap *, ns1__searchDatafileByParameterConditionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByParameterConditionResponse(
    struct soap *, const char *, int,
    ns1__searchDatafileByParameterConditionResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterConditionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByParameterConditionResponse(
    struct soap *, const char *,
    ns1__searchDatafileByParameterConditionResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByParameterConditionResponse(
    struct soap *, ns1__searchDatafileByParameterConditionResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByParameterConditionResponse
#define soap_write_PointerTons1__searchDatafileByParameterConditionResponse(    \
    soap, data)                                                                 \
  (ICat3::                                                                      \
       soap_serialize_PointerTons1__searchDatafileByParameterConditionResponse( \
           soap, data),                                                         \
   soap_begin_send(soap) ||                                                     \
       ICat3::                                                                  \
           soap_put_PointerTons1__searchDatafileByParameterConditionResponse(   \
               soap, data, "ns1:searchDatafileByParameterConditionResponse",    \
               NULL) ||                                                         \
       soap_end_send(soap),                                                     \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterConditionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByParameterConditionResponse(
    struct soap *, ns1__searchDatafileByParameterConditionResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatafileByParameterConditionResponse
#define soap_read_PointerTons1__searchDatafileByParameterConditionResponse(    \
    soap, data)                                                                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::                                                                \
           soap_get_PointerTons1__searchDatafileByParameterConditionResponse(  \
               soap, data, NULL, NULL) ||                                      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterCondition
#define SOAP_TYPE_ICat3_PointerTons1__searchDatafileByParameterCondition (914)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatafileByParameterCondition(
    struct soap *, ns1__searchDatafileByParameterCondition *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchDatafileByParameterCondition(
    struct soap *, const char *, int,
    ns1__searchDatafileByParameterCondition *const *, const char *);
SOAP_FMAC3 ns1__searchDatafileByParameterCondition **SOAP_FMAC4
soap_in_PointerTons1__searchDatafileByParameterCondition(
    struct soap *, const char *, ns1__searchDatafileByParameterCondition **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchDatafileByParameterCondition(
    struct soap *, ns1__searchDatafileByParameterCondition *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchDatafileByParameterCondition
#define soap_write_PointerTons1__searchDatafileByParameterCondition(soap,      \
                                                                    data)      \
  (ICat3::soap_serialize_PointerTons1__searchDatafileByParameterCondition(     \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatafileByParameterCondition(       \
           soap, data, "ns1:searchDatafileByParameterCondition", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatafileByParameterCondition **SOAP_FMAC4
soap_get_PointerTons1__searchDatafileByParameterCondition(
    struct soap *, ns1__searchDatafileByParameterCondition **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatafileByParameterCondition
#define soap_read_PointerTons1__searchDatafileByParameterCondition(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatafileByParameterCondition(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterConditionResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterConditionResponse \
  (911)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByParameterConditionResponse(
    struct soap *,
    ns1__searchInvestigationByParameterConditionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByParameterConditionResponse(
    struct soap *, const char *, int,
    ns1__searchInvestigationByParameterConditionResponse *const *,
    const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterConditionResponse **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByParameterConditionResponse(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterConditionResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByParameterConditionResponse(
    struct soap *,
    ns1__searchInvestigationByParameterConditionResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByParameterConditionResponse
#define soap_write_PointerTons1__searchInvestigationByParameterConditionResponse(    \
    soap, data)                                                                      \
  (ICat3::                                                                           \
       soap_serialize_PointerTons1__searchInvestigationByParameterConditionResponse( \
           soap, data),                                                              \
   soap_begin_send(soap) ||                                                          \
       ICat3::                                                                       \
           soap_put_PointerTons1__searchInvestigationByParameterConditionResponse(   \
               soap, data,                                                           \
               "ns1:searchInvestigationByParameterConditionResponse", NULL) ||       \
       soap_end_send(soap),                                                          \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterConditionResponse **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByParameterConditionResponse(
    struct soap *, ns1__searchInvestigationByParameterConditionResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByParameterConditionResponse
#define soap_read_PointerTons1__searchInvestigationByParameterConditionResponse(   \
    soap, data)                                                                    \
  (soap_begin_recv(soap) ||                                                        \
       !ICat3::                                                                    \
           soap_get_PointerTons1__searchInvestigationByParameterConditionResponse( \
               soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                        \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterCondition
#define SOAP_TYPE_ICat3_PointerTons1__searchInvestigationByParameterCondition  \
  (910)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchInvestigationByParameterCondition(
    struct soap *, ns1__searchInvestigationByParameterCondition *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchInvestigationByParameterCondition(
    struct soap *, const char *, int,
    ns1__searchInvestigationByParameterCondition *const *, const char *);
SOAP_FMAC3 ns1__searchInvestigationByParameterCondition **SOAP_FMAC4
soap_in_PointerTons1__searchInvestigationByParameterCondition(
    struct soap *, const char *,
    ns1__searchInvestigationByParameterCondition **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchInvestigationByParameterCondition(
    struct soap *, ns1__searchInvestigationByParameterCondition *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchInvestigationByParameterCondition
#define soap_write_PointerTons1__searchInvestigationByParameterCondition(soap, \
                                                                         data) \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__searchInvestigationByParameterCondition(   \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchInvestigationByParameterCondition(  \
           soap, data, "ns1:searchInvestigationByParameterCondition", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchInvestigationByParameterCondition **SOAP_FMAC4
soap_get_PointerTons1__searchInvestigationByParameterCondition(
    struct soap *, ns1__searchInvestigationByParameterCondition **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__searchInvestigationByParameterCondition
#define soap_read_PointerTons1__searchInvestigationByParameterCondition(soap,  \
                                                                        data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchInvestigationByParameterCondition( \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getFacilityUserByFederalIdResponse
#define SOAP_TYPE_ICat3_PointerTons1__getFacilityUserByFederalIdResponse (907)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getFacilityUserByFederalIdResponse(
    struct soap *, ns1__getFacilityUserByFederalIdResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getFacilityUserByFederalIdResponse(
    struct soap *, const char *, int,
    ns1__getFacilityUserByFederalIdResponse *const *, const char *);
SOAP_FMAC3 ns1__getFacilityUserByFederalIdResponse **SOAP_FMAC4
soap_in_PointerTons1__getFacilityUserByFederalIdResponse(
    struct soap *, const char *, ns1__getFacilityUserByFederalIdResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getFacilityUserByFederalIdResponse(
    struct soap *, ns1__getFacilityUserByFederalIdResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__getFacilityUserByFederalIdResponse
#define soap_write_PointerTons1__getFacilityUserByFederalIdResponse(soap,      \
                                                                    data)      \
  (ICat3::soap_serialize_PointerTons1__getFacilityUserByFederalIdResponse(     \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getFacilityUserByFederalIdResponse(       \
           soap, data, "ns1:getFacilityUserByFederalIdResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityUserByFederalIdResponse **SOAP_FMAC4
soap_get_PointerTons1__getFacilityUserByFederalIdResponse(
    struct soap *, ns1__getFacilityUserByFederalIdResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getFacilityUserByFederalIdResponse
#define soap_read_PointerTons1__getFacilityUserByFederalIdResponse(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getFacilityUserByFederalIdResponse(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getFacilityUserByFederalId
#define SOAP_TYPE_ICat3_PointerTons1__getFacilityUserByFederalId (906)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getFacilityUserByFederalId(
    struct soap *, ns1__getFacilityUserByFederalId *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getFacilityUserByFederalId(
    struct soap *, const char *, int, ns1__getFacilityUserByFederalId *const *,
    const char *);
SOAP_FMAC3 ns1__getFacilityUserByFederalId **SOAP_FMAC4
soap_in_PointerTons1__getFacilityUserByFederalId(
    struct soap *, const char *, ns1__getFacilityUserByFederalId **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getFacilityUserByFederalId(
    struct soap *, ns1__getFacilityUserByFederalId *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getFacilityUserByFederalId
#define soap_write_PointerTons1__getFacilityUserByFederalId(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__getFacilityUserByFederalId(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getFacilityUserByFederalId(               \
           soap, data, "ns1:getFacilityUserByFederalId", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityUserByFederalId **SOAP_FMAC4
soap_get_PointerTons1__getFacilityUserByFederalId(
    struct soap *, ns1__getFacilityUserByFederalId **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getFacilityUserByFederalId
#define soap_read_PointerTons1__getFacilityUserByFederalId(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getFacilityUserByFederalId(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getFacilityUserByFacilityUserIdResponse
#define SOAP_TYPE_ICat3_PointerTons1__getFacilityUserByFacilityUserIdResponse  \
  (903)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getFacilityUserByFacilityUserIdResponse(
    struct soap *, ns1__getFacilityUserByFacilityUserIdResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getFacilityUserByFacilityUserIdResponse(
    struct soap *, const char *, int,
    ns1__getFacilityUserByFacilityUserIdResponse *const *, const char *);
SOAP_FMAC3 ns1__getFacilityUserByFacilityUserIdResponse **SOAP_FMAC4
soap_in_PointerTons1__getFacilityUserByFacilityUserIdResponse(
    struct soap *, const char *,
    ns1__getFacilityUserByFacilityUserIdResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getFacilityUserByFacilityUserIdResponse(
    struct soap *, ns1__getFacilityUserByFacilityUserIdResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__getFacilityUserByFacilityUserIdResponse
#define soap_write_PointerTons1__getFacilityUserByFacilityUserIdResponse(soap, \
                                                                         data) \
  (ICat3::                                                                     \
       soap_serialize_PointerTons1__getFacilityUserByFacilityUserIdResponse(   \
           soap, data),                                                        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getFacilityUserByFacilityUserIdResponse(  \
           soap, data, "ns1:getFacilityUserByFacilityUserIdResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityUserByFacilityUserIdResponse **SOAP_FMAC4
soap_get_PointerTons1__getFacilityUserByFacilityUserIdResponse(
    struct soap *, ns1__getFacilityUserByFacilityUserIdResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__getFacilityUserByFacilityUserIdResponse
#define soap_read_PointerTons1__getFacilityUserByFacilityUserIdResponse(soap,  \
                                                                        data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getFacilityUserByFacilityUserIdResponse( \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getFacilityUserByFacilityUserId
#define SOAP_TYPE_ICat3_PointerTons1__getFacilityUserByFacilityUserId (902)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getFacilityUserByFacilityUserId(
    struct soap *, ns1__getFacilityUserByFacilityUserId *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getFacilityUserByFacilityUserId(
    struct soap *, const char *, int,
    ns1__getFacilityUserByFacilityUserId *const *, const char *);
SOAP_FMAC3 ns1__getFacilityUserByFacilityUserId **SOAP_FMAC4
soap_in_PointerTons1__getFacilityUserByFacilityUserId(
    struct soap *, const char *, ns1__getFacilityUserByFacilityUserId **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getFacilityUserByFacilityUserId(
    struct soap *, ns1__getFacilityUserByFacilityUserId *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getFacilityUserByFacilityUserId
#define soap_write_PointerTons1__getFacilityUserByFacilityUserId(soap, data)   \
  (ICat3::soap_serialize_PointerTons1__getFacilityUserByFacilityUserId(soap,   \
                                                                       data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getFacilityUserByFacilityUserId(          \
           soap, data, "ns1:getFacilityUserByFacilityUserId", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityUserByFacilityUserId **SOAP_FMAC4
soap_get_PointerTons1__getFacilityUserByFacilityUserId(
    struct soap *, ns1__getFacilityUserByFacilityUserId **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getFacilityUserByFacilityUserId
#define soap_read_PointerTons1__getFacilityUserByFacilityUserId(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getFacilityUserByFacilityUserId(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getICATAPIVersionResponse
#define SOAP_TYPE_ICat3_PointerTons1__getICATAPIVersionResponse (899)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getICATAPIVersionResponse(
    struct soap *, ns1__getICATAPIVersionResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getICATAPIVersionResponse(
    struct soap *, const char *, int, ns1__getICATAPIVersionResponse *const *,
    const char *);
SOAP_FMAC3 ns1__getICATAPIVersionResponse **SOAP_FMAC4
soap_in_PointerTons1__getICATAPIVersionResponse(
    struct soap *, const char *, ns1__getICATAPIVersionResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getICATAPIVersionResponse(
    struct soap *, ns1__getICATAPIVersionResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getICATAPIVersionResponse
#define soap_write_PointerTons1__getICATAPIVersionResponse(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__getICATAPIVersionResponse(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getICATAPIVersionResponse(                \
           soap, data, "ns1:getICATAPIVersionResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getICATAPIVersionResponse **SOAP_FMAC4
soap_get_PointerTons1__getICATAPIVersionResponse(
    struct soap *, ns1__getICATAPIVersionResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getICATAPIVersionResponse
#define soap_read_PointerTons1__getICATAPIVersionResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getICATAPIVersionResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getICATAPIVersion
#define SOAP_TYPE_ICat3_PointerTons1__getICATAPIVersion (898)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getICATAPIVersion(struct soap *,
                                               ns1__getICATAPIVersion *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getICATAPIVersion(struct soap *, const char *, int,
                                         ns1__getICATAPIVersion *const *,
                                         const char *);
SOAP_FMAC3 ns1__getICATAPIVersion **SOAP_FMAC4
soap_in_PointerTons1__getICATAPIVersion(struct soap *, const char *,
                                        ns1__getICATAPIVersion **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getICATAPIVersion(struct soap *,
                                         ns1__getICATAPIVersion *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__getICATAPIVersion
#define soap_write_PointerTons1__getICATAPIVersion(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__getICATAPIVersion(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getICATAPIVersion(   \
                                soap, data, "ns1:getICATAPIVersion", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getICATAPIVersion **SOAP_FMAC4
soap_get_PointerTons1__getICATAPIVersion(struct soap *,
                                         ns1__getICATAPIVersion **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__getICATAPIVersion
#define soap_read_PointerTons1__getICATAPIVersion(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getICATAPIVersion(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__checkDatasetDownloadAccessResponse
#define SOAP_TYPE_ICat3_PointerTons1__checkDatasetDownloadAccessResponse (895)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__checkDatasetDownloadAccessResponse(
    struct soap *, ns1__checkDatasetDownloadAccessResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__checkDatasetDownloadAccessResponse(
    struct soap *, const char *, int,
    ns1__checkDatasetDownloadAccessResponse *const *, const char *);
SOAP_FMAC3 ns1__checkDatasetDownloadAccessResponse **SOAP_FMAC4
soap_in_PointerTons1__checkDatasetDownloadAccessResponse(
    struct soap *, const char *, ns1__checkDatasetDownloadAccessResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__checkDatasetDownloadAccessResponse(
    struct soap *, ns1__checkDatasetDownloadAccessResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__checkDatasetDownloadAccessResponse
#define soap_write_PointerTons1__checkDatasetDownloadAccessResponse(soap,      \
                                                                    data)      \
  (ICat3::soap_serialize_PointerTons1__checkDatasetDownloadAccessResponse(     \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__checkDatasetDownloadAccessResponse(       \
           soap, data, "ns1:checkDatasetDownloadAccessResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__checkDatasetDownloadAccessResponse **SOAP_FMAC4
soap_get_PointerTons1__checkDatasetDownloadAccessResponse(
    struct soap *, ns1__checkDatasetDownloadAccessResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__checkDatasetDownloadAccessResponse
#define soap_read_PointerTons1__checkDatasetDownloadAccessResponse(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__checkDatasetDownloadAccessResponse(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__checkDatasetDownloadAccess
#define SOAP_TYPE_ICat3_PointerTons1__checkDatasetDownloadAccess (894)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__checkDatasetDownloadAccess(
    struct soap *, ns1__checkDatasetDownloadAccess *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__checkDatasetDownloadAccess(
    struct soap *, const char *, int, ns1__checkDatasetDownloadAccess *const *,
    const char *);
SOAP_FMAC3 ns1__checkDatasetDownloadAccess **SOAP_FMAC4
soap_in_PointerTons1__checkDatasetDownloadAccess(
    struct soap *, const char *, ns1__checkDatasetDownloadAccess **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__checkDatasetDownloadAccess(
    struct soap *, ns1__checkDatasetDownloadAccess *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__checkDatasetDownloadAccess
#define soap_write_PointerTons1__checkDatasetDownloadAccess(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__checkDatasetDownloadAccess(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__checkDatasetDownloadAccess(               \
           soap, data, "ns1:checkDatasetDownloadAccess", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__checkDatasetDownloadAccess **SOAP_FMAC4
soap_get_PointerTons1__checkDatasetDownloadAccess(
    struct soap *, ns1__checkDatasetDownloadAccess **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__checkDatasetDownloadAccess
#define soap_read_PointerTons1__checkDatasetDownloadAccess(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__checkDatasetDownloadAccess(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__checkDatafileDownloadAccessResponse
#define SOAP_TYPE_ICat3_PointerTons1__checkDatafileDownloadAccessResponse (891)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__checkDatafileDownloadAccessResponse(
    struct soap *, ns1__checkDatafileDownloadAccessResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__checkDatafileDownloadAccessResponse(
    struct soap *, const char *, int,
    ns1__checkDatafileDownloadAccessResponse *const *, const char *);
SOAP_FMAC3 ns1__checkDatafileDownloadAccessResponse **SOAP_FMAC4
soap_in_PointerTons1__checkDatafileDownloadAccessResponse(
    struct soap *, const char *, ns1__checkDatafileDownloadAccessResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__checkDatafileDownloadAccessResponse(
    struct soap *, ns1__checkDatafileDownloadAccessResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__checkDatafileDownloadAccessResponse
#define soap_write_PointerTons1__checkDatafileDownloadAccessResponse(soap,     \
                                                                     data)     \
  (ICat3::soap_serialize_PointerTons1__checkDatafileDownloadAccessResponse(    \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__checkDatafileDownloadAccessResponse(      \
           soap, data, "ns1:checkDatafileDownloadAccessResponse", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__checkDatafileDownloadAccessResponse **SOAP_FMAC4
soap_get_PointerTons1__checkDatafileDownloadAccessResponse(
    struct soap *, ns1__checkDatafileDownloadAccessResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__checkDatafileDownloadAccessResponse
#define soap_read_PointerTons1__checkDatafileDownloadAccessResponse(soap,      \
                                                                    data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__checkDatafileDownloadAccessResponse(     \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__checkDatafileDownloadAccess
#define SOAP_TYPE_ICat3_PointerTons1__checkDatafileDownloadAccess (890)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__checkDatafileDownloadAccess(
    struct soap *, ns1__checkDatafileDownloadAccess *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__checkDatafileDownloadAccess(
    struct soap *, const char *, int, ns1__checkDatafileDownloadAccess *const *,
    const char *);
SOAP_FMAC3 ns1__checkDatafileDownloadAccess **SOAP_FMAC4
soap_in_PointerTons1__checkDatafileDownloadAccess(
    struct soap *, const char *, ns1__checkDatafileDownloadAccess **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__checkDatafileDownloadAccess(
    struct soap *, ns1__checkDatafileDownloadAccess *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__checkDatafileDownloadAccess
#define soap_write_PointerTons1__checkDatafileDownloadAccess(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__checkDatafileDownloadAccess(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__checkDatafileDownloadAccess(              \
           soap, data, "ns1:checkDatafileDownloadAccess", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__checkDatafileDownloadAccess **SOAP_FMAC4
soap_get_PointerTons1__checkDatafileDownloadAccess(
    struct soap *, ns1__checkDatafileDownloadAccess **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__checkDatafileDownloadAccess
#define soap_read_PointerTons1__checkDatafileDownloadAccess(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__checkDatafileDownloadAccess(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__downloadDatafilesResponse
#define SOAP_TYPE_ICat3_PointerTons1__downloadDatafilesResponse (887)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__downloadDatafilesResponse(
    struct soap *, ns1__downloadDatafilesResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__downloadDatafilesResponse(
    struct soap *, const char *, int, ns1__downloadDatafilesResponse *const *,
    const char *);
SOAP_FMAC3 ns1__downloadDatafilesResponse **SOAP_FMAC4
soap_in_PointerTons1__downloadDatafilesResponse(
    struct soap *, const char *, ns1__downloadDatafilesResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__downloadDatafilesResponse(
    struct soap *, ns1__downloadDatafilesResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__downloadDatafilesResponse
#define soap_write_PointerTons1__downloadDatafilesResponse(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__downloadDatafilesResponse(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__downloadDatafilesResponse(                \
           soap, data, "ns1:downloadDatafilesResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDatafilesResponse **SOAP_FMAC4
soap_get_PointerTons1__downloadDatafilesResponse(
    struct soap *, ns1__downloadDatafilesResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__downloadDatafilesResponse
#define soap_read_PointerTons1__downloadDatafilesResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__downloadDatafilesResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__downloadDatafiles
#define SOAP_TYPE_ICat3_PointerTons1__downloadDatafiles (886)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__downloadDatafiles(struct soap *,
                                               ns1__downloadDatafiles *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__downloadDatafiles(struct soap *, const char *, int,
                                         ns1__downloadDatafiles *const *,
                                         const char *);
SOAP_FMAC3 ns1__downloadDatafiles **SOAP_FMAC4
soap_in_PointerTons1__downloadDatafiles(struct soap *, const char *,
                                        ns1__downloadDatafiles **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__downloadDatafiles(struct soap *,
                                         ns1__downloadDatafiles *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__downloadDatafiles
#define soap_write_PointerTons1__downloadDatafiles(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__downloadDatafiles(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__downloadDatafiles(   \
                                soap, data, "ns1:downloadDatafiles", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDatafiles **SOAP_FMAC4
soap_get_PointerTons1__downloadDatafiles(struct soap *,
                                         ns1__downloadDatafiles **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__downloadDatafiles
#define soap_read_PointerTons1__downloadDatafiles(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__downloadDatafiles(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__downloadDatasetResponse
#define SOAP_TYPE_ICat3_PointerTons1__downloadDatasetResponse (883)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__downloadDatasetResponse(
    struct soap *, ns1__downloadDatasetResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__downloadDatasetResponse(
    struct soap *, const char *, int, ns1__downloadDatasetResponse *const *,
    const char *);
SOAP_FMAC3 ns1__downloadDatasetResponse **SOAP_FMAC4
soap_in_PointerTons1__downloadDatasetResponse(struct soap *, const char *,
                                              ns1__downloadDatasetResponse **,
                                              const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__downloadDatasetResponse(
    struct soap *, ns1__downloadDatasetResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__downloadDatasetResponse
#define soap_write_PointerTons1__downloadDatasetResponse(soap, data)           \
  (ICat3::soap_serialize_PointerTons1__downloadDatasetResponse(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__downloadDatasetResponse(                  \
           soap, data, "ns1:downloadDatasetResponse", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDatasetResponse **SOAP_FMAC4
soap_get_PointerTons1__downloadDatasetResponse(struct soap *,
                                               ns1__downloadDatasetResponse **,
                                               const char *, const char *);

#ifndef soap_read_PointerTons1__downloadDatasetResponse
#define soap_read_PointerTons1__downloadDatasetResponse(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__downloadDatasetResponse(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__downloadDataset
#define SOAP_TYPE_ICat3_PointerTons1__downloadDataset (882)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__downloadDataset(struct soap *,
                                             ns1__downloadDataset *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__downloadDataset(struct soap *, const char *, int,
                                       ns1__downloadDataset *const *,
                                       const char *);
SOAP_FMAC3 ns1__downloadDataset **SOAP_FMAC4
soap_in_PointerTons1__downloadDataset(struct soap *, const char *,
                                      ns1__downloadDataset **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__downloadDataset(struct soap *,
                                       ns1__downloadDataset *const *,
                                       const char *, const char *);

#ifndef soap_write_PointerTons1__downloadDataset
#define soap_write_PointerTons1__downloadDataset(soap, data)                   \
  (ICat3::soap_serialize_PointerTons1__downloadDataset(soap, data),            \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__downloadDataset(     \
                                soap, data, "ns1:downloadDataset", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDataset **SOAP_FMAC4
soap_get_PointerTons1__downloadDataset(struct soap *, ns1__downloadDataset **,
                                       const char *, const char *);

#ifndef soap_read_PointerTons1__downloadDataset
#define soap_read_PointerTons1__downloadDataset(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__downloadDataset(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__downloadDatafileResponse
#define SOAP_TYPE_ICat3_PointerTons1__downloadDatafileResponse (879)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__downloadDatafileResponse(
    struct soap *, ns1__downloadDatafileResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__downloadDatafileResponse(
    struct soap *, const char *, int, ns1__downloadDatafileResponse *const *,
    const char *);
SOAP_FMAC3 ns1__downloadDatafileResponse **SOAP_FMAC4
soap_in_PointerTons1__downloadDatafileResponse(struct soap *, const char *,
                                               ns1__downloadDatafileResponse **,
                                               const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__downloadDatafileResponse(
    struct soap *, ns1__downloadDatafileResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__downloadDatafileResponse
#define soap_write_PointerTons1__downloadDatafileResponse(soap, data)          \
  (ICat3::soap_serialize_PointerTons1__downloadDatafileResponse(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__downloadDatafileResponse(                 \
           soap, data, "ns1:downloadDatafileResponse", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDatafileResponse **SOAP_FMAC4
soap_get_PointerTons1__downloadDatafileResponse(
    struct soap *, ns1__downloadDatafileResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__downloadDatafileResponse
#define soap_read_PointerTons1__downloadDatafileResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__downloadDatafileResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__downloadDatafile
#define SOAP_TYPE_ICat3_PointerTons1__downloadDatafile (878)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__downloadDatafile(struct soap *,
                                              ns1__downloadDatafile *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__downloadDatafile(struct soap *, const char *, int,
                                        ns1__downloadDatafile *const *,
                                        const char *);
SOAP_FMAC3 ns1__downloadDatafile **SOAP_FMAC4
soap_in_PointerTons1__downloadDatafile(struct soap *, const char *,
                                       ns1__downloadDatafile **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__downloadDatafile(struct soap *,
                                        ns1__downloadDatafile *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons1__downloadDatafile
#define soap_write_PointerTons1__downloadDatafile(soap, data)                  \
  (ICat3::soap_serialize_PointerTons1__downloadDatafile(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__downloadDatafile(    \
                                soap, data, "ns1:downloadDatafile", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadDatafile **SOAP_FMAC4
soap_get_PointerTons1__downloadDatafile(struct soap *, ns1__downloadDatafile **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons1__downloadDatafile
#define soap_read_PointerTons1__downloadDatafile(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__downloadDatafile(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__ingestMetadataResponse
#define SOAP_TYPE_ICat3_PointerTons1__ingestMetadataResponse (875)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__ingestMetadataResponse(
    struct soap *, ns1__ingestMetadataResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__ingestMetadataResponse(
    struct soap *, const char *, int, ns1__ingestMetadataResponse *const *,
    const char *);
SOAP_FMAC3 ns1__ingestMetadataResponse **SOAP_FMAC4
soap_in_PointerTons1__ingestMetadataResponse(struct soap *, const char *,
                                             ns1__ingestMetadataResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__ingestMetadataResponse(
    struct soap *, ns1__ingestMetadataResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__ingestMetadataResponse
#define soap_write_PointerTons1__ingestMetadataResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__ingestMetadataResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__ingestMetadataResponse(                   \
           soap, data, "ns1:ingestMetadataResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__ingestMetadataResponse **SOAP_FMAC4
soap_get_PointerTons1__ingestMetadataResponse(struct soap *,
                                              ns1__ingestMetadataResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__ingestMetadataResponse
#define soap_read_PointerTons1__ingestMetadataResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__ingestMetadataResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__ingestMetadata
#define SOAP_TYPE_ICat3_PointerTons1__ingestMetadata (874)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__ingestMetadata(struct soap *,
                                            ns1__ingestMetadata *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__ingestMetadata(struct soap *, const char *, int,
                                      ns1__ingestMetadata *const *,
                                      const char *);
SOAP_FMAC3 ns1__ingestMetadata **SOAP_FMAC4
soap_in_PointerTons1__ingestMetadata(struct soap *, const char *,
                                     ns1__ingestMetadata **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__ingestMetadata(struct soap *,
                                      ns1__ingestMetadata *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__ingestMetadata
#define soap_write_PointerTons1__ingestMetadata(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__ingestMetadata(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__ingestMetadata(      \
                                soap, data, "ns1:ingestMetadata", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__ingestMetadata **SOAP_FMAC4
soap_get_PointerTons1__ingestMetadata(struct soap *, ns1__ingestMetadata **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__ingestMetadata
#define soap_read_PointerTons1__ingestMetadata(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__ingestMetadata(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__updateAuthorisationResponse
#define SOAP_TYPE_ICat3_PointerTons1__updateAuthorisationResponse (870)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__updateAuthorisationResponse(
    struct soap *, ns1__updateAuthorisationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__updateAuthorisationResponse(
    struct soap *, const char *, int, ns1__updateAuthorisationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__updateAuthorisationResponse **SOAP_FMAC4
soap_in_PointerTons1__updateAuthorisationResponse(
    struct soap *, const char *, ns1__updateAuthorisationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__updateAuthorisationResponse(
    struct soap *, ns1__updateAuthorisationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__updateAuthorisationResponse
#define soap_write_PointerTons1__updateAuthorisationResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__updateAuthorisationResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__updateAuthorisationResponse(              \
           soap, data, "ns1:updateAuthorisationResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__updateAuthorisationResponse **SOAP_FMAC4
soap_get_PointerTons1__updateAuthorisationResponse(
    struct soap *, ns1__updateAuthorisationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__updateAuthorisationResponse
#define soap_read_PointerTons1__updateAuthorisationResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__updateAuthorisationResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__updateAuthorisation
#define SOAP_TYPE_ICat3_PointerTons1__updateAuthorisation (869)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__updateAuthorisation(
    struct soap *, ns1__updateAuthorisation *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__updateAuthorisation(struct soap *, const char *, int,
                                           ns1__updateAuthorisation *const *,
                                           const char *);
SOAP_FMAC3 ns1__updateAuthorisation **SOAP_FMAC4
soap_in_PointerTons1__updateAuthorisation(struct soap *, const char *,
                                          ns1__updateAuthorisation **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__updateAuthorisation(struct soap *,
                                           ns1__updateAuthorisation *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__updateAuthorisation
#define soap_write_PointerTons1__updateAuthorisation(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__updateAuthorisation(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__updateAuthorisation(                      \
           soap, data, "ns1:updateAuthorisation", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__updateAuthorisation **SOAP_FMAC4
soap_get_PointerTons1__updateAuthorisation(struct soap *,
                                           ns1__updateAuthorisation **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__updateAuthorisation
#define soap_read_PointerTons1__updateAuthorisation(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__updateAuthorisation(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeAuthorisationResponse
#define SOAP_TYPE_ICat3_PointerTons1__removeAuthorisationResponse (865)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removeAuthorisationResponse(
    struct soap *, ns1__removeAuthorisationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removeAuthorisationResponse(
    struct soap *, const char *, int, ns1__removeAuthorisationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__removeAuthorisationResponse **SOAP_FMAC4
soap_in_PointerTons1__removeAuthorisationResponse(
    struct soap *, const char *, ns1__removeAuthorisationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removeAuthorisationResponse(
    struct soap *, ns1__removeAuthorisationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeAuthorisationResponse
#define soap_write_PointerTons1__removeAuthorisationResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__removeAuthorisationResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeAuthorisationResponse(              \
           soap, data, "ns1:removeAuthorisationResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeAuthorisationResponse **SOAP_FMAC4
soap_get_PointerTons1__removeAuthorisationResponse(
    struct soap *, ns1__removeAuthorisationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__removeAuthorisationResponse
#define soap_read_PointerTons1__removeAuthorisationResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeAuthorisationResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeAuthorisation
#define SOAP_TYPE_ICat3_PointerTons1__removeAuthorisation (864)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__removeAuthorisation(
    struct soap *, ns1__removeAuthorisation *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__removeAuthorisation(struct soap *, const char *, int,
                                           ns1__removeAuthorisation *const *,
                                           const char *);
SOAP_FMAC3 ns1__removeAuthorisation **SOAP_FMAC4
soap_in_PointerTons1__removeAuthorisation(struct soap *, const char *,
                                          ns1__removeAuthorisation **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__removeAuthorisation(struct soap *,
                                           ns1__removeAuthorisation *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__removeAuthorisation
#define soap_write_PointerTons1__removeAuthorisation(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__removeAuthorisation(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeAuthorisation(                      \
           soap, data, "ns1:removeAuthorisation", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeAuthorisation **SOAP_FMAC4
soap_get_PointerTons1__removeAuthorisation(struct soap *,
                                           ns1__removeAuthorisation **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__removeAuthorisation
#define soap_read_PointerTons1__removeAuthorisation(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeAuthorisation(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteAuthorisationResponse
#define SOAP_TYPE_ICat3_PointerTons1__deleteAuthorisationResponse (860)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deleteAuthorisationResponse(
    struct soap *, ns1__deleteAuthorisationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deleteAuthorisationResponse(
    struct soap *, const char *, int, ns1__deleteAuthorisationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__deleteAuthorisationResponse **SOAP_FMAC4
soap_in_PointerTons1__deleteAuthorisationResponse(
    struct soap *, const char *, ns1__deleteAuthorisationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deleteAuthorisationResponse(
    struct soap *, ns1__deleteAuthorisationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteAuthorisationResponse
#define soap_write_PointerTons1__deleteAuthorisationResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__deleteAuthorisationResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteAuthorisationResponse(              \
           soap, data, "ns1:deleteAuthorisationResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteAuthorisationResponse **SOAP_FMAC4
soap_get_PointerTons1__deleteAuthorisationResponse(
    struct soap *, ns1__deleteAuthorisationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__deleteAuthorisationResponse
#define soap_read_PointerTons1__deleteAuthorisationResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteAuthorisationResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteAuthorisation
#define SOAP_TYPE_ICat3_PointerTons1__deleteAuthorisation (859)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__deleteAuthorisation(
    struct soap *, ns1__deleteAuthorisation *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__deleteAuthorisation(struct soap *, const char *, int,
                                           ns1__deleteAuthorisation *const *,
                                           const char *);
SOAP_FMAC3 ns1__deleteAuthorisation **SOAP_FMAC4
soap_in_PointerTons1__deleteAuthorisation(struct soap *, const char *,
                                          ns1__deleteAuthorisation **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__deleteAuthorisation(struct soap *,
                                           ns1__deleteAuthorisation *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__deleteAuthorisation
#define soap_write_PointerTons1__deleteAuthorisation(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__deleteAuthorisation(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteAuthorisation(                      \
           soap, data, "ns1:deleteAuthorisation", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteAuthorisation **SOAP_FMAC4
soap_get_PointerTons1__deleteAuthorisation(struct soap *,
                                           ns1__deleteAuthorisation **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__deleteAuthorisation
#define soap_read_PointerTons1__deleteAuthorisation(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteAuthorisation(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addAuthorisationResponse
#define SOAP_TYPE_ICat3_PointerTons1__addAuthorisationResponse (856)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addAuthorisationResponse(
    struct soap *, ns1__addAuthorisationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__addAuthorisationResponse(
    struct soap *, const char *, int, ns1__addAuthorisationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__addAuthorisationResponse **SOAP_FMAC4
soap_in_PointerTons1__addAuthorisationResponse(struct soap *, const char *,
                                               ns1__addAuthorisationResponse **,
                                               const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__addAuthorisationResponse(
    struct soap *, ns1__addAuthorisationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__addAuthorisationResponse
#define soap_write_PointerTons1__addAuthorisationResponse(soap, data)          \
  (ICat3::soap_serialize_PointerTons1__addAuthorisationResponse(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addAuthorisationResponse(                 \
           soap, data, "ns1:addAuthorisationResponse", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addAuthorisationResponse **SOAP_FMAC4
soap_get_PointerTons1__addAuthorisationResponse(
    struct soap *, ns1__addAuthorisationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__addAuthorisationResponse
#define soap_read_PointerTons1__addAuthorisationResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addAuthorisationResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addAuthorisation
#define SOAP_TYPE_ICat3_PointerTons1__addAuthorisation (855)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addAuthorisation(struct soap *,
                                              ns1__addAuthorisation *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__addAuthorisation(struct soap *, const char *, int,
                                        ns1__addAuthorisation *const *,
                                        const char *);
SOAP_FMAC3 ns1__addAuthorisation **SOAP_FMAC4
soap_in_PointerTons1__addAuthorisation(struct soap *, const char *,
                                       ns1__addAuthorisation **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__addAuthorisation(struct soap *,
                                        ns1__addAuthorisation *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons1__addAuthorisation
#define soap_write_PointerTons1__addAuthorisation(soap, data)                  \
  (ICat3::soap_serialize_PointerTons1__addAuthorisation(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__addAuthorisation(    \
                                soap, data, "ns1:addAuthorisation", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addAuthorisation **SOAP_FMAC4
soap_get_PointerTons1__addAuthorisation(struct soap *, ns1__addAuthorisation **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons1__addAuthorisation
#define soap_read_PointerTons1__addAuthorisation(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addAuthorisation(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getAuthorisationsResponse
#define SOAP_TYPE_ICat3_PointerTons1__getAuthorisationsResponse (852)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getAuthorisationsResponse(
    struct soap *, ns1__getAuthorisationsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getAuthorisationsResponse(
    struct soap *, const char *, int, ns1__getAuthorisationsResponse *const *,
    const char *);
SOAP_FMAC3 ns1__getAuthorisationsResponse **SOAP_FMAC4
soap_in_PointerTons1__getAuthorisationsResponse(
    struct soap *, const char *, ns1__getAuthorisationsResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getAuthorisationsResponse(
    struct soap *, ns1__getAuthorisationsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getAuthorisationsResponse
#define soap_write_PointerTons1__getAuthorisationsResponse(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__getAuthorisationsResponse(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getAuthorisationsResponse(                \
           soap, data, "ns1:getAuthorisationsResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAuthorisationsResponse **SOAP_FMAC4
soap_get_PointerTons1__getAuthorisationsResponse(
    struct soap *, ns1__getAuthorisationsResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getAuthorisationsResponse
#define soap_read_PointerTons1__getAuthorisationsResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getAuthorisationsResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getAuthorisations
#define SOAP_TYPE_ICat3_PointerTons1__getAuthorisations (851)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getAuthorisations(struct soap *,
                                               ns1__getAuthorisations *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getAuthorisations(struct soap *, const char *, int,
                                         ns1__getAuthorisations *const *,
                                         const char *);
SOAP_FMAC3 ns1__getAuthorisations **SOAP_FMAC4
soap_in_PointerTons1__getAuthorisations(struct soap *, const char *,
                                        ns1__getAuthorisations **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getAuthorisations(struct soap *,
                                         ns1__getAuthorisations *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__getAuthorisations
#define soap_write_PointerTons1__getAuthorisations(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__getAuthorisations(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getAuthorisations(   \
                                soap, data, "ns1:getAuthorisations", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAuthorisations **SOAP_FMAC4
soap_get_PointerTons1__getAuthorisations(struct soap *,
                                         ns1__getAuthorisations **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__getAuthorisations
#define soap_read_PointerTons1__getAuthorisations(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getAuthorisations(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeDataFileParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__removeDataFileParameterResponse (847)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removeDataFileParameterResponse(
    struct soap *, ns1__removeDataFileParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__removeDataFileParameterResponse(
    struct soap *, const char *, int,
    ns1__removeDataFileParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__removeDataFileParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__removeDataFileParameterResponse(
    struct soap *, const char *, ns1__removeDataFileParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__removeDataFileParameterResponse(
    struct soap *, ns1__removeDataFileParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeDataFileParameterResponse
#define soap_write_PointerTons1__removeDataFileParameterResponse(soap, data)   \
  (ICat3::soap_serialize_PointerTons1__removeDataFileParameterResponse(soap,   \
                                                                       data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeDataFileParameterResponse(          \
           soap, data, "ns1:removeDataFileParameterResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataFileParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__removeDataFileParameterResponse(
    struct soap *, ns1__removeDataFileParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__removeDataFileParameterResponse
#define soap_read_PointerTons1__removeDataFileParameterResponse(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeDataFileParameterResponse(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeDataFileParameter
#define SOAP_TYPE_ICat3_PointerTons1__removeDataFileParameter (846)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__removeDataFileParameter(
    struct soap *, ns1__removeDataFileParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removeDataFileParameter(
    struct soap *, const char *, int, ns1__removeDataFileParameter *const *,
    const char *);
SOAP_FMAC3 ns1__removeDataFileParameter **SOAP_FMAC4
soap_in_PointerTons1__removeDataFileParameter(struct soap *, const char *,
                                              ns1__removeDataFileParameter **,
                                              const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removeDataFileParameter(
    struct soap *, ns1__removeDataFileParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeDataFileParameter
#define soap_write_PointerTons1__removeDataFileParameter(soap, data)           \
  (ICat3::soap_serialize_PointerTons1__removeDataFileParameter(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeDataFileParameter(                  \
           soap, data, "ns1:removeDataFileParameter", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataFileParameter **SOAP_FMAC4
soap_get_PointerTons1__removeDataFileParameter(struct soap *,
                                               ns1__removeDataFileParameter **,
                                               const char *, const char *);

#ifndef soap_read_PointerTons1__removeDataFileParameter
#define soap_read_PointerTons1__removeDataFileParameter(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeDataFileParameter(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeDataFileResponse
#define SOAP_TYPE_ICat3_PointerTons1__removeDataFileResponse (842)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__removeDataFileResponse(
    struct soap *, ns1__removeDataFileResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removeDataFileResponse(
    struct soap *, const char *, int, ns1__removeDataFileResponse *const *,
    const char *);
SOAP_FMAC3 ns1__removeDataFileResponse **SOAP_FMAC4
soap_in_PointerTons1__removeDataFileResponse(struct soap *, const char *,
                                             ns1__removeDataFileResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removeDataFileResponse(
    struct soap *, ns1__removeDataFileResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeDataFileResponse
#define soap_write_PointerTons1__removeDataFileResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__removeDataFileResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeDataFileResponse(                   \
           soap, data, "ns1:removeDataFileResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataFileResponse **SOAP_FMAC4
soap_get_PointerTons1__removeDataFileResponse(struct soap *,
                                              ns1__removeDataFileResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__removeDataFileResponse
#define soap_read_PointerTons1__removeDataFileResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeDataFileResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeDataFile
#define SOAP_TYPE_ICat3_PointerTons1__removeDataFile (841)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removeDataFile(struct soap *,
                                            ns1__removeDataFile *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__removeDataFile(struct soap *, const char *, int,
                                      ns1__removeDataFile *const *,
                                      const char *);
SOAP_FMAC3 ns1__removeDataFile **SOAP_FMAC4
soap_in_PointerTons1__removeDataFile(struct soap *, const char *,
                                     ns1__removeDataFile **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__removeDataFile(struct soap *,
                                      ns1__removeDataFile *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__removeDataFile
#define soap_write_PointerTons1__removeDataFile(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__removeDataFile(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__removeDataFile(      \
                                soap, data, "ns1:removeDataFile", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataFile **SOAP_FMAC4
soap_get_PointerTons1__removeDataFile(struct soap *, ns1__removeDataFile **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__removeDataFile
#define soap_read_PointerTons1__removeDataFile(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeDataFile(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteDataFileParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__deleteDataFileParameterResponse (837)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deleteDataFileParameterResponse(
    struct soap *, ns1__deleteDataFileParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__deleteDataFileParameterResponse(
    struct soap *, const char *, int,
    ns1__deleteDataFileParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__deleteDataFileParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__deleteDataFileParameterResponse(
    struct soap *, const char *, ns1__deleteDataFileParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__deleteDataFileParameterResponse(
    struct soap *, ns1__deleteDataFileParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteDataFileParameterResponse
#define soap_write_PointerTons1__deleteDataFileParameterResponse(soap, data)   \
  (ICat3::soap_serialize_PointerTons1__deleteDataFileParameterResponse(soap,   \
                                                                       data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteDataFileParameterResponse(          \
           soap, data, "ns1:deleteDataFileParameterResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataFileParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__deleteDataFileParameterResponse(
    struct soap *, ns1__deleteDataFileParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__deleteDataFileParameterResponse
#define soap_read_PointerTons1__deleteDataFileParameterResponse(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteDataFileParameterResponse(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteDataFileParameter
#define SOAP_TYPE_ICat3_PointerTons1__deleteDataFileParameter (836)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__deleteDataFileParameter(
    struct soap *, ns1__deleteDataFileParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deleteDataFileParameter(
    struct soap *, const char *, int, ns1__deleteDataFileParameter *const *,
    const char *);
SOAP_FMAC3 ns1__deleteDataFileParameter **SOAP_FMAC4
soap_in_PointerTons1__deleteDataFileParameter(struct soap *, const char *,
                                              ns1__deleteDataFileParameter **,
                                              const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deleteDataFileParameter(
    struct soap *, ns1__deleteDataFileParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteDataFileParameter
#define soap_write_PointerTons1__deleteDataFileParameter(soap, data)           \
  (ICat3::soap_serialize_PointerTons1__deleteDataFileParameter(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteDataFileParameter(                  \
           soap, data, "ns1:deleteDataFileParameter", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataFileParameter **SOAP_FMAC4
soap_get_PointerTons1__deleteDataFileParameter(struct soap *,
                                               ns1__deleteDataFileParameter **,
                                               const char *, const char *);

#ifndef soap_read_PointerTons1__deleteDataFileParameter
#define soap_read_PointerTons1__deleteDataFileParameter(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteDataFileParameter(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyDataFileParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__modifyDataFileParameterResponse (832)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__modifyDataFileParameterResponse(
    struct soap *, ns1__modifyDataFileParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__modifyDataFileParameterResponse(
    struct soap *, const char *, int,
    ns1__modifyDataFileParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__modifyDataFileParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__modifyDataFileParameterResponse(
    struct soap *, const char *, ns1__modifyDataFileParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__modifyDataFileParameterResponse(
    struct soap *, ns1__modifyDataFileParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__modifyDataFileParameterResponse
#define soap_write_PointerTons1__modifyDataFileParameterResponse(soap, data)   \
  (ICat3::soap_serialize_PointerTons1__modifyDataFileParameterResponse(soap,   \
                                                                       data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifyDataFileParameterResponse(          \
           soap, data, "ns1:modifyDataFileParameterResponse", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataFileParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__modifyDataFileParameterResponse(
    struct soap *, ns1__modifyDataFileParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__modifyDataFileParameterResponse
#define soap_read_PointerTons1__modifyDataFileParameterResponse(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyDataFileParameterResponse(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyDataFileParameter
#define SOAP_TYPE_ICat3_PointerTons1__modifyDataFileParameter (831)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__modifyDataFileParameter(
    struct soap *, ns1__modifyDataFileParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__modifyDataFileParameter(
    struct soap *, const char *, int, ns1__modifyDataFileParameter *const *,
    const char *);
SOAP_FMAC3 ns1__modifyDataFileParameter **SOAP_FMAC4
soap_in_PointerTons1__modifyDataFileParameter(struct soap *, const char *,
                                              ns1__modifyDataFileParameter **,
                                              const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__modifyDataFileParameter(
    struct soap *, ns1__modifyDataFileParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__modifyDataFileParameter
#define soap_write_PointerTons1__modifyDataFileParameter(soap, data)           \
  (ICat3::soap_serialize_PointerTons1__modifyDataFileParameter(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifyDataFileParameter(                  \
           soap, data, "ns1:modifyDataFileParameter", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataFileParameter **SOAP_FMAC4
soap_get_PointerTons1__modifyDataFileParameter(struct soap *,
                                               ns1__modifyDataFileParameter **,
                                               const char *, const char *);

#ifndef soap_read_PointerTons1__modifyDataFileParameter
#define soap_read_PointerTons1__modifyDataFileParameter(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyDataFileParameter(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addDataFileParametersResponse
#define SOAP_TYPE_ICat3_PointerTons1__addDataFileParametersResponse (828)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addDataFileParametersResponse(
    struct soap *, ns1__addDataFileParametersResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__addDataFileParametersResponse(
    struct soap *, const char *, int,
    ns1__addDataFileParametersResponse *const *, const char *);
SOAP_FMAC3 ns1__addDataFileParametersResponse **SOAP_FMAC4
soap_in_PointerTons1__addDataFileParametersResponse(
    struct soap *, const char *, ns1__addDataFileParametersResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__addDataFileParametersResponse(
    struct soap *, ns1__addDataFileParametersResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__addDataFileParametersResponse
#define soap_write_PointerTons1__addDataFileParametersResponse(soap, data)     \
  (ICat3::soap_serialize_PointerTons1__addDataFileParametersResponse(soap,     \
                                                                     data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addDataFileParametersResponse(            \
           soap, data, "ns1:addDataFileParametersResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataFileParametersResponse **SOAP_FMAC4
soap_get_PointerTons1__addDataFileParametersResponse(
    struct soap *, ns1__addDataFileParametersResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__addDataFileParametersResponse
#define soap_read_PointerTons1__addDataFileParametersResponse(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addDataFileParametersResponse(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addDataFileParameters
#define SOAP_TYPE_ICat3_PointerTons1__addDataFileParameters (827)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__addDataFileParameters(
    struct soap *, ns1__addDataFileParameters *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__addDataFileParameters(
    struct soap *, const char *, int, ns1__addDataFileParameters *const *,
    const char *);
SOAP_FMAC3 ns1__addDataFileParameters **SOAP_FMAC4
soap_in_PointerTons1__addDataFileParameters(struct soap *, const char *,
                                            ns1__addDataFileParameters **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__addDataFileParameters(
    struct soap *, ns1__addDataFileParameters *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__addDataFileParameters
#define soap_write_PointerTons1__addDataFileParameters(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__addDataFileParameters(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addDataFileParameters(                    \
           soap, data, "ns1:addDataFileParameters", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataFileParameters **SOAP_FMAC4
soap_get_PointerTons1__addDataFileParameters(struct soap *,
                                             ns1__addDataFileParameters **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__addDataFileParameters
#define soap_read_PointerTons1__addDataFileParameters(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addDataFileParameters(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addDataFileParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__addDataFileParameterResponse (824)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addDataFileParameterResponse(
    struct soap *, ns1__addDataFileParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__addDataFileParameterResponse(
    struct soap *, const char *, int,
    ns1__addDataFileParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__addDataFileParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__addDataFileParameterResponse(
    struct soap *, const char *, ns1__addDataFileParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__addDataFileParameterResponse(
    struct soap *, ns1__addDataFileParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__addDataFileParameterResponse
#define soap_write_PointerTons1__addDataFileParameterResponse(soap, data)      \
  (ICat3::soap_serialize_PointerTons1__addDataFileParameterResponse(soap,      \
                                                                    data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addDataFileParameterResponse(             \
           soap, data, "ns1:addDataFileParameterResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataFileParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__addDataFileParameterResponse(
    struct soap *, ns1__addDataFileParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__addDataFileParameterResponse
#define soap_read_PointerTons1__addDataFileParameterResponse(soap, data)       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addDataFileParameterResponse(            \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addDataFileParameter
#define SOAP_TYPE_ICat3_PointerTons1__addDataFileParameter (823)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__addDataFileParameter(
    struct soap *, ns1__addDataFileParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__addDataFileParameter(struct soap *, const char *, int,
                                            ns1__addDataFileParameter *const *,
                                            const char *);
SOAP_FMAC3 ns1__addDataFileParameter **SOAP_FMAC4
soap_in_PointerTons1__addDataFileParameter(struct soap *, const char *,
                                           ns1__addDataFileParameter **,
                                           const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__addDataFileParameter(struct soap *,
                                            ns1__addDataFileParameter *const *,
                                            const char *, const char *);

#ifndef soap_write_PointerTons1__addDataFileParameter
#define soap_write_PointerTons1__addDataFileParameter(soap, data)              \
  (ICat3::soap_serialize_PointerTons1__addDataFileParameter(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addDataFileParameter(                     \
           soap, data, "ns1:addDataFileParameter", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataFileParameter **SOAP_FMAC4
soap_get_PointerTons1__addDataFileParameter(struct soap *,
                                            ns1__addDataFileParameter **,
                                            const char *, const char *);

#ifndef soap_read_PointerTons1__addDataFileParameter
#define soap_read_PointerTons1__addDataFileParameter(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addDataFileParameter(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyDataFileResponse
#define SOAP_TYPE_ICat3_PointerTons1__modifyDataFileResponse (819)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__modifyDataFileResponse(
    struct soap *, ns1__modifyDataFileResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__modifyDataFileResponse(
    struct soap *, const char *, int, ns1__modifyDataFileResponse *const *,
    const char *);
SOAP_FMAC3 ns1__modifyDataFileResponse **SOAP_FMAC4
soap_in_PointerTons1__modifyDataFileResponse(struct soap *, const char *,
                                             ns1__modifyDataFileResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__modifyDataFileResponse(
    struct soap *, ns1__modifyDataFileResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__modifyDataFileResponse
#define soap_write_PointerTons1__modifyDataFileResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__modifyDataFileResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifyDataFileResponse(                   \
           soap, data, "ns1:modifyDataFileResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataFileResponse **SOAP_FMAC4
soap_get_PointerTons1__modifyDataFileResponse(struct soap *,
                                              ns1__modifyDataFileResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__modifyDataFileResponse
#define soap_read_PointerTons1__modifyDataFileResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyDataFileResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyDataFile
#define SOAP_TYPE_ICat3_PointerTons1__modifyDataFile (818)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__modifyDataFile(struct soap *,
                                            ns1__modifyDataFile *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__modifyDataFile(struct soap *, const char *, int,
                                      ns1__modifyDataFile *const *,
                                      const char *);
SOAP_FMAC3 ns1__modifyDataFile **SOAP_FMAC4
soap_in_PointerTons1__modifyDataFile(struct soap *, const char *,
                                     ns1__modifyDataFile **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__modifyDataFile(struct soap *,
                                      ns1__modifyDataFile *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__modifyDataFile
#define soap_write_PointerTons1__modifyDataFile(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__modifyDataFile(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__modifyDataFile(      \
                                soap, data, "ns1:modifyDataFile", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataFile **SOAP_FMAC4
soap_get_PointerTons1__modifyDataFile(struct soap *, ns1__modifyDataFile **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__modifyDataFile
#define soap_read_PointerTons1__modifyDataFile(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyDataFile(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteDataFileResponse
#define SOAP_TYPE_ICat3_PointerTons1__deleteDataFileResponse (814)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__deleteDataFileResponse(
    struct soap *, ns1__deleteDataFileResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deleteDataFileResponse(
    struct soap *, const char *, int, ns1__deleteDataFileResponse *const *,
    const char *);
SOAP_FMAC3 ns1__deleteDataFileResponse **SOAP_FMAC4
soap_in_PointerTons1__deleteDataFileResponse(struct soap *, const char *,
                                             ns1__deleteDataFileResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deleteDataFileResponse(
    struct soap *, ns1__deleteDataFileResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteDataFileResponse
#define soap_write_PointerTons1__deleteDataFileResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__deleteDataFileResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteDataFileResponse(                   \
           soap, data, "ns1:deleteDataFileResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataFileResponse **SOAP_FMAC4
soap_get_PointerTons1__deleteDataFileResponse(struct soap *,
                                              ns1__deleteDataFileResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__deleteDataFileResponse
#define soap_read_PointerTons1__deleteDataFileResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteDataFileResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteDataFile
#define SOAP_TYPE_ICat3_PointerTons1__deleteDataFile (813)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deleteDataFile(struct soap *,
                                            ns1__deleteDataFile *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__deleteDataFile(struct soap *, const char *, int,
                                      ns1__deleteDataFile *const *,
                                      const char *);
SOAP_FMAC3 ns1__deleteDataFile **SOAP_FMAC4
soap_in_PointerTons1__deleteDataFile(struct soap *, const char *,
                                     ns1__deleteDataFile **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__deleteDataFile(struct soap *,
                                      ns1__deleteDataFile *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__deleteDataFile
#define soap_write_PointerTons1__deleteDataFile(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__deleteDataFile(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__deleteDataFile(      \
                                soap, data, "ns1:deleteDataFile", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataFile **SOAP_FMAC4
soap_get_PointerTons1__deleteDataFile(struct soap *, ns1__deleteDataFile **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__deleteDataFile
#define soap_read_PointerTons1__deleteDataFile(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteDataFile(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__createDataFilesResponse
#define SOAP_TYPE_ICat3_PointerTons1__createDataFilesResponse (810)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__createDataFilesResponse(
    struct soap *, ns1__createDataFilesResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__createDataFilesResponse(
    struct soap *, const char *, int, ns1__createDataFilesResponse *const *,
    const char *);
SOAP_FMAC3 ns1__createDataFilesResponse **SOAP_FMAC4
soap_in_PointerTons1__createDataFilesResponse(struct soap *, const char *,
                                              ns1__createDataFilesResponse **,
                                              const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__createDataFilesResponse(
    struct soap *, ns1__createDataFilesResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__createDataFilesResponse
#define soap_write_PointerTons1__createDataFilesResponse(soap, data)           \
  (ICat3::soap_serialize_PointerTons1__createDataFilesResponse(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__createDataFilesResponse(                  \
           soap, data, "ns1:createDataFilesResponse", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataFilesResponse **SOAP_FMAC4
soap_get_PointerTons1__createDataFilesResponse(struct soap *,
                                               ns1__createDataFilesResponse **,
                                               const char *, const char *);

#ifndef soap_read_PointerTons1__createDataFilesResponse
#define soap_read_PointerTons1__createDataFilesResponse(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__createDataFilesResponse(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__createDataFiles
#define SOAP_TYPE_ICat3_PointerTons1__createDataFiles (809)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__createDataFiles(struct soap *,
                                             ns1__createDataFiles *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__createDataFiles(struct soap *, const char *, int,
                                       ns1__createDataFiles *const *,
                                       const char *);
SOAP_FMAC3 ns1__createDataFiles **SOAP_FMAC4
soap_in_PointerTons1__createDataFiles(struct soap *, const char *,
                                      ns1__createDataFiles **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__createDataFiles(struct soap *,
                                       ns1__createDataFiles *const *,
                                       const char *, const char *);

#ifndef soap_write_PointerTons1__createDataFiles
#define soap_write_PointerTons1__createDataFiles(soap, data)                   \
  (ICat3::soap_serialize_PointerTons1__createDataFiles(soap, data),            \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__createDataFiles(     \
                                soap, data, "ns1:createDataFiles", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataFiles **SOAP_FMAC4
soap_get_PointerTons1__createDataFiles(struct soap *, ns1__createDataFiles **,
                                       const char *, const char *);

#ifndef soap_read_PointerTons1__createDataFiles
#define soap_read_PointerTons1__createDataFiles(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__createDataFiles(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__createDataFileResponse
#define SOAP_TYPE_ICat3_PointerTons1__createDataFileResponse (806)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__createDataFileResponse(
    struct soap *, ns1__createDataFileResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__createDataFileResponse(
    struct soap *, const char *, int, ns1__createDataFileResponse *const *,
    const char *);
SOAP_FMAC3 ns1__createDataFileResponse **SOAP_FMAC4
soap_in_PointerTons1__createDataFileResponse(struct soap *, const char *,
                                             ns1__createDataFileResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__createDataFileResponse(
    struct soap *, ns1__createDataFileResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__createDataFileResponse
#define soap_write_PointerTons1__createDataFileResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__createDataFileResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__createDataFileResponse(                   \
           soap, data, "ns1:createDataFileResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataFileResponse **SOAP_FMAC4
soap_get_PointerTons1__createDataFileResponse(struct soap *,
                                              ns1__createDataFileResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__createDataFileResponse
#define soap_read_PointerTons1__createDataFileResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__createDataFileResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__createDataFile
#define SOAP_TYPE_ICat3_PointerTons1__createDataFile (805)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__createDataFile(struct soap *,
                                            ns1__createDataFile *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__createDataFile(struct soap *, const char *, int,
                                      ns1__createDataFile *const *,
                                      const char *);
SOAP_FMAC3 ns1__createDataFile **SOAP_FMAC4
soap_in_PointerTons1__createDataFile(struct soap *, const char *,
                                     ns1__createDataFile **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__createDataFile(struct soap *,
                                      ns1__createDataFile *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__createDataFile
#define soap_write_PointerTons1__createDataFile(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__createDataFile(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__createDataFile(      \
                                soap, data, "ns1:createDataFile", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataFile **SOAP_FMAC4
soap_get_PointerTons1__createDataFile(struct soap *, ns1__createDataFile **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__createDataFile
#define soap_read_PointerTons1__createDataFile(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__createDataFile(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getDatafilesResponse
#define SOAP_TYPE_ICat3_PointerTons1__getDatafilesResponse (802)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getDatafilesResponse(
    struct soap *, ns1__getDatafilesResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getDatafilesResponse(struct soap *, const char *, int,
                                            ns1__getDatafilesResponse *const *,
                                            const char *);
SOAP_FMAC3 ns1__getDatafilesResponse **SOAP_FMAC4
soap_in_PointerTons1__getDatafilesResponse(struct soap *, const char *,
                                           ns1__getDatafilesResponse **,
                                           const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getDatafilesResponse(struct soap *,
                                            ns1__getDatafilesResponse *const *,
                                            const char *, const char *);

#ifndef soap_write_PointerTons1__getDatafilesResponse
#define soap_write_PointerTons1__getDatafilesResponse(soap, data)              \
  (ICat3::soap_serialize_PointerTons1__getDatafilesResponse(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getDatafilesResponse(                     \
           soap, data, "ns1:getDatafilesResponse", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatafilesResponse **SOAP_FMAC4
soap_get_PointerTons1__getDatafilesResponse(struct soap *,
                                            ns1__getDatafilesResponse **,
                                            const char *, const char *);

#ifndef soap_read_PointerTons1__getDatafilesResponse
#define soap_read_PointerTons1__getDatafilesResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getDatafilesResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getDatafiles
#define SOAP_TYPE_ICat3_PointerTons1__getDatafiles (801)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getDatafiles(struct soap *,
                                          ns1__getDatafiles *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getDatafiles(struct soap *, const char *, int,
                                    ns1__getDatafiles *const *, const char *);
SOAP_FMAC3 ns1__getDatafiles **SOAP_FMAC4
soap_in_PointerTons1__getDatafiles(struct soap *, const char *,
                                   ns1__getDatafiles **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getDatafiles(struct soap *, ns1__getDatafiles *const *,
                                    const char *, const char *);

#ifndef soap_write_PointerTons1__getDatafiles
#define soap_write_PointerTons1__getDatafiles(soap, data)                      \
  (ICat3::soap_serialize_PointerTons1__getDatafiles(soap, data),               \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getDatafiles(        \
                                soap, data, "ns1:getDatafiles", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatafiles **SOAP_FMAC4
soap_get_PointerTons1__getDatafiles(struct soap *, ns1__getDatafiles **,
                                    const char *, const char *);

#ifndef soap_read_PointerTons1__getDatafiles
#define soap_read_PointerTons1__getDatafiles(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getDatafiles(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getDatafileResponse
#define SOAP_TYPE_ICat3_PointerTons1__getDatafileResponse (798)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getDatafileResponse(
    struct soap *, ns1__getDatafileResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getDatafileResponse(struct soap *, const char *, int,
                                           ns1__getDatafileResponse *const *,
                                           const char *);
SOAP_FMAC3 ns1__getDatafileResponse **SOAP_FMAC4
soap_in_PointerTons1__getDatafileResponse(struct soap *, const char *,
                                          ns1__getDatafileResponse **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getDatafileResponse(struct soap *,
                                           ns1__getDatafileResponse *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__getDatafileResponse
#define soap_write_PointerTons1__getDatafileResponse(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__getDatafileResponse(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getDatafileResponse(                      \
           soap, data, "ns1:getDatafileResponse", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatafileResponse **SOAP_FMAC4
soap_get_PointerTons1__getDatafileResponse(struct soap *,
                                           ns1__getDatafileResponse **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__getDatafileResponse
#define soap_read_PointerTons1__getDatafileResponse(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getDatafileResponse(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getDatafile
#define SOAP_TYPE_ICat3_PointerTons1__getDatafile (797)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getDatafile(struct soap *,
                                         ns1__getDatafile *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getDatafile(struct soap *, const char *, int,
                                   ns1__getDatafile *const *, const char *);
SOAP_FMAC3 ns1__getDatafile **SOAP_FMAC4
soap_in_PointerTons1__getDatafile(struct soap *, const char *,
                                  ns1__getDatafile **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getDatafile(struct soap *, ns1__getDatafile *const *,
                                   const char *, const char *);

#ifndef soap_write_PointerTons1__getDatafile
#define soap_write_PointerTons1__getDatafile(soap, data)                       \
  (ICat3::soap_serialize_PointerTons1__getDatafile(soap, data),                \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getDatafile(         \
                                soap, data, "ns1:getDatafile", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatafile **SOAP_FMAC4
soap_get_PointerTons1__getDatafile(struct soap *, ns1__getDatafile **,
                                   const char *, const char *);

#ifndef soap_read_PointerTons1__getDatafile
#define soap_read_PointerTons1__getDatafile(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getDatafile(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeDataSetParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__removeDataSetParameterResponse (793)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removeDataSetParameterResponse(
    struct soap *, ns1__removeDataSetParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removeDataSetParameterResponse(
    struct soap *, const char *, int,
    ns1__removeDataSetParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__removeDataSetParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__removeDataSetParameterResponse(
    struct soap *, const char *, ns1__removeDataSetParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removeDataSetParameterResponse(
    struct soap *, ns1__removeDataSetParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeDataSetParameterResponse
#define soap_write_PointerTons1__removeDataSetParameterResponse(soap, data)    \
  (ICat3::soap_serialize_PointerTons1__removeDataSetParameterResponse(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeDataSetParameterResponse(           \
           soap, data, "ns1:removeDataSetParameterResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataSetParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__removeDataSetParameterResponse(
    struct soap *, ns1__removeDataSetParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__removeDataSetParameterResponse
#define soap_read_PointerTons1__removeDataSetParameterResponse(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeDataSetParameterResponse(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeDataSetParameter
#define SOAP_TYPE_ICat3_PointerTons1__removeDataSetParameter (792)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__removeDataSetParameter(
    struct soap *, ns1__removeDataSetParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removeDataSetParameter(
    struct soap *, const char *, int, ns1__removeDataSetParameter *const *,
    const char *);
SOAP_FMAC3 ns1__removeDataSetParameter **SOAP_FMAC4
soap_in_PointerTons1__removeDataSetParameter(struct soap *, const char *,
                                             ns1__removeDataSetParameter **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removeDataSetParameter(
    struct soap *, ns1__removeDataSetParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeDataSetParameter
#define soap_write_PointerTons1__removeDataSetParameter(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__removeDataSetParameter(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeDataSetParameter(                   \
           soap, data, "ns1:removeDataSetParameter", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataSetParameter **SOAP_FMAC4
soap_get_PointerTons1__removeDataSetParameter(struct soap *,
                                              ns1__removeDataSetParameter **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__removeDataSetParameter
#define soap_read_PointerTons1__removeDataSetParameter(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeDataSetParameter(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeDataSetResponse
#define SOAP_TYPE_ICat3_PointerTons1__removeDataSetResponse (788)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__removeDataSetResponse(
    struct soap *, ns1__removeDataSetResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removeDataSetResponse(
    struct soap *, const char *, int, ns1__removeDataSetResponse *const *,
    const char *);
SOAP_FMAC3 ns1__removeDataSetResponse **SOAP_FMAC4
soap_in_PointerTons1__removeDataSetResponse(struct soap *, const char *,
                                            ns1__removeDataSetResponse **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removeDataSetResponse(
    struct soap *, ns1__removeDataSetResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeDataSetResponse
#define soap_write_PointerTons1__removeDataSetResponse(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__removeDataSetResponse(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeDataSetResponse(                    \
           soap, data, "ns1:removeDataSetResponse", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataSetResponse **SOAP_FMAC4
soap_get_PointerTons1__removeDataSetResponse(struct soap *,
                                             ns1__removeDataSetResponse **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__removeDataSetResponse
#define soap_read_PointerTons1__removeDataSetResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeDataSetResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeDataSet
#define SOAP_TYPE_ICat3_PointerTons1__removeDataSet (787)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removeDataSet(struct soap *,
                                           ns1__removeDataSet *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__removeDataSet(struct soap *, const char *, int,
                                     ns1__removeDataSet *const *, const char *);
SOAP_FMAC3 ns1__removeDataSet **SOAP_FMAC4
soap_in_PointerTons1__removeDataSet(struct soap *, const char *,
                                    ns1__removeDataSet **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__removeDataSet(struct soap *, ns1__removeDataSet *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__removeDataSet
#define soap_write_PointerTons1__removeDataSet(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__removeDataSet(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__removeDataSet(       \
                                soap, data, "ns1:removeDataSet", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeDataSet **SOAP_FMAC4
soap_get_PointerTons1__removeDataSet(struct soap *, ns1__removeDataSet **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__removeDataSet
#define soap_read_PointerTons1__removeDataSet(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeDataSet(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addDataSetParametersResponse
#define SOAP_TYPE_ICat3_PointerTons1__addDataSetParametersResponse (784)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addDataSetParametersResponse(
    struct soap *, ns1__addDataSetParametersResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__addDataSetParametersResponse(
    struct soap *, const char *, int,
    ns1__addDataSetParametersResponse *const *, const char *);
SOAP_FMAC3 ns1__addDataSetParametersResponse **SOAP_FMAC4
soap_in_PointerTons1__addDataSetParametersResponse(
    struct soap *, const char *, ns1__addDataSetParametersResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__addDataSetParametersResponse(
    struct soap *, ns1__addDataSetParametersResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__addDataSetParametersResponse
#define soap_write_PointerTons1__addDataSetParametersResponse(soap, data)      \
  (ICat3::soap_serialize_PointerTons1__addDataSetParametersResponse(soap,      \
                                                                    data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addDataSetParametersResponse(             \
           soap, data, "ns1:addDataSetParametersResponse", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataSetParametersResponse **SOAP_FMAC4
soap_get_PointerTons1__addDataSetParametersResponse(
    struct soap *, ns1__addDataSetParametersResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__addDataSetParametersResponse
#define soap_read_PointerTons1__addDataSetParametersResponse(soap, data)       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addDataSetParametersResponse(            \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addDataSetParameters
#define SOAP_TYPE_ICat3_PointerTons1__addDataSetParameters (783)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__addDataSetParameters(
    struct soap *, ns1__addDataSetParameters *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__addDataSetParameters(struct soap *, const char *, int,
                                            ns1__addDataSetParameters *const *,
                                            const char *);
SOAP_FMAC3 ns1__addDataSetParameters **SOAP_FMAC4
soap_in_PointerTons1__addDataSetParameters(struct soap *, const char *,
                                           ns1__addDataSetParameters **,
                                           const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__addDataSetParameters(struct soap *,
                                            ns1__addDataSetParameters *const *,
                                            const char *, const char *);

#ifndef soap_write_PointerTons1__addDataSetParameters
#define soap_write_PointerTons1__addDataSetParameters(soap, data)              \
  (ICat3::soap_serialize_PointerTons1__addDataSetParameters(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addDataSetParameters(                     \
           soap, data, "ns1:addDataSetParameters", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataSetParameters **SOAP_FMAC4
soap_get_PointerTons1__addDataSetParameters(struct soap *,
                                            ns1__addDataSetParameters **,
                                            const char *, const char *);

#ifndef soap_read_PointerTons1__addDataSetParameters
#define soap_read_PointerTons1__addDataSetParameters(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addDataSetParameters(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addDataSetParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__addDataSetParameterResponse (780)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addDataSetParameterResponse(
    struct soap *, ns1__addDataSetParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__addDataSetParameterResponse(
    struct soap *, const char *, int, ns1__addDataSetParameterResponse *const *,
    const char *);
SOAP_FMAC3 ns1__addDataSetParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__addDataSetParameterResponse(
    struct soap *, const char *, ns1__addDataSetParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__addDataSetParameterResponse(
    struct soap *, ns1__addDataSetParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__addDataSetParameterResponse
#define soap_write_PointerTons1__addDataSetParameterResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__addDataSetParameterResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addDataSetParameterResponse(              \
           soap, data, "ns1:addDataSetParameterResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataSetParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__addDataSetParameterResponse(
    struct soap *, ns1__addDataSetParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__addDataSetParameterResponse
#define soap_read_PointerTons1__addDataSetParameterResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addDataSetParameterResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addDataSetParameter
#define SOAP_TYPE_ICat3_PointerTons1__addDataSetParameter (779)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__addDataSetParameter(
    struct soap *, ns1__addDataSetParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__addDataSetParameter(struct soap *, const char *, int,
                                           ns1__addDataSetParameter *const *,
                                           const char *);
SOAP_FMAC3 ns1__addDataSetParameter **SOAP_FMAC4
soap_in_PointerTons1__addDataSetParameter(struct soap *, const char *,
                                          ns1__addDataSetParameter **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__addDataSetParameter(struct soap *,
                                           ns1__addDataSetParameter *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__addDataSetParameter
#define soap_write_PointerTons1__addDataSetParameter(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__addDataSetParameter(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addDataSetParameter(                      \
           soap, data, "ns1:addDataSetParameter", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addDataSetParameter **SOAP_FMAC4
soap_get_PointerTons1__addDataSetParameter(struct soap *,
                                           ns1__addDataSetParameter **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__addDataSetParameter
#define soap_read_PointerTons1__addDataSetParameter(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addDataSetParameter(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__setDataSetSampleResponse
#define SOAP_TYPE_ICat3_PointerTons1__setDataSetSampleResponse (775)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__setDataSetSampleResponse(
    struct soap *, ns1__setDataSetSampleResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__setDataSetSampleResponse(
    struct soap *, const char *, int, ns1__setDataSetSampleResponse *const *,
    const char *);
SOAP_FMAC3 ns1__setDataSetSampleResponse **SOAP_FMAC4
soap_in_PointerTons1__setDataSetSampleResponse(struct soap *, const char *,
                                               ns1__setDataSetSampleResponse **,
                                               const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__setDataSetSampleResponse(
    struct soap *, ns1__setDataSetSampleResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__setDataSetSampleResponse
#define soap_write_PointerTons1__setDataSetSampleResponse(soap, data)          \
  (ICat3::soap_serialize_PointerTons1__setDataSetSampleResponse(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__setDataSetSampleResponse(                 \
           soap, data, "ns1:setDataSetSampleResponse", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__setDataSetSampleResponse **SOAP_FMAC4
soap_get_PointerTons1__setDataSetSampleResponse(
    struct soap *, ns1__setDataSetSampleResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__setDataSetSampleResponse
#define soap_read_PointerTons1__setDataSetSampleResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__setDataSetSampleResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__setDataSetSample
#define SOAP_TYPE_ICat3_PointerTons1__setDataSetSample (774)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__setDataSetSample(struct soap *,
                                              ns1__setDataSetSample *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__setDataSetSample(struct soap *, const char *, int,
                                        ns1__setDataSetSample *const *,
                                        const char *);
SOAP_FMAC3 ns1__setDataSetSample **SOAP_FMAC4
soap_in_PointerTons1__setDataSetSample(struct soap *, const char *,
                                       ns1__setDataSetSample **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__setDataSetSample(struct soap *,
                                        ns1__setDataSetSample *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons1__setDataSetSample
#define soap_write_PointerTons1__setDataSetSample(soap, data)                  \
  (ICat3::soap_serialize_PointerTons1__setDataSetSample(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__setDataSetSample(    \
                                soap, data, "ns1:setDataSetSample", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__setDataSetSample **SOAP_FMAC4
soap_get_PointerTons1__setDataSetSample(struct soap *, ns1__setDataSetSample **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons1__setDataSetSample
#define soap_read_PointerTons1__setDataSetSample(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__setDataSetSample(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyDataSetParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__modifyDataSetParameterResponse (770)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__modifyDataSetParameterResponse(
    struct soap *, ns1__modifyDataSetParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__modifyDataSetParameterResponse(
    struct soap *, const char *, int,
    ns1__modifyDataSetParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__modifyDataSetParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__modifyDataSetParameterResponse(
    struct soap *, const char *, ns1__modifyDataSetParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__modifyDataSetParameterResponse(
    struct soap *, ns1__modifyDataSetParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__modifyDataSetParameterResponse
#define soap_write_PointerTons1__modifyDataSetParameterResponse(soap, data)    \
  (ICat3::soap_serialize_PointerTons1__modifyDataSetParameterResponse(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifyDataSetParameterResponse(           \
           soap, data, "ns1:modifyDataSetParameterResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataSetParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__modifyDataSetParameterResponse(
    struct soap *, ns1__modifyDataSetParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__modifyDataSetParameterResponse
#define soap_read_PointerTons1__modifyDataSetParameterResponse(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyDataSetParameterResponse(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyDataSetParameter
#define SOAP_TYPE_ICat3_PointerTons1__modifyDataSetParameter (769)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__modifyDataSetParameter(
    struct soap *, ns1__modifyDataSetParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__modifyDataSetParameter(
    struct soap *, const char *, int, ns1__modifyDataSetParameter *const *,
    const char *);
SOAP_FMAC3 ns1__modifyDataSetParameter **SOAP_FMAC4
soap_in_PointerTons1__modifyDataSetParameter(struct soap *, const char *,
                                             ns1__modifyDataSetParameter **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__modifyDataSetParameter(
    struct soap *, ns1__modifyDataSetParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__modifyDataSetParameter
#define soap_write_PointerTons1__modifyDataSetParameter(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__modifyDataSetParameter(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifyDataSetParameter(                   \
           soap, data, "ns1:modifyDataSetParameter", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataSetParameter **SOAP_FMAC4
soap_get_PointerTons1__modifyDataSetParameter(struct soap *,
                                              ns1__modifyDataSetParameter **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__modifyDataSetParameter
#define soap_read_PointerTons1__modifyDataSetParameter(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyDataSetParameter(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyDataSetResponse
#define SOAP_TYPE_ICat3_PointerTons1__modifyDataSetResponse (765)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__modifyDataSetResponse(
    struct soap *, ns1__modifyDataSetResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__modifyDataSetResponse(
    struct soap *, const char *, int, ns1__modifyDataSetResponse *const *,
    const char *);
SOAP_FMAC3 ns1__modifyDataSetResponse **SOAP_FMAC4
soap_in_PointerTons1__modifyDataSetResponse(struct soap *, const char *,
                                            ns1__modifyDataSetResponse **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__modifyDataSetResponse(
    struct soap *, ns1__modifyDataSetResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__modifyDataSetResponse
#define soap_write_PointerTons1__modifyDataSetResponse(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__modifyDataSetResponse(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifyDataSetResponse(                    \
           soap, data, "ns1:modifyDataSetResponse", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataSetResponse **SOAP_FMAC4
soap_get_PointerTons1__modifyDataSetResponse(struct soap *,
                                             ns1__modifyDataSetResponse **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__modifyDataSetResponse
#define soap_read_PointerTons1__modifyDataSetResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyDataSetResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyDataSet
#define SOAP_TYPE_ICat3_PointerTons1__modifyDataSet (764)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__modifyDataSet(struct soap *,
                                           ns1__modifyDataSet *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__modifyDataSet(struct soap *, const char *, int,
                                     ns1__modifyDataSet *const *, const char *);
SOAP_FMAC3 ns1__modifyDataSet **SOAP_FMAC4
soap_in_PointerTons1__modifyDataSet(struct soap *, const char *,
                                    ns1__modifyDataSet **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__modifyDataSet(struct soap *, ns1__modifyDataSet *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__modifyDataSet
#define soap_write_PointerTons1__modifyDataSet(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__modifyDataSet(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__modifyDataSet(       \
                                soap, data, "ns1:modifyDataSet", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyDataSet **SOAP_FMAC4
soap_get_PointerTons1__modifyDataSet(struct soap *, ns1__modifyDataSet **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__modifyDataSet
#define soap_read_PointerTons1__modifyDataSet(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyDataSet(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteDataSetParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__deleteDataSetParameterResponse (760)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deleteDataSetParameterResponse(
    struct soap *, ns1__deleteDataSetParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deleteDataSetParameterResponse(
    struct soap *, const char *, int,
    ns1__deleteDataSetParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__deleteDataSetParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__deleteDataSetParameterResponse(
    struct soap *, const char *, ns1__deleteDataSetParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deleteDataSetParameterResponse(
    struct soap *, ns1__deleteDataSetParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteDataSetParameterResponse
#define soap_write_PointerTons1__deleteDataSetParameterResponse(soap, data)    \
  (ICat3::soap_serialize_PointerTons1__deleteDataSetParameterResponse(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteDataSetParameterResponse(           \
           soap, data, "ns1:deleteDataSetParameterResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataSetParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__deleteDataSetParameterResponse(
    struct soap *, ns1__deleteDataSetParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__deleteDataSetParameterResponse
#define soap_read_PointerTons1__deleteDataSetParameterResponse(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteDataSetParameterResponse(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteDataSetParameter
#define SOAP_TYPE_ICat3_PointerTons1__deleteDataSetParameter (759)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__deleteDataSetParameter(
    struct soap *, ns1__deleteDataSetParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deleteDataSetParameter(
    struct soap *, const char *, int, ns1__deleteDataSetParameter *const *,
    const char *);
SOAP_FMAC3 ns1__deleteDataSetParameter **SOAP_FMAC4
soap_in_PointerTons1__deleteDataSetParameter(struct soap *, const char *,
                                             ns1__deleteDataSetParameter **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deleteDataSetParameter(
    struct soap *, ns1__deleteDataSetParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteDataSetParameter
#define soap_write_PointerTons1__deleteDataSetParameter(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__deleteDataSetParameter(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteDataSetParameter(                   \
           soap, data, "ns1:deleteDataSetParameter", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataSetParameter **SOAP_FMAC4
soap_get_PointerTons1__deleteDataSetParameter(struct soap *,
                                              ns1__deleteDataSetParameter **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__deleteDataSetParameter
#define soap_read_PointerTons1__deleteDataSetParameter(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteDataSetParameter(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteDataSetResponse
#define SOAP_TYPE_ICat3_PointerTons1__deleteDataSetResponse (755)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__deleteDataSetResponse(
    struct soap *, ns1__deleteDataSetResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deleteDataSetResponse(
    struct soap *, const char *, int, ns1__deleteDataSetResponse *const *,
    const char *);
SOAP_FMAC3 ns1__deleteDataSetResponse **SOAP_FMAC4
soap_in_PointerTons1__deleteDataSetResponse(struct soap *, const char *,
                                            ns1__deleteDataSetResponse **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deleteDataSetResponse(
    struct soap *, ns1__deleteDataSetResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteDataSetResponse
#define soap_write_PointerTons1__deleteDataSetResponse(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__deleteDataSetResponse(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteDataSetResponse(                    \
           soap, data, "ns1:deleteDataSetResponse", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataSetResponse **SOAP_FMAC4
soap_get_PointerTons1__deleteDataSetResponse(struct soap *,
                                             ns1__deleteDataSetResponse **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__deleteDataSetResponse
#define soap_read_PointerTons1__deleteDataSetResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteDataSetResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteDataSet
#define SOAP_TYPE_ICat3_PointerTons1__deleteDataSet (754)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deleteDataSet(struct soap *,
                                           ns1__deleteDataSet *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__deleteDataSet(struct soap *, const char *, int,
                                     ns1__deleteDataSet *const *, const char *);
SOAP_FMAC3 ns1__deleteDataSet **SOAP_FMAC4
soap_in_PointerTons1__deleteDataSet(struct soap *, const char *,
                                    ns1__deleteDataSet **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__deleteDataSet(struct soap *, ns1__deleteDataSet *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__deleteDataSet
#define soap_write_PointerTons1__deleteDataSet(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__deleteDataSet(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__deleteDataSet(       \
                                soap, data, "ns1:deleteDataSet", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteDataSet **SOAP_FMAC4
soap_get_PointerTons1__deleteDataSet(struct soap *, ns1__deleteDataSet **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__deleteDataSet
#define soap_read_PointerTons1__deleteDataSet(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteDataSet(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__createDataSetsResponse
#define SOAP_TYPE_ICat3_PointerTons1__createDataSetsResponse (751)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__createDataSetsResponse(
    struct soap *, ns1__createDataSetsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__createDataSetsResponse(
    struct soap *, const char *, int, ns1__createDataSetsResponse *const *,
    const char *);
SOAP_FMAC3 ns1__createDataSetsResponse **SOAP_FMAC4
soap_in_PointerTons1__createDataSetsResponse(struct soap *, const char *,
                                             ns1__createDataSetsResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__createDataSetsResponse(
    struct soap *, ns1__createDataSetsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__createDataSetsResponse
#define soap_write_PointerTons1__createDataSetsResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__createDataSetsResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__createDataSetsResponse(                   \
           soap, data, "ns1:createDataSetsResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataSetsResponse **SOAP_FMAC4
soap_get_PointerTons1__createDataSetsResponse(struct soap *,
                                              ns1__createDataSetsResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__createDataSetsResponse
#define soap_read_PointerTons1__createDataSetsResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__createDataSetsResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__createDataSets
#define SOAP_TYPE_ICat3_PointerTons1__createDataSets (750)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__createDataSets(struct soap *,
                                            ns1__createDataSets *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__createDataSets(struct soap *, const char *, int,
                                      ns1__createDataSets *const *,
                                      const char *);
SOAP_FMAC3 ns1__createDataSets **SOAP_FMAC4
soap_in_PointerTons1__createDataSets(struct soap *, const char *,
                                     ns1__createDataSets **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__createDataSets(struct soap *,
                                      ns1__createDataSets *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__createDataSets
#define soap_write_PointerTons1__createDataSets(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__createDataSets(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__createDataSets(      \
                                soap, data, "ns1:createDataSets", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataSets **SOAP_FMAC4
soap_get_PointerTons1__createDataSets(struct soap *, ns1__createDataSets **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__createDataSets
#define soap_read_PointerTons1__createDataSets(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__createDataSets(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__createDataSetResponse
#define SOAP_TYPE_ICat3_PointerTons1__createDataSetResponse (747)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__createDataSetResponse(
    struct soap *, ns1__createDataSetResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__createDataSetResponse(
    struct soap *, const char *, int, ns1__createDataSetResponse *const *,
    const char *);
SOAP_FMAC3 ns1__createDataSetResponse **SOAP_FMAC4
soap_in_PointerTons1__createDataSetResponse(struct soap *, const char *,
                                            ns1__createDataSetResponse **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__createDataSetResponse(
    struct soap *, ns1__createDataSetResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__createDataSetResponse
#define soap_write_PointerTons1__createDataSetResponse(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__createDataSetResponse(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__createDataSetResponse(                    \
           soap, data, "ns1:createDataSetResponse", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataSetResponse **SOAP_FMAC4
soap_get_PointerTons1__createDataSetResponse(struct soap *,
                                             ns1__createDataSetResponse **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__createDataSetResponse
#define soap_read_PointerTons1__createDataSetResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__createDataSetResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__createDataSet
#define SOAP_TYPE_ICat3_PointerTons1__createDataSet (746)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__createDataSet(struct soap *,
                                           ns1__createDataSet *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__createDataSet(struct soap *, const char *, int,
                                     ns1__createDataSet *const *, const char *);
SOAP_FMAC3 ns1__createDataSet **SOAP_FMAC4
soap_in_PointerTons1__createDataSet(struct soap *, const char *,
                                    ns1__createDataSet **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__createDataSet(struct soap *, ns1__createDataSet *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__createDataSet
#define soap_write_PointerTons1__createDataSet(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__createDataSet(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__createDataSet(       \
                                soap, data, "ns1:createDataSet", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createDataSet **SOAP_FMAC4
soap_get_PointerTons1__createDataSet(struct soap *, ns1__createDataSet **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__createDataSet
#define soap_read_PointerTons1__createDataSet(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__createDataSet(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getDatasetsResponse
#define SOAP_TYPE_ICat3_PointerTons1__getDatasetsResponse (743)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getDatasetsResponse(
    struct soap *, ns1__getDatasetsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getDatasetsResponse(struct soap *, const char *, int,
                                           ns1__getDatasetsResponse *const *,
                                           const char *);
SOAP_FMAC3 ns1__getDatasetsResponse **SOAP_FMAC4
soap_in_PointerTons1__getDatasetsResponse(struct soap *, const char *,
                                          ns1__getDatasetsResponse **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getDatasetsResponse(struct soap *,
                                           ns1__getDatasetsResponse *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__getDatasetsResponse
#define soap_write_PointerTons1__getDatasetsResponse(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__getDatasetsResponse(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getDatasetsResponse(                      \
           soap, data, "ns1:getDatasetsResponse", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatasetsResponse **SOAP_FMAC4
soap_get_PointerTons1__getDatasetsResponse(struct soap *,
                                           ns1__getDatasetsResponse **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__getDatasetsResponse
#define soap_read_PointerTons1__getDatasetsResponse(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getDatasetsResponse(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getDatasets
#define SOAP_TYPE_ICat3_PointerTons1__getDatasets (742)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getDatasets(struct soap *,
                                         ns1__getDatasets *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getDatasets(struct soap *, const char *, int,
                                   ns1__getDatasets *const *, const char *);
SOAP_FMAC3 ns1__getDatasets **SOAP_FMAC4
soap_in_PointerTons1__getDatasets(struct soap *, const char *,
                                  ns1__getDatasets **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getDatasets(struct soap *, ns1__getDatasets *const *,
                                   const char *, const char *);

#ifndef soap_write_PointerTons1__getDatasets
#define soap_write_PointerTons1__getDatasets(soap, data)                       \
  (ICat3::soap_serialize_PointerTons1__getDatasets(soap, data),                \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getDatasets(         \
                                soap, data, "ns1:getDatasets", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatasets **SOAP_FMAC4
soap_get_PointerTons1__getDatasets(struct soap *, ns1__getDatasets **,
                                   const char *, const char *);

#ifndef soap_read_PointerTons1__getDatasets
#define soap_read_PointerTons1__getDatasets(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getDatasets(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getDatasetIncludesResponse
#define SOAP_TYPE_ICat3_PointerTons1__getDatasetIncludesResponse (739)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getDatasetIncludesResponse(
    struct soap *, ns1__getDatasetIncludesResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getDatasetIncludesResponse(
    struct soap *, const char *, int, ns1__getDatasetIncludesResponse *const *,
    const char *);
SOAP_FMAC3 ns1__getDatasetIncludesResponse **SOAP_FMAC4
soap_in_PointerTons1__getDatasetIncludesResponse(
    struct soap *, const char *, ns1__getDatasetIncludesResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getDatasetIncludesResponse(
    struct soap *, ns1__getDatasetIncludesResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getDatasetIncludesResponse
#define soap_write_PointerTons1__getDatasetIncludesResponse(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__getDatasetIncludesResponse(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getDatasetIncludesResponse(               \
           soap, data, "ns1:getDatasetIncludesResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatasetIncludesResponse **SOAP_FMAC4
soap_get_PointerTons1__getDatasetIncludesResponse(
    struct soap *, ns1__getDatasetIncludesResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getDatasetIncludesResponse
#define soap_read_PointerTons1__getDatasetIncludesResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getDatasetIncludesResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getDatasetIncludes
#define SOAP_TYPE_ICat3_PointerTons1__getDatasetIncludes (738)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getDatasetIncludes(
    struct soap *, ns1__getDatasetIncludes *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getDatasetIncludes(struct soap *, const char *, int,
                                          ns1__getDatasetIncludes *const *,
                                          const char *);
SOAP_FMAC3 ns1__getDatasetIncludes **SOAP_FMAC4
soap_in_PointerTons1__getDatasetIncludes(struct soap *, const char *,
                                         ns1__getDatasetIncludes **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getDatasetIncludes(struct soap *,
                                          ns1__getDatasetIncludes *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__getDatasetIncludes
#define soap_write_PointerTons1__getDatasetIncludes(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__getDatasetIncludes(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getDatasetIncludes(  \
                                soap, data, "ns1:getDatasetIncludes", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatasetIncludes **SOAP_FMAC4
soap_get_PointerTons1__getDatasetIncludes(struct soap *,
                                          ns1__getDatasetIncludes **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__getDatasetIncludes
#define soap_read_PointerTons1__getDatasetIncludes(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getDatasetIncludes(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getDatasetResponse
#define SOAP_TYPE_ICat3_PointerTons1__getDatasetResponse (735)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getDatasetResponse(
    struct soap *, ns1__getDatasetResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getDatasetResponse(struct soap *, const char *, int,
                                          ns1__getDatasetResponse *const *,
                                          const char *);
SOAP_FMAC3 ns1__getDatasetResponse **SOAP_FMAC4
soap_in_PointerTons1__getDatasetResponse(struct soap *, const char *,
                                         ns1__getDatasetResponse **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getDatasetResponse(struct soap *,
                                          ns1__getDatasetResponse *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__getDatasetResponse
#define soap_write_PointerTons1__getDatasetResponse(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__getDatasetResponse(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getDatasetResponse(  \
                                soap, data, "ns1:getDatasetResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDatasetResponse **SOAP_FMAC4
soap_get_PointerTons1__getDatasetResponse(struct soap *,
                                          ns1__getDatasetResponse **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__getDatasetResponse
#define soap_read_PointerTons1__getDatasetResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getDatasetResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getDataset
#define SOAP_TYPE_ICat3_PointerTons1__getDataset (734)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getDataset(struct soap *,
                                        ns1__getDataset *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getDataset(struct soap *, const char *, int,
                                  ns1__getDataset *const *, const char *);
SOAP_FMAC3 ns1__getDataset **SOAP_FMAC4
soap_in_PointerTons1__getDataset(struct soap *, const char *,
                                 ns1__getDataset **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getDataset(struct soap *, ns1__getDataset *const *,
                                  const char *, const char *);

#ifndef soap_write_PointerTons1__getDataset
#define soap_write_PointerTons1__getDataset(soap, data)                        \
  (ICat3::soap_serialize_PointerTons1__getDataset(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getDataset(          \
                                soap, data, "ns1:getDataset", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getDataset **SOAP_FMAC4
soap_get_PointerTons1__getDataset(struct soap *, ns1__getDataset **,
                                  const char *, const char *);

#ifndef soap_read_PointerTons1__getDataset
#define soap_read_PointerTons1__getDataset(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getDataset(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeSampleParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__removeSampleParameterResponse (730)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removeSampleParameterResponse(
    struct soap *, ns1__removeSampleParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removeSampleParameterResponse(
    struct soap *, const char *, int,
    ns1__removeSampleParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__removeSampleParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__removeSampleParameterResponse(
    struct soap *, const char *, ns1__removeSampleParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removeSampleParameterResponse(
    struct soap *, ns1__removeSampleParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeSampleParameterResponse
#define soap_write_PointerTons1__removeSampleParameterResponse(soap, data)     \
  (ICat3::soap_serialize_PointerTons1__removeSampleParameterResponse(soap,     \
                                                                     data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeSampleParameterResponse(            \
           soap, data, "ns1:removeSampleParameterResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeSampleParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__removeSampleParameterResponse(
    struct soap *, ns1__removeSampleParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__removeSampleParameterResponse
#define soap_read_PointerTons1__removeSampleParameterResponse(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeSampleParameterResponse(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeSampleParameter
#define SOAP_TYPE_ICat3_PointerTons1__removeSampleParameter (729)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__removeSampleParameter(
    struct soap *, ns1__removeSampleParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removeSampleParameter(
    struct soap *, const char *, int, ns1__removeSampleParameter *const *,
    const char *);
SOAP_FMAC3 ns1__removeSampleParameter **SOAP_FMAC4
soap_in_PointerTons1__removeSampleParameter(struct soap *, const char *,
                                            ns1__removeSampleParameter **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removeSampleParameter(
    struct soap *, ns1__removeSampleParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeSampleParameter
#define soap_write_PointerTons1__removeSampleParameter(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__removeSampleParameter(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeSampleParameter(                    \
           soap, data, "ns1:removeSampleParameter", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeSampleParameter **SOAP_FMAC4
soap_get_PointerTons1__removeSampleParameter(struct soap *,
                                             ns1__removeSampleParameter **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__removeSampleParameter
#define soap_read_PointerTons1__removeSampleParameter(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeSampleParameter(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeSampleResponse
#define SOAP_TYPE_ICat3_PointerTons1__removeSampleResponse (725)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__removeSampleResponse(
    struct soap *, ns1__removeSampleResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__removeSampleResponse(struct soap *, const char *, int,
                                            ns1__removeSampleResponse *const *,
                                            const char *);
SOAP_FMAC3 ns1__removeSampleResponse **SOAP_FMAC4
soap_in_PointerTons1__removeSampleResponse(struct soap *, const char *,
                                           ns1__removeSampleResponse **,
                                           const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__removeSampleResponse(struct soap *,
                                            ns1__removeSampleResponse *const *,
                                            const char *, const char *);

#ifndef soap_write_PointerTons1__removeSampleResponse
#define soap_write_PointerTons1__removeSampleResponse(soap, data)              \
  (ICat3::soap_serialize_PointerTons1__removeSampleResponse(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeSampleResponse(                     \
           soap, data, "ns1:removeSampleResponse", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeSampleResponse **SOAP_FMAC4
soap_get_PointerTons1__removeSampleResponse(struct soap *,
                                            ns1__removeSampleResponse **,
                                            const char *, const char *);

#ifndef soap_read_PointerTons1__removeSampleResponse
#define soap_read_PointerTons1__removeSampleResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeSampleResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeSample
#define SOAP_TYPE_ICat3_PointerTons1__removeSample (724)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removeSample(struct soap *,
                                          ns1__removeSample *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__removeSample(struct soap *, const char *, int,
                                    ns1__removeSample *const *, const char *);
SOAP_FMAC3 ns1__removeSample **SOAP_FMAC4
soap_in_PointerTons1__removeSample(struct soap *, const char *,
                                   ns1__removeSample **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__removeSample(struct soap *, ns1__removeSample *const *,
                                    const char *, const char *);

#ifndef soap_write_PointerTons1__removeSample
#define soap_write_PointerTons1__removeSample(soap, data)                      \
  (ICat3::soap_serialize_PointerTons1__removeSample(soap, data),               \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__removeSample(        \
                                soap, data, "ns1:removeSample", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeSample **SOAP_FMAC4
soap_get_PointerTons1__removeSample(struct soap *, ns1__removeSample **,
                                    const char *, const char *);

#ifndef soap_read_PointerTons1__removeSample
#define soap_read_PointerTons1__removeSample(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeSample(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removePublicationResponse
#define SOAP_TYPE_ICat3_PointerTons1__removePublicationResponse (720)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removePublicationResponse(
    struct soap *, ns1__removePublicationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removePublicationResponse(
    struct soap *, const char *, int, ns1__removePublicationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__removePublicationResponse **SOAP_FMAC4
soap_in_PointerTons1__removePublicationResponse(
    struct soap *, const char *, ns1__removePublicationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removePublicationResponse(
    struct soap *, ns1__removePublicationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removePublicationResponse
#define soap_write_PointerTons1__removePublicationResponse(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__removePublicationResponse(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removePublicationResponse(                \
           soap, data, "ns1:removePublicationResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removePublicationResponse **SOAP_FMAC4
soap_get_PointerTons1__removePublicationResponse(
    struct soap *, ns1__removePublicationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__removePublicationResponse
#define soap_read_PointerTons1__removePublicationResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removePublicationResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removePublication
#define SOAP_TYPE_ICat3_PointerTons1__removePublication (719)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removePublication(struct soap *,
                                               ns1__removePublication *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__removePublication(struct soap *, const char *, int,
                                         ns1__removePublication *const *,
                                         const char *);
SOAP_FMAC3 ns1__removePublication **SOAP_FMAC4
soap_in_PointerTons1__removePublication(struct soap *, const char *,
                                        ns1__removePublication **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__removePublication(struct soap *,
                                         ns1__removePublication *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__removePublication
#define soap_write_PointerTons1__removePublication(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__removePublication(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__removePublication(   \
                                soap, data, "ns1:removePublication", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removePublication **SOAP_FMAC4
soap_get_PointerTons1__removePublication(struct soap *,
                                         ns1__removePublication **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__removePublication
#define soap_read_PointerTons1__removePublication(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removePublication(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeInvestigatorResponse
#define SOAP_TYPE_ICat3_PointerTons1__removeInvestigatorResponse (715)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removeInvestigatorResponse(
    struct soap *, ns1__removeInvestigatorResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removeInvestigatorResponse(
    struct soap *, const char *, int, ns1__removeInvestigatorResponse *const *,
    const char *);
SOAP_FMAC3 ns1__removeInvestigatorResponse **SOAP_FMAC4
soap_in_PointerTons1__removeInvestigatorResponse(
    struct soap *, const char *, ns1__removeInvestigatorResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removeInvestigatorResponse(
    struct soap *, ns1__removeInvestigatorResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeInvestigatorResponse
#define soap_write_PointerTons1__removeInvestigatorResponse(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__removeInvestigatorResponse(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeInvestigatorResponse(               \
           soap, data, "ns1:removeInvestigatorResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeInvestigatorResponse **SOAP_FMAC4
soap_get_PointerTons1__removeInvestigatorResponse(
    struct soap *, ns1__removeInvestigatorResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__removeInvestigatorResponse
#define soap_read_PointerTons1__removeInvestigatorResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeInvestigatorResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeInvestigator
#define SOAP_TYPE_ICat3_PointerTons1__removeInvestigator (714)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__removeInvestigator(
    struct soap *, ns1__removeInvestigator *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__removeInvestigator(struct soap *, const char *, int,
                                          ns1__removeInvestigator *const *,
                                          const char *);
SOAP_FMAC3 ns1__removeInvestigator **SOAP_FMAC4
soap_in_PointerTons1__removeInvestigator(struct soap *, const char *,
                                         ns1__removeInvestigator **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__removeInvestigator(struct soap *,
                                          ns1__removeInvestigator *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__removeInvestigator
#define soap_write_PointerTons1__removeInvestigator(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__removeInvestigator(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__removeInvestigator(  \
                                soap, data, "ns1:removeInvestigator", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeInvestigator **SOAP_FMAC4
soap_get_PointerTons1__removeInvestigator(struct soap *,
                                          ns1__removeInvestigator **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__removeInvestigator
#define soap_read_PointerTons1__removeInvestigator(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeInvestigator(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeKeywordResponse
#define SOAP_TYPE_ICat3_PointerTons1__removeKeywordResponse (710)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__removeKeywordResponse(
    struct soap *, ns1__removeKeywordResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removeKeywordResponse(
    struct soap *, const char *, int, ns1__removeKeywordResponse *const *,
    const char *);
SOAP_FMAC3 ns1__removeKeywordResponse **SOAP_FMAC4
soap_in_PointerTons1__removeKeywordResponse(struct soap *, const char *,
                                            ns1__removeKeywordResponse **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removeKeywordResponse(
    struct soap *, ns1__removeKeywordResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeKeywordResponse
#define soap_write_PointerTons1__removeKeywordResponse(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__removeKeywordResponse(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeKeywordResponse(                    \
           soap, data, "ns1:removeKeywordResponse", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeKeywordResponse **SOAP_FMAC4
soap_get_PointerTons1__removeKeywordResponse(struct soap *,
                                             ns1__removeKeywordResponse **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__removeKeywordResponse
#define soap_read_PointerTons1__removeKeywordResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeKeywordResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeKeyword
#define SOAP_TYPE_ICat3_PointerTons1__removeKeyword (709)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removeKeyword(struct soap *,
                                           ns1__removeKeyword *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__removeKeyword(struct soap *, const char *, int,
                                     ns1__removeKeyword *const *, const char *);
SOAP_FMAC3 ns1__removeKeyword **SOAP_FMAC4
soap_in_PointerTons1__removeKeyword(struct soap *, const char *,
                                    ns1__removeKeyword **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__removeKeyword(struct soap *, ns1__removeKeyword *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__removeKeyword
#define soap_write_PointerTons1__removeKeyword(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__removeKeyword(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__removeKeyword(       \
                                soap, data, "ns1:removeKeyword", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeKeyword **SOAP_FMAC4
soap_get_PointerTons1__removeKeyword(struct soap *, ns1__removeKeyword **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__removeKeyword
#define soap_read_PointerTons1__removeKeyword(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeKeyword(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifySampleParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__modifySampleParameterResponse (705)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__modifySampleParameterResponse(
    struct soap *, ns1__modifySampleParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__modifySampleParameterResponse(
    struct soap *, const char *, int,
    ns1__modifySampleParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__modifySampleParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__modifySampleParameterResponse(
    struct soap *, const char *, ns1__modifySampleParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__modifySampleParameterResponse(
    struct soap *, ns1__modifySampleParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__modifySampleParameterResponse
#define soap_write_PointerTons1__modifySampleParameterResponse(soap, data)     \
  (ICat3::soap_serialize_PointerTons1__modifySampleParameterResponse(soap,     \
                                                                     data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifySampleParameterResponse(            \
           soap, data, "ns1:modifySampleParameterResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifySampleParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__modifySampleParameterResponse(
    struct soap *, ns1__modifySampleParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__modifySampleParameterResponse
#define soap_read_PointerTons1__modifySampleParameterResponse(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifySampleParameterResponse(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifySampleParameter
#define SOAP_TYPE_ICat3_PointerTons1__modifySampleParameter (704)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__modifySampleParameter(
    struct soap *, ns1__modifySampleParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__modifySampleParameter(
    struct soap *, const char *, int, ns1__modifySampleParameter *const *,
    const char *);
SOAP_FMAC3 ns1__modifySampleParameter **SOAP_FMAC4
soap_in_PointerTons1__modifySampleParameter(struct soap *, const char *,
                                            ns1__modifySampleParameter **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__modifySampleParameter(
    struct soap *, ns1__modifySampleParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__modifySampleParameter
#define soap_write_PointerTons1__modifySampleParameter(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__modifySampleParameter(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifySampleParameter(                    \
           soap, data, "ns1:modifySampleParameter", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifySampleParameter **SOAP_FMAC4
soap_get_PointerTons1__modifySampleParameter(struct soap *,
                                             ns1__modifySampleParameter **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__modifySampleParameter
#define soap_read_PointerTons1__modifySampleParameter(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifySampleParameter(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyPublicationResponse
#define SOAP_TYPE_ICat3_PointerTons1__modifyPublicationResponse (700)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__modifyPublicationResponse(
    struct soap *, ns1__modifyPublicationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__modifyPublicationResponse(
    struct soap *, const char *, int, ns1__modifyPublicationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__modifyPublicationResponse **SOAP_FMAC4
soap_in_PointerTons1__modifyPublicationResponse(
    struct soap *, const char *, ns1__modifyPublicationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__modifyPublicationResponse(
    struct soap *, ns1__modifyPublicationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__modifyPublicationResponse
#define soap_write_PointerTons1__modifyPublicationResponse(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__modifyPublicationResponse(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifyPublicationResponse(                \
           soap, data, "ns1:modifyPublicationResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyPublicationResponse **SOAP_FMAC4
soap_get_PointerTons1__modifyPublicationResponse(
    struct soap *, ns1__modifyPublicationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__modifyPublicationResponse
#define soap_read_PointerTons1__modifyPublicationResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyPublicationResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyPublication
#define SOAP_TYPE_ICat3_PointerTons1__modifyPublication (699)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__modifyPublication(struct soap *,
                                               ns1__modifyPublication *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__modifyPublication(struct soap *, const char *, int,
                                         ns1__modifyPublication *const *,
                                         const char *);
SOAP_FMAC3 ns1__modifyPublication **SOAP_FMAC4
soap_in_PointerTons1__modifyPublication(struct soap *, const char *,
                                        ns1__modifyPublication **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__modifyPublication(struct soap *,
                                         ns1__modifyPublication *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__modifyPublication
#define soap_write_PointerTons1__modifyPublication(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__modifyPublication(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__modifyPublication(   \
                                soap, data, "ns1:modifyPublication", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyPublication **SOAP_FMAC4
soap_get_PointerTons1__modifyPublication(struct soap *,
                                         ns1__modifyPublication **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__modifyPublication
#define soap_read_PointerTons1__modifyPublication(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyPublication(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifySampleResponse
#define SOAP_TYPE_ICat3_PointerTons1__modifySampleResponse (695)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__modifySampleResponse(
    struct soap *, ns1__modifySampleResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__modifySampleResponse(struct soap *, const char *, int,
                                            ns1__modifySampleResponse *const *,
                                            const char *);
SOAP_FMAC3 ns1__modifySampleResponse **SOAP_FMAC4
soap_in_PointerTons1__modifySampleResponse(struct soap *, const char *,
                                           ns1__modifySampleResponse **,
                                           const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__modifySampleResponse(struct soap *,
                                            ns1__modifySampleResponse *const *,
                                            const char *, const char *);

#ifndef soap_write_PointerTons1__modifySampleResponse
#define soap_write_PointerTons1__modifySampleResponse(soap, data)              \
  (ICat3::soap_serialize_PointerTons1__modifySampleResponse(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifySampleResponse(                     \
           soap, data, "ns1:modifySampleResponse", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifySampleResponse **SOAP_FMAC4
soap_get_PointerTons1__modifySampleResponse(struct soap *,
                                            ns1__modifySampleResponse **,
                                            const char *, const char *);

#ifndef soap_read_PointerTons1__modifySampleResponse
#define soap_read_PointerTons1__modifySampleResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifySampleResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifySample
#define SOAP_TYPE_ICat3_PointerTons1__modifySample (694)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__modifySample(struct soap *,
                                          ns1__modifySample *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__modifySample(struct soap *, const char *, int,
                                    ns1__modifySample *const *, const char *);
SOAP_FMAC3 ns1__modifySample **SOAP_FMAC4
soap_in_PointerTons1__modifySample(struct soap *, const char *,
                                   ns1__modifySample **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__modifySample(struct soap *, ns1__modifySample *const *,
                                    const char *, const char *);

#ifndef soap_write_PointerTons1__modifySample
#define soap_write_PointerTons1__modifySample(soap, data)                      \
  (ICat3::soap_serialize_PointerTons1__modifySample(soap, data),               \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__modifySample(        \
                                soap, data, "ns1:modifySample", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifySample **SOAP_FMAC4
soap_get_PointerTons1__modifySample(struct soap *, ns1__modifySample **,
                                    const char *, const char *);

#ifndef soap_read_PointerTons1__modifySample
#define soap_read_PointerTons1__modifySample(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifySample(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyInvestigatorResponse
#define SOAP_TYPE_ICat3_PointerTons1__modifyInvestigatorResponse (690)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__modifyInvestigatorResponse(
    struct soap *, ns1__modifyInvestigatorResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__modifyInvestigatorResponse(
    struct soap *, const char *, int, ns1__modifyInvestigatorResponse *const *,
    const char *);
SOAP_FMAC3 ns1__modifyInvestigatorResponse **SOAP_FMAC4
soap_in_PointerTons1__modifyInvestigatorResponse(
    struct soap *, const char *, ns1__modifyInvestigatorResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__modifyInvestigatorResponse(
    struct soap *, ns1__modifyInvestigatorResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__modifyInvestigatorResponse
#define soap_write_PointerTons1__modifyInvestigatorResponse(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__modifyInvestigatorResponse(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifyInvestigatorResponse(               \
           soap, data, "ns1:modifyInvestigatorResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyInvestigatorResponse **SOAP_FMAC4
soap_get_PointerTons1__modifyInvestigatorResponse(
    struct soap *, ns1__modifyInvestigatorResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__modifyInvestigatorResponse
#define soap_read_PointerTons1__modifyInvestigatorResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyInvestigatorResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyInvestigator
#define SOAP_TYPE_ICat3_PointerTons1__modifyInvestigator (689)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__modifyInvestigator(
    struct soap *, ns1__modifyInvestigator *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__modifyInvestigator(struct soap *, const char *, int,
                                          ns1__modifyInvestigator *const *,
                                          const char *);
SOAP_FMAC3 ns1__modifyInvestigator **SOAP_FMAC4
soap_in_PointerTons1__modifyInvestigator(struct soap *, const char *,
                                         ns1__modifyInvestigator **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__modifyInvestigator(struct soap *,
                                          ns1__modifyInvestigator *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__modifyInvestigator
#define soap_write_PointerTons1__modifyInvestigator(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__modifyInvestigator(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__modifyInvestigator(  \
                                soap, data, "ns1:modifyInvestigator", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyInvestigator **SOAP_FMAC4
soap_get_PointerTons1__modifyInvestigator(struct soap *,
                                          ns1__modifyInvestigator **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__modifyInvestigator
#define soap_read_PointerTons1__modifyInvestigator(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyInvestigator(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyInvestigationResponse
#define SOAP_TYPE_ICat3_PointerTons1__modifyInvestigationResponse (685)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__modifyInvestigationResponse(
    struct soap *, ns1__modifyInvestigationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__modifyInvestigationResponse(
    struct soap *, const char *, int, ns1__modifyInvestigationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__modifyInvestigationResponse **SOAP_FMAC4
soap_in_PointerTons1__modifyInvestigationResponse(
    struct soap *, const char *, ns1__modifyInvestigationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__modifyInvestigationResponse(
    struct soap *, ns1__modifyInvestigationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__modifyInvestigationResponse
#define soap_write_PointerTons1__modifyInvestigationResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__modifyInvestigationResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifyInvestigationResponse(              \
           soap, data, "ns1:modifyInvestigationResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyInvestigationResponse **SOAP_FMAC4
soap_get_PointerTons1__modifyInvestigationResponse(
    struct soap *, ns1__modifyInvestigationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__modifyInvestigationResponse
#define soap_read_PointerTons1__modifyInvestigationResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyInvestigationResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__modifyInvestigation
#define SOAP_TYPE_ICat3_PointerTons1__modifyInvestigation (684)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__modifyInvestigation(
    struct soap *, ns1__modifyInvestigation *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__modifyInvestigation(struct soap *, const char *, int,
                                           ns1__modifyInvestigation *const *,
                                           const char *);
SOAP_FMAC3 ns1__modifyInvestigation **SOAP_FMAC4
soap_in_PointerTons1__modifyInvestigation(struct soap *, const char *,
                                          ns1__modifyInvestigation **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__modifyInvestigation(struct soap *,
                                           ns1__modifyInvestigation *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__modifyInvestigation
#define soap_write_PointerTons1__modifyInvestigation(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__modifyInvestigation(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__modifyInvestigation(                      \
           soap, data, "ns1:modifyInvestigation", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__modifyInvestigation **SOAP_FMAC4
soap_get_PointerTons1__modifyInvestigation(struct soap *,
                                           ns1__modifyInvestigation **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__modifyInvestigation
#define soap_read_PointerTons1__modifyInvestigation(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__modifyInvestigation(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteSampleParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__deleteSampleParameterResponse (680)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deleteSampleParameterResponse(
    struct soap *, ns1__deleteSampleParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deleteSampleParameterResponse(
    struct soap *, const char *, int,
    ns1__deleteSampleParameterResponse *const *, const char *);
SOAP_FMAC3 ns1__deleteSampleParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__deleteSampleParameterResponse(
    struct soap *, const char *, ns1__deleteSampleParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deleteSampleParameterResponse(
    struct soap *, ns1__deleteSampleParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteSampleParameterResponse
#define soap_write_PointerTons1__deleteSampleParameterResponse(soap, data)     \
  (ICat3::soap_serialize_PointerTons1__deleteSampleParameterResponse(soap,     \
                                                                     data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteSampleParameterResponse(            \
           soap, data, "ns1:deleteSampleParameterResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteSampleParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__deleteSampleParameterResponse(
    struct soap *, ns1__deleteSampleParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__deleteSampleParameterResponse
#define soap_read_PointerTons1__deleteSampleParameterResponse(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteSampleParameterResponse(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteSampleParameter
#define SOAP_TYPE_ICat3_PointerTons1__deleteSampleParameter (679)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__deleteSampleParameter(
    struct soap *, ns1__deleteSampleParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deleteSampleParameter(
    struct soap *, const char *, int, ns1__deleteSampleParameter *const *,
    const char *);
SOAP_FMAC3 ns1__deleteSampleParameter **SOAP_FMAC4
soap_in_PointerTons1__deleteSampleParameter(struct soap *, const char *,
                                            ns1__deleteSampleParameter **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deleteSampleParameter(
    struct soap *, ns1__deleteSampleParameter *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteSampleParameter
#define soap_write_PointerTons1__deleteSampleParameter(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__deleteSampleParameter(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteSampleParameter(                    \
           soap, data, "ns1:deleteSampleParameter", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteSampleParameter **SOAP_FMAC4
soap_get_PointerTons1__deleteSampleParameter(struct soap *,
                                             ns1__deleteSampleParameter **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__deleteSampleParameter
#define soap_read_PointerTons1__deleteSampleParameter(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteSampleParameter(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteSampleResponse
#define SOAP_TYPE_ICat3_PointerTons1__deleteSampleResponse (675)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__deleteSampleResponse(
    struct soap *, ns1__deleteSampleResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__deleteSampleResponse(struct soap *, const char *, int,
                                            ns1__deleteSampleResponse *const *,
                                            const char *);
SOAP_FMAC3 ns1__deleteSampleResponse **SOAP_FMAC4
soap_in_PointerTons1__deleteSampleResponse(struct soap *, const char *,
                                           ns1__deleteSampleResponse **,
                                           const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__deleteSampleResponse(struct soap *,
                                            ns1__deleteSampleResponse *const *,
                                            const char *, const char *);

#ifndef soap_write_PointerTons1__deleteSampleResponse
#define soap_write_PointerTons1__deleteSampleResponse(soap, data)              \
  (ICat3::soap_serialize_PointerTons1__deleteSampleResponse(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteSampleResponse(                     \
           soap, data, "ns1:deleteSampleResponse", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteSampleResponse **SOAP_FMAC4
soap_get_PointerTons1__deleteSampleResponse(struct soap *,
                                            ns1__deleteSampleResponse **,
                                            const char *, const char *);

#ifndef soap_read_PointerTons1__deleteSampleResponse
#define soap_read_PointerTons1__deleteSampleResponse(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteSampleResponse(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteSample
#define SOAP_TYPE_ICat3_PointerTons1__deleteSample (674)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deleteSample(struct soap *,
                                          ns1__deleteSample *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__deleteSample(struct soap *, const char *, int,
                                    ns1__deleteSample *const *, const char *);
SOAP_FMAC3 ns1__deleteSample **SOAP_FMAC4
soap_in_PointerTons1__deleteSample(struct soap *, const char *,
                                   ns1__deleteSample **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__deleteSample(struct soap *, ns1__deleteSample *const *,
                                    const char *, const char *);

#ifndef soap_write_PointerTons1__deleteSample
#define soap_write_PointerTons1__deleteSample(soap, data)                      \
  (ICat3::soap_serialize_PointerTons1__deleteSample(soap, data),               \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__deleteSample(        \
                                soap, data, "ns1:deleteSample", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteSample **SOAP_FMAC4
soap_get_PointerTons1__deleteSample(struct soap *, ns1__deleteSample **,
                                    const char *, const char *);

#ifndef soap_read_PointerTons1__deleteSample
#define soap_read_PointerTons1__deleteSample(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteSample(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deletePublicationResponse
#define SOAP_TYPE_ICat3_PointerTons1__deletePublicationResponse (670)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deletePublicationResponse(
    struct soap *, ns1__deletePublicationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deletePublicationResponse(
    struct soap *, const char *, int, ns1__deletePublicationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__deletePublicationResponse **SOAP_FMAC4
soap_in_PointerTons1__deletePublicationResponse(
    struct soap *, const char *, ns1__deletePublicationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deletePublicationResponse(
    struct soap *, ns1__deletePublicationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deletePublicationResponse
#define soap_write_PointerTons1__deletePublicationResponse(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__deletePublicationResponse(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deletePublicationResponse(                \
           soap, data, "ns1:deletePublicationResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deletePublicationResponse **SOAP_FMAC4
soap_get_PointerTons1__deletePublicationResponse(
    struct soap *, ns1__deletePublicationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__deletePublicationResponse
#define soap_read_PointerTons1__deletePublicationResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deletePublicationResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deletePublication
#define SOAP_TYPE_ICat3_PointerTons1__deletePublication (669)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deletePublication(struct soap *,
                                               ns1__deletePublication *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__deletePublication(struct soap *, const char *, int,
                                         ns1__deletePublication *const *,
                                         const char *);
SOAP_FMAC3 ns1__deletePublication **SOAP_FMAC4
soap_in_PointerTons1__deletePublication(struct soap *, const char *,
                                        ns1__deletePublication **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__deletePublication(struct soap *,
                                         ns1__deletePublication *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__deletePublication
#define soap_write_PointerTons1__deletePublication(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__deletePublication(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__deletePublication(   \
                                soap, data, "ns1:deletePublication", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deletePublication **SOAP_FMAC4
soap_get_PointerTons1__deletePublication(struct soap *,
                                         ns1__deletePublication **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__deletePublication
#define soap_read_PointerTons1__deletePublication(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deletePublication(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteKeywordResponse
#define SOAP_TYPE_ICat3_PointerTons1__deleteKeywordResponse (665)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__deleteKeywordResponse(
    struct soap *, ns1__deleteKeywordResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deleteKeywordResponse(
    struct soap *, const char *, int, ns1__deleteKeywordResponse *const *,
    const char *);
SOAP_FMAC3 ns1__deleteKeywordResponse **SOAP_FMAC4
soap_in_PointerTons1__deleteKeywordResponse(struct soap *, const char *,
                                            ns1__deleteKeywordResponse **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deleteKeywordResponse(
    struct soap *, ns1__deleteKeywordResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteKeywordResponse
#define soap_write_PointerTons1__deleteKeywordResponse(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__deleteKeywordResponse(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteKeywordResponse(                    \
           soap, data, "ns1:deleteKeywordResponse", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteKeywordResponse **SOAP_FMAC4
soap_get_PointerTons1__deleteKeywordResponse(struct soap *,
                                             ns1__deleteKeywordResponse **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__deleteKeywordResponse
#define soap_read_PointerTons1__deleteKeywordResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteKeywordResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteKeyword
#define SOAP_TYPE_ICat3_PointerTons1__deleteKeyword (664)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deleteKeyword(struct soap *,
                                           ns1__deleteKeyword *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__deleteKeyword(struct soap *, const char *, int,
                                     ns1__deleteKeyword *const *, const char *);
SOAP_FMAC3 ns1__deleteKeyword **SOAP_FMAC4
soap_in_PointerTons1__deleteKeyword(struct soap *, const char *,
                                    ns1__deleteKeyword **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__deleteKeyword(struct soap *, ns1__deleteKeyword *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__deleteKeyword
#define soap_write_PointerTons1__deleteKeyword(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__deleteKeyword(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__deleteKeyword(       \
                                soap, data, "ns1:deleteKeyword", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteKeyword **SOAP_FMAC4
soap_get_PointerTons1__deleteKeyword(struct soap *, ns1__deleteKeyword **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__deleteKeyword
#define soap_read_PointerTons1__deleteKeyword(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteKeyword(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteInvestigatorResponse
#define SOAP_TYPE_ICat3_PointerTons1__deleteInvestigatorResponse (660)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deleteInvestigatorResponse(
    struct soap *, ns1__deleteInvestigatorResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deleteInvestigatorResponse(
    struct soap *, const char *, int, ns1__deleteInvestigatorResponse *const *,
    const char *);
SOAP_FMAC3 ns1__deleteInvestigatorResponse **SOAP_FMAC4
soap_in_PointerTons1__deleteInvestigatorResponse(
    struct soap *, const char *, ns1__deleteInvestigatorResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deleteInvestigatorResponse(
    struct soap *, ns1__deleteInvestigatorResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteInvestigatorResponse
#define soap_write_PointerTons1__deleteInvestigatorResponse(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__deleteInvestigatorResponse(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteInvestigatorResponse(               \
           soap, data, "ns1:deleteInvestigatorResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteInvestigatorResponse **SOAP_FMAC4
soap_get_PointerTons1__deleteInvestigatorResponse(
    struct soap *, ns1__deleteInvestigatorResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__deleteInvestigatorResponse
#define soap_read_PointerTons1__deleteInvestigatorResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteInvestigatorResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteInvestigator
#define SOAP_TYPE_ICat3_PointerTons1__deleteInvestigator (659)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__deleteInvestigator(
    struct soap *, ns1__deleteInvestigator *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__deleteInvestigator(struct soap *, const char *, int,
                                          ns1__deleteInvestigator *const *,
                                          const char *);
SOAP_FMAC3 ns1__deleteInvestigator **SOAP_FMAC4
soap_in_PointerTons1__deleteInvestigator(struct soap *, const char *,
                                         ns1__deleteInvestigator **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__deleteInvestigator(struct soap *,
                                          ns1__deleteInvestigator *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__deleteInvestigator
#define soap_write_PointerTons1__deleteInvestigator(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__deleteInvestigator(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__deleteInvestigator(  \
                                soap, data, "ns1:deleteInvestigator", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteInvestigator **SOAP_FMAC4
soap_get_PointerTons1__deleteInvestigator(struct soap *,
                                          ns1__deleteInvestigator **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__deleteInvestigator
#define soap_read_PointerTons1__deleteInvestigator(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteInvestigator(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addSampleParameterResponse
#define SOAP_TYPE_ICat3_PointerTons1__addSampleParameterResponse (656)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addSampleParameterResponse(
    struct soap *, ns1__addSampleParameterResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__addSampleParameterResponse(
    struct soap *, const char *, int, ns1__addSampleParameterResponse *const *,
    const char *);
SOAP_FMAC3 ns1__addSampleParameterResponse **SOAP_FMAC4
soap_in_PointerTons1__addSampleParameterResponse(
    struct soap *, const char *, ns1__addSampleParameterResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__addSampleParameterResponse(
    struct soap *, ns1__addSampleParameterResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__addSampleParameterResponse
#define soap_write_PointerTons1__addSampleParameterResponse(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__addSampleParameterResponse(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addSampleParameterResponse(               \
           soap, data, "ns1:addSampleParameterResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addSampleParameterResponse **SOAP_FMAC4
soap_get_PointerTons1__addSampleParameterResponse(
    struct soap *, ns1__addSampleParameterResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__addSampleParameterResponse
#define soap_read_PointerTons1__addSampleParameterResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addSampleParameterResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addSampleParameter
#define SOAP_TYPE_ICat3_PointerTons1__addSampleParameter (655)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__addSampleParameter(
    struct soap *, ns1__addSampleParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__addSampleParameter(struct soap *, const char *, int,
                                          ns1__addSampleParameter *const *,
                                          const char *);
SOAP_FMAC3 ns1__addSampleParameter **SOAP_FMAC4
soap_in_PointerTons1__addSampleParameter(struct soap *, const char *,
                                         ns1__addSampleParameter **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__addSampleParameter(struct soap *,
                                          ns1__addSampleParameter *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__addSampleParameter
#define soap_write_PointerTons1__addSampleParameter(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__addSampleParameter(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__addSampleParameter(  \
                                soap, data, "ns1:addSampleParameter", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addSampleParameter **SOAP_FMAC4
soap_get_PointerTons1__addSampleParameter(struct soap *,
                                          ns1__addSampleParameter **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__addSampleParameter
#define soap_read_PointerTons1__addSampleParameter(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addSampleParameter(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addPublicationResponse
#define SOAP_TYPE_ICat3_PointerTons1__addPublicationResponse (652)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__addPublicationResponse(
    struct soap *, ns1__addPublicationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__addPublicationResponse(
    struct soap *, const char *, int, ns1__addPublicationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__addPublicationResponse **SOAP_FMAC4
soap_in_PointerTons1__addPublicationResponse(struct soap *, const char *,
                                             ns1__addPublicationResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__addPublicationResponse(
    struct soap *, ns1__addPublicationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__addPublicationResponse
#define soap_write_PointerTons1__addPublicationResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__addPublicationResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addPublicationResponse(                   \
           soap, data, "ns1:addPublicationResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addPublicationResponse **SOAP_FMAC4
soap_get_PointerTons1__addPublicationResponse(struct soap *,
                                              ns1__addPublicationResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__addPublicationResponse
#define soap_read_PointerTons1__addPublicationResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addPublicationResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addPublication
#define SOAP_TYPE_ICat3_PointerTons1__addPublication (651)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addPublication(struct soap *,
                                            ns1__addPublication *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__addPublication(struct soap *, const char *, int,
                                      ns1__addPublication *const *,
                                      const char *);
SOAP_FMAC3 ns1__addPublication **SOAP_FMAC4
soap_in_PointerTons1__addPublication(struct soap *, const char *,
                                     ns1__addPublication **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__addPublication(struct soap *,
                                      ns1__addPublication *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__addPublication
#define soap_write_PointerTons1__addPublication(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__addPublication(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__addPublication(      \
                                soap, data, "ns1:addPublication", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addPublication **SOAP_FMAC4
soap_get_PointerTons1__addPublication(struct soap *, ns1__addPublication **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__addPublication
#define soap_read_PointerTons1__addPublication(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addPublication(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addSampleResponse
#define SOAP_TYPE_ICat3_PointerTons1__addSampleResponse (648)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addSampleResponse(struct soap *,
                                               ns1__addSampleResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__addSampleResponse(struct soap *, const char *, int,
                                         ns1__addSampleResponse *const *,
                                         const char *);
SOAP_FMAC3 ns1__addSampleResponse **SOAP_FMAC4
soap_in_PointerTons1__addSampleResponse(struct soap *, const char *,
                                        ns1__addSampleResponse **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__addSampleResponse(struct soap *,
                                         ns1__addSampleResponse *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__addSampleResponse
#define soap_write_PointerTons1__addSampleResponse(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__addSampleResponse(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__addSampleResponse(   \
                                soap, data, "ns1:addSampleResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addSampleResponse **SOAP_FMAC4
soap_get_PointerTons1__addSampleResponse(struct soap *,
                                         ns1__addSampleResponse **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__addSampleResponse
#define soap_read_PointerTons1__addSampleResponse(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addSampleResponse(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addSample
#define SOAP_TYPE_ICat3_PointerTons1__addSample (647)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addSample(struct soap *, ns1__addSample *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__addSample(struct soap *, const char *, int,
                                 ns1__addSample *const *, const char *);
SOAP_FMAC3 ns1__addSample **SOAP_FMAC4
soap_in_PointerTons1__addSample(struct soap *, const char *, ns1__addSample **,
                                const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__addSample(struct soap *, ns1__addSample *const *,
                                 const char *, const char *);

#ifndef soap_write_PointerTons1__addSample
#define soap_write_PointerTons1__addSample(soap, data)                         \
  (ICat3::soap_serialize_PointerTons1__addSample(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__addSample(           \
                                soap, data, "ns1:addSample", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addSample **SOAP_FMAC4
soap_get_PointerTons1__addSample(struct soap *, ns1__addSample **, const char *,
                                 const char *);

#ifndef soap_read_PointerTons1__addSample
#define soap_read_PointerTons1__addSample(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addSample(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addInvestigatorResponse
#define SOAP_TYPE_ICat3_PointerTons1__addInvestigatorResponse (644)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__addInvestigatorResponse(
    struct soap *, ns1__addInvestigatorResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__addInvestigatorResponse(
    struct soap *, const char *, int, ns1__addInvestigatorResponse *const *,
    const char *);
SOAP_FMAC3 ns1__addInvestigatorResponse **SOAP_FMAC4
soap_in_PointerTons1__addInvestigatorResponse(struct soap *, const char *,
                                              ns1__addInvestigatorResponse **,
                                              const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__addInvestigatorResponse(
    struct soap *, ns1__addInvestigatorResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__addInvestigatorResponse
#define soap_write_PointerTons1__addInvestigatorResponse(soap, data)           \
  (ICat3::soap_serialize_PointerTons1__addInvestigatorResponse(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__addInvestigatorResponse(                  \
           soap, data, "ns1:addInvestigatorResponse", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addInvestigatorResponse **SOAP_FMAC4
soap_get_PointerTons1__addInvestigatorResponse(struct soap *,
                                               ns1__addInvestigatorResponse **,
                                               const char *, const char *);

#ifndef soap_read_PointerTons1__addInvestigatorResponse
#define soap_read_PointerTons1__addInvestigatorResponse(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addInvestigatorResponse(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addInvestigator
#define SOAP_TYPE_ICat3_PointerTons1__addInvestigator (643)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addInvestigator(struct soap *,
                                             ns1__addInvestigator *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__addInvestigator(struct soap *, const char *, int,
                                       ns1__addInvestigator *const *,
                                       const char *);
SOAP_FMAC3 ns1__addInvestigator **SOAP_FMAC4
soap_in_PointerTons1__addInvestigator(struct soap *, const char *,
                                      ns1__addInvestigator **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__addInvestigator(struct soap *,
                                       ns1__addInvestigator *const *,
                                       const char *, const char *);

#ifndef soap_write_PointerTons1__addInvestigator
#define soap_write_PointerTons1__addInvestigator(soap, data)                   \
  (ICat3::soap_serialize_PointerTons1__addInvestigator(soap, data),            \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__addInvestigator(     \
                                soap, data, "ns1:addInvestigator", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addInvestigator **SOAP_FMAC4
soap_get_PointerTons1__addInvestigator(struct soap *, ns1__addInvestigator **,
                                       const char *, const char *);

#ifndef soap_read_PointerTons1__addInvestigator
#define soap_read_PointerTons1__addInvestigator(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addInvestigator(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addKeywordResponse
#define SOAP_TYPE_ICat3_PointerTons1__addKeywordResponse (640)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__addKeywordResponse(
    struct soap *, ns1__addKeywordResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__addKeywordResponse(struct soap *, const char *, int,
                                          ns1__addKeywordResponse *const *,
                                          const char *);
SOAP_FMAC3 ns1__addKeywordResponse **SOAP_FMAC4
soap_in_PointerTons1__addKeywordResponse(struct soap *, const char *,
                                         ns1__addKeywordResponse **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__addKeywordResponse(struct soap *,
                                          ns1__addKeywordResponse *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__addKeywordResponse
#define soap_write_PointerTons1__addKeywordResponse(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__addKeywordResponse(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__addKeywordResponse(  \
                                soap, data, "ns1:addKeywordResponse", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addKeywordResponse **SOAP_FMAC4
soap_get_PointerTons1__addKeywordResponse(struct soap *,
                                          ns1__addKeywordResponse **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__addKeywordResponse
#define soap_read_PointerTons1__addKeywordResponse(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addKeywordResponse(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__addKeyword
#define SOAP_TYPE_ICat3_PointerTons1__addKeyword (639)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__addKeyword(struct soap *,
                                        ns1__addKeyword *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__addKeyword(struct soap *, const char *, int,
                                  ns1__addKeyword *const *, const char *);
SOAP_FMAC3 ns1__addKeyword **SOAP_FMAC4
soap_in_PointerTons1__addKeyword(struct soap *, const char *,
                                 ns1__addKeyword **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__addKeyword(struct soap *, ns1__addKeyword *const *,
                                  const char *, const char *);

#ifndef soap_write_PointerTons1__addKeyword
#define soap_write_PointerTons1__addKeyword(soap, data)                        \
  (ICat3::soap_serialize_PointerTons1__addKeyword(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__addKeyword(          \
                                soap, data, "ns1:addKeyword", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__addKeyword **SOAP_FMAC4
soap_get_PointerTons1__addKeyword(struct soap *, ns1__addKeyword **,
                                  const char *, const char *);

#ifndef soap_read_PointerTons1__addKeyword
#define soap_read_PointerTons1__addKeyword(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__addKeyword(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeInvestigationResponse
#define SOAP_TYPE_ICat3_PointerTons1__removeInvestigationResponse (635)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__removeInvestigationResponse(
    struct soap *, ns1__removeInvestigationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__removeInvestigationResponse(
    struct soap *, const char *, int, ns1__removeInvestigationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__removeInvestigationResponse **SOAP_FMAC4
soap_in_PointerTons1__removeInvestigationResponse(
    struct soap *, const char *, ns1__removeInvestigationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__removeInvestigationResponse(
    struct soap *, ns1__removeInvestigationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__removeInvestigationResponse
#define soap_write_PointerTons1__removeInvestigationResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__removeInvestigationResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeInvestigationResponse(              \
           soap, data, "ns1:removeInvestigationResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeInvestigationResponse **SOAP_FMAC4
soap_get_PointerTons1__removeInvestigationResponse(
    struct soap *, ns1__removeInvestigationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__removeInvestigationResponse
#define soap_read_PointerTons1__removeInvestigationResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeInvestigationResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__removeInvestigation
#define SOAP_TYPE_ICat3_PointerTons1__removeInvestigation (634)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__removeInvestigation(
    struct soap *, ns1__removeInvestigation *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__removeInvestigation(struct soap *, const char *, int,
                                           ns1__removeInvestigation *const *,
                                           const char *);
SOAP_FMAC3 ns1__removeInvestigation **SOAP_FMAC4
soap_in_PointerTons1__removeInvestigation(struct soap *, const char *,
                                          ns1__removeInvestigation **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__removeInvestigation(struct soap *,
                                           ns1__removeInvestigation *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__removeInvestigation
#define soap_write_PointerTons1__removeInvestigation(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__removeInvestigation(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__removeInvestigation(                      \
           soap, data, "ns1:removeInvestigation", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__removeInvestigation **SOAP_FMAC4
soap_get_PointerTons1__removeInvestigation(struct soap *,
                                           ns1__removeInvestigation **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__removeInvestigation
#define soap_read_PointerTons1__removeInvestigation(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__removeInvestigation(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteInvestigationResponse
#define SOAP_TYPE_ICat3_PointerTons1__deleteInvestigationResponse (630)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__deleteInvestigationResponse(
    struct soap *, ns1__deleteInvestigationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__deleteInvestigationResponse(
    struct soap *, const char *, int, ns1__deleteInvestigationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__deleteInvestigationResponse **SOAP_FMAC4
soap_in_PointerTons1__deleteInvestigationResponse(
    struct soap *, const char *, ns1__deleteInvestigationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__deleteInvestigationResponse(
    struct soap *, ns1__deleteInvestigationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__deleteInvestigationResponse
#define soap_write_PointerTons1__deleteInvestigationResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__deleteInvestigationResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteInvestigationResponse(              \
           soap, data, "ns1:deleteInvestigationResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteInvestigationResponse **SOAP_FMAC4
soap_get_PointerTons1__deleteInvestigationResponse(
    struct soap *, ns1__deleteInvestigationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__deleteInvestigationResponse
#define soap_read_PointerTons1__deleteInvestigationResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteInvestigationResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__deleteInvestigation
#define SOAP_TYPE_ICat3_PointerTons1__deleteInvestigation (629)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__deleteInvestigation(
    struct soap *, ns1__deleteInvestigation *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__deleteInvestigation(struct soap *, const char *, int,
                                           ns1__deleteInvestigation *const *,
                                           const char *);
SOAP_FMAC3 ns1__deleteInvestigation **SOAP_FMAC4
soap_in_PointerTons1__deleteInvestigation(struct soap *, const char *,
                                          ns1__deleteInvestigation **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__deleteInvestigation(struct soap *,
                                           ns1__deleteInvestigation *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__deleteInvestigation
#define soap_write_PointerTons1__deleteInvestigation(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__deleteInvestigation(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__deleteInvestigation(                      \
           soap, data, "ns1:deleteInvestigation", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__deleteInvestigation **SOAP_FMAC4
soap_get_PointerTons1__deleteInvestigation(struct soap *,
                                           ns1__deleteInvestigation **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__deleteInvestigation
#define soap_read_PointerTons1__deleteInvestigation(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__deleteInvestigation(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__createInvestigationResponse
#define SOAP_TYPE_ICat3_PointerTons1__createInvestigationResponse (626)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__createInvestigationResponse(
    struct soap *, ns1__createInvestigationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__createInvestigationResponse(
    struct soap *, const char *, int, ns1__createInvestigationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__createInvestigationResponse **SOAP_FMAC4
soap_in_PointerTons1__createInvestigationResponse(
    struct soap *, const char *, ns1__createInvestigationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__createInvestigationResponse(
    struct soap *, ns1__createInvestigationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__createInvestigationResponse
#define soap_write_PointerTons1__createInvestigationResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__createInvestigationResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__createInvestigationResponse(              \
           soap, data, "ns1:createInvestigationResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createInvestigationResponse **SOAP_FMAC4
soap_get_PointerTons1__createInvestigationResponse(
    struct soap *, ns1__createInvestigationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__createInvestigationResponse
#define soap_read_PointerTons1__createInvestigationResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__createInvestigationResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__createInvestigation
#define SOAP_TYPE_ICat3_PointerTons1__createInvestigation (625)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__createInvestigation(
    struct soap *, ns1__createInvestigation *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__createInvestigation(struct soap *, const char *, int,
                                           ns1__createInvestigation *const *,
                                           const char *);
SOAP_FMAC3 ns1__createInvestigation **SOAP_FMAC4
soap_in_PointerTons1__createInvestigation(struct soap *, const char *,
                                          ns1__createInvestigation **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__createInvestigation(struct soap *,
                                           ns1__createInvestigation *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__createInvestigation
#define soap_write_PointerTons1__createInvestigation(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__createInvestigation(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__createInvestigation(                      \
           soap, data, "ns1:createInvestigation", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__createInvestigation **SOAP_FMAC4
soap_get_PointerTons1__createInvestigation(struct soap *,
                                           ns1__createInvestigation **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__createInvestigation
#define soap_read_PointerTons1__createInvestigation(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__createInvestigation(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getInvestigationsIncludesResponse
#define SOAP_TYPE_ICat3_PointerTons1__getInvestigationsIncludesResponse (622)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getInvestigationsIncludesResponse(
    struct soap *, ns1__getInvestigationsIncludesResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getInvestigationsIncludesResponse(
    struct soap *, const char *, int,
    ns1__getInvestigationsIncludesResponse *const *, const char *);
SOAP_FMAC3 ns1__getInvestigationsIncludesResponse **SOAP_FMAC4
soap_in_PointerTons1__getInvestigationsIncludesResponse(
    struct soap *, const char *, ns1__getInvestigationsIncludesResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getInvestigationsIncludesResponse(
    struct soap *, ns1__getInvestigationsIncludesResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__getInvestigationsIncludesResponse
#define soap_write_PointerTons1__getInvestigationsIncludesResponse(soap, data) \
  (ICat3::soap_serialize_PointerTons1__getInvestigationsIncludesResponse(      \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getInvestigationsIncludesResponse(        \
           soap, data, "ns1:getInvestigationsIncludesResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationsIncludesResponse **SOAP_FMAC4
soap_get_PointerTons1__getInvestigationsIncludesResponse(
    struct soap *, ns1__getInvestigationsIncludesResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getInvestigationsIncludesResponse
#define soap_read_PointerTons1__getInvestigationsIncludesResponse(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getInvestigationsIncludesResponse(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getInvestigationsIncludes
#define SOAP_TYPE_ICat3_PointerTons1__getInvestigationsIncludes (621)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getInvestigationsIncludes(
    struct soap *, ns1__getInvestigationsIncludes *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getInvestigationsIncludes(
    struct soap *, const char *, int, ns1__getInvestigationsIncludes *const *,
    const char *);
SOAP_FMAC3 ns1__getInvestigationsIncludes **SOAP_FMAC4
soap_in_PointerTons1__getInvestigationsIncludes(
    struct soap *, const char *, ns1__getInvestigationsIncludes **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getInvestigationsIncludes(
    struct soap *, ns1__getInvestigationsIncludes *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getInvestigationsIncludes
#define soap_write_PointerTons1__getInvestigationsIncludes(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__getInvestigationsIncludes(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getInvestigationsIncludes(                \
           soap, data, "ns1:getInvestigationsIncludes", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationsIncludes **SOAP_FMAC4
soap_get_PointerTons1__getInvestigationsIncludes(
    struct soap *, ns1__getInvestigationsIncludes **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getInvestigationsIncludes
#define soap_read_PointerTons1__getInvestigationsIncludes(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getInvestigationsIncludes(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getInvestigationsResponse
#define SOAP_TYPE_ICat3_PointerTons1__getInvestigationsResponse (618)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getInvestigationsResponse(
    struct soap *, ns1__getInvestigationsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getInvestigationsResponse(
    struct soap *, const char *, int, ns1__getInvestigationsResponse *const *,
    const char *);
SOAP_FMAC3 ns1__getInvestigationsResponse **SOAP_FMAC4
soap_in_PointerTons1__getInvestigationsResponse(
    struct soap *, const char *, ns1__getInvestigationsResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getInvestigationsResponse(
    struct soap *, ns1__getInvestigationsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getInvestigationsResponse
#define soap_write_PointerTons1__getInvestigationsResponse(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__getInvestigationsResponse(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getInvestigationsResponse(                \
           soap, data, "ns1:getInvestigationsResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationsResponse **SOAP_FMAC4
soap_get_PointerTons1__getInvestigationsResponse(
    struct soap *, ns1__getInvestigationsResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getInvestigationsResponse
#define soap_read_PointerTons1__getInvestigationsResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getInvestigationsResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getInvestigations
#define SOAP_TYPE_ICat3_PointerTons1__getInvestigations (617)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getInvestigations(struct soap *,
                                               ns1__getInvestigations *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getInvestigations(struct soap *, const char *, int,
                                         ns1__getInvestigations *const *,
                                         const char *);
SOAP_FMAC3 ns1__getInvestigations **SOAP_FMAC4
soap_in_PointerTons1__getInvestigations(struct soap *, const char *,
                                        ns1__getInvestigations **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getInvestigations(struct soap *,
                                         ns1__getInvestigations *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__getInvestigations
#define soap_write_PointerTons1__getInvestigations(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__getInvestigations(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getInvestigations(   \
                                soap, data, "ns1:getInvestigations", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigations **SOAP_FMAC4
soap_get_PointerTons1__getInvestigations(struct soap *,
                                         ns1__getInvestigations **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__getInvestigations
#define soap_read_PointerTons1__getInvestigations(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getInvestigations(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getInvestigationIncludesResponse
#define SOAP_TYPE_ICat3_PointerTons1__getInvestigationIncludesResponse (614)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getInvestigationIncludesResponse(
    struct soap *, ns1__getInvestigationIncludesResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getInvestigationIncludesResponse(
    struct soap *, const char *, int,
    ns1__getInvestigationIncludesResponse *const *, const char *);
SOAP_FMAC3 ns1__getInvestigationIncludesResponse **SOAP_FMAC4
soap_in_PointerTons1__getInvestigationIncludesResponse(
    struct soap *, const char *, ns1__getInvestigationIncludesResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getInvestigationIncludesResponse(
    struct soap *, ns1__getInvestigationIncludesResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getInvestigationIncludesResponse
#define soap_write_PointerTons1__getInvestigationIncludesResponse(soap, data)  \
  (ICat3::soap_serialize_PointerTons1__getInvestigationIncludesResponse(soap,  \
                                                                        data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getInvestigationIncludesResponse(         \
           soap, data, "ns1:getInvestigationIncludesResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationIncludesResponse **SOAP_FMAC4
soap_get_PointerTons1__getInvestigationIncludesResponse(
    struct soap *, ns1__getInvestigationIncludesResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getInvestigationIncludesResponse
#define soap_read_PointerTons1__getInvestigationIncludesResponse(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getInvestigationIncludesResponse(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getInvestigationIncludes
#define SOAP_TYPE_ICat3_PointerTons1__getInvestigationIncludes (613)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getInvestigationIncludes(
    struct soap *, ns1__getInvestigationIncludes *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getInvestigationIncludes(
    struct soap *, const char *, int, ns1__getInvestigationIncludes *const *,
    const char *);
SOAP_FMAC3 ns1__getInvestigationIncludes **SOAP_FMAC4
soap_in_PointerTons1__getInvestigationIncludes(struct soap *, const char *,
                                               ns1__getInvestigationIncludes **,
                                               const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getInvestigationIncludes(
    struct soap *, ns1__getInvestigationIncludes *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getInvestigationIncludes
#define soap_write_PointerTons1__getInvestigationIncludes(soap, data)          \
  (ICat3::soap_serialize_PointerTons1__getInvestigationIncludes(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getInvestigationIncludes(                 \
           soap, data, "ns1:getInvestigationIncludes", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationIncludes **SOAP_FMAC4
soap_get_PointerTons1__getInvestigationIncludes(
    struct soap *, ns1__getInvestigationIncludes **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getInvestigationIncludes
#define soap_read_PointerTons1__getInvestigationIncludes(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getInvestigationIncludes(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getInvestigationResponse
#define SOAP_TYPE_ICat3_PointerTons1__getInvestigationResponse (610)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getInvestigationResponse(
    struct soap *, ns1__getInvestigationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getInvestigationResponse(
    struct soap *, const char *, int, ns1__getInvestigationResponse *const *,
    const char *);
SOAP_FMAC3 ns1__getInvestigationResponse **SOAP_FMAC4
soap_in_PointerTons1__getInvestigationResponse(struct soap *, const char *,
                                               ns1__getInvestigationResponse **,
                                               const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getInvestigationResponse(
    struct soap *, ns1__getInvestigationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getInvestigationResponse
#define soap_write_PointerTons1__getInvestigationResponse(soap, data)          \
  (ICat3::soap_serialize_PointerTons1__getInvestigationResponse(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getInvestigationResponse(                 \
           soap, data, "ns1:getInvestigationResponse", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigationResponse **SOAP_FMAC4
soap_get_PointerTons1__getInvestigationResponse(
    struct soap *, ns1__getInvestigationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getInvestigationResponse
#define soap_read_PointerTons1__getInvestigationResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getInvestigationResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getInvestigation
#define SOAP_TYPE_ICat3_PointerTons1__getInvestigation (609)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getInvestigation(struct soap *,
                                              ns1__getInvestigation *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getInvestigation(struct soap *, const char *, int,
                                        ns1__getInvestigation *const *,
                                        const char *);
SOAP_FMAC3 ns1__getInvestigation **SOAP_FMAC4
soap_in_PointerTons1__getInvestigation(struct soap *, const char *,
                                       ns1__getInvestigation **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getInvestigation(struct soap *,
                                        ns1__getInvestigation *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons1__getInvestigation
#define soap_write_PointerTons1__getInvestigation(soap, data)                  \
  (ICat3::soap_serialize_PointerTons1__getInvestigation(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getInvestigation(    \
                                soap, data, "ns1:getInvestigation", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInvestigation **SOAP_FMAC4
soap_get_PointerTons1__getInvestigation(struct soap *, ns1__getInvestigation **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons1__getInvestigation
#define soap_read_PointerTons1__getInvestigation(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getInvestigation(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listDatafileFormatsResponse
#define SOAP_TYPE_ICat3_PointerTons1__listDatafileFormatsResponse (606)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__listDatafileFormatsResponse(
    struct soap *, ns1__listDatafileFormatsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__listDatafileFormatsResponse(
    struct soap *, const char *, int, ns1__listDatafileFormatsResponse *const *,
    const char *);
SOAP_FMAC3 ns1__listDatafileFormatsResponse **SOAP_FMAC4
soap_in_PointerTons1__listDatafileFormatsResponse(
    struct soap *, const char *, ns1__listDatafileFormatsResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__listDatafileFormatsResponse(
    struct soap *, ns1__listDatafileFormatsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__listDatafileFormatsResponse
#define soap_write_PointerTons1__listDatafileFormatsResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__listDatafileFormatsResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__listDatafileFormatsResponse(              \
           soap, data, "ns1:listDatafileFormatsResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatafileFormatsResponse **SOAP_FMAC4
soap_get_PointerTons1__listDatafileFormatsResponse(
    struct soap *, ns1__listDatafileFormatsResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__listDatafileFormatsResponse
#define soap_read_PointerTons1__listDatafileFormatsResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listDatafileFormatsResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listDatafileFormats
#define SOAP_TYPE_ICat3_PointerTons1__listDatafileFormats (605)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__listDatafileFormats(
    struct soap *, ns1__listDatafileFormats *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__listDatafileFormats(struct soap *, const char *, int,
                                           ns1__listDatafileFormats *const *,
                                           const char *);
SOAP_FMAC3 ns1__listDatafileFormats **SOAP_FMAC4
soap_in_PointerTons1__listDatafileFormats(struct soap *, const char *,
                                          ns1__listDatafileFormats **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__listDatafileFormats(struct soap *,
                                           ns1__listDatafileFormats *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__listDatafileFormats
#define soap_write_PointerTons1__listDatafileFormats(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__listDatafileFormats(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__listDatafileFormats(                      \
           soap, data, "ns1:listDatafileFormats", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatafileFormats **SOAP_FMAC4
soap_get_PointerTons1__listDatafileFormats(struct soap *,
                                           ns1__listDatafileFormats **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__listDatafileFormats
#define soap_read_PointerTons1__listDatafileFormats(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listDatafileFormats(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByRunNumberPaginationResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchByRunNumberPaginationResponse (602)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByRunNumberPaginationResponse(
    struct soap *, ns1__searchByRunNumberPaginationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchByRunNumberPaginationResponse(
    struct soap *, const char *, int,
    ns1__searchByRunNumberPaginationResponse *const *, const char *);
SOAP_FMAC3 ns1__searchByRunNumberPaginationResponse **SOAP_FMAC4
soap_in_PointerTons1__searchByRunNumberPaginationResponse(
    struct soap *, const char *, ns1__searchByRunNumberPaginationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchByRunNumberPaginationResponse(
    struct soap *, ns1__searchByRunNumberPaginationResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchByRunNumberPaginationResponse
#define soap_write_PointerTons1__searchByRunNumberPaginationResponse(soap,     \
                                                                     data)     \
  (ICat3::soap_serialize_PointerTons1__searchByRunNumberPaginationResponse(    \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByRunNumberPaginationResponse(      \
           soap, data, "ns1:searchByRunNumberPaginationResponse", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByRunNumberPaginationResponse **SOAP_FMAC4
soap_get_PointerTons1__searchByRunNumberPaginationResponse(
    struct soap *, ns1__searchByRunNumberPaginationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByRunNumberPaginationResponse
#define soap_read_PointerTons1__searchByRunNumberPaginationResponse(soap,      \
                                                                    data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByRunNumberPaginationResponse(     \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByRunNumberPagination
#define SOAP_TYPE_ICat3_PointerTons1__searchByRunNumberPagination (601)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByRunNumberPagination(
    struct soap *, ns1__searchByRunNumberPagination *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchByRunNumberPagination(
    struct soap *, const char *, int, ns1__searchByRunNumberPagination *const *,
    const char *);
SOAP_FMAC3 ns1__searchByRunNumberPagination **SOAP_FMAC4
soap_in_PointerTons1__searchByRunNumberPagination(
    struct soap *, const char *, ns1__searchByRunNumberPagination **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchByRunNumberPagination(
    struct soap *, ns1__searchByRunNumberPagination *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchByRunNumberPagination
#define soap_write_PointerTons1__searchByRunNumberPagination(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__searchByRunNumberPagination(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByRunNumberPagination(              \
           soap, data, "ns1:searchByRunNumberPagination", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByRunNumberPagination **SOAP_FMAC4
soap_get_PointerTons1__searchByRunNumberPagination(
    struct soap *, ns1__searchByRunNumberPagination **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByRunNumberPagination
#define soap_read_PointerTons1__searchByRunNumberPagination(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByRunNumberPagination(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByRunNumberResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchByRunNumberResponse (598)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByRunNumberResponse(
    struct soap *, ns1__searchByRunNumberResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchByRunNumberResponse(
    struct soap *, const char *, int, ns1__searchByRunNumberResponse *const *,
    const char *);
SOAP_FMAC3 ns1__searchByRunNumberResponse **SOAP_FMAC4
soap_in_PointerTons1__searchByRunNumberResponse(
    struct soap *, const char *, ns1__searchByRunNumberResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchByRunNumberResponse(
    struct soap *, ns1__searchByRunNumberResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchByRunNumberResponse
#define soap_write_PointerTons1__searchByRunNumberResponse(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__searchByRunNumberResponse(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByRunNumberResponse(                \
           soap, data, "ns1:searchByRunNumberResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByRunNumberResponse **SOAP_FMAC4
soap_get_PointerTons1__searchByRunNumberResponse(
    struct soap *, ns1__searchByRunNumberResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByRunNumberResponse
#define soap_read_PointerTons1__searchByRunNumberResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByRunNumberResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByRunNumber
#define SOAP_TYPE_ICat3_PointerTons1__searchByRunNumber (597)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByRunNumber(struct soap *,
                                               ns1__searchByRunNumber *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchByRunNumber(struct soap *, const char *, int,
                                         ns1__searchByRunNumber *const *,
                                         const char *);
SOAP_FMAC3 ns1__searchByRunNumber **SOAP_FMAC4
soap_in_PointerTons1__searchByRunNumber(struct soap *, const char *,
                                        ns1__searchByRunNumber **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchByRunNumber(struct soap *,
                                         ns1__searchByRunNumber *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__searchByRunNumber
#define soap_write_PointerTons1__searchByRunNumber(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__searchByRunNumber(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__searchByRunNumber(   \
                                soap, data, "ns1:searchByRunNumber", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByRunNumber **SOAP_FMAC4
soap_get_PointerTons1__searchByRunNumber(struct soap *,
                                         ns1__searchByRunNumber **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__searchByRunNumber
#define soap_read_PointerTons1__searchByRunNumber(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByRunNumber(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listDatasetStatusResponse
#define SOAP_TYPE_ICat3_PointerTons1__listDatasetStatusResponse (594)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__listDatasetStatusResponse(
    struct soap *, ns1__listDatasetStatusResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__listDatasetStatusResponse(
    struct soap *, const char *, int, ns1__listDatasetStatusResponse *const *,
    const char *);
SOAP_FMAC3 ns1__listDatasetStatusResponse **SOAP_FMAC4
soap_in_PointerTons1__listDatasetStatusResponse(
    struct soap *, const char *, ns1__listDatasetStatusResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__listDatasetStatusResponse(
    struct soap *, ns1__listDatasetStatusResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__listDatasetStatusResponse
#define soap_write_PointerTons1__listDatasetStatusResponse(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__listDatasetStatusResponse(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__listDatasetStatusResponse(                \
           soap, data, "ns1:listDatasetStatusResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatasetStatusResponse **SOAP_FMAC4
soap_get_PointerTons1__listDatasetStatusResponse(
    struct soap *, ns1__listDatasetStatusResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__listDatasetStatusResponse
#define soap_read_PointerTons1__listDatasetStatusResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listDatasetStatusResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listDatasetStatus
#define SOAP_TYPE_ICat3_PointerTons1__listDatasetStatus (593)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__listDatasetStatus(struct soap *,
                                               ns1__listDatasetStatus *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__listDatasetStatus(struct soap *, const char *, int,
                                         ns1__listDatasetStatus *const *,
                                         const char *);
SOAP_FMAC3 ns1__listDatasetStatus **SOAP_FMAC4
soap_in_PointerTons1__listDatasetStatus(struct soap *, const char *,
                                        ns1__listDatasetStatus **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__listDatasetStatus(struct soap *,
                                         ns1__listDatasetStatus *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__listDatasetStatus
#define soap_write_PointerTons1__listDatasetStatus(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__listDatasetStatus(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__listDatasetStatus(   \
                                soap, data, "ns1:listDatasetStatus", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatasetStatus **SOAP_FMAC4
soap_get_PointerTons1__listDatasetStatus(struct soap *,
                                         ns1__listDatasetStatus **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__listDatasetStatus
#define soap_read_PointerTons1__listDatasetStatus(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listDatasetStatus(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listDatasetTypesResponse
#define SOAP_TYPE_ICat3_PointerTons1__listDatasetTypesResponse (590)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__listDatasetTypesResponse(
    struct soap *, ns1__listDatasetTypesResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__listDatasetTypesResponse(
    struct soap *, const char *, int, ns1__listDatasetTypesResponse *const *,
    const char *);
SOAP_FMAC3 ns1__listDatasetTypesResponse **SOAP_FMAC4
soap_in_PointerTons1__listDatasetTypesResponse(struct soap *, const char *,
                                               ns1__listDatasetTypesResponse **,
                                               const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__listDatasetTypesResponse(
    struct soap *, ns1__listDatasetTypesResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__listDatasetTypesResponse
#define soap_write_PointerTons1__listDatasetTypesResponse(soap, data)          \
  (ICat3::soap_serialize_PointerTons1__listDatasetTypesResponse(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__listDatasetTypesResponse(                 \
           soap, data, "ns1:listDatasetTypesResponse", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatasetTypesResponse **SOAP_FMAC4
soap_get_PointerTons1__listDatasetTypesResponse(
    struct soap *, ns1__listDatasetTypesResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__listDatasetTypesResponse
#define soap_read_PointerTons1__listDatasetTypesResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listDatasetTypesResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listDatasetTypes
#define SOAP_TYPE_ICat3_PointerTons1__listDatasetTypes (589)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__listDatasetTypes(struct soap *,
                                              ns1__listDatasetTypes *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__listDatasetTypes(struct soap *, const char *, int,
                                        ns1__listDatasetTypes *const *,
                                        const char *);
SOAP_FMAC3 ns1__listDatasetTypes **SOAP_FMAC4
soap_in_PointerTons1__listDatasetTypes(struct soap *, const char *,
                                       ns1__listDatasetTypes **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__listDatasetTypes(struct soap *,
                                        ns1__listDatasetTypes *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons1__listDatasetTypes
#define soap_write_PointerTons1__listDatasetTypes(soap, data)                  \
  (ICat3::soap_serialize_PointerTons1__listDatasetTypes(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__listDatasetTypes(    \
                                soap, data, "ns1:listDatasetTypes", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listDatasetTypes **SOAP_FMAC4
soap_get_PointerTons1__listDatasetTypes(struct soap *, ns1__listDatasetTypes **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons1__listDatasetTypes
#define soap_read_PointerTons1__listDatasetTypes(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listDatasetTypes(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetsBySampleResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetsBySampleResponse (586)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchDatasetsBySampleResponse(
    struct soap *, ns1__searchDatasetsBySampleResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchDatasetsBySampleResponse(
    struct soap *, const char *, int,
    ns1__searchDatasetsBySampleResponse *const *, const char *);
SOAP_FMAC3 ns1__searchDatasetsBySampleResponse **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetsBySampleResponse(
    struct soap *, const char *, ns1__searchDatasetsBySampleResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchDatasetsBySampleResponse(
    struct soap *, ns1__searchDatasetsBySampleResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchDatasetsBySampleResponse
#define soap_write_PointerTons1__searchDatasetsBySampleResponse(soap, data)    \
  (ICat3::soap_serialize_PointerTons1__searchDatasetsBySampleResponse(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetsBySampleResponse(           \
           soap, data, "ns1:searchDatasetsBySampleResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetsBySampleResponse **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetsBySampleResponse(
    struct soap *, ns1__searchDatasetsBySampleResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchDatasetsBySampleResponse
#define soap_read_PointerTons1__searchDatasetsBySampleResponse(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetsBySampleResponse(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchDatasetsBySample
#define SOAP_TYPE_ICat3_PointerTons1__searchDatasetsBySample (585)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__searchDatasetsBySample(
    struct soap *, ns1__searchDatasetsBySample *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchDatasetsBySample(
    struct soap *, const char *, int, ns1__searchDatasetsBySample *const *,
    const char *);
SOAP_FMAC3 ns1__searchDatasetsBySample **SOAP_FMAC4
soap_in_PointerTons1__searchDatasetsBySample(struct soap *, const char *,
                                             ns1__searchDatasetsBySample **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchDatasetsBySample(
    struct soap *, ns1__searchDatasetsBySample *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchDatasetsBySample
#define soap_write_PointerTons1__searchDatasetsBySample(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__searchDatasetsBySample(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchDatasetsBySample(                   \
           soap, data, "ns1:searchDatasetsBySample", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchDatasetsBySample **SOAP_FMAC4
soap_get_PointerTons1__searchDatasetsBySample(struct soap *,
                                              ns1__searchDatasetsBySample **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__searchDatasetsBySample
#define soap_read_PointerTons1__searchDatasetsBySample(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchDatasetsBySample(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSamplesBySampleNameResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchSamplesBySampleNameResponse (582)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSamplesBySampleNameResponse(
    struct soap *, ns1__searchSamplesBySampleNameResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchSamplesBySampleNameResponse(
    struct soap *, const char *, int,
    ns1__searchSamplesBySampleNameResponse *const *, const char *);
SOAP_FMAC3 ns1__searchSamplesBySampleNameResponse **SOAP_FMAC4
soap_in_PointerTons1__searchSamplesBySampleNameResponse(
    struct soap *, const char *, ns1__searchSamplesBySampleNameResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchSamplesBySampleNameResponse(
    struct soap *, ns1__searchSamplesBySampleNameResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchSamplesBySampleNameResponse
#define soap_write_PointerTons1__searchSamplesBySampleNameResponse(soap, data) \
  (ICat3::soap_serialize_PointerTons1__searchSamplesBySampleNameResponse(      \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSamplesBySampleNameResponse(        \
           soap, data, "ns1:searchSamplesBySampleNameResponse", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSamplesBySampleNameResponse **SOAP_FMAC4
soap_get_PointerTons1__searchSamplesBySampleNameResponse(
    struct soap *, ns1__searchSamplesBySampleNameResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSamplesBySampleNameResponse
#define soap_read_PointerTons1__searchSamplesBySampleNameResponse(soap, data)  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSamplesBySampleNameResponse(       \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchSamplesBySampleName
#define SOAP_TYPE_ICat3_PointerTons1__searchSamplesBySampleName (581)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchSamplesBySampleName(
    struct soap *, ns1__searchSamplesBySampleName *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchSamplesBySampleName(
    struct soap *, const char *, int, ns1__searchSamplesBySampleName *const *,
    const char *);
SOAP_FMAC3 ns1__searchSamplesBySampleName **SOAP_FMAC4
soap_in_PointerTons1__searchSamplesBySampleName(
    struct soap *, const char *, ns1__searchSamplesBySampleName **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchSamplesBySampleName(
    struct soap *, ns1__searchSamplesBySampleName *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchSamplesBySampleName
#define soap_write_PointerTons1__searchSamplesBySampleName(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__searchSamplesBySampleName(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchSamplesBySampleName(                \
           soap, data, "ns1:searchSamplesBySampleName", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchSamplesBySampleName **SOAP_FMAC4
soap_get_PointerTons1__searchSamplesBySampleName(
    struct soap *, ns1__searchSamplesBySampleName **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchSamplesBySampleName
#define soap_read_PointerTons1__searchSamplesBySampleName(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchSamplesBySampleName(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listInvestigationTypesResponse
#define SOAP_TYPE_ICat3_PointerTons1__listInvestigationTypesResponse (578)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__listInvestigationTypesResponse(
    struct soap *, ns1__listInvestigationTypesResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__listInvestigationTypesResponse(
    struct soap *, const char *, int,
    ns1__listInvestigationTypesResponse *const *, const char *);
SOAP_FMAC3 ns1__listInvestigationTypesResponse **SOAP_FMAC4
soap_in_PointerTons1__listInvestigationTypesResponse(
    struct soap *, const char *, ns1__listInvestigationTypesResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__listInvestigationTypesResponse(
    struct soap *, ns1__listInvestigationTypesResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__listInvestigationTypesResponse
#define soap_write_PointerTons1__listInvestigationTypesResponse(soap, data)    \
  (ICat3::soap_serialize_PointerTons1__listInvestigationTypesResponse(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__listInvestigationTypesResponse(           \
           soap, data, "ns1:listInvestigationTypesResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listInvestigationTypesResponse **SOAP_FMAC4
soap_get_PointerTons1__listInvestigationTypesResponse(
    struct soap *, ns1__listInvestigationTypesResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__listInvestigationTypesResponse
#define soap_read_PointerTons1__listInvestigationTypesResponse(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listInvestigationTypesResponse(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listInvestigationTypes
#define SOAP_TYPE_ICat3_PointerTons1__listInvestigationTypes (577)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__listInvestigationTypes(
    struct soap *, ns1__listInvestigationTypes *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__listInvestigationTypes(
    struct soap *, const char *, int, ns1__listInvestigationTypes *const *,
    const char *);
SOAP_FMAC3 ns1__listInvestigationTypes **SOAP_FMAC4
soap_in_PointerTons1__listInvestigationTypes(struct soap *, const char *,
                                             ns1__listInvestigationTypes **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__listInvestigationTypes(
    struct soap *, ns1__listInvestigationTypes *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__listInvestigationTypes
#define soap_write_PointerTons1__listInvestigationTypes(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__listInvestigationTypes(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__listInvestigationTypes(                   \
           soap, data, "ns1:listInvestigationTypes", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listInvestigationTypes **SOAP_FMAC4
soap_get_PointerTons1__listInvestigationTypes(struct soap *,
                                              ns1__listInvestigationTypes **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__listInvestigationTypes
#define soap_read_PointerTons1__listInvestigationTypes(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listInvestigationTypes(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getInstrumentsWithDataResponse
#define SOAP_TYPE_ICat3_PointerTons1__getInstrumentsWithDataResponse (574)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getInstrumentsWithDataResponse(
    struct soap *, ns1__getInstrumentsWithDataResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getInstrumentsWithDataResponse(
    struct soap *, const char *, int,
    ns1__getInstrumentsWithDataResponse *const *, const char *);
SOAP_FMAC3 ns1__getInstrumentsWithDataResponse **SOAP_FMAC4
soap_in_PointerTons1__getInstrumentsWithDataResponse(
    struct soap *, const char *, ns1__getInstrumentsWithDataResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getInstrumentsWithDataResponse(
    struct soap *, ns1__getInstrumentsWithDataResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getInstrumentsWithDataResponse
#define soap_write_PointerTons1__getInstrumentsWithDataResponse(soap, data)    \
  (ICat3::soap_serialize_PointerTons1__getInstrumentsWithDataResponse(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getInstrumentsWithDataResponse(           \
           soap, data, "ns1:getInstrumentsWithDataResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInstrumentsWithDataResponse **SOAP_FMAC4
soap_get_PointerTons1__getInstrumentsWithDataResponse(
    struct soap *, ns1__getInstrumentsWithDataResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getInstrumentsWithDataResponse
#define soap_read_PointerTons1__getInstrumentsWithDataResponse(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getInstrumentsWithDataResponse(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getInstrumentsWithData
#define SOAP_TYPE_ICat3_PointerTons1__getInstrumentsWithData (573)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getInstrumentsWithData(
    struct soap *, ns1__getInstrumentsWithData *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getInstrumentsWithData(
    struct soap *, const char *, int, ns1__getInstrumentsWithData *const *,
    const char *);
SOAP_FMAC3 ns1__getInstrumentsWithData **SOAP_FMAC4
soap_in_PointerTons1__getInstrumentsWithData(struct soap *, const char *,
                                             ns1__getInstrumentsWithData **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getInstrumentsWithData(
    struct soap *, ns1__getInstrumentsWithData *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getInstrumentsWithData
#define soap_write_PointerTons1__getInstrumentsWithData(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__getInstrumentsWithData(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getInstrumentsWithData(                   \
           soap, data, "ns1:getInstrumentsWithData", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getInstrumentsWithData **SOAP_FMAC4
soap_get_PointerTons1__getInstrumentsWithData(struct soap *,
                                              ns1__getInstrumentsWithData **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__getInstrumentsWithData
#define soap_read_PointerTons1__getInstrumentsWithData(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getInstrumentsWithData(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse
#define SOAP_TYPE_ICat3_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse \
  (570)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *,
    ns1__getFacilityCyclesWithDataForInstrumentResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *, const char *, int,
    ns1__getFacilityCyclesWithDataForInstrumentResponse *const *, const char *);
SOAP_FMAC3 ns1__getFacilityCyclesWithDataForInstrumentResponse **SOAP_FMAC4
soap_in_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *, const char *,
    ns1__getFacilityCyclesWithDataForInstrumentResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *, ns1__getFacilityCyclesWithDataForInstrumentResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse
#define soap_write_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse(    \
    soap, data)                                                                     \
  (ICat3::                                                                          \
       soap_serialize_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse( \
           soap, data),                                                             \
   soap_begin_send(soap) ||                                                         \
       ICat3::                                                                      \
           soap_put_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse(   \
               soap, data,                                                          \
               "ns1:getFacilityCyclesWithDataForInstrumentResponse", NULL) ||       \
       soap_end_send(soap),                                                         \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityCyclesWithDataForInstrumentResponse **SOAP_FMAC4
soap_get_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse(
    struct soap *, ns1__getFacilityCyclesWithDataForInstrumentResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse
#define soap_read_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse(   \
    soap, data)                                                                   \
  (soap_begin_recv(soap) ||                                                       \
       !ICat3::                                                                   \
           soap_get_PointerTons1__getFacilityCyclesWithDataForInstrumentResponse( \
               soap, data, NULL, NULL) ||                                         \
       soap_end_recv(soap),                                                       \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getFacilityCyclesWithDataForInstrument
#define SOAP_TYPE_ICat3_PointerTons1__getFacilityCyclesWithDataForInstrument   \
  (569)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getFacilityCyclesWithDataForInstrument(
    struct soap *, ns1__getFacilityCyclesWithDataForInstrument *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getFacilityCyclesWithDataForInstrument(
    struct soap *, const char *, int,
    ns1__getFacilityCyclesWithDataForInstrument *const *, const char *);
SOAP_FMAC3 ns1__getFacilityCyclesWithDataForInstrument **SOAP_FMAC4
soap_in_PointerTons1__getFacilityCyclesWithDataForInstrument(
    struct soap *, const char *, ns1__getFacilityCyclesWithDataForInstrument **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getFacilityCyclesWithDataForInstrument(
    struct soap *, ns1__getFacilityCyclesWithDataForInstrument *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__getFacilityCyclesWithDataForInstrument
#define soap_write_PointerTons1__getFacilityCyclesWithDataForInstrument(soap,  \
                                                                        data)  \
  (ICat3::soap_serialize_PointerTons1__getFacilityCyclesWithDataForInstrument( \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getFacilityCyclesWithDataForInstrument(   \
           soap, data, "ns1:getFacilityCyclesWithDataForInstrument", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getFacilityCyclesWithDataForInstrument **SOAP_FMAC4
soap_get_PointerTons1__getFacilityCyclesWithDataForInstrument(
    struct soap *, ns1__getFacilityCyclesWithDataForInstrument **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getFacilityCyclesWithDataForInstrument
#define soap_read_PointerTons1__getFacilityCyclesWithDataForInstrument(soap,   \
                                                                       data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getFacilityCyclesWithDataForInstrument(  \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listFacilityCyclesResponse
#define SOAP_TYPE_ICat3_PointerTons1__listFacilityCyclesResponse (566)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__listFacilityCyclesResponse(
    struct soap *, ns1__listFacilityCyclesResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__listFacilityCyclesResponse(
    struct soap *, const char *, int, ns1__listFacilityCyclesResponse *const *,
    const char *);
SOAP_FMAC3 ns1__listFacilityCyclesResponse **SOAP_FMAC4
soap_in_PointerTons1__listFacilityCyclesResponse(
    struct soap *, const char *, ns1__listFacilityCyclesResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__listFacilityCyclesResponse(
    struct soap *, ns1__listFacilityCyclesResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__listFacilityCyclesResponse
#define soap_write_PointerTons1__listFacilityCyclesResponse(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__listFacilityCyclesResponse(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__listFacilityCyclesResponse(               \
           soap, data, "ns1:listFacilityCyclesResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listFacilityCyclesResponse **SOAP_FMAC4
soap_get_PointerTons1__listFacilityCyclesResponse(
    struct soap *, ns1__listFacilityCyclesResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__listFacilityCyclesResponse
#define soap_read_PointerTons1__listFacilityCyclesResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listFacilityCyclesResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listFacilityCycles
#define SOAP_TYPE_ICat3_PointerTons1__listFacilityCycles (565)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__listFacilityCycles(
    struct soap *, ns1__listFacilityCycles *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__listFacilityCycles(struct soap *, const char *, int,
                                          ns1__listFacilityCycles *const *,
                                          const char *);
SOAP_FMAC3 ns1__listFacilityCycles **SOAP_FMAC4
soap_in_PointerTons1__listFacilityCycles(struct soap *, const char *,
                                         ns1__listFacilityCycles **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__listFacilityCycles(struct soap *,
                                          ns1__listFacilityCycles *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__listFacilityCycles
#define soap_write_PointerTons1__listFacilityCycles(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__listFacilityCycles(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__listFacilityCycles(  \
                                soap, data, "ns1:listFacilityCycles", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listFacilityCycles **SOAP_FMAC4
soap_get_PointerTons1__listFacilityCycles(struct soap *,
                                          ns1__listFacilityCycles **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__listFacilityCycles
#define soap_read_PointerTons1__listFacilityCycles(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listFacilityCycles(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listParametersResponse
#define SOAP_TYPE_ICat3_PointerTons1__listParametersResponse (562)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__listParametersResponse(
    struct soap *, ns1__listParametersResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__listParametersResponse(
    struct soap *, const char *, int, ns1__listParametersResponse *const *,
    const char *);
SOAP_FMAC3 ns1__listParametersResponse **SOAP_FMAC4
soap_in_PointerTons1__listParametersResponse(struct soap *, const char *,
                                             ns1__listParametersResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__listParametersResponse(
    struct soap *, ns1__listParametersResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__listParametersResponse
#define soap_write_PointerTons1__listParametersResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__listParametersResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__listParametersResponse(                   \
           soap, data, "ns1:listParametersResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listParametersResponse **SOAP_FMAC4
soap_get_PointerTons1__listParametersResponse(struct soap *,
                                              ns1__listParametersResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__listParametersResponse
#define soap_read_PointerTons1__listParametersResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listParametersResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listParameters
#define SOAP_TYPE_ICat3_PointerTons1__listParameters (561)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__listParameters(struct soap *,
                                            ns1__listParameters *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__listParameters(struct soap *, const char *, int,
                                      ns1__listParameters *const *,
                                      const char *);
SOAP_FMAC3 ns1__listParameters **SOAP_FMAC4
soap_in_PointerTons1__listParameters(struct soap *, const char *,
                                     ns1__listParameters **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__listParameters(struct soap *,
                                      ns1__listParameters *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__listParameters
#define soap_write_PointerTons1__listParameters(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__listParameters(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__listParameters(      \
                                soap, data, "ns1:listParameters", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listParameters **SOAP_FMAC4
soap_get_PointerTons1__listParameters(struct soap *, ns1__listParameters **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__listParameters
#define soap_read_PointerTons1__listParameters(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listParameters(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listRolesResponse
#define SOAP_TYPE_ICat3_PointerTons1__listRolesResponse (558)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__listRolesResponse(struct soap *,
                                               ns1__listRolesResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__listRolesResponse(struct soap *, const char *, int,
                                         ns1__listRolesResponse *const *,
                                         const char *);
SOAP_FMAC3 ns1__listRolesResponse **SOAP_FMAC4
soap_in_PointerTons1__listRolesResponse(struct soap *, const char *,
                                        ns1__listRolesResponse **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__listRolesResponse(struct soap *,
                                         ns1__listRolesResponse *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__listRolesResponse
#define soap_write_PointerTons1__listRolesResponse(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__listRolesResponse(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__listRolesResponse(   \
                                soap, data, "ns1:listRolesResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listRolesResponse **SOAP_FMAC4
soap_get_PointerTons1__listRolesResponse(struct soap *,
                                         ns1__listRolesResponse **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__listRolesResponse
#define soap_read_PointerTons1__listRolesResponse(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listRolesResponse(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listRoles
#define SOAP_TYPE_ICat3_PointerTons1__listRoles (557)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__listRoles(struct soap *, ns1__listRoles *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__listRoles(struct soap *, const char *, int,
                                 ns1__listRoles *const *, const char *);
SOAP_FMAC3 ns1__listRoles **SOAP_FMAC4
soap_in_PointerTons1__listRoles(struct soap *, const char *, ns1__listRoles **,
                                const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__listRoles(struct soap *, ns1__listRoles *const *,
                                 const char *, const char *);

#ifndef soap_write_PointerTons1__listRoles
#define soap_write_PointerTons1__listRoles(soap, data)                         \
  (ICat3::soap_serialize_PointerTons1__listRoles(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__listRoles(           \
                                soap, data, "ns1:listRoles", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listRoles **SOAP_FMAC4
soap_get_PointerTons1__listRoles(struct soap *, ns1__listRoles **, const char *,
                                 const char *);

#ifndef soap_read_PointerTons1__listRoles
#define soap_read_PointerTons1__listRoles(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listRoles(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getAllInstrumentsResponse
#define SOAP_TYPE_ICat3_PointerTons1__getAllInstrumentsResponse (554)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getAllInstrumentsResponse(
    struct soap *, ns1__getAllInstrumentsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getAllInstrumentsResponse(
    struct soap *, const char *, int, ns1__getAllInstrumentsResponse *const *,
    const char *);
SOAP_FMAC3 ns1__getAllInstrumentsResponse **SOAP_FMAC4
soap_in_PointerTons1__getAllInstrumentsResponse(
    struct soap *, const char *, ns1__getAllInstrumentsResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getAllInstrumentsResponse(
    struct soap *, ns1__getAllInstrumentsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getAllInstrumentsResponse
#define soap_write_PointerTons1__getAllInstrumentsResponse(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__getAllInstrumentsResponse(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getAllInstrumentsResponse(                \
           soap, data, "ns1:getAllInstrumentsResponse", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAllInstrumentsResponse **SOAP_FMAC4
soap_get_PointerTons1__getAllInstrumentsResponse(
    struct soap *, ns1__getAllInstrumentsResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getAllInstrumentsResponse
#define soap_read_PointerTons1__getAllInstrumentsResponse(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getAllInstrumentsResponse(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getAllInstruments
#define SOAP_TYPE_ICat3_PointerTons1__getAllInstruments (553)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getAllInstruments(struct soap *,
                                               ns1__getAllInstruments *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getAllInstruments(struct soap *, const char *, int,
                                         ns1__getAllInstruments *const *,
                                         const char *);
SOAP_FMAC3 ns1__getAllInstruments **SOAP_FMAC4
soap_in_PointerTons1__getAllInstruments(struct soap *, const char *,
                                        ns1__getAllInstruments **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getAllInstruments(struct soap *,
                                         ns1__getAllInstruments *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__getAllInstruments
#define soap_write_PointerTons1__getAllInstruments(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__getAllInstruments(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getAllInstruments(   \
                                soap, data, "ns1:getAllInstruments", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAllInstruments **SOAP_FMAC4
soap_get_PointerTons1__getAllInstruments(struct soap *,
                                         ns1__getAllInstruments **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__getAllInstruments
#define soap_read_PointerTons1__getAllInstruments(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getAllInstruments(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listInstrumentsResponse
#define SOAP_TYPE_ICat3_PointerTons1__listInstrumentsResponse (550)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__listInstrumentsResponse(
    struct soap *, ns1__listInstrumentsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__listInstrumentsResponse(
    struct soap *, const char *, int, ns1__listInstrumentsResponse *const *,
    const char *);
SOAP_FMAC3 ns1__listInstrumentsResponse **SOAP_FMAC4
soap_in_PointerTons1__listInstrumentsResponse(struct soap *, const char *,
                                              ns1__listInstrumentsResponse **,
                                              const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__listInstrumentsResponse(
    struct soap *, ns1__listInstrumentsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__listInstrumentsResponse
#define soap_write_PointerTons1__listInstrumentsResponse(soap, data)           \
  (ICat3::soap_serialize_PointerTons1__listInstrumentsResponse(soap, data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__listInstrumentsResponse(                  \
           soap, data, "ns1:listInstrumentsResponse", NULL) ||                 \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listInstrumentsResponse **SOAP_FMAC4
soap_get_PointerTons1__listInstrumentsResponse(struct soap *,
                                               ns1__listInstrumentsResponse **,
                                               const char *, const char *);

#ifndef soap_read_PointerTons1__listInstrumentsResponse
#define soap_read_PointerTons1__listInstrumentsResponse(soap, data)            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listInstrumentsResponse(soap, data,      \
                                                              NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__listInstruments
#define SOAP_TYPE_ICat3_PointerTons1__listInstruments (549)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__listInstruments(struct soap *,
                                             ns1__listInstruments *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__listInstruments(struct soap *, const char *, int,
                                       ns1__listInstruments *const *,
                                       const char *);
SOAP_FMAC3 ns1__listInstruments **SOAP_FMAC4
soap_in_PointerTons1__listInstruments(struct soap *, const char *,
                                      ns1__listInstruments **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__listInstruments(struct soap *,
                                       ns1__listInstruments *const *,
                                       const char *, const char *);

#ifndef soap_write_PointerTons1__listInstruments
#define soap_write_PointerTons1__listInstruments(soap, data)                   \
  (ICat3::soap_serialize_PointerTons1__listInstruments(soap, data),            \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__listInstruments(     \
                                soap, data, "ns1:listInstruments", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__listInstruments **SOAP_FMAC4
soap_get_PointerTons1__listInstruments(struct soap *, ns1__listInstruments **,
                                       const char *, const char *);

#ifndef soap_read_PointerTons1__listInstruments
#define soap_read_PointerTons1__listInstruments(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__listInstruments(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByUserSurnamePaginationResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchByUserSurnamePaginationResponse    \
  (546)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByUserSurnamePaginationResponse(
    struct soap *, ns1__searchByUserSurnamePaginationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchByUserSurnamePaginationResponse(
    struct soap *, const char *, int,
    ns1__searchByUserSurnamePaginationResponse *const *, const char *);
SOAP_FMAC3 ns1__searchByUserSurnamePaginationResponse **SOAP_FMAC4
soap_in_PointerTons1__searchByUserSurnamePaginationResponse(
    struct soap *, const char *, ns1__searchByUserSurnamePaginationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchByUserSurnamePaginationResponse(
    struct soap *, ns1__searchByUserSurnamePaginationResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchByUserSurnamePaginationResponse
#define soap_write_PointerTons1__searchByUserSurnamePaginationResponse(soap,   \
                                                                       data)   \
  (ICat3::soap_serialize_PointerTons1__searchByUserSurnamePaginationResponse(  \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByUserSurnamePaginationResponse(    \
           soap, data, "ns1:searchByUserSurnamePaginationResponse", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserSurnamePaginationResponse **SOAP_FMAC4
soap_get_PointerTons1__searchByUserSurnamePaginationResponse(
    struct soap *, ns1__searchByUserSurnamePaginationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByUserSurnamePaginationResponse
#define soap_read_PointerTons1__searchByUserSurnamePaginationResponse(soap,    \
                                                                      data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByUserSurnamePaginationResponse(   \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByUserSurnamePagination
#define SOAP_TYPE_ICat3_PointerTons1__searchByUserSurnamePagination (545)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByUserSurnamePagination(
    struct soap *, ns1__searchByUserSurnamePagination *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchByUserSurnamePagination(
    struct soap *, const char *, int,
    ns1__searchByUserSurnamePagination *const *, const char *);
SOAP_FMAC3 ns1__searchByUserSurnamePagination **SOAP_FMAC4
soap_in_PointerTons1__searchByUserSurnamePagination(
    struct soap *, const char *, ns1__searchByUserSurnamePagination **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchByUserSurnamePagination(
    struct soap *, ns1__searchByUserSurnamePagination *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchByUserSurnamePagination
#define soap_write_PointerTons1__searchByUserSurnamePagination(soap, data)     \
  (ICat3::soap_serialize_PointerTons1__searchByUserSurnamePagination(soap,     \
                                                                     data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByUserSurnamePagination(            \
           soap, data, "ns1:searchByUserSurnamePagination", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserSurnamePagination **SOAP_FMAC4
soap_get_PointerTons1__searchByUserSurnamePagination(
    struct soap *, ns1__searchByUserSurnamePagination **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByUserSurnamePagination
#define soap_read_PointerTons1__searchByUserSurnamePagination(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByUserSurnamePagination(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByUserSurnameResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchByUserSurnameResponse (542)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByUserSurnameResponse(
    struct soap *, ns1__searchByUserSurnameResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchByUserSurnameResponse(
    struct soap *, const char *, int, ns1__searchByUserSurnameResponse *const *,
    const char *);
SOAP_FMAC3 ns1__searchByUserSurnameResponse **SOAP_FMAC4
soap_in_PointerTons1__searchByUserSurnameResponse(
    struct soap *, const char *, ns1__searchByUserSurnameResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchByUserSurnameResponse(
    struct soap *, ns1__searchByUserSurnameResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchByUserSurnameResponse
#define soap_write_PointerTons1__searchByUserSurnameResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__searchByUserSurnameResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByUserSurnameResponse(              \
           soap, data, "ns1:searchByUserSurnameResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserSurnameResponse **SOAP_FMAC4
soap_get_PointerTons1__searchByUserSurnameResponse(
    struct soap *, ns1__searchByUserSurnameResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByUserSurnameResponse
#define soap_read_PointerTons1__searchByUserSurnameResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByUserSurnameResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByUserSurname
#define SOAP_TYPE_ICat3_PointerTons1__searchByUserSurname (541)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__searchByUserSurname(
    struct soap *, ns1__searchByUserSurname *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchByUserSurname(struct soap *, const char *, int,
                                           ns1__searchByUserSurname *const *,
                                           const char *);
SOAP_FMAC3 ns1__searchByUserSurname **SOAP_FMAC4
soap_in_PointerTons1__searchByUserSurname(struct soap *, const char *,
                                          ns1__searchByUserSurname **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchByUserSurname(struct soap *,
                                           ns1__searchByUserSurname *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__searchByUserSurname
#define soap_write_PointerTons1__searchByUserSurname(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__searchByUserSurname(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByUserSurname(                      \
           soap, data, "ns1:searchByUserSurname", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserSurname **SOAP_FMAC4
soap_get_PointerTons1__searchByUserSurname(struct soap *,
                                           ns1__searchByUserSurname **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__searchByUserSurname
#define soap_read_PointerTons1__searchByUserSurname(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByUserSurname(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByUserIDPaginationResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchByUserIDPaginationResponse (538)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByUserIDPaginationResponse(
    struct soap *, ns1__searchByUserIDPaginationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchByUserIDPaginationResponse(
    struct soap *, const char *, int,
    ns1__searchByUserIDPaginationResponse *const *, const char *);
SOAP_FMAC3 ns1__searchByUserIDPaginationResponse **SOAP_FMAC4
soap_in_PointerTons1__searchByUserIDPaginationResponse(
    struct soap *, const char *, ns1__searchByUserIDPaginationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchByUserIDPaginationResponse(
    struct soap *, ns1__searchByUserIDPaginationResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchByUserIDPaginationResponse
#define soap_write_PointerTons1__searchByUserIDPaginationResponse(soap, data)  \
  (ICat3::soap_serialize_PointerTons1__searchByUserIDPaginationResponse(soap,  \
                                                                        data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByUserIDPaginationResponse(         \
           soap, data, "ns1:searchByUserIDPaginationResponse", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserIDPaginationResponse **SOAP_FMAC4
soap_get_PointerTons1__searchByUserIDPaginationResponse(
    struct soap *, ns1__searchByUserIDPaginationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByUserIDPaginationResponse
#define soap_read_PointerTons1__searchByUserIDPaginationResponse(soap, data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByUserIDPaginationResponse(        \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByUserIDPagination
#define SOAP_TYPE_ICat3_PointerTons1__searchByUserIDPagination (537)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByUserIDPagination(
    struct soap *, ns1__searchByUserIDPagination *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchByUserIDPagination(
    struct soap *, const char *, int, ns1__searchByUserIDPagination *const *,
    const char *);
SOAP_FMAC3 ns1__searchByUserIDPagination **SOAP_FMAC4
soap_in_PointerTons1__searchByUserIDPagination(struct soap *, const char *,
                                               ns1__searchByUserIDPagination **,
                                               const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchByUserIDPagination(
    struct soap *, ns1__searchByUserIDPagination *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchByUserIDPagination
#define soap_write_PointerTons1__searchByUserIDPagination(soap, data)          \
  (ICat3::soap_serialize_PointerTons1__searchByUserIDPagination(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByUserIDPagination(                 \
           soap, data, "ns1:searchByUserIDPagination", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserIDPagination **SOAP_FMAC4
soap_get_PointerTons1__searchByUserIDPagination(
    struct soap *, ns1__searchByUserIDPagination **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByUserIDPagination
#define soap_read_PointerTons1__searchByUserIDPagination(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByUserIDPagination(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByUserIDResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchByUserIDResponse (534)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__searchByUserIDResponse(
    struct soap *, ns1__searchByUserIDResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchByUserIDResponse(
    struct soap *, const char *, int, ns1__searchByUserIDResponse *const *,
    const char *);
SOAP_FMAC3 ns1__searchByUserIDResponse **SOAP_FMAC4
soap_in_PointerTons1__searchByUserIDResponse(struct soap *, const char *,
                                             ns1__searchByUserIDResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchByUserIDResponse(
    struct soap *, ns1__searchByUserIDResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchByUserIDResponse
#define soap_write_PointerTons1__searchByUserIDResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__searchByUserIDResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByUserIDResponse(                   \
           soap, data, "ns1:searchByUserIDResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserIDResponse **SOAP_FMAC4
soap_get_PointerTons1__searchByUserIDResponse(struct soap *,
                                              ns1__searchByUserIDResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__searchByUserIDResponse
#define soap_read_PointerTons1__searchByUserIDResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByUserIDResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByUserID
#define SOAP_TYPE_ICat3_PointerTons1__searchByUserID (533)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByUserID(struct soap *,
                                            ns1__searchByUserID *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchByUserID(struct soap *, const char *, int,
                                      ns1__searchByUserID *const *,
                                      const char *);
SOAP_FMAC3 ns1__searchByUserID **SOAP_FMAC4
soap_in_PointerTons1__searchByUserID(struct soap *, const char *,
                                     ns1__searchByUserID **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchByUserID(struct soap *,
                                      ns1__searchByUserID *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__searchByUserID
#define soap_write_PointerTons1__searchByUserID(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__searchByUserID(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__searchByUserID(      \
                                soap, data, "ns1:searchByUserID", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByUserID **SOAP_FMAC4
soap_get_PointerTons1__searchByUserID(struct soap *, ns1__searchByUserID **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__searchByUserID
#define soap_read_PointerTons1__searchByUserID(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByUserID(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getMyInvestigationsIncludesPaginationResponse
#define SOAP_TYPE_ICat3_PointerTons1__getMyInvestigationsIncludesPaginationResponse \
  (530)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *, ns1__getMyInvestigationsIncludesPaginationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *, const char *, int,
    ns1__getMyInvestigationsIncludesPaginationResponse *const *, const char *);
SOAP_FMAC3 ns1__getMyInvestigationsIncludesPaginationResponse **SOAP_FMAC4
soap_in_PointerTons1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *, const char *,
    ns1__getMyInvestigationsIncludesPaginationResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *, ns1__getMyInvestigationsIncludesPaginationResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__getMyInvestigationsIncludesPaginationResponse
#define soap_write_PointerTons1__getMyInvestigationsIncludesPaginationResponse(    \
    soap, data)                                                                    \
  (ICat3::                                                                         \
       soap_serialize_PointerTons1__getMyInvestigationsIncludesPaginationResponse( \
           soap, data),                                                            \
   soap_begin_send(soap) ||                                                        \
       ICat3::                                                                     \
           soap_put_PointerTons1__getMyInvestigationsIncludesPaginationResponse(   \
               soap, data,                                                         \
               "ns1:getMyInvestigationsIncludesPaginationResponse", NULL) ||       \
       soap_end_send(soap),                                                        \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigationsIncludesPaginationResponse **SOAP_FMAC4
soap_get_PointerTons1__getMyInvestigationsIncludesPaginationResponse(
    struct soap *, ns1__getMyInvestigationsIncludesPaginationResponse **,
    const char *, const char *);

#ifndef soap_read_PointerTons1__getMyInvestigationsIncludesPaginationResponse
#define soap_read_PointerTons1__getMyInvestigationsIncludesPaginationResponse(   \
    soap, data)                                                                  \
  (soap_begin_recv(soap) ||                                                      \
       !ICat3::                                                                  \
           soap_get_PointerTons1__getMyInvestigationsIncludesPaginationResponse( \
               soap, data, NULL, NULL) ||                                        \
       soap_end_recv(soap),                                                      \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getMyInvestigationsIncludesPagination
#define SOAP_TYPE_ICat3_PointerTons1__getMyInvestigationsIncludesPagination    \
  (529)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getMyInvestigationsIncludesPagination(
    struct soap *, ns1__getMyInvestigationsIncludesPagination *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getMyInvestigationsIncludesPagination(
    struct soap *, const char *, int,
    ns1__getMyInvestigationsIncludesPagination *const *, const char *);
SOAP_FMAC3 ns1__getMyInvestigationsIncludesPagination **SOAP_FMAC4
soap_in_PointerTons1__getMyInvestigationsIncludesPagination(
    struct soap *, const char *, ns1__getMyInvestigationsIncludesPagination **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getMyInvestigationsIncludesPagination(
    struct soap *, ns1__getMyInvestigationsIncludesPagination *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__getMyInvestigationsIncludesPagination
#define soap_write_PointerTons1__getMyInvestigationsIncludesPagination(soap,   \
                                                                       data)   \
  (ICat3::soap_serialize_PointerTons1__getMyInvestigationsIncludesPagination(  \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getMyInvestigationsIncludesPagination(    \
           soap, data, "ns1:getMyInvestigationsIncludesPagination", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigationsIncludesPagination **SOAP_FMAC4
soap_get_PointerTons1__getMyInvestigationsIncludesPagination(
    struct soap *, ns1__getMyInvestigationsIncludesPagination **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getMyInvestigationsIncludesPagination
#define soap_read_PointerTons1__getMyInvestigationsIncludesPagination(soap,    \
                                                                      data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getMyInvestigationsIncludesPagination(   \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getMyInvestigationsIncludesResponse
#define SOAP_TYPE_ICat3_PointerTons1__getMyInvestigationsIncludesResponse (526)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getMyInvestigationsIncludesResponse(
    struct soap *, ns1__getMyInvestigationsIncludesResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getMyInvestigationsIncludesResponse(
    struct soap *, const char *, int,
    ns1__getMyInvestigationsIncludesResponse *const *, const char *);
SOAP_FMAC3 ns1__getMyInvestigationsIncludesResponse **SOAP_FMAC4
soap_in_PointerTons1__getMyInvestigationsIncludesResponse(
    struct soap *, const char *, ns1__getMyInvestigationsIncludesResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getMyInvestigationsIncludesResponse(
    struct soap *, ns1__getMyInvestigationsIncludesResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__getMyInvestigationsIncludesResponse
#define soap_write_PointerTons1__getMyInvestigationsIncludesResponse(soap,     \
                                                                     data)     \
  (ICat3::soap_serialize_PointerTons1__getMyInvestigationsIncludesResponse(    \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getMyInvestigationsIncludesResponse(      \
           soap, data, "ns1:getMyInvestigationsIncludesResponse", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigationsIncludesResponse **SOAP_FMAC4
soap_get_PointerTons1__getMyInvestigationsIncludesResponse(
    struct soap *, ns1__getMyInvestigationsIncludesResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getMyInvestigationsIncludesResponse
#define soap_read_PointerTons1__getMyInvestigationsIncludesResponse(soap,      \
                                                                    data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getMyInvestigationsIncludesResponse(     \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getMyInvestigationsIncludes
#define SOAP_TYPE_ICat3_PointerTons1__getMyInvestigationsIncludes (525)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getMyInvestigationsIncludes(
    struct soap *, ns1__getMyInvestigationsIncludes *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getMyInvestigationsIncludes(
    struct soap *, const char *, int, ns1__getMyInvestigationsIncludes *const *,
    const char *);
SOAP_FMAC3 ns1__getMyInvestigationsIncludes **SOAP_FMAC4
soap_in_PointerTons1__getMyInvestigationsIncludes(
    struct soap *, const char *, ns1__getMyInvestigationsIncludes **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getMyInvestigationsIncludes(
    struct soap *, ns1__getMyInvestigationsIncludes *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getMyInvestigationsIncludes
#define soap_write_PointerTons1__getMyInvestigationsIncludes(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__getMyInvestigationsIncludes(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getMyInvestigationsIncludes(              \
           soap, data, "ns1:getMyInvestigationsIncludes", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigationsIncludes **SOAP_FMAC4
soap_get_PointerTons1__getMyInvestigationsIncludes(
    struct soap *, ns1__getMyInvestigationsIncludes **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getMyInvestigationsIncludes
#define soap_read_PointerTons1__getMyInvestigationsIncludes(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getMyInvestigationsIncludes(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getMyInvestigationsResponse
#define SOAP_TYPE_ICat3_PointerTons1__getMyInvestigationsResponse (522)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getMyInvestigationsResponse(
    struct soap *, ns1__getMyInvestigationsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getMyInvestigationsResponse(
    struct soap *, const char *, int, ns1__getMyInvestigationsResponse *const *,
    const char *);
SOAP_FMAC3 ns1__getMyInvestigationsResponse **SOAP_FMAC4
soap_in_PointerTons1__getMyInvestigationsResponse(
    struct soap *, const char *, ns1__getMyInvestigationsResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getMyInvestigationsResponse(
    struct soap *, ns1__getMyInvestigationsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getMyInvestigationsResponse
#define soap_write_PointerTons1__getMyInvestigationsResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__getMyInvestigationsResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getMyInvestigationsResponse(              \
           soap, data, "ns1:getMyInvestigationsResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigationsResponse **SOAP_FMAC4
soap_get_PointerTons1__getMyInvestigationsResponse(
    struct soap *, ns1__getMyInvestigationsResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getMyInvestigationsResponse
#define soap_read_PointerTons1__getMyInvestigationsResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getMyInvestigationsResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getMyInvestigations
#define SOAP_TYPE_ICat3_PointerTons1__getMyInvestigations (521)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getMyInvestigations(
    struct soap *, ns1__getMyInvestigations *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getMyInvestigations(struct soap *, const char *, int,
                                           ns1__getMyInvestigations *const *,
                                           const char *);
SOAP_FMAC3 ns1__getMyInvestigations **SOAP_FMAC4
soap_in_PointerTons1__getMyInvestigations(struct soap *, const char *,
                                          ns1__getMyInvestigations **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getMyInvestigations(struct soap *,
                                           ns1__getMyInvestigations *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__getMyInvestigations
#define soap_write_PointerTons1__getMyInvestigations(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__getMyInvestigations(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getMyInvestigations(                      \
           soap, data, "ns1:getMyInvestigations", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getMyInvestigations **SOAP_FMAC4
soap_get_PointerTons1__getMyInvestigations(struct soap *,
                                           ns1__getMyInvestigations **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__getMyInvestigations
#define soap_read_PointerTons1__getMyInvestigations(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getMyInvestigations(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByKeywordsAllResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchByKeywordsAllResponse (518)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByKeywordsAllResponse(
    struct soap *, ns1__searchByKeywordsAllResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchByKeywordsAllResponse(
    struct soap *, const char *, int, ns1__searchByKeywordsAllResponse *const *,
    const char *);
SOAP_FMAC3 ns1__searchByKeywordsAllResponse **SOAP_FMAC4
soap_in_PointerTons1__searchByKeywordsAllResponse(
    struct soap *, const char *, ns1__searchByKeywordsAllResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchByKeywordsAllResponse(
    struct soap *, ns1__searchByKeywordsAllResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchByKeywordsAllResponse
#define soap_write_PointerTons1__searchByKeywordsAllResponse(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__searchByKeywordsAllResponse(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByKeywordsAllResponse(              \
           soap, data, "ns1:searchByKeywordsAllResponse", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByKeywordsAllResponse **SOAP_FMAC4
soap_get_PointerTons1__searchByKeywordsAllResponse(
    struct soap *, ns1__searchByKeywordsAllResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByKeywordsAllResponse
#define soap_read_PointerTons1__searchByKeywordsAllResponse(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByKeywordsAllResponse(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByKeywordsAll
#define SOAP_TYPE_ICat3_PointerTons1__searchByKeywordsAll (517)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__searchByKeywordsAll(
    struct soap *, ns1__searchByKeywordsAll *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchByKeywordsAll(struct soap *, const char *, int,
                                           ns1__searchByKeywordsAll *const *,
                                           const char *);
SOAP_FMAC3 ns1__searchByKeywordsAll **SOAP_FMAC4
soap_in_PointerTons1__searchByKeywordsAll(struct soap *, const char *,
                                          ns1__searchByKeywordsAll **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchByKeywordsAll(struct soap *,
                                           ns1__searchByKeywordsAll *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__searchByKeywordsAll
#define soap_write_PointerTons1__searchByKeywordsAll(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__searchByKeywordsAll(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByKeywordsAll(                      \
           soap, data, "ns1:searchByKeywordsAll", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByKeywordsAll **SOAP_FMAC4
soap_get_PointerTons1__searchByKeywordsAll(struct soap *,
                                           ns1__searchByKeywordsAll **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__searchByKeywordsAll
#define soap_read_PointerTons1__searchByKeywordsAll(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByKeywordsAll(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByKeywordsResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchByKeywordsResponse (514)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByKeywordsResponse(
    struct soap *, ns1__searchByKeywordsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchByKeywordsResponse(
    struct soap *, const char *, int, ns1__searchByKeywordsResponse *const *,
    const char *);
SOAP_FMAC3 ns1__searchByKeywordsResponse **SOAP_FMAC4
soap_in_PointerTons1__searchByKeywordsResponse(struct soap *, const char *,
                                               ns1__searchByKeywordsResponse **,
                                               const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchByKeywordsResponse(
    struct soap *, ns1__searchByKeywordsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchByKeywordsResponse
#define soap_write_PointerTons1__searchByKeywordsResponse(soap, data)          \
  (ICat3::soap_serialize_PointerTons1__searchByKeywordsResponse(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByKeywordsResponse(                 \
           soap, data, "ns1:searchByKeywordsResponse", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByKeywordsResponse **SOAP_FMAC4
soap_get_PointerTons1__searchByKeywordsResponse(
    struct soap *, ns1__searchByKeywordsResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByKeywordsResponse
#define soap_read_PointerTons1__searchByKeywordsResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByKeywordsResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByKeywords
#define SOAP_TYPE_ICat3_PointerTons1__searchByKeywords (513)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByKeywords(struct soap *,
                                              ns1__searchByKeywords *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchByKeywords(struct soap *, const char *, int,
                                        ns1__searchByKeywords *const *,
                                        const char *);
SOAP_FMAC3 ns1__searchByKeywords **SOAP_FMAC4
soap_in_PointerTons1__searchByKeywords(struct soap *, const char *,
                                       ns1__searchByKeywords **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchByKeywords(struct soap *,
                                        ns1__searchByKeywords *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons1__searchByKeywords
#define soap_write_PointerTons1__searchByKeywords(soap, data)                  \
  (ICat3::soap_serialize_PointerTons1__searchByKeywords(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__searchByKeywords(    \
                                soap, data, "ns1:searchByKeywords", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByKeywords **SOAP_FMAC4
soap_get_PointerTons1__searchByKeywords(struct soap *, ns1__searchByKeywords **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons1__searchByKeywords
#define soap_read_PointerTons1__searchByKeywords(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByKeywords(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByAdvancedPaginationResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchByAdvancedPaginationResponse (510)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByAdvancedPaginationResponse(
    struct soap *, ns1__searchByAdvancedPaginationResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchByAdvancedPaginationResponse(
    struct soap *, const char *, int,
    ns1__searchByAdvancedPaginationResponse *const *, const char *);
SOAP_FMAC3 ns1__searchByAdvancedPaginationResponse **SOAP_FMAC4
soap_in_PointerTons1__searchByAdvancedPaginationResponse(
    struct soap *, const char *, ns1__searchByAdvancedPaginationResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchByAdvancedPaginationResponse(
    struct soap *, ns1__searchByAdvancedPaginationResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__searchByAdvancedPaginationResponse
#define soap_write_PointerTons1__searchByAdvancedPaginationResponse(soap,      \
                                                                    data)      \
  (ICat3::soap_serialize_PointerTons1__searchByAdvancedPaginationResponse(     \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByAdvancedPaginationResponse(       \
           soap, data, "ns1:searchByAdvancedPaginationResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByAdvancedPaginationResponse **SOAP_FMAC4
soap_get_PointerTons1__searchByAdvancedPaginationResponse(
    struct soap *, ns1__searchByAdvancedPaginationResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByAdvancedPaginationResponse
#define soap_read_PointerTons1__searchByAdvancedPaginationResponse(soap, data) \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByAdvancedPaginationResponse(      \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByAdvancedPagination
#define SOAP_TYPE_ICat3_PointerTons1__searchByAdvancedPagination (509)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByAdvancedPagination(
    struct soap *, ns1__searchByAdvancedPagination *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchByAdvancedPagination(
    struct soap *, const char *, int, ns1__searchByAdvancedPagination *const *,
    const char *);
SOAP_FMAC3 ns1__searchByAdvancedPagination **SOAP_FMAC4
soap_in_PointerTons1__searchByAdvancedPagination(
    struct soap *, const char *, ns1__searchByAdvancedPagination **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchByAdvancedPagination(
    struct soap *, ns1__searchByAdvancedPagination *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchByAdvancedPagination
#define soap_write_PointerTons1__searchByAdvancedPagination(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__searchByAdvancedPagination(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByAdvancedPagination(               \
           soap, data, "ns1:searchByAdvancedPagination", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByAdvancedPagination **SOAP_FMAC4
soap_get_PointerTons1__searchByAdvancedPagination(
    struct soap *, ns1__searchByAdvancedPagination **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByAdvancedPagination
#define soap_read_PointerTons1__searchByAdvancedPagination(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByAdvancedPagination(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByAdvancedResponse
#define SOAP_TYPE_ICat3_PointerTons1__searchByAdvancedResponse (506)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByAdvancedResponse(
    struct soap *, ns1__searchByAdvancedResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__searchByAdvancedResponse(
    struct soap *, const char *, int, ns1__searchByAdvancedResponse *const *,
    const char *);
SOAP_FMAC3 ns1__searchByAdvancedResponse **SOAP_FMAC4
soap_in_PointerTons1__searchByAdvancedResponse(struct soap *, const char *,
                                               ns1__searchByAdvancedResponse **,
                                               const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__searchByAdvancedResponse(
    struct soap *, ns1__searchByAdvancedResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__searchByAdvancedResponse
#define soap_write_PointerTons1__searchByAdvancedResponse(soap, data)          \
  (ICat3::soap_serialize_PointerTons1__searchByAdvancedResponse(soap, data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__searchByAdvancedResponse(                 \
           soap, data, "ns1:searchByAdvancedResponse", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByAdvancedResponse **SOAP_FMAC4
soap_get_PointerTons1__searchByAdvancedResponse(
    struct soap *, ns1__searchByAdvancedResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__searchByAdvancedResponse
#define soap_read_PointerTons1__searchByAdvancedResponse(soap, data)           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByAdvancedResponse(soap, data,     \
                                                               NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__searchByAdvanced
#define SOAP_TYPE_ICat3_PointerTons1__searchByAdvanced (505)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__searchByAdvanced(struct soap *,
                                              ns1__searchByAdvanced *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__searchByAdvanced(struct soap *, const char *, int,
                                        ns1__searchByAdvanced *const *,
                                        const char *);
SOAP_FMAC3 ns1__searchByAdvanced **SOAP_FMAC4
soap_in_PointerTons1__searchByAdvanced(struct soap *, const char *,
                                       ns1__searchByAdvanced **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__searchByAdvanced(struct soap *,
                                        ns1__searchByAdvanced *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons1__searchByAdvanced
#define soap_write_PointerTons1__searchByAdvanced(soap, data)                  \
  (ICat3::soap_serialize_PointerTons1__searchByAdvanced(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__searchByAdvanced(    \
                                soap, data, "ns1:searchByAdvanced", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__searchByAdvanced **SOAP_FMAC4
soap_get_PointerTons1__searchByAdvanced(struct soap *, ns1__searchByAdvanced **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons1__searchByAdvanced
#define soap_read_PointerTons1__searchByAdvanced(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__searchByAdvanced(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getAllKeywordsResponse
#define SOAP_TYPE_ICat3_PointerTons1__getAllKeywordsResponse (502)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getAllKeywordsResponse(
    struct soap *, ns1__getAllKeywordsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getAllKeywordsResponse(
    struct soap *, const char *, int, ns1__getAllKeywordsResponse *const *,
    const char *);
SOAP_FMAC3 ns1__getAllKeywordsResponse **SOAP_FMAC4
soap_in_PointerTons1__getAllKeywordsResponse(struct soap *, const char *,
                                             ns1__getAllKeywordsResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getAllKeywordsResponse(
    struct soap *, ns1__getAllKeywordsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getAllKeywordsResponse
#define soap_write_PointerTons1__getAllKeywordsResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__getAllKeywordsResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getAllKeywordsResponse(                   \
           soap, data, "ns1:getAllKeywordsResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAllKeywordsResponse **SOAP_FMAC4
soap_get_PointerTons1__getAllKeywordsResponse(struct soap *,
                                              ns1__getAllKeywordsResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__getAllKeywordsResponse
#define soap_read_PointerTons1__getAllKeywordsResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getAllKeywordsResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getAllKeywords
#define SOAP_TYPE_ICat3_PointerTons1__getAllKeywords (501)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getAllKeywords(struct soap *,
                                            ns1__getAllKeywords *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getAllKeywords(struct soap *, const char *, int,
                                      ns1__getAllKeywords *const *,
                                      const char *);
SOAP_FMAC3 ns1__getAllKeywords **SOAP_FMAC4
soap_in_PointerTons1__getAllKeywords(struct soap *, const char *,
                                     ns1__getAllKeywords **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getAllKeywords(struct soap *,
                                      ns1__getAllKeywords *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__getAllKeywords
#define soap_write_PointerTons1__getAllKeywords(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__getAllKeywords(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getAllKeywords(      \
                                soap, data, "ns1:getAllKeywords", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getAllKeywords **SOAP_FMAC4
soap_get_PointerTons1__getAllKeywords(struct soap *, ns1__getAllKeywords **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__getAllKeywords
#define soap_read_PointerTons1__getAllKeywords(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getAllKeywords(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserTypeResponse
#define SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserTypeResponse (498)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getKeywordsForUserTypeResponse(
    struct soap *, ns1__getKeywordsForUserTypeResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getKeywordsForUserTypeResponse(
    struct soap *, const char *, int,
    ns1__getKeywordsForUserTypeResponse *const *, const char *);
SOAP_FMAC3 ns1__getKeywordsForUserTypeResponse **SOAP_FMAC4
soap_in_PointerTons1__getKeywordsForUserTypeResponse(
    struct soap *, const char *, ns1__getKeywordsForUserTypeResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getKeywordsForUserTypeResponse(
    struct soap *, ns1__getKeywordsForUserTypeResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getKeywordsForUserTypeResponse
#define soap_write_PointerTons1__getKeywordsForUserTypeResponse(soap, data)    \
  (ICat3::soap_serialize_PointerTons1__getKeywordsForUserTypeResponse(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getKeywordsForUserTypeResponse(           \
           soap, data, "ns1:getKeywordsForUserTypeResponse", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserTypeResponse **SOAP_FMAC4
soap_get_PointerTons1__getKeywordsForUserTypeResponse(
    struct soap *, ns1__getKeywordsForUserTypeResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getKeywordsForUserTypeResponse
#define soap_read_PointerTons1__getKeywordsForUserTypeResponse(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getKeywordsForUserTypeResponse(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserType
#define SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserType (497)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getKeywordsForUserType(
    struct soap *, ns1__getKeywordsForUserType *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getKeywordsForUserType(
    struct soap *, const char *, int, ns1__getKeywordsForUserType *const *,
    const char *);
SOAP_FMAC3 ns1__getKeywordsForUserType **SOAP_FMAC4
soap_in_PointerTons1__getKeywordsForUserType(struct soap *, const char *,
                                             ns1__getKeywordsForUserType **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getKeywordsForUserType(
    struct soap *, ns1__getKeywordsForUserType *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getKeywordsForUserType
#define soap_write_PointerTons1__getKeywordsForUserType(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__getKeywordsForUserType(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getKeywordsForUserType(                   \
           soap, data, "ns1:getKeywordsForUserType", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserType **SOAP_FMAC4
soap_get_PointerTons1__getKeywordsForUserType(struct soap *,
                                              ns1__getKeywordsForUserType **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__getKeywordsForUserType
#define soap_read_PointerTons1__getKeywordsForUserType(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getKeywordsForUserType(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserMaxResponse
#define SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserMaxResponse (494)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getKeywordsForUserMaxResponse(
    struct soap *, ns1__getKeywordsForUserMaxResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getKeywordsForUserMaxResponse(
    struct soap *, const char *, int,
    ns1__getKeywordsForUserMaxResponse *const *, const char *);
SOAP_FMAC3 ns1__getKeywordsForUserMaxResponse **SOAP_FMAC4
soap_in_PointerTons1__getKeywordsForUserMaxResponse(
    struct soap *, const char *, ns1__getKeywordsForUserMaxResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getKeywordsForUserMaxResponse(
    struct soap *, ns1__getKeywordsForUserMaxResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getKeywordsForUserMaxResponse
#define soap_write_PointerTons1__getKeywordsForUserMaxResponse(soap, data)     \
  (ICat3::soap_serialize_PointerTons1__getKeywordsForUserMaxResponse(soap,     \
                                                                     data),    \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getKeywordsForUserMaxResponse(            \
           soap, data, "ns1:getKeywordsForUserMaxResponse", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserMaxResponse **SOAP_FMAC4
soap_get_PointerTons1__getKeywordsForUserMaxResponse(
    struct soap *, ns1__getKeywordsForUserMaxResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getKeywordsForUserMaxResponse
#define soap_read_PointerTons1__getKeywordsForUserMaxResponse(soap, data)      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getKeywordsForUserMaxResponse(           \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserMax
#define SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserMax (493)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getKeywordsForUserMax(
    struct soap *, ns1__getKeywordsForUserMax *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getKeywordsForUserMax(
    struct soap *, const char *, int, ns1__getKeywordsForUserMax *const *,
    const char *);
SOAP_FMAC3 ns1__getKeywordsForUserMax **SOAP_FMAC4
soap_in_PointerTons1__getKeywordsForUserMax(struct soap *, const char *,
                                            ns1__getKeywordsForUserMax **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getKeywordsForUserMax(
    struct soap *, ns1__getKeywordsForUserMax *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getKeywordsForUserMax
#define soap_write_PointerTons1__getKeywordsForUserMax(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__getKeywordsForUserMax(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getKeywordsForUserMax(                    \
           soap, data, "ns1:getKeywordsForUserMax", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserMax **SOAP_FMAC4
soap_get_PointerTons1__getKeywordsForUserMax(struct soap *,
                                             ns1__getKeywordsForUserMax **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__getKeywordsForUserMax
#define soap_read_PointerTons1__getKeywordsForUserMax(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getKeywordsForUserMax(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserStartWithMaxResponse
#define SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserStartWithMaxResponse   \
  (490)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getKeywordsForUserStartWithMaxResponse(
    struct soap *, ns1__getKeywordsForUserStartWithMaxResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getKeywordsForUserStartWithMaxResponse(
    struct soap *, const char *, int,
    ns1__getKeywordsForUserStartWithMaxResponse *const *, const char *);
SOAP_FMAC3 ns1__getKeywordsForUserStartWithMaxResponse **SOAP_FMAC4
soap_in_PointerTons1__getKeywordsForUserStartWithMaxResponse(
    struct soap *, const char *, ns1__getKeywordsForUserStartWithMaxResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getKeywordsForUserStartWithMaxResponse(
    struct soap *, ns1__getKeywordsForUserStartWithMaxResponse *const *,
    const char *, const char *);

#ifndef soap_write_PointerTons1__getKeywordsForUserStartWithMaxResponse
#define soap_write_PointerTons1__getKeywordsForUserStartWithMaxResponse(soap,  \
                                                                        data)  \
  (ICat3::soap_serialize_PointerTons1__getKeywordsForUserStartWithMaxResponse( \
       soap, data),                                                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getKeywordsForUserStartWithMaxResponse(   \
           soap, data, "ns1:getKeywordsForUserStartWithMaxResponse", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserStartWithMaxResponse **SOAP_FMAC4
soap_get_PointerTons1__getKeywordsForUserStartWithMaxResponse(
    struct soap *, ns1__getKeywordsForUserStartWithMaxResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getKeywordsForUserStartWithMaxResponse
#define soap_read_PointerTons1__getKeywordsForUserStartWithMaxResponse(soap,   \
                                                                       data)   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getKeywordsForUserStartWithMaxResponse(  \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserStartWithMax
#define SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserStartWithMax (489)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getKeywordsForUserStartWithMax(
    struct soap *, ns1__getKeywordsForUserStartWithMax *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getKeywordsForUserStartWithMax(
    struct soap *, const char *, int,
    ns1__getKeywordsForUserStartWithMax *const *, const char *);
SOAP_FMAC3 ns1__getKeywordsForUserStartWithMax **SOAP_FMAC4
soap_in_PointerTons1__getKeywordsForUserStartWithMax(
    struct soap *, const char *, ns1__getKeywordsForUserStartWithMax **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getKeywordsForUserStartWithMax(
    struct soap *, ns1__getKeywordsForUserStartWithMax *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getKeywordsForUserStartWithMax
#define soap_write_PointerTons1__getKeywordsForUserStartWithMax(soap, data)    \
  (ICat3::soap_serialize_PointerTons1__getKeywordsForUserStartWithMax(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getKeywordsForUserStartWithMax(           \
           soap, data, "ns1:getKeywordsForUserStartWithMax", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserStartWithMax **SOAP_FMAC4
soap_get_PointerTons1__getKeywordsForUserStartWithMax(
    struct soap *, ns1__getKeywordsForUserStartWithMax **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getKeywordsForUserStartWithMax
#define soap_read_PointerTons1__getKeywordsForUserStartWithMax(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getKeywordsForUserStartWithMax(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserResponse
#define SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUserResponse (486)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__getKeywordsForUserResponse(
    struct soap *, ns1__getKeywordsForUserResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__getKeywordsForUserResponse(
    struct soap *, const char *, int, ns1__getKeywordsForUserResponse *const *,
    const char *);
SOAP_FMAC3 ns1__getKeywordsForUserResponse **SOAP_FMAC4
soap_in_PointerTons1__getKeywordsForUserResponse(
    struct soap *, const char *, ns1__getKeywordsForUserResponse **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__getKeywordsForUserResponse(
    struct soap *, ns1__getKeywordsForUserResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__getKeywordsForUserResponse
#define soap_write_PointerTons1__getKeywordsForUserResponse(soap, data)        \
  (ICat3::soap_serialize_PointerTons1__getKeywordsForUserResponse(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__getKeywordsForUserResponse(               \
           soap, data, "ns1:getKeywordsForUserResponse", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUserResponse **SOAP_FMAC4
soap_get_PointerTons1__getKeywordsForUserResponse(
    struct soap *, ns1__getKeywordsForUserResponse **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__getKeywordsForUserResponse
#define soap_read_PointerTons1__getKeywordsForUserResponse(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getKeywordsForUserResponse(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUser
#define SOAP_TYPE_ICat3_PointerTons1__getKeywordsForUser (485)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__getKeywordsForUser(
    struct soap *, ns1__getKeywordsForUser *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__getKeywordsForUser(struct soap *, const char *, int,
                                          ns1__getKeywordsForUser *const *,
                                          const char *);
SOAP_FMAC3 ns1__getKeywordsForUser **SOAP_FMAC4
soap_in_PointerTons1__getKeywordsForUser(struct soap *, const char *,
                                         ns1__getKeywordsForUser **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__getKeywordsForUser(struct soap *,
                                          ns1__getKeywordsForUser *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__getKeywordsForUser
#define soap_write_PointerTons1__getKeywordsForUser(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__getKeywordsForUser(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__getKeywordsForUser(  \
                                soap, data, "ns1:getKeywordsForUser", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__getKeywordsForUser **SOAP_FMAC4
soap_get_PointerTons1__getKeywordsForUser(struct soap *,
                                          ns1__getKeywordsForUser **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__getKeywordsForUser
#define soap_read_PointerTons1__getKeywordsForUser(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__getKeywordsForUser(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__isSessionValidResponse
#define SOAP_TYPE_ICat3_PointerTons1__isSessionValidResponse (482)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__isSessionValidResponse(
    struct soap *, ns1__isSessionValidResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__isSessionValidResponse(
    struct soap *, const char *, int, ns1__isSessionValidResponse *const *,
    const char *);
SOAP_FMAC3 ns1__isSessionValidResponse **SOAP_FMAC4
soap_in_PointerTons1__isSessionValidResponse(struct soap *, const char *,
                                             ns1__isSessionValidResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__isSessionValidResponse(
    struct soap *, ns1__isSessionValidResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__isSessionValidResponse
#define soap_write_PointerTons1__isSessionValidResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons1__isSessionValidResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__isSessionValidResponse(                   \
           soap, data, "ns1:isSessionValidResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__isSessionValidResponse **SOAP_FMAC4
soap_get_PointerTons1__isSessionValidResponse(struct soap *,
                                              ns1__isSessionValidResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons1__isSessionValidResponse
#define soap_read_PointerTons1__isSessionValidResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__isSessionValidResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__isSessionValid
#define SOAP_TYPE_ICat3_PointerTons1__isSessionValid (481)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__isSessionValid(struct soap *,
                                            ns1__isSessionValid *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__isSessionValid(struct soap *, const char *, int,
                                      ns1__isSessionValid *const *,
                                      const char *);
SOAP_FMAC3 ns1__isSessionValid **SOAP_FMAC4
soap_in_PointerTons1__isSessionValid(struct soap *, const char *,
                                     ns1__isSessionValid **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__isSessionValid(struct soap *,
                                      ns1__isSessionValid *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__isSessionValid
#define soap_write_PointerTons1__isSessionValid(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__isSessionValid(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__isSessionValid(      \
                                soap, data, "ns1:isSessionValid", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__isSessionValid **SOAP_FMAC4
soap_get_PointerTons1__isSessionValid(struct soap *, ns1__isSessionValid **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__isSessionValid
#define soap_read_PointerTons1__isSessionValid(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__isSessionValid(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons3__getUserDetailsResponse
#define SOAP_TYPE_ICat3_PointerTons3__getUserDetailsResponse (478)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__getUserDetailsResponse(
    struct soap *, ns3__getUserDetailsResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__getUserDetailsResponse(
    struct soap *, const char *, int, ns3__getUserDetailsResponse *const *,
    const char *);
SOAP_FMAC3 ns3__getUserDetailsResponse **SOAP_FMAC4
soap_in_PointerTons3__getUserDetailsResponse(struct soap *, const char *,
                                             ns3__getUserDetailsResponse **,
                                             const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__getUserDetailsResponse(
    struct soap *, ns3__getUserDetailsResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons3__getUserDetailsResponse
#define soap_write_PointerTons3__getUserDetailsResponse(soap, data)            \
  (ICat3::soap_serialize_PointerTons3__getUserDetailsResponse(soap, data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons3__getUserDetailsResponse(                   \
           soap, data, "ns3:getUserDetailsResponse", NULL) ||                  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__getUserDetailsResponse **SOAP_FMAC4
soap_get_PointerTons3__getUserDetailsResponse(struct soap *,
                                              ns3__getUserDetailsResponse **,
                                              const char *, const char *);

#ifndef soap_read_PointerTons3__getUserDetailsResponse
#define soap_read_PointerTons3__getUserDetailsResponse(soap, data)             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons3__getUserDetailsResponse(soap, data, NULL, \
                                                             NULL) ||          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons3__getUserDetails
#define SOAP_TYPE_ICat3_PointerTons3__getUserDetails (477)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons3__getUserDetails(struct soap *,
                                            ns3__getUserDetails *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons3__getUserDetails(struct soap *, const char *, int,
                                      ns3__getUserDetails *const *,
                                      const char *);
SOAP_FMAC3 ns3__getUserDetails **SOAP_FMAC4
soap_in_PointerTons3__getUserDetails(struct soap *, const char *,
                                     ns3__getUserDetails **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons3__getUserDetails(struct soap *,
                                      ns3__getUserDetails *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons3__getUserDetails
#define soap_write_PointerTons3__getUserDetails(soap, data)                    \
  (ICat3::soap_serialize_PointerTons3__getUserDetails(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons3__getUserDetails(      \
                                soap, data, "ns3:getUserDetails", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__getUserDetails **SOAP_FMAC4
soap_get_PointerTons3__getUserDetails(struct soap *, ns3__getUserDetails **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons3__getUserDetails
#define soap_read_PointerTons3__getUserDetails(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons3__getUserDetails(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__logoutResponse
#define SOAP_TYPE_ICat3_PointerTons1__logoutResponse (474)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__logoutResponse(struct soap *,
                                            ns1__logoutResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__logoutResponse(struct soap *, const char *, int,
                                      ns1__logoutResponse *const *,
                                      const char *);
SOAP_FMAC3 ns1__logoutResponse **SOAP_FMAC4
soap_in_PointerTons1__logoutResponse(struct soap *, const char *,
                                     ns1__logoutResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__logoutResponse(struct soap *,
                                      ns1__logoutResponse *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__logoutResponse
#define soap_write_PointerTons1__logoutResponse(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__logoutResponse(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__logoutResponse(      \
                                soap, data, "ns1:logoutResponse", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__logoutResponse **SOAP_FMAC4
soap_get_PointerTons1__logoutResponse(struct soap *, ns1__logoutResponse **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__logoutResponse
#define soap_read_PointerTons1__logoutResponse(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__logoutResponse(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__logout
#define SOAP_TYPE_ICat3_PointerTons1__logout (473)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__logout(struct soap *, ns1__logout *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__logout(struct soap *, const char *, int,
                              ns1__logout *const *, const char *);
SOAP_FMAC3 ns1__logout **SOAP_FMAC4
soap_in_PointerTons1__logout(struct soap *, const char *, ns1__logout **,
                             const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__logout(struct soap *, ns1__logout *const *, const char *,
                              const char *);

#ifndef soap_write_PointerTons1__logout
#define soap_write_PointerTons1__logout(soap, data)                            \
  (ICat3::soap_serialize_PointerTons1__logout(soap, data),                     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__logout(soap, data, "ns1:logout", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__logout **SOAP_FMAC4
soap_get_PointerTons1__logout(struct soap *, ns1__logout **, const char *,
                              const char *);

#ifndef soap_read_PointerTons1__logout
#define soap_read_PointerTons1__logout(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__logout(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__loginLifetimeResponse
#define SOAP_TYPE_ICat3_PointerTons1__loginLifetimeResponse (470)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__loginLifetimeResponse(
    struct soap *, ns1__loginLifetimeResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__loginLifetimeResponse(
    struct soap *, const char *, int, ns1__loginLifetimeResponse *const *,
    const char *);
SOAP_FMAC3 ns1__loginLifetimeResponse **SOAP_FMAC4
soap_in_PointerTons1__loginLifetimeResponse(struct soap *, const char *,
                                            ns1__loginLifetimeResponse **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__loginLifetimeResponse(
    struct soap *, ns1__loginLifetimeResponse *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__loginLifetimeResponse
#define soap_write_PointerTons1__loginLifetimeResponse(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__loginLifetimeResponse(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__loginLifetimeResponse(                    \
           soap, data, "ns1:loginLifetimeResponse", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__loginLifetimeResponse **SOAP_FMAC4
soap_get_PointerTons1__loginLifetimeResponse(struct soap *,
                                             ns1__loginLifetimeResponse **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__loginLifetimeResponse
#define soap_read_PointerTons1__loginLifetimeResponse(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__loginLifetimeResponse(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__loginLifetime
#define SOAP_TYPE_ICat3_PointerTons1__loginLifetime (469)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__loginLifetime(struct soap *,
                                           ns1__loginLifetime *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__loginLifetime(struct soap *, const char *, int,
                                     ns1__loginLifetime *const *, const char *);
SOAP_FMAC3 ns1__loginLifetime **SOAP_FMAC4
soap_in_PointerTons1__loginLifetime(struct soap *, const char *,
                                    ns1__loginLifetime **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__loginLifetime(struct soap *, ns1__loginLifetime *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__loginLifetime
#define soap_write_PointerTons1__loginLifetime(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__loginLifetime(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__loginLifetime(       \
                                soap, data, "ns1:loginLifetime", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__loginLifetime **SOAP_FMAC4
soap_get_PointerTons1__loginLifetime(struct soap *, ns1__loginLifetime **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__loginLifetime
#define soap_read_PointerTons1__loginLifetime(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__loginLifetime(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__loginResponse
#define SOAP_TYPE_ICat3_PointerTons1__loginResponse (466)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__loginResponse(struct soap *,
                                           ns1__loginResponse *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__loginResponse(struct soap *, const char *, int,
                                     ns1__loginResponse *const *, const char *);
SOAP_FMAC3 ns1__loginResponse **SOAP_FMAC4
soap_in_PointerTons1__loginResponse(struct soap *, const char *,
                                    ns1__loginResponse **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__loginResponse(struct soap *, ns1__loginResponse *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__loginResponse
#define soap_write_PointerTons1__loginResponse(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__loginResponse(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__loginResponse(       \
                                soap, data, "ns1:loginResponse", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__loginResponse **SOAP_FMAC4
soap_get_PointerTons1__loginResponse(struct soap *, ns1__loginResponse **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__loginResponse
#define soap_read_PointerTons1__loginResponse(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__loginResponse(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__login
#define SOAP_TYPE_ICat3_PointerTons1__login (465)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__login(struct soap *, ns1__login *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__login(struct soap *, const char *, int,
                             ns1__login *const *, const char *);
SOAP_FMAC3 ns1__login **SOAP_FMAC4
soap_in_PointerTons1__login(struct soap *, const char *, ns1__login **,
                            const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__login(struct soap *, ns1__login *const *, const char *,
                             const char *);

#ifndef soap_write_PointerTons1__login
#define soap_write_PointerTons1__login(soap, data)                             \
  (ICat3::soap_serialize_PointerTons1__login(soap, data),                      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__login(soap, data, "ns1:login", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__login **SOAP_FMAC4
soap_get_PointerTons1__login(struct soap *, ns1__login **, const char *,
                             const char *);

#ifndef soap_read_PointerTons1__login
#define soap_read_PointerTons1__login(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__login(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons3__ValidationException
#define SOAP_TYPE_ICat3_PointerTons3__ValidationException (462)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__ValidationException(
    struct soap *, ns3__ValidationException *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons3__ValidationException(struct soap *, const char *, int,
                                           ns3__ValidationException *const *,
                                           const char *);
SOAP_FMAC3 ns3__ValidationException **SOAP_FMAC4
soap_in_PointerTons3__ValidationException(struct soap *, const char *,
                                          ns3__ValidationException **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons3__ValidationException(struct soap *,
                                           ns3__ValidationException *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons3__ValidationException
#define soap_write_PointerTons3__ValidationException(soap, data)               \
  (ICat3::soap_serialize_PointerTons3__ValidationException(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons3__ValidationException(                      \
           soap, data, "ns3:ValidationException", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__ValidationException **SOAP_FMAC4
soap_get_PointerTons3__ValidationException(struct soap *,
                                           ns3__ValidationException **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons3__ValidationException
#define soap_read_PointerTons3__ValidationException(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons3__ValidationException(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons3__SessionException
#define SOAP_TYPE_ICat3_PointerTons3__SessionException (461)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons3__SessionException(struct soap *,
                                              ns3__SessionException *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons3__SessionException(struct soap *, const char *, int,
                                        ns3__SessionException *const *,
                                        const char *);
SOAP_FMAC3 ns3__SessionException **SOAP_FMAC4
soap_in_PointerTons3__SessionException(struct soap *, const char *,
                                       ns3__SessionException **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons3__SessionException(struct soap *,
                                        ns3__SessionException *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons3__SessionException
#define soap_write_PointerTons3__SessionException(soap, data)                  \
  (ICat3::soap_serialize_PointerTons3__SessionException(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons3__SessionException(    \
                                soap, data, "ns3:SessionException", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__SessionException **SOAP_FMAC4
soap_get_PointerTons3__SessionException(struct soap *, ns3__SessionException **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons3__SessionException
#define soap_read_PointerTons3__SessionException(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons3__SessionException(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons3__NoSuchUserException
#define SOAP_TYPE_ICat3_PointerTons3__NoSuchUserException (460)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons3__NoSuchUserException(
    struct soap *, ns3__NoSuchUserException *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons3__NoSuchUserException(struct soap *, const char *, int,
                                           ns3__NoSuchUserException *const *,
                                           const char *);
SOAP_FMAC3 ns3__NoSuchUserException **SOAP_FMAC4
soap_in_PointerTons3__NoSuchUserException(struct soap *, const char *,
                                          ns3__NoSuchUserException **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons3__NoSuchUserException(struct soap *,
                                           ns3__NoSuchUserException *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons3__NoSuchUserException
#define soap_write_PointerTons3__NoSuchUserException(soap, data)               \
  (ICat3::soap_serialize_PointerTons3__NoSuchUserException(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons3__NoSuchUserException(                      \
           soap, data, "ns3:NoSuchUserException", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__NoSuchUserException **SOAP_FMAC4
soap_get_PointerTons3__NoSuchUserException(struct soap *,
                                           ns3__NoSuchUserException **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons3__NoSuchUserException
#define soap_read_PointerTons3__NoSuchUserException(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons3__NoSuchUserException(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons3__NoSuchObjectFoundException
#define SOAP_TYPE_ICat3_PointerTons3__NoSuchObjectFoundException (459)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons3__NoSuchObjectFoundException(
    struct soap *, ns3__NoSuchObjectFoundException *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons3__NoSuchObjectFoundException(
    struct soap *, const char *, int, ns3__NoSuchObjectFoundException *const *,
    const char *);
SOAP_FMAC3 ns3__NoSuchObjectFoundException **SOAP_FMAC4
soap_in_PointerTons3__NoSuchObjectFoundException(
    struct soap *, const char *, ns3__NoSuchObjectFoundException **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons3__NoSuchObjectFoundException(
    struct soap *, ns3__NoSuchObjectFoundException *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons3__NoSuchObjectFoundException
#define soap_write_PointerTons3__NoSuchObjectFoundException(soap, data)        \
  (ICat3::soap_serialize_PointerTons3__NoSuchObjectFoundException(soap, data), \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons3__NoSuchObjectFoundException(               \
           soap, data, "ns3:NoSuchObjectFoundException", NULL) ||              \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns3__NoSuchObjectFoundException **SOAP_FMAC4
soap_get_PointerTons3__NoSuchObjectFoundException(
    struct soap *, ns3__NoSuchObjectFoundException **, const char *,
    const char *);

#ifndef soap_read_PointerTons3__NoSuchObjectFoundException
#define soap_read_PointerTons3__NoSuchObjectFoundException(soap, data)         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons3__NoSuchObjectFoundException(              \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__InsufficientPrivilegesException
#define SOAP_TYPE_ICat3_PointerTons1__InsufficientPrivilegesException (458)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__InsufficientPrivilegesException(
    struct soap *, ns1__InsufficientPrivilegesException *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__InsufficientPrivilegesException(
    struct soap *, const char *, int,
    ns1__InsufficientPrivilegesException *const *, const char *);
SOAP_FMAC3 ns1__InsufficientPrivilegesException **SOAP_FMAC4
soap_in_PointerTons1__InsufficientPrivilegesException(
    struct soap *, const char *, ns1__InsufficientPrivilegesException **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__InsufficientPrivilegesException(
    struct soap *, ns1__InsufficientPrivilegesException *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__InsufficientPrivilegesException
#define soap_write_PointerTons1__InsufficientPrivilegesException(soap, data)   \
  (ICat3::soap_serialize_PointerTons1__InsufficientPrivilegesException(soap,   \
                                                                       data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__InsufficientPrivilegesException(          \
           soap, data, "ns1:InsufficientPrivilegesException", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__InsufficientPrivilegesException **SOAP_FMAC4
soap_get_PointerTons1__InsufficientPrivilegesException(
    struct soap *, ns1__InsufficientPrivilegesException **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__InsufficientPrivilegesException
#define soap_read_PointerTons1__InsufficientPrivilegesException(soap, data)    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__InsufficientPrivilegesException(         \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__ICATAPIException
#define SOAP_TYPE_ICat3_PointerTons1__ICATAPIException (457)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__ICATAPIException(struct soap *,
                                              ns1__ICATAPIException *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__ICATAPIException(struct soap *, const char *, int,
                                        ns1__ICATAPIException *const *,
                                        const char *);
SOAP_FMAC3 ns1__ICATAPIException **SOAP_FMAC4
soap_in_PointerTons1__ICATAPIException(struct soap *, const char *,
                                       ns1__ICATAPIException **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__ICATAPIException(struct soap *,
                                        ns1__ICATAPIException *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons1__ICATAPIException
#define soap_write_PointerTons1__ICATAPIException(soap, data)                  \
  (ICat3::soap_serialize_PointerTons1__ICATAPIException(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__ICATAPIException(    \
                                soap, data, "ns1:ICATAPIException", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__ICATAPIException **SOAP_FMAC4
soap_get_PointerTons1__ICATAPIException(struct soap *, ns1__ICATAPIException **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons1__ICATAPIException
#define soap_read_PointerTons1__ICATAPIException(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__ICATAPIException(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__parameterType
#define SOAP_TYPE_ICat3_PointerTons1__parameterType (455)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__parameterType(struct soap *,
                                           enum ns1__parameterType *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__parameterType(struct soap *, const char *, int,
                                     enum ns1__parameterType *const *,
                                     const char *);
SOAP_FMAC3 enum ns1__parameterType **SOAP_FMAC4
soap_in_PointerTons1__parameterType(struct soap *, const char *,
                                    enum ns1__parameterType **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__parameterType(struct soap *,
                                     enum ns1__parameterType *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__parameterType
#define soap_write_PointerTons1__parameterType(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__parameterType(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__parameterType(       \
                                soap, data, "ns1:parameterType", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__parameterType **SOAP_FMAC4
soap_get_PointerTons1__parameterType(struct soap *, enum ns1__parameterType **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__parameterType
#define soap_read_PointerTons1__parameterType(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__parameterType(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__comparisonOperator
#define SOAP_TYPE_ICat3_PointerTons1__comparisonOperator (453)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__comparisonOperator(
    struct soap *, enum ns1__comparisonOperator *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__comparisonOperator(struct soap *, const char *, int,
                                          enum ns1__comparisonOperator *const *,
                                          const char *);
SOAP_FMAC3 enum ns1__comparisonOperator **SOAP_FMAC4
soap_in_PointerTons1__comparisonOperator(struct soap *, const char *,
                                         enum ns1__comparisonOperator **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__comparisonOperator(struct soap *,
                                          enum ns1__comparisonOperator *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__comparisonOperator
#define soap_write_PointerTons1__comparisonOperator(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__comparisonOperator(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__comparisonOperator(  \
                                soap, data, "ns1:comparisonOperator", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__comparisonOperator **SOAP_FMAC4
soap_get_PointerTons1__comparisonOperator(struct soap *,
                                          enum ns1__comparisonOperator **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__comparisonOperator
#define soap_read_PointerTons1__comparisonOperator(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__comparisonOperator(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__logicalOperator
#define SOAP_TYPE_ICat3_PointerTons1__logicalOperator (451)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__logicalOperator(
    struct soap *, enum ns1__logicalOperator *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__logicalOperator(struct soap *, const char *, int,
                                       enum ns1__logicalOperator *const *,
                                       const char *);
SOAP_FMAC3 enum ns1__logicalOperator **SOAP_FMAC4
soap_in_PointerTons1__logicalOperator(struct soap *, const char *,
                                      enum ns1__logicalOperator **,
                                      const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__logicalOperator(struct soap *,
                                       enum ns1__logicalOperator *const *,
                                       const char *, const char *);

#ifndef soap_write_PointerTons1__logicalOperator
#define soap_write_PointerTons1__logicalOperator(soap, data)                   \
  (ICat3::soap_serialize_PointerTons1__logicalOperator(soap, data),            \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__logicalOperator(     \
                                soap, data, "ns1:logicalOperator", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__logicalOperator **SOAP_FMAC4
soap_get_PointerTons1__logicalOperator(struct soap *,
                                       enum ns1__logicalOperator **,
                                       const char *, const char *);

#ifndef soap_read_PointerTons1__logicalOperator
#define soap_read_PointerTons1__logicalOperator(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__logicalOperator(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__shiftPK
#define SOAP_TYPE_ICat3_PointerTons1__shiftPK (450)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__shiftPK(struct soap *, ns1__shiftPK *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__shiftPK(struct soap *, const char *, int,
                               ns1__shiftPK *const *, const char *);
SOAP_FMAC3 ns1__shiftPK **SOAP_FMAC4
soap_in_PointerTons1__shiftPK(struct soap *, const char *, ns1__shiftPK **,
                              const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__shiftPK(struct soap *, ns1__shiftPK *const *,
                               const char *, const char *);

#ifndef soap_write_PointerTons1__shiftPK
#define soap_write_PointerTons1__shiftPK(soap, data)                           \
  (ICat3::soap_serialize_PointerTons1__shiftPK(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__shiftPK(             \
                                soap, data, "ns1:shiftPK", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__shiftPK **SOAP_FMAC4
soap_get_PointerTons1__shiftPK(struct soap *, ns1__shiftPK **, const char *,
                               const char *);

#ifndef soap_read_PointerTons1__shiftPK
#define soap_read_PointerTons1__shiftPK(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__shiftPK(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__shift
#define SOAP_TYPE_ICat3_PointerTons1__shift (448)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__shift(struct soap *, ns1__shift *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__shift(struct soap *, const char *, int,
                             ns1__shift *const *, const char *);
SOAP_FMAC3 ns1__shift **SOAP_FMAC4
soap_in_PointerTons1__shift(struct soap *, const char *, ns1__shift **,
                            const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__shift(struct soap *, ns1__shift *const *, const char *,
                             const char *);

#ifndef soap_write_PointerTons1__shift
#define soap_write_PointerTons1__shift(soap, data)                             \
  (ICat3::soap_serialize_PointerTons1__shift(soap, data),                      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__shift(soap, data, "ns1:shift", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__shift **SOAP_FMAC4
soap_get_PointerTons1__shift(struct soap *, ns1__shift **, const char *,
                             const char *);

#ifndef soap_read_PointerTons1__shift
#define soap_read_PointerTons1__shift(soap, data)                              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__shift(soap, data, NULL, NULL) ||         \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__parameterPK
#define SOAP_TYPE_ICat3_PointerTons1__parameterPK (444)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__parameterPK(struct soap *,
                                         ns1__parameterPK *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__parameterPK(struct soap *, const char *, int,
                                   ns1__parameterPK *const *, const char *);
SOAP_FMAC3 ns1__parameterPK **SOAP_FMAC4
soap_in_PointerTons1__parameterPK(struct soap *, const char *,
                                  ns1__parameterPK **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__parameterPK(struct soap *, ns1__parameterPK *const *,
                                   const char *, const char *);

#ifndef soap_write_PointerTons1__parameterPK
#define soap_write_PointerTons1__parameterPK(soap, data)                       \
  (ICat3::soap_serialize_PointerTons1__parameterPK(soap, data),                \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__parameterPK(         \
                                soap, data, "ns1:parameterPK", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterPK **SOAP_FMAC4
soap_get_PointerTons1__parameterPK(struct soap *, ns1__parameterPK **,
                                   const char *, const char *);

#ifndef soap_read_PointerTons1__parameterPK
#define soap_read_PointerTons1__parameterPK(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__parameterPK(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__relatedDatafilesPK
#define SOAP_TYPE_ICat3_PointerTons1__relatedDatafilesPK (443)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__relatedDatafilesPK(
    struct soap *, ns1__relatedDatafilesPK *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__relatedDatafilesPK(struct soap *, const char *, int,
                                          ns1__relatedDatafilesPK *const *,
                                          const char *);
SOAP_FMAC3 ns1__relatedDatafilesPK **SOAP_FMAC4
soap_in_PointerTons1__relatedDatafilesPK(struct soap *, const char *,
                                         ns1__relatedDatafilesPK **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__relatedDatafilesPK(struct soap *,
                                          ns1__relatedDatafilesPK *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__relatedDatafilesPK
#define soap_write_PointerTons1__relatedDatafilesPK(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__relatedDatafilesPK(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__relatedDatafilesPK(  \
                                soap, data, "ns1:relatedDatafilesPK", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__relatedDatafilesPK **SOAP_FMAC4
soap_get_PointerTons1__relatedDatafilesPK(struct soap *,
                                          ns1__relatedDatafilesPK **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__relatedDatafilesPK
#define soap_read_PointerTons1__relatedDatafilesPK(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__relatedDatafilesPK(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__datafileFormatPK
#define SOAP_TYPE_ICat3_PointerTons1__datafileFormatPK (442)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__datafileFormatPK(struct soap *,
                                              ns1__datafileFormatPK *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__datafileFormatPK(struct soap *, const char *, int,
                                        ns1__datafileFormatPK *const *,
                                        const char *);
SOAP_FMAC3 ns1__datafileFormatPK **SOAP_FMAC4
soap_in_PointerTons1__datafileFormatPK(struct soap *, const char *,
                                       ns1__datafileFormatPK **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__datafileFormatPK(struct soap *,
                                        ns1__datafileFormatPK *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons1__datafileFormatPK
#define soap_write_PointerTons1__datafileFormatPK(soap, data)                  \
  (ICat3::soap_serialize_PointerTons1__datafileFormatPK(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__datafileFormatPK(    \
                                soap, data, "ns1:datafileFormatPK", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datafileFormatPK **SOAP_FMAC4
soap_get_PointerTons1__datafileFormatPK(struct soap *, ns1__datafileFormatPK **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons1__datafileFormatPK
#define soap_read_PointerTons1__datafileFormatPK(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__datafileFormatPK(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__relatedDatafiles
#define SOAP_TYPE_ICat3_PointerTons1__relatedDatafiles (440)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__relatedDatafiles(struct soap *,
                                              ns1__relatedDatafiles *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__relatedDatafiles(struct soap *, const char *, int,
                                        ns1__relatedDatafiles *const *,
                                        const char *);
SOAP_FMAC3 ns1__relatedDatafiles **SOAP_FMAC4
soap_in_PointerTons1__relatedDatafiles(struct soap *, const char *,
                                       ns1__relatedDatafiles **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__relatedDatafiles(struct soap *,
                                        ns1__relatedDatafiles *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons1__relatedDatafiles
#define soap_write_PointerTons1__relatedDatafiles(soap, data)                  \
  (ICat3::soap_serialize_PointerTons1__relatedDatafiles(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__relatedDatafiles(    \
                                soap, data, "ns1:relatedDatafiles", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__relatedDatafiles **SOAP_FMAC4
soap_get_PointerTons1__relatedDatafiles(struct soap *, ns1__relatedDatafiles **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons1__relatedDatafiles
#define soap_read_PointerTons1__relatedDatafiles(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__relatedDatafiles(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__parameterValueType
#define SOAP_TYPE_ICat3_PointerTons1__parameterValueType (439)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__parameterValueType(
    struct soap *, enum ns1__parameterValueType *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__parameterValueType(struct soap *, const char *, int,
                                          enum ns1__parameterValueType *const *,
                                          const char *);
SOAP_FMAC3 enum ns1__parameterValueType **SOAP_FMAC4
soap_in_PointerTons1__parameterValueType(struct soap *, const char *,
                                         enum ns1__parameterValueType **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__parameterValueType(struct soap *,
                                          enum ns1__parameterValueType *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__parameterValueType
#define soap_write_PointerTons1__parameterValueType(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__parameterValueType(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__parameterValueType(  \
                                soap, data, "ns1:parameterValueType", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__parameterValueType **SOAP_FMAC4
soap_get_PointerTons1__parameterValueType(struct soap *,
                                          enum ns1__parameterValueType **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__parameterValueType
#define soap_read_PointerTons1__parameterValueType(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__parameterValueType(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__sampleInclude
#define SOAP_TYPE_ICat3_PointerTons1__sampleInclude (437)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__sampleInclude(struct soap *,
                                           enum ns1__sampleInclude *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__sampleInclude(struct soap *, const char *, int,
                                     enum ns1__sampleInclude *const *,
                                     const char *);
SOAP_FMAC3 enum ns1__sampleInclude **SOAP_FMAC4
soap_in_PointerTons1__sampleInclude(struct soap *, const char *,
                                    enum ns1__sampleInclude **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__sampleInclude(struct soap *,
                                     enum ns1__sampleInclude *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__sampleInclude
#define soap_write_PointerTons1__sampleInclude(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__sampleInclude(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__sampleInclude(       \
                                soap, data, "ns1:sampleInclude", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__sampleInclude **SOAP_FMAC4
soap_get_PointerTons1__sampleInclude(struct soap *, enum ns1__sampleInclude **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__sampleInclude
#define soap_read_PointerTons1__sampleInclude(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__sampleInclude(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__restrictionAttributes
#define SOAP_TYPE_ICat3_PointerTons1__restrictionAttributes (436)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__restrictionAttributes(
    struct soap *, enum ns1__restrictionAttributes *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__restrictionAttributes(
    struct soap *, const char *, int, enum ns1__restrictionAttributes *const *,
    const char *);
SOAP_FMAC3 enum ns1__restrictionAttributes **SOAP_FMAC4
soap_in_PointerTons1__restrictionAttributes(struct soap *, const char *,
                                            enum ns1__restrictionAttributes **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__restrictionAttributes(
    struct soap *, enum ns1__restrictionAttributes *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__restrictionAttributes
#define soap_write_PointerTons1__restrictionAttributes(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__restrictionAttributes(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__restrictionAttributes(                    \
           soap, data, "ns1:restrictionAttributes", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__restrictionAttributes **SOAP_FMAC4
soap_get_PointerTons1__restrictionAttributes(struct soap *,
                                             enum ns1__restrictionAttributes **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__restrictionAttributes
#define soap_read_PointerTons1__restrictionAttributes(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__restrictionAttributes(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerToint
#define SOAP_TYPE_ICat3_PointerToint (435)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerToint(struct soap *, int *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap *, const char *,
                                                int, int *const *,
                                                const char *);
SOAP_FMAC3 int **SOAP_FMAC4
soap_in_PointerToint(struct soap *, const char *, int **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerToint(struct soap *, int *const *, const char *, const char *);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data)                                    \
  (ICat3::soap_serialize_PointerToint(soap, data),                             \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerToint(soap, data, "int", NULL) ||                \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 int **SOAP_FMAC4
soap_get_PointerToint(struct soap *, int **, const char *, const char *);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data)                                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerToint(soap, data, NULL, NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__datafileInclude
#define SOAP_TYPE_ICat3_PointerTons1__datafileInclude (434)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__datafileInclude(
    struct soap *, enum ns1__datafileInclude *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__datafileInclude(struct soap *, const char *, int,
                                       enum ns1__datafileInclude *const *,
                                       const char *);
SOAP_FMAC3 enum ns1__datafileInclude **SOAP_FMAC4
soap_in_PointerTons1__datafileInclude(struct soap *, const char *,
                                      enum ns1__datafileInclude **,
                                      const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__datafileInclude(struct soap *,
                                       enum ns1__datafileInclude *const *,
                                       const char *, const char *);

#ifndef soap_write_PointerTons1__datafileInclude
#define soap_write_PointerTons1__datafileInclude(soap, data)                   \
  (ICat3::soap_serialize_PointerTons1__datafileInclude(soap, data),            \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__datafileInclude(     \
                                soap, data, "ns1:datafileInclude", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__datafileInclude **SOAP_FMAC4
soap_get_PointerTons1__datafileInclude(struct soap *,
                                       enum ns1__datafileInclude **,
                                       const char *, const char *);

#ifndef soap_read_PointerTons1__datafileInclude
#define soap_read_PointerTons1__datafileInclude(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__datafileInclude(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__userDetails
#define SOAP_TYPE_ICat3_PointerTons1__userDetails (433)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__userDetails(struct soap *,
                                         ns1__userDetails *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__userDetails(struct soap *, const char *, int,
                                   ns1__userDetails *const *, const char *);
SOAP_FMAC3 ns1__userDetails **SOAP_FMAC4
soap_in_PointerTons1__userDetails(struct soap *, const char *,
                                  ns1__userDetails **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__userDetails(struct soap *, ns1__userDetails *const *,
                                   const char *, const char *);

#ifndef soap_write_PointerTons1__userDetails
#define soap_write_PointerTons1__userDetails(soap, data)                       \
  (ICat3::soap_serialize_PointerTons1__userDetails(soap, data),                \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__userDetails(         \
                                soap, data, "ns1:userDetails", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__userDetails **SOAP_FMAC4
soap_get_PointerTons1__userDetails(struct soap *, ns1__userDetails **,
                                   const char *, const char *);

#ifndef soap_read_PointerTons1__userDetails
#define soap_read_PointerTons1__userDetails(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__userDetails(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__datasetInclude
#define SOAP_TYPE_ICat3_PointerTons1__datasetInclude (431)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__datasetInclude(struct soap *,
                                            enum ns1__datasetInclude *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__datasetInclude(struct soap *, const char *, int,
                                      enum ns1__datasetInclude *const *,
                                      const char *);
SOAP_FMAC3 enum ns1__datasetInclude **SOAP_FMAC4
soap_in_PointerTons1__datasetInclude(struct soap *, const char *,
                                     enum ns1__datasetInclude **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__datasetInclude(struct soap *,
                                      enum ns1__datasetInclude *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__datasetInclude
#define soap_write_PointerTons1__datasetInclude(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__datasetInclude(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__datasetInclude(      \
                                soap, data, "ns1:datasetInclude", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__datasetInclude **SOAP_FMAC4
soap_get_PointerTons1__datasetInclude(struct soap *,
                                      enum ns1__datasetInclude **, const char *,
                                      const char *);

#ifndef soap_read_PointerTons1__datasetInclude
#define soap_read_PointerTons1__datasetInclude(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__datasetInclude(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__datafileFormat
#define SOAP_TYPE_ICat3_PointerTons1__datafileFormat (429)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__datafileFormat(struct soap *,
                                            ns1__datafileFormat *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__datafileFormat(struct soap *, const char *, int,
                                      ns1__datafileFormat *const *,
                                      const char *);
SOAP_FMAC3 ns1__datafileFormat **SOAP_FMAC4
soap_in_PointerTons1__datafileFormat(struct soap *, const char *,
                                     ns1__datafileFormat **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__datafileFormat(struct soap *,
                                      ns1__datafileFormat *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__datafileFormat
#define soap_write_PointerTons1__datafileFormat(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__datafileFormat(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__datafileFormat(      \
                                soap, data, "ns1:datafileFormat", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datafileFormat **SOAP_FMAC4
soap_get_PointerTons1__datafileFormat(struct soap *, ns1__datafileFormat **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__datafileFormat
#define soap_read_PointerTons1__datafileFormat(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__datafileFormat(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTodouble
#define SOAP_TYPE_ICat3_PointerTodouble (428)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTodouble(struct soap *, double *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodouble(struct soap *, const char *,
                                                   int, double *const *,
                                                   const char *);
SOAP_FMAC3 double **SOAP_FMAC4
soap_in_PointerTodouble(struct soap *, const char *, double **, const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodouble(struct soap *,
                                                   double *const *,
                                                   const char *, const char *);

#ifndef soap_write_PointerTodouble
#define soap_write_PointerTodouble(soap, data)                                 \
  (ICat3::soap_serialize_PointerTodouble(soap, data),                          \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTodouble(soap, data, "double", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 double **SOAP_FMAC4
soap_get_PointerTodouble(struct soap *, double **, const char *, const char *);

#ifndef soap_read_PointerTodouble
#define soap_read_PointerTodouble(soap, data)                                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTodouble(soap, data, NULL, NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTotime
#define SOAP_TYPE_ICat3_PointerTotime (427)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTotime(struct soap *, time_t *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotime(struct soap *, const char *,
                                                 int, time_t *const *,
                                                 const char *);
SOAP_FMAC3 time_t **SOAP_FMAC4
soap_in_PointerTotime(struct soap *, const char *, time_t **, const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotime(struct soap *, time_t *const *,
                                                 const char *, const char *);

#ifndef soap_write_PointerTotime
#define soap_write_PointerTotime(soap, data)                                   \
  (ICat3::soap_serialize_PointerTotime(soap, data),                            \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTotime(soap, data, "dateTime", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 time_t **SOAP_FMAC4
soap_get_PointerTotime(struct soap *, time_t **, const char *, const char *);

#ifndef soap_read_PointerTotime
#define soap_read_PointerTotime(soap, data)                                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTotime(soap, data, NULL, NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__advancedSearchDetails
#define SOAP_TYPE_ICat3_PointerTons1__advancedSearchDetails (426)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__advancedSearchDetails(
    struct soap *, ns1__advancedSearchDetails *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__advancedSearchDetails(
    struct soap *, const char *, int, ns1__advancedSearchDetails *const *,
    const char *);
SOAP_FMAC3 ns1__advancedSearchDetails **SOAP_FMAC4
soap_in_PointerTons1__advancedSearchDetails(struct soap *, const char *,
                                            ns1__advancedSearchDetails **,
                                            const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__advancedSearchDetails(
    struct soap *, ns1__advancedSearchDetails *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__advancedSearchDetails
#define soap_write_PointerTons1__advancedSearchDetails(soap, data)             \
  (ICat3::soap_serialize_PointerTons1__advancedSearchDetails(soap, data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__advancedSearchDetails(                    \
           soap, data, "ns1:advancedSearchDetails", NULL) ||                   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__advancedSearchDetails **SOAP_FMAC4
soap_get_PointerTons1__advancedSearchDetails(struct soap *,
                                             ns1__advancedSearchDetails **,
                                             const char *, const char *);

#ifndef soap_read_PointerTons1__advancedSearchDetails
#define soap_read_PointerTons1__advancedSearchDetails(soap, data)              \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__advancedSearchDetails(soap, data, NULL,  \
                                                            NULL) ||           \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__icatAuthorisation
#define SOAP_TYPE_ICat3_PointerTons1__icatAuthorisation (423)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__icatAuthorisation(struct soap *,
                                               ns1__icatAuthorisation *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__icatAuthorisation(struct soap *, const char *, int,
                                         ns1__icatAuthorisation *const *,
                                         const char *);
SOAP_FMAC3 ns1__icatAuthorisation **SOAP_FMAC4
soap_in_PointerTons1__icatAuthorisation(struct soap *, const char *,
                                        ns1__icatAuthorisation **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__icatAuthorisation(struct soap *,
                                         ns1__icatAuthorisation *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__icatAuthorisation
#define soap_write_PointerTons1__icatAuthorisation(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__icatAuthorisation(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__icatAuthorisation(   \
                                soap, data, "ns1:icatAuthorisation", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__icatAuthorisation **SOAP_FMAC4
soap_get_PointerTons1__icatAuthorisation(struct soap *,
                                         ns1__icatAuthorisation **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__icatAuthorisation
#define soap_read_PointerTons1__icatAuthorisation(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__icatAuthorisation(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__elementType
#define SOAP_TYPE_ICat3_PointerTons1__elementType (422)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__elementType(struct soap *,
                                         enum ns1__elementType *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__elementType(struct soap *, const char *, int,
                                   enum ns1__elementType *const *,
                                   const char *);
SOAP_FMAC3 enum ns1__elementType **SOAP_FMAC4
soap_in_PointerTons1__elementType(struct soap *, const char *,
                                  enum ns1__elementType **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__elementType(struct soap *,
                                   enum ns1__elementType *const *, const char *,
                                   const char *);

#ifndef soap_write_PointerTons1__elementType
#define soap_write_PointerTons1__elementType(soap, data)                       \
  (ICat3::soap_serialize_PointerTons1__elementType(soap, data),                \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__elementType(         \
                                soap, data, "ns1:elementType", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__elementType **SOAP_FMAC4
soap_get_PointerTons1__elementType(struct soap *, enum ns1__elementType **,
                                   const char *, const char *);

#ifndef soap_read_PointerTons1__elementType
#define soap_read_PointerTons1__elementType(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__elementType(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__keyword
#define SOAP_TYPE_ICat3_PointerTons1__keyword (421)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__keyword(struct soap *, ns1__keyword *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__keyword(struct soap *, const char *, int,
                               ns1__keyword *const *, const char *);
SOAP_FMAC3 ns1__keyword **SOAP_FMAC4
soap_in_PointerTons1__keyword(struct soap *, const char *, ns1__keyword **,
                              const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__keyword(struct soap *, ns1__keyword *const *,
                               const char *, const char *);

#ifndef soap_write_PointerTons1__keyword
#define soap_write_PointerTons1__keyword(soap, data)                           \
  (ICat3::soap_serialize_PointerTons1__keyword(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__keyword(             \
                                soap, data, "ns1:keyword", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__keyword **SOAP_FMAC4
soap_get_PointerTons1__keyword(struct soap *, ns1__keyword **, const char *,
                               const char *);

#ifndef soap_read_PointerTons1__keyword
#define soap_read_PointerTons1__keyword(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__keyword(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__datasetParameter
#define SOAP_TYPE_ICat3_PointerTons1__datasetParameter (420)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__datasetParameter(struct soap *,
                                              ns1__datasetParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__datasetParameter(struct soap *, const char *, int,
                                        ns1__datasetParameter *const *,
                                        const char *);
SOAP_FMAC3 ns1__datasetParameter **SOAP_FMAC4
soap_in_PointerTons1__datasetParameter(struct soap *, const char *,
                                       ns1__datasetParameter **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__datasetParameter(struct soap *,
                                        ns1__datasetParameter *const *,
                                        const char *, const char *);

#ifndef soap_write_PointerTons1__datasetParameter
#define soap_write_PointerTons1__datasetParameter(soap, data)                  \
  (ICat3::soap_serialize_PointerTons1__datasetParameter(soap, data),           \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__datasetParameter(    \
                                soap, data, "ns1:datasetParameter", NULL) ||   \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datasetParameter **SOAP_FMAC4
soap_get_PointerTons1__datasetParameter(struct soap *, ns1__datasetParameter **,
                                        const char *, const char *);

#ifndef soap_read_PointerTons1__datasetParameter
#define soap_read_PointerTons1__datasetParameter(soap, data)                   \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__datasetParameter(soap, data, NULL,       \
                                                       NULL) ||                \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__sampleParameterPK
#define SOAP_TYPE_ICat3_PointerTons1__sampleParameterPK (419)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__sampleParameterPK(struct soap *,
                                               ns1__sampleParameterPK *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__sampleParameterPK(struct soap *, const char *, int,
                                         ns1__sampleParameterPK *const *,
                                         const char *);
SOAP_FMAC3 ns1__sampleParameterPK **SOAP_FMAC4
soap_in_PointerTons1__sampleParameterPK(struct soap *, const char *,
                                        ns1__sampleParameterPK **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__sampleParameterPK(struct soap *,
                                         ns1__sampleParameterPK *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__sampleParameterPK
#define soap_write_PointerTons1__sampleParameterPK(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__sampleParameterPK(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__sampleParameterPK(   \
                                soap, data, "ns1:sampleParameterPK", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__sampleParameterPK **SOAP_FMAC4
soap_get_PointerTons1__sampleParameterPK(struct soap *,
                                         ns1__sampleParameterPK **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__sampleParameterPK
#define soap_read_PointerTons1__sampleParameterPK(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__sampleParameterPK(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__investigator
#define SOAP_TYPE_ICat3_PointerTons1__investigator (418)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__investigator(struct soap *,
                                          ns1__investigator *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__investigator(struct soap *, const char *, int,
                                    ns1__investigator *const *, const char *);
SOAP_FMAC3 ns1__investigator **SOAP_FMAC4
soap_in_PointerTons1__investigator(struct soap *, const char *,
                                   ns1__investigator **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__investigator(struct soap *, ns1__investigator *const *,
                                    const char *, const char *);

#ifndef soap_write_PointerTons1__investigator
#define soap_write_PointerTons1__investigator(soap, data)                      \
  (ICat3::soap_serialize_PointerTons1__investigator(soap, data),               \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__investigator(        \
                                soap, data, "ns1:investigator", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__investigator **SOAP_FMAC4
soap_get_PointerTons1__investigator(struct soap *, ns1__investigator **,
                                    const char *, const char *);

#ifndef soap_read_PointerTons1__investigator
#define soap_read_PointerTons1__investigator(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__investigator(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__datafileParameterPK
#define SOAP_TYPE_ICat3_PointerTons1__datafileParameterPK (416)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__datafileParameterPK(
    struct soap *, ns1__datafileParameterPK *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__datafileParameterPK(struct soap *, const char *, int,
                                           ns1__datafileParameterPK *const *,
                                           const char *);
SOAP_FMAC3 ns1__datafileParameterPK **SOAP_FMAC4
soap_in_PointerTons1__datafileParameterPK(struct soap *, const char *,
                                          ns1__datafileParameterPK **,
                                          const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__datafileParameterPK(struct soap *,
                                           ns1__datafileParameterPK *const *,
                                           const char *, const char *);

#ifndef soap_write_PointerTons1__datafileParameterPK
#define soap_write_PointerTons1__datafileParameterPK(soap, data)               \
  (ICat3::soap_serialize_PointerTons1__datafileParameterPK(soap, data),        \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__datafileParameterPK(                      \
           soap, data, "ns1:datafileParameterPK", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datafileParameterPK **SOAP_FMAC4
soap_get_PointerTons1__datafileParameterPK(struct soap *,
                                           ns1__datafileParameterPK **,
                                           const char *, const char *);

#ifndef soap_read_PointerTons1__datafileParameterPK
#define soap_read_PointerTons1__datafileParameterPK(soap, data)                \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__datafileParameterPK(soap, data, NULL,    \
                                                          NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__publication
#define SOAP_TYPE_ICat3_PointerTons1__publication (415)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__publication(struct soap *,
                                         ns1__publication *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__publication(struct soap *, const char *, int,
                                   ns1__publication *const *, const char *);
SOAP_FMAC3 ns1__publication **SOAP_FMAC4
soap_in_PointerTons1__publication(struct soap *, const char *,
                                  ns1__publication **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__publication(struct soap *, ns1__publication *const *,
                                   const char *, const char *);

#ifndef soap_write_PointerTons1__publication
#define soap_write_PointerTons1__publication(soap, data)                       \
  (ICat3::soap_serialize_PointerTons1__publication(soap, data),                \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__publication(         \
                                soap, data, "ns1:publication", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__publication **SOAP_FMAC4
soap_get_PointerTons1__publication(struct soap *, ns1__publication **,
                                   const char *, const char *);

#ifndef soap_read_PointerTons1__publication
#define soap_read_PointerTons1__publication(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__publication(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__datasetParameterPK
#define SOAP_TYPE_ICat3_PointerTons1__datasetParameterPK (414)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__datasetParameterPK(
    struct soap *, ns1__datasetParameterPK *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__datasetParameterPK(struct soap *, const char *, int,
                                          ns1__datasetParameterPK *const *,
                                          const char *);
SOAP_FMAC3 ns1__datasetParameterPK **SOAP_FMAC4
soap_in_PointerTons1__datasetParameterPK(struct soap *, const char *,
                                         ns1__datasetParameterPK **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__datasetParameterPK(struct soap *,
                                          ns1__datasetParameterPK *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__datasetParameterPK
#define soap_write_PointerTons1__datasetParameterPK(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__datasetParameterPK(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__datasetParameterPK(  \
                                soap, data, "ns1:datasetParameterPK", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datasetParameterPK **SOAP_FMAC4
soap_get_PointerTons1__datasetParameterPK(struct soap *,
                                          ns1__datasetParameterPK **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__datasetParameterPK
#define soap_read_PointerTons1__datasetParameterPK(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__datasetParameterPK(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__investigationInclude
#define SOAP_TYPE_ICat3_PointerTons1__investigationInclude (413)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__investigationInclude(
    struct soap *, enum ns1__investigationInclude *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__investigationInclude(
    struct soap *, const char *, int, enum ns1__investigationInclude *const *,
    const char *);
SOAP_FMAC3 enum ns1__investigationInclude **SOAP_FMAC4
soap_in_PointerTons1__investigationInclude(struct soap *, const char *,
                                           enum ns1__investigationInclude **,
                                           const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__investigationInclude(
    struct soap *, enum ns1__investigationInclude *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__investigationInclude
#define soap_write_PointerTons1__investigationInclude(soap, data)              \
  (ICat3::soap_serialize_PointerTons1__investigationInclude(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__investigationInclude(                     \
           soap, data, "ns1:investigationInclude", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__investigationInclude **SOAP_FMAC4
soap_get_PointerTons1__investigationInclude(struct soap *,
                                            enum ns1__investigationInclude **,
                                            const char *, const char *);

#ifndef soap_read_PointerTons1__investigationInclude
#define soap_read_PointerTons1__investigationInclude(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__investigationInclude(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__keywordDetails
#define SOAP_TYPE_ICat3_PointerTons1__keywordDetails (412)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__keywordDetails(struct soap *,
                                            ns1__keywordDetails *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__keywordDetails(struct soap *, const char *, int,
                                      ns1__keywordDetails *const *,
                                      const char *);
SOAP_FMAC3 ns1__keywordDetails **SOAP_FMAC4
soap_in_PointerTons1__keywordDetails(struct soap *, const char *,
                                     ns1__keywordDetails **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__keywordDetails(struct soap *,
                                      ns1__keywordDetails *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__keywordDetails
#define soap_write_PointerTons1__keywordDetails(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__keywordDetails(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__keywordDetails(      \
                                soap, data, "ns1:keywordDetails", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__keywordDetails **SOAP_FMAC4
soap_get_PointerTons1__keywordDetails(struct soap *, ns1__keywordDetails **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__keywordDetails
#define soap_read_PointerTons1__keywordDetails(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__keywordDetails(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__investigation
#define SOAP_TYPE_ICat3_PointerTons1__investigation (410)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__investigation(struct soap *,
                                           ns1__investigation *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__investigation(struct soap *, const char *, int,
                                     ns1__investigation *const *, const char *);
SOAP_FMAC3 ns1__investigation **SOAP_FMAC4
soap_in_PointerTons1__investigation(struct soap *, const char *,
                                    ns1__investigation **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__investigation(struct soap *, ns1__investigation *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__investigation
#define soap_write_PointerTons1__investigation(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__investigation(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__investigation(       \
                                soap, data, "ns1:investigation", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__investigation **SOAP_FMAC4
soap_get_PointerTons1__investigation(struct soap *, ns1__investigation **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__investigation
#define soap_read_PointerTons1__investigation(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__investigation(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__downloadInfo
#define SOAP_TYPE_ICat3_PointerTons1__downloadInfo (409)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__downloadInfo(struct soap *,
                                          ns1__downloadInfo *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__downloadInfo(struct soap *, const char *, int,
                                    ns1__downloadInfo *const *, const char *);
SOAP_FMAC3 ns1__downloadInfo **SOAP_FMAC4
soap_in_PointerTons1__downloadInfo(struct soap *, const char *,
                                   ns1__downloadInfo **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__downloadInfo(struct soap *, ns1__downloadInfo *const *,
                                    const char *, const char *);

#ifndef soap_write_PointerTons1__downloadInfo
#define soap_write_PointerTons1__downloadInfo(soap, data)                      \
  (ICat3::soap_serialize_PointerTons1__downloadInfo(soap, data),               \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__downloadInfo(        \
                                soap, data, "ns1:downloadInfo", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__downloadInfo **SOAP_FMAC4
soap_get_PointerTons1__downloadInfo(struct soap *, ns1__downloadInfo **,
                                    const char *, const char *);

#ifndef soap_read_PointerTons1__downloadInfo
#define soap_read_PointerTons1__downloadInfo(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__downloadInfo(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__sampleParameter
#define SOAP_TYPE_ICat3_PointerTons1__sampleParameter (408)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__sampleParameter(struct soap *,
                                             ns1__sampleParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__sampleParameter(struct soap *, const char *, int,
                                       ns1__sampleParameter *const *,
                                       const char *);
SOAP_FMAC3 ns1__sampleParameter **SOAP_FMAC4
soap_in_PointerTons1__sampleParameter(struct soap *, const char *,
                                      ns1__sampleParameter **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__sampleParameter(struct soap *,
                                       ns1__sampleParameter *const *,
                                       const char *, const char *);

#ifndef soap_write_PointerTons1__sampleParameter
#define soap_write_PointerTons1__sampleParameter(soap, data)                   \
  (ICat3::soap_serialize_PointerTons1__sampleParameter(soap, data),            \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__sampleParameter(     \
                                soap, data, "ns1:sampleParameter", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__sampleParameter **SOAP_FMAC4
soap_get_PointerTons1__sampleParameter(struct soap *, ns1__sampleParameter **,
                                       const char *, const char *);

#ifndef soap_read_PointerTons1__sampleParameter
#define soap_read_PointerTons1__sampleParameter(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__sampleParameter(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__parameterComparisonCondition
#define SOAP_TYPE_ICat3_PointerTons1__parameterComparisonCondition (406)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__parameterComparisonCondition(
    struct soap *, ns1__parameterComparisonCondition *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__parameterComparisonCondition(
    struct soap *, const char *, int,
    ns1__parameterComparisonCondition *const *, const char *);
SOAP_FMAC3 ns1__parameterComparisonCondition **SOAP_FMAC4
soap_in_PointerTons1__parameterComparisonCondition(
    struct soap *, const char *, ns1__parameterComparisonCondition **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__parameterComparisonCondition(
    struct soap *, ns1__parameterComparisonCondition *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__parameterComparisonCondition
#define soap_write_PointerTons1__parameterComparisonCondition(soap, data)      \
  (ICat3::soap_serialize_PointerTons1__parameterComparisonCondition(soap,      \
                                                                    data),     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__parameterComparisonCondition(             \
           soap, data, "ns1:parameterComparisonCondition", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterComparisonCondition **SOAP_FMAC4
soap_get_PointerTons1__parameterComparisonCondition(
    struct soap *, ns1__parameterComparisonCondition **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__parameterComparisonCondition
#define soap_read_PointerTons1__parameterComparisonCondition(soap, data)       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__parameterComparisonCondition(            \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__parameterSearch
#define SOAP_TYPE_ICat3_PointerTons1__parameterSearch (403)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__parameterSearch(struct soap *,
                                             ns1__parameterSearch *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__parameterSearch(struct soap *, const char *, int,
                                       ns1__parameterSearch *const *,
                                       const char *);
SOAP_FMAC3 ns1__parameterSearch **SOAP_FMAC4
soap_in_PointerTons1__parameterSearch(struct soap *, const char *,
                                      ns1__parameterSearch **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__parameterSearch(struct soap *,
                                       ns1__parameterSearch *const *,
                                       const char *, const char *);

#ifndef soap_write_PointerTons1__parameterSearch
#define soap_write_PointerTons1__parameterSearch(soap, data)                   \
  (ICat3::soap_serialize_PointerTons1__parameterSearch(soap, data),            \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__parameterSearch(     \
                                soap, data, "ns1:parameterSearch", NULL) ||    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterSearch **SOAP_FMAC4
soap_get_PointerTons1__parameterSearch(struct soap *, ns1__parameterSearch **,
                                       const char *, const char *);

#ifndef soap_read_PointerTons1__parameterSearch
#define soap_read_PointerTons1__parameterSearch(soap, data)                    \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__parameterSearch(soap, data, NULL,        \
                                                      NULL) ||                 \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__keywordType
#define SOAP_TYPE_ICat3_PointerTons1__keywordType (402)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__keywordType(struct soap *,
                                         enum ns1__keywordType *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__keywordType(struct soap *, const char *, int,
                                   enum ns1__keywordType *const *,
                                   const char *);
SOAP_FMAC3 enum ns1__keywordType **SOAP_FMAC4
soap_in_PointerTons1__keywordType(struct soap *, const char *,
                                  enum ns1__keywordType **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__keywordType(struct soap *,
                                   enum ns1__keywordType *const *, const char *,
                                   const char *);

#ifndef soap_write_PointerTons1__keywordType
#define soap_write_PointerTons1__keywordType(soap, data)                       \
  (ICat3::soap_serialize_PointerTons1__keywordType(soap, data),                \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__keywordType(         \
                                soap, data, "ns1:keywordType", NULL) ||        \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 enum ns1__keywordType **SOAP_FMAC4
soap_get_PointerTons1__keywordType(struct soap *, enum ns1__keywordType **,
                                   const char *, const char *);

#ifndef soap_read_PointerTons1__keywordType
#define soap_read_PointerTons1__keywordType(soap, data)                        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__keywordType(soap, data, NULL, NULL) ||   \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__dataset
#define SOAP_TYPE_ICat3_PointerTons1__dataset (400)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__dataset(struct soap *, ns1__dataset *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__dataset(struct soap *, const char *, int,
                               ns1__dataset *const *, const char *);
SOAP_FMAC3 ns1__dataset **SOAP_FMAC4
soap_in_PointerTons1__dataset(struct soap *, const char *, ns1__dataset **,
                              const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__dataset(struct soap *, ns1__dataset *const *,
                               const char *, const char *);

#ifndef soap_write_PointerTons1__dataset
#define soap_write_PointerTons1__dataset(soap, data)                           \
  (ICat3::soap_serialize_PointerTons1__dataset(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__dataset(             \
                                soap, data, "ns1:dataset", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__dataset **SOAP_FMAC4
soap_get_PointerTons1__dataset(struct soap *, ns1__dataset **, const char *,
                               const char *);

#ifndef soap_read_PointerTons1__dataset
#define soap_read_PointerTons1__dataset(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__dataset(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__keywordPK
#define SOAP_TYPE_ICat3_PointerTons1__keywordPK (399)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__keywordPK(struct soap *, ns1__keywordPK *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__keywordPK(struct soap *, const char *, int,
                                 ns1__keywordPK *const *, const char *);
SOAP_FMAC3 ns1__keywordPK **SOAP_FMAC4
soap_in_PointerTons1__keywordPK(struct soap *, const char *, ns1__keywordPK **,
                                const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__keywordPK(struct soap *, ns1__keywordPK *const *,
                                 const char *, const char *);

#ifndef soap_write_PointerTons1__keywordPK
#define soap_write_PointerTons1__keywordPK(soap, data)                         \
  (ICat3::soap_serialize_PointerTons1__keywordPK(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__keywordPK(           \
                                soap, data, "ns1:keywordPK", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__keywordPK **SOAP_FMAC4
soap_get_PointerTons1__keywordPK(struct soap *, ns1__keywordPK **, const char *,
                                 const char *);

#ifndef soap_read_PointerTons1__keywordPK
#define soap_read_PointerTons1__keywordPK(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__keywordPK(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__investigatorPK
#define SOAP_TYPE_ICat3_PointerTons1__investigatorPK (398)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__investigatorPK(struct soap *,
                                            ns1__investigatorPK *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__investigatorPK(struct soap *, const char *, int,
                                      ns1__investigatorPK *const *,
                                      const char *);
SOAP_FMAC3 ns1__investigatorPK **SOAP_FMAC4
soap_in_PointerTons1__investigatorPK(struct soap *, const char *,
                                     ns1__investigatorPK **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__investigatorPK(struct soap *,
                                      ns1__investigatorPK *const *,
                                      const char *, const char *);

#ifndef soap_write_PointerTons1__investigatorPK
#define soap_write_PointerTons1__investigatorPK(soap, data)                    \
  (ICat3::soap_serialize_PointerTons1__investigatorPK(soap, data),             \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__investigatorPK(      \
                                soap, data, "ns1:investigatorPK", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__investigatorPK **SOAP_FMAC4
soap_get_PointerTons1__investigatorPK(struct soap *, ns1__investigatorPK **,
                                      const char *, const char *);

#ifndef soap_read_PointerTons1__investigatorPK
#define soap_read_PointerTons1__investigatorPK(soap, data)                     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__investigatorPK(soap, data, NULL,         \
                                                     NULL) ||                  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__instrument
#define SOAP_TYPE_ICat3_PointerTons1__instrument (396)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__instrument(struct soap *,
                                        ns1__instrument *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__instrument(struct soap *, const char *, int,
                                  ns1__instrument *const *, const char *);
SOAP_FMAC3 ns1__instrument **SOAP_FMAC4
soap_in_PointerTons1__instrument(struct soap *, const char *,
                                 ns1__instrument **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__instrument(struct soap *, ns1__instrument *const *,
                                  const char *, const char *);

#ifndef soap_write_PointerTons1__instrument
#define soap_write_PointerTons1__instrument(soap, data)                        \
  (ICat3::soap_serialize_PointerTons1__instrument(soap, data),                 \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__instrument(          \
                                soap, data, "ns1:instrument", NULL) ||         \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__instrument **SOAP_FMAC4
soap_get_PointerTons1__instrument(struct soap *, ns1__instrument **,
                                  const char *, const char *);

#ifndef soap_read_PointerTons1__instrument
#define soap_read_PointerTons1__instrument(soap, data)                         \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__instrument(soap, data, NULL, NULL) ||    \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__datafileParameter
#define SOAP_TYPE_ICat3_PointerTons1__datafileParameter (394)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__datafileParameter(struct soap *,
                                               ns1__datafileParameter *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__datafileParameter(struct soap *, const char *, int,
                                         ns1__datafileParameter *const *,
                                         const char *);
SOAP_FMAC3 ns1__datafileParameter **SOAP_FMAC4
soap_in_PointerTons1__datafileParameter(struct soap *, const char *,
                                        ns1__datafileParameter **,
                                        const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__datafileParameter(struct soap *,
                                         ns1__datafileParameter *const *,
                                         const char *, const char *);

#ifndef soap_write_PointerTons1__datafileParameter
#define soap_write_PointerTons1__datafileParameter(soap, data)                 \
  (ICat3::soap_serialize_PointerTons1__datafileParameter(soap, data),          \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__datafileParameter(   \
                                soap, data, "ns1:datafileParameter", NULL) ||  \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datafileParameter **SOAP_FMAC4
soap_get_PointerTons1__datafileParameter(struct soap *,
                                         ns1__datafileParameter **,
                                         const char *, const char *);

#ifndef soap_read_PointerTons1__datafileParameter
#define soap_read_PointerTons1__datafileParameter(soap, data)                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__datafileParameter(soap, data, NULL,      \
                                                        NULL) ||               \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__facilityCycle
#define SOAP_TYPE_ICat3_PointerTons1__facilityCycle (392)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__facilityCycle(struct soap *,
                                           ns1__facilityCycle *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__facilityCycle(struct soap *, const char *, int,
                                     ns1__facilityCycle *const *, const char *);
SOAP_FMAC3 ns1__facilityCycle **SOAP_FMAC4
soap_in_PointerTons1__facilityCycle(struct soap *, const char *,
                                    ns1__facilityCycle **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__facilityCycle(struct soap *, ns1__facilityCycle *const *,
                                     const char *, const char *);

#ifndef soap_write_PointerTons1__facilityCycle
#define soap_write_PointerTons1__facilityCycle(soap, data)                     \
  (ICat3::soap_serialize_PointerTons1__facilityCycle(soap, data),              \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__facilityCycle(       \
                                soap, data, "ns1:facilityCycle", NULL) ||      \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__facilityCycle **SOAP_FMAC4
soap_get_PointerTons1__facilityCycle(struct soap *, ns1__facilityCycle **,
                                     const char *, const char *);

#ifndef soap_read_PointerTons1__facilityCycle
#define soap_read_PointerTons1__facilityCycle(soap, data)                      \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__facilityCycle(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__parameter
#define SOAP_TYPE_ICat3_PointerTons1__parameter (390)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__parameter(struct soap *, ns1__parameter *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__parameter(struct soap *, const char *, int,
                                 ns1__parameter *const *, const char *);
SOAP_FMAC3 ns1__parameter **SOAP_FMAC4
soap_in_PointerTons1__parameter(struct soap *, const char *, ns1__parameter **,
                                const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__parameter(struct soap *, ns1__parameter *const *,
                                 const char *, const char *);

#ifndef soap_write_PointerTons1__parameter
#define soap_write_PointerTons1__parameter(soap, data)                         \
  (ICat3::soap_serialize_PointerTons1__parameter(soap, data),                  \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__parameter(           \
                                soap, data, "ns1:parameter", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameter **SOAP_FMAC4
soap_get_PointerTons1__parameter(struct soap *, ns1__parameter **, const char *,
                                 const char *);

#ifndef soap_read_PointerTons1__parameter
#define soap_read_PointerTons1__parameter(soap, data)                          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__parameter(soap, data, NULL, NULL) ||     \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__parameterLogicalCondition
#define SOAP_TYPE_ICat3_PointerTons1__parameterLogicalCondition (389)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__parameterLogicalCondition(
    struct soap *, ns1__parameterLogicalCondition *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__parameterLogicalCondition(
    struct soap *, const char *, int, ns1__parameterLogicalCondition *const *,
    const char *);
SOAP_FMAC3 ns1__parameterLogicalCondition **SOAP_FMAC4
soap_in_PointerTons1__parameterLogicalCondition(
    struct soap *, const char *, ns1__parameterLogicalCondition **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__parameterLogicalCondition(
    struct soap *, ns1__parameterLogicalCondition *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__parameterLogicalCondition
#define soap_write_PointerTons1__parameterLogicalCondition(soap, data)         \
  (ICat3::soap_serialize_PointerTons1__parameterLogicalCondition(soap, data),  \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__parameterLogicalCondition(                \
           soap, data, "ns1:parameterLogicalCondition", NULL) ||               \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterLogicalCondition **SOAP_FMAC4
soap_get_PointerTons1__parameterLogicalCondition(
    struct soap *, ns1__parameterLogicalCondition **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__parameterLogicalCondition
#define soap_read_PointerTons1__parameterLogicalCondition(soap, data)          \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__parameterLogicalCondition(soap, data,    \
                                                                NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__datafile
#define SOAP_TYPE_ICat3_PointerTons1__datafile (388)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__datafile(struct soap *, ns1__datafile *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__datafile(struct soap *, const char *, int,
                                ns1__datafile *const *, const char *);
SOAP_FMAC3 ns1__datafile **SOAP_FMAC4
soap_in_PointerTons1__datafile(struct soap *, const char *, ns1__datafile **,
                               const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__datafile(struct soap *, ns1__datafile *const *,
                                const char *, const char *);

#ifndef soap_write_PointerTons1__datafile
#define soap_write_PointerTons1__datafile(soap, data)                          \
  (ICat3::soap_serialize_PointerTons1__datafile(soap, data),                   \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__datafile(            \
                                soap, data, "ns1:datafile", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__datafile **SOAP_FMAC4
soap_get_PointerTons1__datafile(struct soap *, ns1__datafile **, const char *,
                                const char *);

#ifndef soap_read_PointerTons1__datafile
#define soap_read_PointerTons1__datafile(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__datafile(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerToLONG64
#define SOAP_TYPE_ICat3_PointerToLONG64 (387)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerToLONG64(struct soap *, LONG64 *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToLONG64(struct soap *, const char *,
                                                   int, LONG64 *const *,
                                                   const char *);
SOAP_FMAC3 LONG64 **SOAP_FMAC4
soap_in_PointerToLONG64(struct soap *, const char *, LONG64 **, const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToLONG64(struct soap *,
                                                   LONG64 *const *,
                                                   const char *, const char *);

#ifndef soap_write_PointerToLONG64
#define soap_write_PointerToLONG64(soap, data)                                 \
  (ICat3::soap_serialize_PointerToLONG64(soap, data),                          \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerToLONG64(soap, data, "long", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 LONG64 **SOAP_FMAC4
soap_get_PointerToLONG64(struct soap *, LONG64 **, const char *, const char *);

#ifndef soap_read_PointerToLONG64
#define soap_read_PointerToLONG64(soap, data)                                  \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerToLONG64(soap, data, NULL, NULL) ||             \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__restrictionComparisonCondition
#define SOAP_TYPE_ICat3_PointerTons1__restrictionComparisonCondition (385)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__restrictionComparisonCondition(
    struct soap *, ns1__restrictionComparisonCondition *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__restrictionComparisonCondition(
    struct soap *, const char *, int,
    ns1__restrictionComparisonCondition *const *, const char *);
SOAP_FMAC3 ns1__restrictionComparisonCondition **SOAP_FMAC4
soap_in_PointerTons1__restrictionComparisonCondition(
    struct soap *, const char *, ns1__restrictionComparisonCondition **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__restrictionComparisonCondition(
    struct soap *, ns1__restrictionComparisonCondition *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__restrictionComparisonCondition
#define soap_write_PointerTons1__restrictionComparisonCondition(soap, data)    \
  (ICat3::soap_serialize_PointerTons1__restrictionComparisonCondition(soap,    \
                                                                      data),   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__restrictionComparisonCondition(           \
           soap, data, "ns1:restrictionComparisonCondition", NULL) ||          \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__restrictionComparisonCondition **SOAP_FMAC4
soap_get_PointerTons1__restrictionComparisonCondition(
    struct soap *, ns1__restrictionComparisonCondition **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__restrictionComparisonCondition
#define soap_read_PointerTons1__restrictionComparisonCondition(soap, data)     \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__restrictionComparisonCondition(          \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__sample
#define SOAP_TYPE_ICat3_PointerTons1__sample (383)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__sample(struct soap *, ns1__sample *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__sample(struct soap *, const char *, int,
                              ns1__sample *const *, const char *);
SOAP_FMAC3 ns1__sample **SOAP_FMAC4
soap_in_PointerTons1__sample(struct soap *, const char *, ns1__sample **,
                             const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__sample(struct soap *, ns1__sample *const *, const char *,
                              const char *);

#ifndef soap_write_PointerTons1__sample
#define soap_write_PointerTons1__sample(soap, data)                            \
  (ICat3::soap_serialize_PointerTons1__sample(soap, data),                     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__sample(soap, data, "ns1:sample", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__sample **SOAP_FMAC4
soap_get_PointerTons1__sample(struct soap *, ns1__sample **, const char *,
                              const char *);

#ifndef soap_read_PointerTons1__sample
#define soap_read_PointerTons1__sample(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__sample(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__icatRole
#define SOAP_TYPE_ICat3_PointerTons1__icatRole (382)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__icatRole(struct soap *, ns1__icatRole *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__icatRole(struct soap *, const char *, int,
                                ns1__icatRole *const *, const char *);
SOAP_FMAC3 ns1__icatRole **SOAP_FMAC4
soap_in_PointerTons1__icatRole(struct soap *, const char *, ns1__icatRole **,
                               const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__icatRole(struct soap *, ns1__icatRole *const *,
                                const char *, const char *);

#ifndef soap_write_PointerTons1__icatRole
#define soap_write_PointerTons1__icatRole(soap, data)                          \
  (ICat3::soap_serialize_PointerTons1__icatRole(soap, data),                   \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__icatRole(            \
                                soap, data, "ns1:icatRole", NULL) ||           \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__icatRole **SOAP_FMAC4
soap_get_PointerTons1__icatRole(struct soap *, ns1__icatRole **, const char *,
                                const char *);

#ifndef soap_read_PointerTons1__icatRole
#define soap_read_PointerTons1__icatRole(soap, data)                           \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__icatRole(soap, data, NULL, NULL) ||      \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__facilityUser
#define SOAP_TYPE_ICat3_PointerTons1__facilityUser (380)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__facilityUser(struct soap *,
                                          ns1__facilityUser *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__facilityUser(struct soap *, const char *, int,
                                    ns1__facilityUser *const *, const char *);
SOAP_FMAC3 ns1__facilityUser **SOAP_FMAC4
soap_in_PointerTons1__facilityUser(struct soap *, const char *,
                                   ns1__facilityUser **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__facilityUser(struct soap *, ns1__facilityUser *const *,
                                    const char *, const char *);

#ifndef soap_write_PointerTons1__facilityUser
#define soap_write_PointerTons1__facilityUser(soap, data)                      \
  (ICat3::soap_serialize_PointerTons1__facilityUser(soap, data),               \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__facilityUser(        \
                                soap, data, "ns1:facilityUser", NULL) ||       \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__facilityUser **SOAP_FMAC4
soap_get_PointerTons1__facilityUser(struct soap *, ns1__facilityUser **,
                                    const char *, const char *);

#ifndef soap_read_PointerTons1__facilityUser
#define soap_read_PointerTons1__facilityUser(soap, data)                       \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__facilityUser(soap, data, NULL, NULL) ||  \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__restrictionCondition
#define SOAP_TYPE_ICat3_PointerTons1__restrictionCondition (378)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__restrictionCondition(
    struct soap *, ns1__restrictionCondition *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__restrictionCondition(struct soap *, const char *, int,
                                            ns1__restrictionCondition *const *,
                                            const char *);
SOAP_FMAC3 ns1__restrictionCondition **SOAP_FMAC4
soap_in_PointerTons1__restrictionCondition(struct soap *, const char *,
                                           ns1__restrictionCondition **,
                                           const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__restrictionCondition(struct soap *,
                                            ns1__restrictionCondition *const *,
                                            const char *, const char *);

#ifndef soap_write_PointerTons1__restrictionCondition
#define soap_write_PointerTons1__restrictionCondition(soap, data)              \
  (ICat3::soap_serialize_PointerTons1__restrictionCondition(soap, data),       \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__restrictionCondition(                     \
           soap, data, "ns1:restrictionCondition", NULL) ||                    \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__restrictionCondition **SOAP_FMAC4
soap_get_PointerTons1__restrictionCondition(struct soap *,
                                            ns1__restrictionCondition **,
                                            const char *, const char *);

#ifndef soap_read_PointerTons1__restrictionCondition
#define soap_read_PointerTons1__restrictionCondition(soap, data)               \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__restrictionCondition(soap, data, NULL,   \
                                                           NULL) ||            \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__parameterCondition
#define SOAP_TYPE_ICat3_PointerTons1__parameterCondition (377)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__parameterCondition(
    struct soap *, ns1__parameterCondition *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTons1__parameterCondition(struct soap *, const char *, int,
                                          ns1__parameterCondition *const *,
                                          const char *);
SOAP_FMAC3 ns1__parameterCondition **SOAP_FMAC4
soap_in_PointerTons1__parameterCondition(struct soap *, const char *,
                                         ns1__parameterCondition **,
                                         const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTons1__parameterCondition(struct soap *,
                                          ns1__parameterCondition *const *,
                                          const char *, const char *);

#ifndef soap_write_PointerTons1__parameterCondition
#define soap_write_PointerTons1__parameterCondition(soap, data)                \
  (ICat3::soap_serialize_PointerTons1__parameterCondition(soap, data),         \
   soap_begin_send(soap) || ICat3::soap_put_PointerTons1__parameterCondition(  \
                                soap, data, "ns1:parameterCondition", NULL) || \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__parameterCondition **SOAP_FMAC4
soap_get_PointerTons1__parameterCondition(struct soap *,
                                          ns1__parameterCondition **,
                                          const char *, const char *);

#ifndef soap_read_PointerTons1__parameterCondition
#define soap_read_PointerTons1__parameterCondition(soap, data)                 \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__parameterCondition(soap, data, NULL,     \
                                                         NULL) ||              \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerToxsd__anyType
#define SOAP_TYPE_ICat3_PointerToxsd__anyType (375)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerToxsd__anyType(struct soap *, xsd__anyType *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerToxsd__anyType(struct soap *, const char *, int,
                               xsd__anyType *const *, const char *);
SOAP_FMAC3 xsd__anyType **SOAP_FMAC4
soap_in_PointerToxsd__anyType(struct soap *, const char *, xsd__anyType **,
                              const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerToxsd__anyType(struct soap *, xsd__anyType *const *,
                               const char *, const char *);

#ifndef soap_write_PointerToxsd__anyType
#define soap_write_PointerToxsd__anyType(soap, data)                           \
  (ICat3::soap_serialize_PointerToxsd__anyType(soap, data),                    \
   soap_begin_send(soap) || ICat3::soap_put_PointerToxsd__anyType(             \
                                soap, data, "xsd:anyType", NULL) ||            \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 xsd__anyType **SOAP_FMAC4
soap_get_PointerToxsd__anyType(struct soap *, xsd__anyType **, const char *,
                               const char *);

#ifndef soap_read_PointerToxsd__anyType
#define soap_read_PointerToxsd__anyType(soap, data)                            \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerToxsd__anyType(soap, data, NULL, NULL) ||       \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTons1__restrictionLogicalCondition
#define SOAP_TYPE_ICat3_PointerTons1__restrictionLogicalCondition (374)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTons1__restrictionLogicalCondition(
    struct soap *, ns1__restrictionLogicalCondition *const *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__restrictionLogicalCondition(
    struct soap *, const char *, int, ns1__restrictionLogicalCondition *const *,
    const char *);
SOAP_FMAC3 ns1__restrictionLogicalCondition **SOAP_FMAC4
soap_in_PointerTons1__restrictionLogicalCondition(
    struct soap *, const char *, ns1__restrictionLogicalCondition **,
    const char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__restrictionLogicalCondition(
    struct soap *, ns1__restrictionLogicalCondition *const *, const char *,
    const char *);

#ifndef soap_write_PointerTons1__restrictionLogicalCondition
#define soap_write_PointerTons1__restrictionLogicalCondition(soap, data)       \
  (ICat3::soap_serialize_PointerTons1__restrictionLogicalCondition(soap,       \
                                                                   data),      \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTons1__restrictionLogicalCondition(              \
           soap, data, "ns1:restrictionLogicalCondition", NULL) ||             \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 ns1__restrictionLogicalCondition **SOAP_FMAC4
soap_get_PointerTons1__restrictionLogicalCondition(
    struct soap *, ns1__restrictionLogicalCondition **, const char *,
    const char *);

#ifndef soap_read_PointerTons1__restrictionLogicalCondition
#define soap_read_PointerTons1__restrictionLogicalCondition(soap, data)        \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTons1__restrictionLogicalCondition(             \
           soap, data, NULL, NULL) ||                                          \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_PointerTostd__string
#define SOAP_TYPE_ICat3_PointerTostd__string (373)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_PointerTostd__string(struct soap *, std::string *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_PointerTostd__string(struct soap *, const char *, int,
                              std::string *const *, const char *);
SOAP_FMAC3 std::string **SOAP_FMAC4
soap_in_PointerTostd__string(struct soap *, const char *, std::string **,
                             const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_PointerTostd__string(struct soap *, std::string *const *, const char *,
                              const char *);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data)                            \
  (ICat3::soap_serialize_PointerTostd__string(soap, data),                     \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_PointerTostd__string(soap, data, "string", NULL) ||     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 std::string **SOAP_FMAC4
soap_get_PointerTostd__string(struct soap *, std::string **, const char *,
                              const char *);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data)                             \
  (soap_begin_recv(soap) ||                                                    \
       !ICat3::soap_get_PointerTostd__string(soap, data, NULL, NULL) ||        \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3__QName
#define SOAP_TYPE_ICat3__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap *, char *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out__QName(struct soap *, const char *, int, char *const *, const char *);
SOAP_FMAC3 char **SOAP_FMAC4
soap_in__QName(struct soap *, const char *, char **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put__QName(struct soap *, char *const *, const char *, const char *);

#ifndef soap_write__QName
#define soap_write__QName(soap, data)                                          \
  (ICat3::soap_serialize__QName(soap, data),                                   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put__QName(soap, data, "byte", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 char **SOAP_FMAC4
soap_get__QName(struct soap *, char **, const char *, const char *);

#ifndef soap_read__QName
#define soap_read__QName(soap, data)                                           \
  (soap_begin_recv(soap) || !ICat3::soap_get__QName(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_string
#define SOAP_TYPE_ICat3_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap *, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap *, char *const *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_string(struct soap *, const char *, int, char *const *, const char *);
SOAP_FMAC3 char **SOAP_FMAC4
soap_in_string(struct soap *, const char *, char **, const char *);
SOAP_FMAC3 int SOAP_FMAC4
soap_put_string(struct soap *, char *const *, const char *, const char *);

#ifndef soap_write_string
#define soap_write_string(soap, data)                                          \
  (ICat3::soap_serialize_string(soap, data),                                   \
   soap_begin_send(soap) ||                                                    \
       ICat3::soap_put_string(soap, data, "byte", NULL) ||                     \
       soap_end_send(soap),                                                    \
   soap->error)
#endif

SOAP_FMAC3 char **SOAP_FMAC4
soap_get_string(struct soap *, char **, const char *, const char *);

#ifndef soap_read_string
#define soap_read_string(soap, data)                                           \
  (soap_begin_recv(soap) || !ICat3::soap_get_string(soap, data, NULL, NULL) || \
       soap_end_recv(soap),                                                    \
   soap->error)
#endif

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__parameterCondition
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__parameterCondition  \
  (454)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__parameterCondition(
    struct soap *, std::vector<ns1__parameterCondition *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__parameterCondition(
    struct soap *, const std::vector<ns1__parameterCondition *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__parameterCondition(
    struct soap *, const char *, int,
    const std::vector<ns1__parameterCondition *> *, const char *);
SOAP_FMAC3 std::vector<ns1__parameterCondition *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__parameterCondition(
    struct soap *, const char *, std::vector<ns1__parameterCondition *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__parameterCondition *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__parameterCondition(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__parameterCondition *> *
soap_new_std__vectorTemplateOfPointerTons1__parameterCondition(
    struct soap *soap, int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__parameterCondition(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__parameterCondition(
    struct soap *soap, std::vector<ns1__parameterCondition *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__parameterCondition(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__restrictionCondition
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__restrictionCondition \
  (452)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__restrictionCondition(
    struct soap *, std::vector<ns1__restrictionCondition *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__restrictionCondition(
    struct soap *, const std::vector<ns1__restrictionCondition *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__restrictionCondition(
    struct soap *, const char *, int,
    const std::vector<ns1__restrictionCondition *> *, const char *);
SOAP_FMAC3 std::vector<ns1__restrictionCondition *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__restrictionCondition(
    struct soap *, const char *, std::vector<ns1__restrictionCondition *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__restrictionCondition *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__restrictionCondition(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__restrictionCondition *> *
soap_new_std__vectorTemplateOfPointerTons1__restrictionCondition(
    struct soap *soap, int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__restrictionCondition(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__restrictionCondition(
    struct soap *soap, std::vector<ns1__restrictionCondition *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__restrictionCondition(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__shift
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__shift (449)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__shift(
    struct soap *, std::vector<ns1__shift *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__shift(
    struct soap *, const std::vector<ns1__shift *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__shift(
    struct soap *, const char *, int, const std::vector<ns1__shift *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__shift *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__shift(struct soap *, const char *,
                                                 std::vector<ns1__shift *> *,
                                                 const char *);
SOAP_FMAC1 std::vector<ns1__shift *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__shift(struct soap *, int,
                                                          const char *,
                                                          const char *,
                                                          size_t *);

inline std::vector<ns1__shift *> *
soap_new_std__vectorTemplateOfPointerTons1__shift(struct soap *soap,
                                                  int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__shift(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__shift(
    struct soap *soap, std::vector<ns1__shift *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__shift(struct soap *, int, int,
                                                   void *, size_t, const void *,
                                                   size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__publication
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__publication (447)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__publication(
    struct soap *, std::vector<ns1__publication *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__publication(
    struct soap *, const std::vector<ns1__publication *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__publication(
    struct soap *, const char *, int, const std::vector<ns1__publication *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__publication *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__publication(
    struct soap *, const char *, std::vector<ns1__publication *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__publication *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__publication(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__publication *> *
soap_new_std__vectorTemplateOfPointerTons1__publication(struct soap *soap,
                                                        int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__publication(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__publication(
    struct soap *soap, std::vector<ns1__publication *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__publication(struct soap *, int,
                                                         int, void *, size_t,
                                                         const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__keyword
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__keyword (446)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__keyword(
    struct soap *, std::vector<ns1__keyword *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__keyword(
    struct soap *, const std::vector<ns1__keyword *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__keyword(
    struct soap *, const char *, int, const std::vector<ns1__keyword *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__keyword *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__keyword(
    struct soap *, const char *, std::vector<ns1__keyword *> *, const char *);
SOAP_FMAC1 std::vector<ns1__keyword *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__keyword(struct soap *, int,
                                                            const char *,
                                                            const char *,
                                                            size_t *);

inline std::vector<ns1__keyword *> *
soap_new_std__vectorTemplateOfPointerTons1__keyword(struct soap *soap,
                                                    int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__keyword(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__keyword(
    struct soap *soap, std::vector<ns1__keyword *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__keyword(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__investigator
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__investigator (445)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__investigator(
    struct soap *, std::vector<ns1__investigator *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__investigator(
    struct soap *, const std::vector<ns1__investigator *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__investigator(
    struct soap *, const char *, int, const std::vector<ns1__investigator *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__investigator *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__investigator(
    struct soap *, const char *, std::vector<ns1__investigator *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__investigator *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__investigator(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__investigator *> *
soap_new_std__vectorTemplateOfPointerTons1__investigator(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__investigator(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__investigator(
    struct soap *soap, std::vector<ns1__investigator *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__investigator(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__relatedDatafiles
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__relatedDatafiles    \
  (441)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__relatedDatafiles(
    struct soap *, std::vector<ns1__relatedDatafiles *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__relatedDatafiles(
    struct soap *, const std::vector<ns1__relatedDatafiles *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__relatedDatafiles(
    struct soap *, const char *, int,
    const std::vector<ns1__relatedDatafiles *> *, const char *);
SOAP_FMAC3 std::vector<ns1__relatedDatafiles *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__relatedDatafiles(
    struct soap *, const char *, std::vector<ns1__relatedDatafiles *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__relatedDatafiles *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__relatedDatafiles(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__relatedDatafiles *> *
soap_new_std__vectorTemplateOfPointerTons1__relatedDatafiles(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__relatedDatafiles(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__relatedDatafiles(
    struct soap *soap, std::vector<ns1__relatedDatafiles *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__relatedDatafiles(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__sampleParameter
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__sampleParameter (438)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__sampleParameter(
    struct soap *, std::vector<ns1__sampleParameter *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__sampleParameter(
    struct soap *, const std::vector<ns1__sampleParameter *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__sampleParameter(
    struct soap *, const char *, int,
    const std::vector<ns1__sampleParameter *> *, const char *);
SOAP_FMAC3 std::vector<ns1__sampleParameter *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__sampleParameter(
    struct soap *, const char *, std::vector<ns1__sampleParameter *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__sampleParameter *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__sampleParameter(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__sampleParameter *> *
soap_new_std__vectorTemplateOfPointerTons1__sampleParameter(struct soap *soap,
                                                            int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__sampleParameter(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__sampleParameter(
    struct soap *soap, std::vector<ns1__sampleParameter *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__sampleParameter(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__icatRole
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__icatRole (432)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__icatRole(
    struct soap *, std::vector<ns1__icatRole *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__icatRole(
    struct soap *, const std::vector<ns1__icatRole *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__icatRole(
    struct soap *, const char *, int, const std::vector<ns1__icatRole *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__icatRole *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__icatRole(
    struct soap *, const char *, std::vector<ns1__icatRole *> *, const char *);
SOAP_FMAC1 std::vector<ns1__icatRole *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__icatRole(struct soap *, int,
                                                             const char *,
                                                             const char *,
                                                             size_t *);

inline std::vector<ns1__icatRole *> *
soap_new_std__vectorTemplateOfPointerTons1__icatRole(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__icatRole(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__icatRole(
    struct soap *soap, std::vector<ns1__icatRole *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__icatRole(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__datafileFormat
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__datafileFormat (430)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__datafileFormat(
    struct soap *, std::vector<ns1__datafileFormat *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__datafileFormat(
    struct soap *, const std::vector<ns1__datafileFormat *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__datafileFormat(
    struct soap *, const char *, int,
    const std::vector<ns1__datafileFormat *> *, const char *);
SOAP_FMAC3 std::vector<ns1__datafileFormat *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__datafileFormat(
    struct soap *, const char *, std::vector<ns1__datafileFormat *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__datafileFormat *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__datafileFormat(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__datafileFormat *> *
soap_new_std__vectorTemplateOfPointerTons1__datafileFormat(struct soap *soap,
                                                           int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__datafileFormat(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__datafileFormat(
    struct soap *soap, std::vector<ns1__datafileFormat *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__datafileFormat(struct soap *, int,
                                                            int, void *, size_t,
                                                            const void *,
                                                            size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__datasetParameter
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__datasetParameter    \
  (425)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__datasetParameter(
    struct soap *, std::vector<ns1__datasetParameter *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__datasetParameter(
    struct soap *, const std::vector<ns1__datasetParameter *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__datasetParameter(
    struct soap *, const char *, int,
    const std::vector<ns1__datasetParameter *> *, const char *);
SOAP_FMAC3 std::vector<ns1__datasetParameter *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__datasetParameter(
    struct soap *, const char *, std::vector<ns1__datasetParameter *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__datasetParameter *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__datasetParameter(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__datasetParameter *> *
soap_new_std__vectorTemplateOfPointerTons1__datasetParameter(struct soap *soap,
                                                             int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__datasetParameter(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__datasetParameter(
    struct soap *soap, std::vector<ns1__datasetParameter *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__datasetParameter(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__icatAuthorisation
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__icatAuthorisation   \
  (424)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__icatAuthorisation(
    struct soap *, std::vector<ns1__icatAuthorisation *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__icatAuthorisation(
    struct soap *, const std::vector<ns1__icatAuthorisation *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__icatAuthorisation(
    struct soap *, const char *, int,
    const std::vector<ns1__icatAuthorisation *> *, const char *);
SOAP_FMAC3 std::vector<ns1__icatAuthorisation *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__icatAuthorisation(
    struct soap *, const char *, std::vector<ns1__icatAuthorisation *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__icatAuthorisation *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__icatAuthorisation(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__icatAuthorisation *> *
soap_new_std__vectorTemplateOfPointerTons1__icatAuthorisation(struct soap *soap,
                                                              int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__icatAuthorisation(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__icatAuthorisation(
    struct soap *soap, std::vector<ns1__icatAuthorisation *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__icatAuthorisation(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__datafile
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__datafile (417)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__datafile(
    struct soap *, std::vector<ns1__datafile *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__datafile(
    struct soap *, const std::vector<ns1__datafile *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__datafile(
    struct soap *, const char *, int, const std::vector<ns1__datafile *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__datafile *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__datafile(
    struct soap *, const char *, std::vector<ns1__datafile *> *, const char *);
SOAP_FMAC1 std::vector<ns1__datafile *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__datafile(struct soap *, int,
                                                             const char *,
                                                             const char *,
                                                             size_t *);

inline std::vector<ns1__datafile *> *
soap_new_std__vectorTemplateOfPointerTons1__datafile(struct soap *soap,
                                                     int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__datafile(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__datafile(
    struct soap *soap, std::vector<ns1__datafile *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__datafile(struct soap *, int, int,
                                                      void *, size_t,
                                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__investigation
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__investigation (411)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__investigation(
    struct soap *, std::vector<ns1__investigation *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__investigation(
    struct soap *, const std::vector<ns1__investigation *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__investigation(
    struct soap *, const char *, int, const std::vector<ns1__investigation *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__investigation *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__investigation(
    struct soap *, const char *, std::vector<ns1__investigation *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__investigation *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__investigation(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__investigation *> *
soap_new_std__vectorTemplateOfPointerTons1__investigation(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__investigation(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__investigation(
    struct soap *soap, std::vector<ns1__investigation *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__investigation(struct soap *, int,
                                                           int, void *, size_t,
                                                           const void *,
                                                           size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__parameterComparisonCondition
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__parameterComparisonCondition \
  (407)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__parameterComparisonCondition(
    struct soap *, std::vector<ns1__parameterComparisonCondition *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__parameterComparisonCondition(
    struct soap *, const std::vector<ns1__parameterComparisonCondition *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__parameterComparisonCondition(
    struct soap *, const char *, int,
    const std::vector<ns1__parameterComparisonCondition *> *, const char *);
SOAP_FMAC3 std::vector<ns1__parameterComparisonCondition *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__parameterComparisonCondition(
    struct soap *, const char *,
    std::vector<ns1__parameterComparisonCondition *> *, const char *);
SOAP_FMAC1 std::vector<ns1__parameterComparisonCondition *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__parameterComparisonCondition(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__parameterComparisonCondition *> *
soap_new_std__vectorTemplateOfPointerTons1__parameterComparisonCondition(
    struct soap *soap, int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__parameterComparisonCondition(
      soap, n, NULL, NULL, NULL);
}

inline void
soap_delete_std__vectorTemplateOfPointerTons1__parameterComparisonCondition(
    struct soap *soap, std::vector<ns1__parameterComparisonCondition *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__parameterComparisonCondition(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfLONG64
#define SOAP_TYPE_ICat3_std__vectorTemplateOfLONG64 (405)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfLONG64(struct soap *, std::vector<LONG64> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfLONG64(struct soap *,
                                           const std::vector<LONG64> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfLONG64(struct soap *, const char *, int,
                                     const std::vector<LONG64> *, const char *);
SOAP_FMAC3 std::vector<LONG64> *SOAP_FMAC4
soap_in_std__vectorTemplateOfLONG64(struct soap *, const char *,
                                    std::vector<LONG64> *, const char *);
SOAP_FMAC1 std::vector<LONG64> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfLONG64(struct soap *, int, const char *,
                                             const char *, size_t *);

inline std::vector<LONG64> *
soap_new_std__vectorTemplateOfLONG64(struct soap *soap, int n = -1) {
  return soap_instantiate_std__vectorTemplateOfLONG64(soap, n, NULL, NULL,
                                                      NULL);
}

inline void soap_delete_std__vectorTemplateOfLONG64(struct soap *soap,
                                                    std::vector<LONG64> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfLONG64(struct soap *, int, int, void *, size_t,
                                      const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__parameterSearch
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__parameterSearch (404)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__parameterSearch(
    struct soap *, std::vector<ns1__parameterSearch *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__parameterSearch(
    struct soap *, const std::vector<ns1__parameterSearch *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__parameterSearch(
    struct soap *, const char *, int,
    const std::vector<ns1__parameterSearch *> *, const char *);
SOAP_FMAC3 std::vector<ns1__parameterSearch *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__parameterSearch(
    struct soap *, const char *, std::vector<ns1__parameterSearch *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__parameterSearch *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__parameterSearch(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__parameterSearch *> *
soap_new_std__vectorTemplateOfPointerTons1__parameterSearch(struct soap *soap,
                                                            int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__parameterSearch(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__parameterSearch(
    struct soap *soap, std::vector<ns1__parameterSearch *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__parameterSearch(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__dataset
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__dataset (401)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__dataset(
    struct soap *, std::vector<ns1__dataset *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__dataset(
    struct soap *, const std::vector<ns1__dataset *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__dataset(
    struct soap *, const char *, int, const std::vector<ns1__dataset *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__dataset *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__dataset(
    struct soap *, const char *, std::vector<ns1__dataset *> *, const char *);
SOAP_FMAC1 std::vector<ns1__dataset *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__dataset(struct soap *, int,
                                                            const char *,
                                                            const char *,
                                                            size_t *);

inline std::vector<ns1__dataset *> *
soap_new_std__vectorTemplateOfPointerTons1__dataset(struct soap *soap,
                                                    int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__dataset(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__dataset(
    struct soap *soap, std::vector<ns1__dataset *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__dataset(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__instrument
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__instrument (397)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__instrument(
    struct soap *, std::vector<ns1__instrument *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__instrument(
    struct soap *, const std::vector<ns1__instrument *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__instrument(
    struct soap *, const char *, int, const std::vector<ns1__instrument *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__instrument *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__instrument(
    struct soap *, const char *, std::vector<ns1__instrument *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__instrument *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__instrument(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__instrument *> *
soap_new_std__vectorTemplateOfPointerTons1__instrument(struct soap *soap,
                                                       int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__instrument(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__instrument(
    struct soap *soap, std::vector<ns1__instrument *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__instrument(struct soap *, int, int,
                                                        void *, size_t,
                                                        const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__datafileParameter
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__datafileParameter   \
  (395)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__datafileParameter(
    struct soap *, std::vector<ns1__datafileParameter *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__datafileParameter(
    struct soap *, const std::vector<ns1__datafileParameter *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__datafileParameter(
    struct soap *, const char *, int,
    const std::vector<ns1__datafileParameter *> *, const char *);
SOAP_FMAC3 std::vector<ns1__datafileParameter *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__datafileParameter(
    struct soap *, const char *, std::vector<ns1__datafileParameter *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__datafileParameter *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__datafileParameter(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__datafileParameter *> *
soap_new_std__vectorTemplateOfPointerTons1__datafileParameter(struct soap *soap,
                                                              int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__datafileParameter(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__datafileParameter(
    struct soap *soap, std::vector<ns1__datafileParameter *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__datafileParameter(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__facilityCycle
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__facilityCycle (393)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__facilityCycle(
    struct soap *, std::vector<ns1__facilityCycle *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__facilityCycle(
    struct soap *, const std::vector<ns1__facilityCycle *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__facilityCycle(
    struct soap *, const char *, int, const std::vector<ns1__facilityCycle *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__facilityCycle *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__facilityCycle(
    struct soap *, const char *, std::vector<ns1__facilityCycle *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__facilityCycle *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__facilityCycle(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__facilityCycle *> *
soap_new_std__vectorTemplateOfPointerTons1__facilityCycle(struct soap *soap,
                                                          int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__facilityCycle(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__facilityCycle(
    struct soap *soap, std::vector<ns1__facilityCycle *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__facilityCycle(struct soap *, int,
                                                           int, void *, size_t,
                                                           const void *,
                                                           size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__parameter
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__parameter (391)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__parameter(
    struct soap *, std::vector<ns1__parameter *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__parameter(
    struct soap *, const std::vector<ns1__parameter *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__parameter(
    struct soap *, const char *, int, const std::vector<ns1__parameter *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__parameter *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__parameter(
    struct soap *, const char *, std::vector<ns1__parameter *> *, const char *);
SOAP_FMAC1 std::vector<ns1__parameter *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__parameter(struct soap *,
                                                              int, const char *,
                                                              const char *,
                                                              size_t *);

inline std::vector<ns1__parameter *> *
soap_new_std__vectorTemplateOfPointerTons1__parameter(struct soap *soap,
                                                      int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__parameter(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__parameter(
    struct soap *soap, std::vector<ns1__parameter *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__parameter(struct soap *, int, int,
                                                       void *, size_t,
                                                       const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__restrictionComparisonCondition
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__restrictionComparisonCondition \
  (386)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__restrictionComparisonCondition(
    struct soap *, std::vector<ns1__restrictionComparisonCondition *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__restrictionComparisonCondition(
    struct soap *, const std::vector<ns1__restrictionComparisonCondition *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__restrictionComparisonCondition(
    struct soap *, const char *, int,
    const std::vector<ns1__restrictionComparisonCondition *> *, const char *);
SOAP_FMAC3 std::vector<ns1__restrictionComparisonCondition *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__restrictionComparisonCondition(
    struct soap *, const char *,
    std::vector<ns1__restrictionComparisonCondition *> *, const char *);
SOAP_FMAC1 std::vector<ns1__restrictionComparisonCondition *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__restrictionComparisonCondition(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__restrictionComparisonCondition *> *
soap_new_std__vectorTemplateOfPointerTons1__restrictionComparisonCondition(
    struct soap *soap, int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__restrictionComparisonCondition(
      soap, n, NULL, NULL, NULL);
}

inline void
soap_delete_std__vectorTemplateOfPointerTons1__restrictionComparisonCondition(
    struct soap *soap, std::vector<ns1__restrictionComparisonCondition *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__restrictionComparisonCondition(
    struct soap *, int, int, void *, size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__sample
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__sample (384)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__sample(
    struct soap *, std::vector<ns1__sample *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__sample(
    struct soap *, const std::vector<ns1__sample *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__sample(
    struct soap *, const char *, int, const std::vector<ns1__sample *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__sample *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__sample(struct soap *, const char *,
                                                  std::vector<ns1__sample *> *,
                                                  const char *);
SOAP_FMAC1 std::vector<ns1__sample *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__sample(struct soap *, int,
                                                           const char *,
                                                           const char *,
                                                           size_t *);

inline std::vector<ns1__sample *> *
soap_new_std__vectorTemplateOfPointerTons1__sample(struct soap *soap,
                                                   int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__sample(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__sample(
    struct soap *soap, std::vector<ns1__sample *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__sample(struct soap *, int, int,
                                                    void *, size_t,
                                                    const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__facilityUser
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerTons1__facilityUser (381)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerTons1__facilityUser(
    struct soap *, std::vector<ns1__facilityUser *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerTons1__facilityUser(
    struct soap *, const std::vector<ns1__facilityUser *> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfPointerTons1__facilityUser(
    struct soap *, const char *, int, const std::vector<ns1__facilityUser *> *,
    const char *);
SOAP_FMAC3 std::vector<ns1__facilityUser *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerTons1__facilityUser(
    struct soap *, const char *, std::vector<ns1__facilityUser *> *,
    const char *);
SOAP_FMAC1 std::vector<ns1__facilityUser *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerTons1__facilityUser(
    struct soap *, int, const char *, const char *, size_t *);

inline std::vector<ns1__facilityUser *> *
soap_new_std__vectorTemplateOfPointerTons1__facilityUser(struct soap *soap,
                                                         int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerTons1__facilityUser(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerTons1__facilityUser(
    struct soap *soap, std::vector<ns1__facilityUser *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerTons1__facilityUser(struct soap *, int,
                                                          int, void *, size_t,
                                                          const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfstd__string
#define SOAP_TYPE_ICat3_std__vectorTemplateOfstd__string (379)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfstd__string(struct soap *,
                                              std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__string(
    struct soap *, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4
soap_out_std__vectorTemplateOfstd__string(struct soap *, const char *, int,
                                          const std::vector<std::string> *,
                                          const char *);
SOAP_FMAC3 std::vector<std::string> *SOAP_FMAC4
soap_in_std__vectorTemplateOfstd__string(struct soap *, const char *,
                                         std::vector<std::string> *,
                                         const char *);
SOAP_FMAC1 std::vector<std::string> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfstd__string(struct soap *, int,
                                                  const char *, const char *,
                                                  size_t *);

inline std::vector<std::string> *
soap_new_std__vectorTemplateOfstd__string(struct soap *soap, int n = -1) {
  return soap_instantiate_std__vectorTemplateOfstd__string(soap, n, NULL, NULL,
                                                           NULL);
}

inline void
soap_delete_std__vectorTemplateOfstd__string(struct soap *soap,
                                             std::vector<std::string> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfstd__string(struct soap *, int, int, void *,
                                           size_t, const void *, size_t);

#ifndef SOAP_TYPE_ICat3_std__vectorTemplateOfPointerToxsd__anyType
#define SOAP_TYPE_ICat3_std__vectorTemplateOfPointerToxsd__anyType (376)
#endif
SOAP_FMAC3 void SOAP_FMAC4
soap_default_std__vectorTemplateOfPointerToxsd__anyType(
    struct soap *, std::vector<xsd__anyType *> *);
SOAP_FMAC3 void SOAP_FMAC4
soap_serialize_std__vectorTemplateOfPointerToxsd__anyType(
    struct soap *, const std::vector<xsd__anyType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToxsd__anyType(
    struct soap *, const char *, int, const std::vector<xsd__anyType *> *,
    const char *);
SOAP_FMAC3 std::vector<xsd__anyType *> *SOAP_FMAC4
soap_in_std__vectorTemplateOfPointerToxsd__anyType(
    struct soap *, const char *, std::vector<xsd__anyType *> *, const char *);
SOAP_FMAC1 std::vector<xsd__anyType *> *SOAP_FMAC2
soap_instantiate_std__vectorTemplateOfPointerToxsd__anyType(struct soap *, int,
                                                            const char *,
                                                            const char *,
                                                            size_t *);

inline std::vector<xsd__anyType *> *
soap_new_std__vectorTemplateOfPointerToxsd__anyType(struct soap *soap,
                                                    int n = -1) {
  return soap_instantiate_std__vectorTemplateOfPointerToxsd__anyType(
      soap, n, NULL, NULL, NULL);
}

inline void soap_delete_std__vectorTemplateOfPointerToxsd__anyType(
    struct soap *soap, std::vector<xsd__anyType *> *p) {
  soap_delete(soap, p);
}

SOAP_FMAC3 void SOAP_FMAC4
soap_copy_std__vectorTemplateOfPointerToxsd__anyType(struct soap *, int, int,
                                                     void *, size_t,
                                                     const void *, size_t);

} // namespace ICat3

#endif

/* End of ICat3H.h */
