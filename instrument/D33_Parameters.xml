<?xml version="1.0" encoding="UTF-8"?>
<parameter-file instrument = "D33">

  <component-link name="D33">
    <!-- The name of the panels for separate I(Q) calculations, the names are from the IDF -->
    <parameter name="detector_panels" type="string">
      <value val="back_detector,front_detector_top,front_detector_bottom,front_detector_left,front_detector_right"/>
    </parameter>
    <!-- Attenuation coefficients for 3 attenuators -->
    <parameter name="att0" type="number">
      <value val="1" />
    </parameter>
    <parameter name="att1" type="number">
      <value val="112.8" />
    </parameter>
    <parameter name="att2" type="number">
      <value val="421.14" />
    </parameter>
    <parameter name="att3" type="number">
      <value val="1911.96" />
    </parameter>
    <!-- Logs to sum when merging the runs -->
    <parameter name="sample_logs_sum" type="string">
      <value val="timer" />
    </parameter>
    <!-- Tau coefficient for DeadTimeCorrection, to be applied tube by tube -->
    <parameter name="tau" type="number">
      <value val="0.0000015" />
    </parameter>
    <!-- The pixel sizes [mm] used by SolidAngle, resolution and default Q binning calculations.
    Note that for the panels, often pixels have transposed shape, but the surface is the same.
    Q binning is based on the maximum of the 2 dimensions, so it is also invariant.-->
    <parameter name="x-pixel-size" type="number">
      <value val="2.5"/>
    </parameter>
    <parameter name="y-pixel-size" type="number">
      <value val="5"/>
    </parameter>

    <!-- These parameters are used to define headers and entries for GenerateLogbook algorithm -->
    <parameter name="logbook_default_parameters" type="string">
      <value val="SampleDescription:/entry0/sample_description,
		  TotalTime:/entry0/duration,
		  RateMonitor1:/entry0/monitor1/monrate,
		  TotalCountsDetAll:/entry0/D33/detector/detsum,
		  RateCountsDetAll:/entry0/D33/detector/detrate,
		  StartTime:/entry0/start_time,
		  Wavelength:/entry0/D33/selector/wavelength,
		  Attenuator:/entry0/D33/attenuator/attenuation_value,
		  Collimation:/entry0/D33/collimation/actual_position,
		  SD1:/entry0/D33/detector/det1_actual,
		  SD2:/entry0/D33/detector/det2_actual,
		  BeamStopY:/entry0/D33/beamstop/by_actual" />
    </parameter>
    <parameter name="logbook_optional_parameters" type="string">
      <value val="AcquisitionMode:/entry0/mode,
		  VelocitySelectorSpeed:/entry0/D33/selector/rotation_speed,
		  VelocitySelectorTilt:/entry0/D33/selector/selrot_actual,
		  Diaphragm1:/entry0/D33/collimation/Dia1_actual_position,
		  Diaphragm2:/entry0/D33/collimation/Dia2_actual_position,
		  Diaphragm3:/entry0/D33/collimation/Dia3_actual_position,
		  Diaphragm4:/entry0/D33/collimation/Dia4_actual_position,
		  Diaphragm5:/entry0/D33/collimation/Dia5_actual_position,
		  Guide1:/entry0/D33/collimation/Coll1_actual_position,
		  Guide2:/entry0/D33/collimation/Coll2_actual_position,
		  Guide3:/entry0/D33/collimation/Coll3_actual_position,
		  Guide4:/entry0/D33/collimation/Coll4_actual_position,
		  TotalCountsMonitor1:/entry0/monitor1/monsum,
		  ReactorPower:/entry0/reactor_power,
		  BeamstopX:/entry0/D33/beamstop/bx_actual,
		  san:/entry0/sample/san_actual,
		  omega:/entry0/sample/omega_actual,
		  phi:/entry0/sample/phi_actual,
		  sdi1:/entry0/sample/sdi1_actual,
		  sdi2:/entry0/sample/sdi2_actual,
		  sht:/entry0/sample/sht_actual,
		  str:/entry0/sample/str_actual,
		  trs:/entry0/sample/trs_actual,
		  SampleTemperature:/entry0/sample/temperature,
		  AirTemperature:/entry0/sample/air_temperature,
		  RackTemperature:/entry0/sample/rack_temperature,
		  Bath1Temperature:/entry0/sample/bath1_regulation_temperature,
		  Bath2Temperature:/entry0/sample/bath2_regulation_temperature,
		  Position:/entry0/sample/sample_changer_value,
		  SampleApertureWidth:/entry0/D33/Beam/sample_ap_x_or_diam,
		  SampleApertureHeight:/entry0/D33/Beam/sample_ap_y" />
    </parameter>
  </component-link>

  <!-- These parameters are used in ParallaxCorrection algorithm -->

  <component-link name="back_detector">

    <parameter name="parallax" type="string">
      <value val="(t * 180 / 3.14 &lt; 10) ? (1 + t * 180 / 3.14 * 0.0081615 / 1.0273) : (1 + 10 * 0.0081615 / 1.0273)"/>
    </parameter>

    <parameter name="direction" type="string">
      <value val="x"/>
    </parameter>

  </component-link>

  <component-link name="front_detector_right">

    <parameter name="parallax" type="string">
      <value val="(t * 180 / 3.14 &lt; 10) ? (1 + t * 180 / 3.14 * 0.005026 / 0.90814) : (1 + 10 * 0.005026 / 0.90814)"/>
    </parameter>

    <parameter name="direction" type="string">
      <value val="y"/>
    </parameter>

  </component-link>

  <component-link name="front_detector_left">

    <parameter name="parallax" type="string">
      <value val="(t * 180 / 3.14 &lt; 10) ? (1 + t * 180 / 3.14 * 0.005026 / 0.90814) : (1 + 10 * 0.005026 / 0.90814)"/>
    </parameter>

    <parameter name="direction" type="string">
      <value val="y"/>
    </parameter>

  </component-link>

  <component-link name="front_detector_top">

    <parameter name="parallax" type="string">
      <value val="(t * 180 / 3.14 &lt; 10) ? (1 + t * 180 / 3.14 * 0.0058296 / 0.98876) : (1 + 10 * 0.0058296 / 0.98876)"/>
    </parameter>

    <parameter name="direction" type="string">
      <value val="x"/>
    </parameter>

  </component-link>

  <component-link name="front_detector_bottom">

    <parameter name="parallax" type="string">
      <value val="(t * 180 / 3.14 &lt; 10) ? (1 + t * 180 / 3.14 * 0.0058296 / 0.98876) : (1 + 10 * 0.0058296 / 0.98876)"/>
    </parameter>

    <parameter name="direction" type="string">
      <value val="x"/>
    </parameter>

  </component-link>

</parameter-file>
