<?xml version="1.0" encoding="utf-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0">


  <!-- Define Cartesian Coordinates Attribute Group-->
  <xs:attributeGroup name ="cartesian">
    <xs:attribute name ="x" />
    <xs:attribute name ="y" />
    <xs:attribute name ="z" />
  </xs:attributeGroup>

  <!-- Define spherical polar Coordinates Attribute Group-->
  <xs:attributeGroup name ="spherical">
    <xs:attribute name ="r" />
    <xs:attribute name ="t" />
    <xs:attribute name ="p" />
  </xs:attributeGroup>
  <!-- Define Cartesian Axes Attribute Group-->
  <xs:attributeGroup name ="axes">
    <xs:attribute name ="axis-x" />
    <xs:attribute name ="axis-y" />
    <xs:attribute name ="axis-z" />
  </xs:attributeGroup>
  <!-- Define recursive ROT element-->
  <xs:complexType name="rotType">
    <xs:choice maxOccurs="unbounded" minOccurs="0">
      <xs:element name="rot" type="rotType"/>
      <xs:element name ="trans">
        <xs:complexType>
          <xs:attributeGroup ref="cartesian"/>
          <xs:attributeGroup ref="spherical"/>
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="val"/>
    <xs:attributeGroup ref="axes"/>
  </xs:complexType>
  
  <!-- Define <location> Type-->
  <xs:complexType name ="locationType">
    <xs:choice maxOccurs="unbounded" minOccurs="0">
      <xs:element name="parameter" type="parameterType"/>
      <xs:element name="facing">
        <xs:complexType>
          <xs:attribute name="val"/>
          <xs:attributeGroup ref="cartesian"/>
          <xs:attributeGroup ref="spherical"/>
          <xs:attribute name="rot"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="rot" type="rotType"/>
      <xs:element name ="trans">
        <xs:complexType>
          <xs:attributeGroup ref="cartesian"/>
          <xs:attributeGroup ref="spherical"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="exclude">
        <xs:complexType>
          <xs:attribute name="sub-part"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="neutronic" type="locationType"/>
    </xs:choice>
    <xs:attribute name="ang" />
    <xs:attributeGroup ref="cartesian"/>
    <xs:attributeGroup ref="spherical"/>
    <xs:attribute name="name"/>
    <xs:attribute name="rot"/>
    <xs:attributeGroup ref="axes"/>
  </xs:complexType>

  <!-- Define <parameter> Type-->
  <xs:complexType name="parameterType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="value">
        <xs:complexType>
          <xs:attribute name="val"/>
          <xs:attribute name="units"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="description">      
        <xs:attribute name="is"/>
      </xs:element>      
      <xs:element name="fixed"/>
      <xs:element name="formula">
        <xs:complexType>
          <xs:attribute name="eq"/>
          <xs:attribute name="unit"/>
          <xs:attribute name="result-unit"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="logfile">
        <xs:complexType>
          <xs:attribute name="id"/>
          <xs:attribute name="extract-single-value-as"/>
          <xs:attribute name="eq"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="lookuptable">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="point">
              <xs:complexType>
                <xs:attribute name="x"/>
                <xs:attribute name="y"/>
              </xs:complexType>
            </xs:element>
          </xs:choice>
          <xs:attribute name="interpolation"/>
          <xs:attribute name="x-unit"/>
          <xs:attribute name="y-unit"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="min">
        <xs:complexType>
          <xs:attribute name="val"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="max">
        <xs:complexType>
          <xs:attribute name="val"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="penalty-factor">
        <xs:complexType>
          <xs:attribute name="val"/>
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="type"/>
  </xs:complexType>

  <!-- Define <component> Type  -->
  <xs:complexType name ="componentType">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="parameter" type="parameterType"/>
      <xs:element name="description">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:anyAttribute/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="properties">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:anyAttribute/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="locations">
        <xs:complexType>
          <xs:attributeGroup ref="cartesian"/>
          <xs:attributeGroup ref="spherical"/>
          <xs:attribute name="name"/>
          <xs:attribute name="rot"/>
          <xs:attribute name="x-end"/>
          <xs:attribute name="y-end"/>
          <xs:attribute name="z-end"/>
          <xs:attribute name="r-end"/>
          <xs:attribute name="t-end"/>
          <xs:attribute name="p-end"/>
          <xs:attribute name="rot-end"/>
          <xs:attribute name="n-elements"/>
        </xs:complexType>
      </xs:element>
      <!--LOCATION ELEMENT-->
      <xs:element name="location" type="locationType" maxOccurs="unbounded" minOccurs="1"/>
    </xs:choice>
    <xs:attribute name="type"/>
    <xs:attribute name="name"/>
    <xs:attribute name="id"/>
    <xs:attribute name="idlist"/>
    <xs:attribute name="idstart"/>
    <xs:attribute name="idfillbyfirst"/>
    <xs:attribute name="idstepbyrow"/>
    <xs:attribute name="outline"/>
    <xs:attribute name="idstep"/>
  </xs:complexType>

  <!--Main Parameter File Schema -->
  <xs:element name="parameter-file">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="component-link" type="componentType"/>
      </xs:choice>
      <xs:attribute name="instrument" type="xs:string"/>
      <xs:attribute name="valid-from" type="xs:string"/>
      <xs:attribute name="valid-to"   type="xs:string"/>
    </xs:complexType>
  </xs:element>
</xs:schema>
