#!/bin/sh
# 
# Supports the git publish command.
#
# Copyright 2013 ISIS Rutherford Appleton Laboratory & NScD Oak Ridge National Laboratory
#
# This file is part of Mantid.
#
# Mantid is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Mantid is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# File change history is stored at: <https://github.com/mantidproject/mantid>

# Set top-level command name
CMD_NAME="publish"

# Set git to merge silently if everything succceeded
# See http://git-blame.blogspot.co.uk/2012/02/anticipating-git-1710.html
export GIT_MERGE_AUTOEDIT=no

# Get directory of this file
# The sed expression here replaces all backslashes by forward slashes.
# This helps our Windows users, while not bothering our Unix users.
export CMDFILE_DIR=$(dirname "$(echo "$0" | sed -e 's@\\@/@g')")

usage() {
    echo "Usage: git ${CMD_NAME}"
    echo
    echo "Pushes the current feature/bugfix branch to the remote."
    echo "Trying to use this command while on master or develop will result in an error."
}

checkargs() {
    if [ $# -gt 0 ]; then
        usage
        exit 1
    fi
}

main() {
    checkargs "$@"

    # Helper functions
    . "${CMDFILE_DIR}/gitworkflow-helpers"

    # Cannot be on master or develop
    currentbranch=$(current_branch)
    if [ ${currentbranch} = "master" -o ${currentbranch} = "develop" ]; then
        echo "Cannot use this command to publish ${currentbranch}"
        exit 1
    fi

    # We don't require a clean slate but warn if there are modifications as the intention may have been
    # to include them
    local_modifications
    if [ $? -eq 1 ]; then
        echo "Warning: You have local modifications."
        echo "The current commits will be pushed to the remote if you wish to"
        echo "publish the uncommitted changes then commit them and rerun this command."
    fi

    
    # Push!
    publish_branch ${currentbranch}
}

main "$@"
