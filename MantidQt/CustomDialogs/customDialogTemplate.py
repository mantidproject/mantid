#! /usr/bin/python
#----------------------------------------------------------------
# Creates a new sub-class to be used as
# a custom dialog.
# Usage: python createDialogTemplate algorithm-name [yes|no]
#
# yes - Create the class so that it can be used with Qt designer
# no  - Create the class so that the layout is created by hand
#---------------------------------------------------------------
import sys
import string

# Slice off the script name
args = sys.argv[1:]

if len(args) != 2 :
    print "Usage: createDialogTemplate algorithm-name yes|no\n" \
    "\tyes - Create the class so that it can be used with Qt designer\n"\
    "\tno  - Create the class so that the layout must be created by hand"
    exit(1);

algname = args[0]
if args[1] == "yes":
    designer = True
else:
    designer = False


dialogclassname = algname + "Dialog"

headerfile = open(dialogclassname+".h", 'w')

# header file
headerfile.write("#ifndef MANTIDQTCUSTOMDIALOGS_" + string.upper(dialogclassname) + "_H_\n"
                 "#define MANTIDQTCUSTOMDIALOGS_" + string.upper(dialogclassname) + "_H_\n\n"
                 "//----------------------\n"
                 "// Includes\n"
                 "//----------------------\n")
if designer == True:
    headerfile.write("#include \"MantidQtCustomDialogs/ui_" + dialogclassname + ".h\"\n")

headerfile.write("#include \"MantidQtAPI/AlgorithmDialog.h\"\n\n"
                 "namespace MantidQt\n"
                 "{\n"
                 "namespace CustomDialogs\n"
                 "{\n"
                 "class " + dialogclassname + " : public MantidQt::API::AlgorithmDialog\n"
                 "{\n"
                 "  Q_OBJECT\n\n"
                 "public:\n"
                 "  /// Default Constructor\n"
                 + "  " + dialogclassname + "(QWidget *parent = 0);\n\n"
                 "private:\n"
                 "  /// Initialize the layout\n"
                 "  virtual void initLayout();\n\n"
                 "  /// Parse the input from the dialog when it has been accepted\n"
                 "  virtual void parseInput();\n\n")
if designer == True:
    headerfile.write("private:\n"
                     "  //The form generated by Qt Designer\n"
                     "  Ui::" + dialogclassname + " m_uiForm;\n\n")
headerfile.write("};\n\n"
                 "}\n"
                 "}\n\n"
                 "#endif //MANTIDQTCUSTOMDIALOGS_" + string.upper(dialogclassname) + "_H_\n")

headerfile.close()

#source code
sourcefile = open(dialogclassname+".cpp", 'w')

sourcefile.write("//----------------------\n"
                 "// Includes\n"
                 "//----------------------\n"
                 "#include \"MantidQtCustomDialogs/" + dialogclassname + ".h\"\n"
                 "#include \"MantidQtAPI/AlgorithmInputHistory.h\"\n\n"
                 "//Add this class to the list of specialised dialogs in this namespace\n"
                 "namespace MantidQt\n"
                 "{\n"
                 "namespace CustomDialogs\n"
                 "{\n"
                 "  DECLARE_DIALOG(" + dialogclassname + ");\n"
                 "}\n"
                 "}\n\n"
                 "using namespace MantidQt::CustomDialogs;\n\n"
                 "//----------------------\n"
                 "// Public member functions\n"
                 "//----------------------\n"
                 "///Constructor\n"
                 + dialogclassname + "::" + dialogclassname + "(QWidget *parent) :\n"
                 "  AlgorithmDialog(parent)\n"
                 "{\n"
                 "}\n\n"
                 "/// Set up the dialog layout\n"
                 "void " + dialogclassname + "::initLayout()\n"
                 "{\n")
if designer == True:
    sourcefile.write("  m_uiForm.setupUi(this);\n");

sourcefile.write("}\n\n"
                 "/// Parse input when the dialog is accepted\n"
                 "void " + dialogclassname + "::parseInput()\n"
                 "{\n"
                 "}\n")



