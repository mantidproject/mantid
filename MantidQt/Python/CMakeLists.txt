###########################################################################
# Do the sip generation, for python bindings
###########################################################################

include_directories ( ${PYTHON_INCLUDE_PATH} )

set ( SIP_SPEC ${CMAKE_CURRENT_SOURCE_DIR}/mantidqt.sip )
set ( SIP_SRC_IN ${CMAKE_CURRENT_SOURCE_DIR}/sip_mantidqt.cpp.in )
set ( SIP_SRC ${CMAKE_CURRENT_BINARY_DIR}/sip_mantidqt.cpp )
set ( SIP_SRC_AUTO sipmantidqtpythonpart0.cpp )

# We need to manually add all the headers that are in the sip file
# so that the dependencies are known to CMake
set ( SIP_HDRS 
	../SliceViewer/inc/MantidQtSliceViewer/SliceViewer.h
)

set( SRC_UNITY_IGNORE_FILES )

###########################################################################
# Sip generated files
###########################################################################

# The code generated by sip causes compiler warnings therefore the 
# generated file is wrapped by ${SIP_SRC} and these warnings are
# disabled. In order for VS2010 to to this correctly the second
# custom command below is required

# Flags used: 
# -e : C++ exceptions turn into python exceptions.
# -j1 : split into 1 file
# -w : enable warnings
# -o : automatic docstrings (not supported in old version < 4.10)

add_custom_command ( OUTPUT ${SIP_SRC_AUTO}
                     COMMAND ${SIP_EXECUTABLE}
                          -I ${PYQT4_SIP_DIR} ${PYQT4_SIP_FLAGS}
                          -c ${CMAKE_CURRENT_BINARY_DIR} -j1 -w 
                          -e 
                          ${SIP_SPEC}
                     DEPENDS mantidqt.sip ${SIP_HDRS}
                     COMMENT "Generating mantidqt python bindings using sip"
)

add_custom_command ( OUTPUT ${SIP_SRC}
                     COMMAND ${CMAKE_COMMAND} ARGS -E copy_if_different ${SIP_SRC_IN} ${SIP_SRC}
                     DEPENDS ${SIP_SRC_AUTO}
                     COMMENT ""
)                     

# Needed for sip.h header that can end up in a different place to to the main Python include directory
include_directories ( SYSTEM ${SIP_INCLUDE_DIR} )

# Needed for sip generated files to find includes in src
include_directories ( ${CMAKE_CURRENT_SOURCE_DIR} )

# Other folders that need to be included...
include_directories ( ../SliceViewer/inc )
include_directories ( ../MantidWidgets/inc )
include_directories ( ../Factory/inc )
include_directories ( ../SpectrumViewer/inc )
include_directories ( ../RefDetectorViewer/inc )
include_directories ( ${CMAKE_CURRENT_BINARY_DIR}/../SliceViewer ) # to find the ui_*.h auto-generated files
include_directories ( ${CMAKE_CURRENT_BINARY_DIR}/../RefDetectorViewer ) # to find the ui_*.h auto-generated files

# This creates the target library, just for python bindings
add_library ( mantidqtpython MODULE ${SIP_SRC} )

if(WIN32)
	# Windows: Python library name needs to end in .pyd for Windows
	set_target_properties( mantidqtpython PROPERTIES PREFIX "" SUFFIX ".pyd" )
	# Debug python library expects imported module names to end in _d
	if ( PYTHON_DEBUG_LIBRARY )
		set_target_properties ( mantidqtpython PROPERTIES DEBUG_OUTPUT_NAME mantidqtpython_d )
	endif ()
elseif ( APPLE )
	# Mac: and in .so on the Mac, with no "lib" prefix either
  	set_target_properties ( mantidqtpython PROPERTIES PREFIX "" SUFFIX .so )

if (OSX_VERSION VERSION_GREATER 10.8)
  set_target_properties ( mantidqtpython PROPERTIES INSTALL_RPATH "@loader_path/../MacOS")
endif () 

else ()
	# Linux: needs to NOT have the usual "lib" prefix. 
	set_target_properties( mantidqtpython PROPERTIES PREFIX "" )
endif ()

# ... and links to other required libs ...
target_link_libraries ( mantidqtpython LINK_PRIVATE ${TCMALLOC_LIBRARIES_LINKTIME} 
            MantidQtAPI
            MantidQtSliceViewer
            MantidQtFactory
            MantidQtRefDetectorViewer
            MantidWidgets
            ${CORE_MANTIDLIBS}
            ${POCO_LIBRARIES}
            ${Boost_LIBRARIES}
            ${QT_LIBRARIES}
            ${QWT_LIBRARIES}
            ${PYTHON_LIBRARIES}
            )



###########################################################################
# Installation settings
###########################################################################

install ( TARGETS mantidqtpython DESTINATION ${BIN_DIR} )

