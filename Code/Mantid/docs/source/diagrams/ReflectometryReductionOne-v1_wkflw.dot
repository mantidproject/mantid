digraph ReflectometryReductionOne {
  label = "ReflectometryReductionOne Flowchart"
  $global_style

  subgraph params {
    $param_style
    inputWorkspace    [label="InputWorkspace"]
    firstTransRun     [label="FirstTransmissionRun"]
    secondTransRun    [label="SecondTransmissionRun"]
    outputWorkspaceWL [label="OutputWorkspaceWavelength"]
    outputWorkspaceMT [label="OutputWorkspace"]
    thetaIn           [label="ThetaIn"]
    thetaOut          [label="ThetaOut"]
  }

  subgraph decisions {
    $decision_style
    checkXUnit      [label="X axis in &lambda;?"]
    checkMultDet    [label="Multidetector?"]
    checkTransRun   [label="FirstTransmissionRun\ngiven?"]
    checkTransUnits [label="X axis in &lambda;?"]
    checkThetaIn    [label="ThetaIn given?"]
    checkCorDetPos  [label="Correct Detector Positions?"]
  }

  subgraph algorithms {
    $algorithm_style
    calcTheta       [label="SpecularReflectionCalculateTheta"]
    convertToMT     [label="ConvertUnits\n(Momentum-transfer)"]
    convertToWL     [label="ConvertUnits\n(To &lambda;)"]
    createTransWS   [label="CreateTransmissionWorkspace"]
    divideDetMon    [label="Divide\n(Detectors / Monitors)"]
    divideTrans     [label="Divide\n(InputWorkspace / TransmissionWorkspace)"]
    intMon          [label="Integrate"]
    specRefPosCor   [label="SpecularReflectionPositionCorrect"]
  }

  subgraph processes {
    $process_style
    directBeamNorm  [label="Perform Direct\nBeam Normalisation"]
  }

  subgraph values {
    $value_style
    valMon          [label="I&#8320;(&lambda;)"]
    valDet          [label="I(&lambda;)"]
    valIntegrated   [label="&Sigma; I&#8320;(&lambda;)"]
    valInputDiv     [label="I(&lambda;) / &Sigma;I&#8320;(&lambda;)"]
    valTrans        [label="It(&lambda;) / &Sigma;I&#8320;t(&lambda;)"]
  }

  inputWorkspace    -> checkXUnit
  checkXUnit        -> checkThetaIn     [label="Yes"]
  checkXUnit        -> convertToWL      [label="No"]
  convertToWL       -> valMon           [label="Monitors"]
  convertToWL       -> valDet           [label="Detectors"]
  valMon            -> intMon
  valDet            -> checkMultDet
  intMon            -> valIntegrated
  valIntegrated     -> divideDetMon
  checkMultDet      -> directBeamNorm   [label="Yes"]
  checkMultDet      -> divideDetMon     [label="No"]
  directBeamNorm    -> divideDetMon
  divideDetMon      -> valInputDiv
  valInputDiv       -> checkTransRun
  checkTransRun     -> divideTrans      [label="Yes"]
  checkTransRun     -> checkThetaIn     [label="No"]
  firstTransRun     -> checkTransUnits
  checkTransUnits   -> valTrans         [label="Yes"]
  checkTransUnits   -> createTransWS    [label="No"]
  secondTransRun    -> createTransWS
  createTransWS     -> valTrans
  valTrans          -> divideTrans
  divideTrans       -> checkThetaIn
  thetaIn           -> checkThetaIn
  checkThetaIn      -> checkCorDetPos   [label="Yes"]
  checkThetaIn      -> calcTheta        [label="No"]
  calcTheta         -> checkCorDetPos
  calcTheta         -> thetaOut
  checkCorDetPos    -> specRefPosCor    [label="Yes"]
  checkCorDetPos    -> outputWorkspaceWL[label="No"]
  specRefPosCor     -> outputWorkspaceWL
  outputWorkspaceWL -> convertToMT
  convertToMT       -> outputWorkspaceMT
}
