# Mantid Repository : https://github.com/mantidproject/mantid
#
# Copyright &copy; 2020 ISIS Rutherford Appleton Laboratory UKRI,
#   NScD Oak Ridge National Laboratory, European Spallation Source,
#   Institut Laue - Langevin & CSNS, Institute of High Energy Physics, CAS
# SPDX - License - Identifier: GPL - 3.0 +
import systemtesting
import numpy as np
from mantid.simpleapi import AbsorptionCorrection, CreateWorkspace, EditInstrumentGeometry, CreateSampleShape


class CompareAbsorptionCorrectionToInternationalTablesCylinder(systemtesting.MantidSystemTest):
    """This test is comparing the values calulated by the
    AbsorptionCorrection algorithm for a cylinder to the values in the
    tables 6.3.3.2 from "International Tables for Crystallography
    Volume C: Mathematical, physical and chemical tables"
    http://dx.doi.org/10.1107/97809553602060000103

    """

    ref = {
        0.0: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        0.1: [
            1.1843,
            1.1843,
            1.1842,
            1.1840,
            1.1838,
            1.1835,
            1.1832,
            1.1828,
            1.1823,
            1.1818,
            1.1813,
            1.1808,
            1.1802,
            1.1798,
            1.1793,
            1.1790,
            1.1787,
            1.1785,
            1.1785,
        ],
        0.2: [
            1.4009,
            1.4007,
            1.4002,
            1.3995,
            1.3984,
            1.3970,
            1.3953,
            1.3934,
            1.3912,
            1.3889,
            1.3865,
            1.3841,
            1.3818,
            1.3796,
            1.3777,
            1.3761,
            1.3749,
            1.3741,
            1.3739,
        ],
        0.3: [
            1.6548,
            1.6544,
            1.6531,
            1.6510,
            1.6481,
            1.6443,
            1.6398,
            1.6347,
            1.6290,
            1.6230,
            1.6169,
            1.6108,
            1.6049,
            1.5994,
            1.5946,
            1.5906,
            1.5876,
            1.5857,
            1.5851,
        ],
        0.4: [
            1.9522,
            1.9513,
            1.9485,
            1.9439,
            1.9376,
            1.9296,
            1.9201,
            1.9094,
            1.8979,
            1.8857,
            1.8733,
            1.8611,
            1.8495,
            1.8388,
            1.8293,
            1.8215,
            1.8157,
            1.8121,
            1.8108,
        ],
        0.5: [
            2.2996,
            2.2979,
            2.2926,
            2.2840,
            2.2721,
            2.2572,
            2.2398,
            2.2204,
            2.1996,
            2.1781,
            2.1564,
            2.1352,
            2.1152,
            2.0969,
            2.0809,
            2.0677,
            2.0579,
            2.0518,
            2.0497,
        ],
        0.6: [
            2.7047,
            2.7017,
            2.6926,
            2.6775,
            2.6570,
            2.6317,
            2.6023,
            2.5701,
            2.5359,
            2.5010,
            2.4662,
            2.4327,
            2.4012,
            2.3728,
            2.3480,
            2.3277,
            2.3126,
            2.3033,
            2.3001,
        ],
        0.7: [
            3.1762,
            3.1712,
            3.1561,
            3.1315,
            3.0982,
            3.0575,
            3.0111,
            2.9607,
            2.9081,
            2.8549,
            2.8028,
            2.7530,
            2.7068,
            2.6653,
            2.6295,
            2.6003,
            2.5786,
            2.5651,
            2.5606,
        ],
        0.8: [
            3.7236,
            3.7157,
            3.6919,
            3.6532,
            3.6015,
            3.5392,
            3.4691,
            3.3941,
            3.3169,
            3.2400,
            3.1656,
            3.0953,
            3.0307,
            2.9732,
            2.9239,
            2.8839,
            2.8542,
            2.8359,
            2.8297,
        ],
        0.9: [
            4.3578,
            4.3456,
            4.3093,
            4.2507,
            4.1733,
            4.0812,
            3.9792,
            3.8718,
            3.7629,
            3.6560,
            3.5538,
            3.4584,
            3.3717,
            3.2951,
            3.2299,
            3.1772,
            3.1383,
            3.1142,
            3.1061,
        ],
        1.0: [
            5.0907,
            5.0724,
            5.0185,
            4.9323,
            4.8196,
            4.6877,
            4.5439,
            4.3948,
            4.2461,
            4.1022,
            3.9664,
            3.8413,
            3.7286,
            3.6298,
            3.5462,
            3.4790,
            3.4295,
            3.3990,
            3.3886,
        ],
        1.1: [
            5.9356,
            5.9089,
            5.8305,
            5.7065,
            5.5466,
            5.3624,
            5.1649,
            4.9636,
            4.7660,
            4.5776,
            4.4022,
            4.2424,
            4.0998,
            3.9759,
            3.8717,
            3.7882,
            3.7269,
            3.6891,
            3.6763,
        ],
        1.2: [
            6.9070,
            6.8690,
            6.7570,
            6.5820,
            6.3600,
            6.1090,
            5.8436,
            5.5782,
            5.3219,
            5.0811,
            4.8598,
            4.6604,
            4.4842,
            4.3322,
            4.2051,
            4.1038,
            4.0295,
            3.9838,
            3.9682,
        ],
        1.3: [
            8.0210,
            7.9670,
            7.8100,
            7.5680,
            7.2660,
            6.9290,
            6.5810,
            6.2380,
            5.9125,
            5.6110,
            5.3376,
            5.0938,
            4.8805,
            4.6976,
            4.5456,
            4.4248,
            4.3365,
            4.2821,
            4.2636,
        ],
        1.4: [
            9.2940,
            9.2190,
            9.0030,
            8.6740,
            8.2680,
            7.8260,
            7.3760,
            6.9420,
            6.5360,
            6.1660,
            5.8341,
            5.5413,
            5.2873,
            5.0711,
            4.8922,
            4.7506,
            4.6471,
            4.5835,
            4.5619,
        ],
        1.5: [
            10.7460,
            10.6430,
            10.3490,
            9.9070,
            9.3720,
            8.8000,
            8.2300,
            7.6890,
            7.1920,
            6.7440,
            6.3480,
            6.0020,
            5.7036,
            5.4516,
            5.2441,
            5.0804,
            4.9609,
            4.8875,
            4.8625,
        ],
        1.6: [
            12.397,
            12.257,
            11.862,
            11.276,
            10.581,
            9.852,
            9.141,
            8.477,
            7.877,
            7.344,
            6.877,
            6.473,
            6.128,
            5.8385,
            5.6007,
            5.4136,
            5.2773,
            5.1935,
            5.1650,
        ],
        1.7: [
            14.267,
            14.080,
            13.555,
            12.788,
            11.897,
            10.982,
            10.106,
            9.304,
            8.589,
            7.963,
            7.420,
            6.955,
            6.561,
            6.231,
            5.961,
            5.7499,
            5.5960,
            5.5014,
            5.4691,
        ],
        1.8: [
            16.379,
            16.131,
            15.441,
            14.450,
            13.323,
            12.189,
            11.125,
            10.168,
            9.327,
            8.600,
            7.976,
            7.446,
            7.000,
            6.628,
            6.326,
            6.089,
            5.9166,
            5.8107,
            5.7746,
        ],
        1.9: [
            18.76,
            18.43,
            17.53,
            16.267,
            14.858,
            13.470,
            12.194,
            11.066,
            10.089,
            9.253,
            8.544,
            7.946,
            7.444,
            7.030,
            6.693,
            6.430,
            6.239,
            6.121,
            6.081,
        ],
        2.0: [
            21.43,
            21.00,
            19.84,
            18.24,
            16.50,
            14.824,
            13.311,
            11.995,
            10.871,
            9.921,
            9.122,
            8.452,
            7.895,
            7.435,
            7.063,
            6.773,
            6.562,
            6.433,
            6.389,
        ],
        2.1: [
            24.41,
            23.87,
            22.39,
            20.38,
            18.25,
            16.247,
            14.472,
            12.953,
            11.673,
            10.602,
            9.709,
            8.965,
            8.349,
            7.843,
            7.436,
            7.118,
            6.887,
            6.745,
            6.697,
        ],
        2.2: [
            27.74,
            27.04,
            25.17,
            22.69,
            20.11,
            17.74,
            15.675,
            13.938,
            12.493,
            11.295,
            10.304,
            9.484,
            8.808,
            8.255,
            7.810,
            7.464,
            7.213,
            7.059,
            7.006,
        ],
        2.3: [
            31.44,
            30.55,
            28.20,
            25.16,
            22.07,
            19.29,
            16.92,
            14.947,
            13.328,
            11.999,
            10.906,
            10.008,
            9.271,
            8.669,
            8.187,
            7.812,
            7.540,
            7.372,
            7.315,
        ],
        2.4: [
            35.54,
            34.41,
            31.49,
            27.79,
            24.13,
            20.90,
            18.19,
            15.978,
            14.177,
            12.711,
            11.515,
            10.537,
            9.736,
            9.086,
            8.565,
            8.161,
            7.868,
            7.687,
            7.625,
        ],
        2.5: [
            40.06,
            38.65,
            35.05,
            30.59,
            26.28,
            22.56,
            19.50,
            17.03,
            15.040,
            13.433,
            12.130,
            11.069,
            10.205,
            9.505,
            8.945,
            8.511,
            8.196,
            8.002,
            7.935,
        ],
    }

    def runTest(self):
        ws = create_test_ws()

        cylinder_height = 0.00001  # m
        cylinder_radius = 0.01  # m
        cylinder_xml = (
            f"<cylinder id='some-cylinder'><centre-of-bottom-base x='0.0' y='-{cylinder_height/2}' z='0.0' />"
            + f"<radius val='{cylinder_radius}' /><height val='{cylinder_height}' /><axis x='0' y='1' z='0' />"
            + "</cylinder><algebra val='some-cylinder' />"
        )

        CreateSampleShape(ws, cylinder_xml)

        for sx in np.arange(0.0, 2.6, 0.1):
            abs_ws = AbsorptionCorrection(
                InputWorkspace=ws, AttenuationXSection=0.0, ScatteringXSection=sx, SampleNumberDensity=1, ElementSize=0.1
            )

            # the tables are A* = 1/A
            # all calculated values should be within 1.00% of the tables
            np.testing.assert_allclose(1 / abs_ws.extractY().flatten(), self.ref[round(sx, 1)], rtol=0.01001, err_msg=f"Failing on sx={sx}")


class CompareAbsorptionCorrectionToInternationalTablesSphere(systemtesting.MantidSystemTest):
    """This test is comparing the values calulated by the
    AbsorptionCorrection algorithm for a sphere to the values in the
    tables 6.3.3.3 from "International Tables for Crystallography
    Volume C: Mathematical, physical and chemical tables"
    http://dx.doi.org/10.1107/97809553602060000103

    """

    ref = {
        0.0: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        0.1: [
            1.1609,
            1.1609,
            1.1609,
            1.1607,
            1.1606,
            1.1603,
            1.1600,
            1.1597,
            1.1593,
            1.1589,
            1.1586,
            1.1582,
            1.1579,
            1.1575,
            1.1572,
            1.1570,
            1.1568,
            1.1567,
            1.1567,
        ],
        0.2: [
            1.3457,
            1.3456,
            1.3452,
            1.3447,
            1.3439,
            1.3428,
            1.3415,
            1.3400,
            1.3383,
            1.3366,
            1.3348,
            1.3331,
            1.3313,
            1.3297,
            1.3282,
            1.3271,
            1.3262,
            1.3256,
            1.3254,
        ],
        0.3: [
            1.5574,
            1.5571,
            1.5561,
            1.5546,
            1.5525,
            1.5497,
            1.5463,
            1.5426,
            1.5383,
            1.5339,
            1.5293,
            1.5248,
            1.5204,
            1.5162,
            1.5126,
            1.5096,
            1.5074,
            1.5059,
            1.5055,
        ],
        0.4: [
            1.7994,
            1.7988,
            1.7968,
            1.7935,
            1.7891,
            1.7833,
            1.7765,
            1.7689,
            1.7604,
            1.7515,
            1.7425,
            1.7335,
            1.7249,
            1.7169,
            1.7099,
            1.7041,
            1.6997,
            1.6970,
            1.6961,
        ],
        0.5: [
            2.0755,
            2.0743,
            2.0706,
            2.0647,
            2.0565,
            2.0462,
            2.0340,
            2.0204,
            2.0056,
            1.9901,
            1.9745,
            1.9592,
            1.9445,
            1.9311,
            1.9194,
            1.9097,
            1.9024,
            1.8979,
            1.8964,
        ],
        0.6: [
            2.3897,
            2.3877,
            2.3816,
            2.3715,
            2.3578,
            2.3406,
            2.3206,
            2.2984,
            2.2746,
            2.2500,
            2.2255,
            2.2015,
            2.1789,
            2.1583,
            2.1403,
            2.1257,
            2.1145,
            2.1076,
            2.1063,
        ],
        0.7: [
            2.7467,
            2.7434,
            2.7336,
            2.7177,
            2.6959,
            2.6691,
            2.6382,
            2.6042,
            2.5683,
            2.5316,
            2.4952,
            2.4602,
            2.4274,
            2.3977,
            2.3719,
            2.3508,
            2.3351,
            2.3253,
            2.3220,
        ],
        0.8: [
            3.1511,
            3.1461,
            3.1332,
            3.1069,
            3.0740,
            3.0339,
            2.9882,
            2.9386,
            2.8869,
            2.8347,
            2.7835,
            2.7346,
            2.6892,
            2.6484,
            2.6133,
            2.5845,
            2.5632,
            2.5499,
            2.5454,
        ],
        0.9: [
            3.6082,
            3.6009,
            3.5789,
            3.5431,
            3.4952,
            3.4374,
            3.3723,
            3.3026,
            3.2308,
            3.1592,
            3.0898,
            3.0241,
            2.9637,
            2.9098,
            2.8634,
            2.8258,
            2.7979,
            2.7805,
            2.7747,
        ],
        1.0: [
            4.1237,
            4.1131,
            4.0815,
            4.0304,
            3.9625,
            3.8816,
            3.7917,
            3.6966,
            3.6001,
            3.5048,
            3.4135,
            3.3280,
            3.2499,
            3.1807,
            3.1216,
            3.0738,
            3.0383,
            3.0163,
            3.0090,
        ],
        1.1: [
            4.7035,
            4.6886,
            4.6442,
            4.5729,
            4.4790,
            4.3686,
            4.2474,
            4.1211,
            3.9945,
            3.8710,
            3.7540,
            3.6455,
            3.5470,
            3.4605,
            3.3870,
            3.3276,
            3.2838,
            3.2566,
            3.2474,
        ],
        1.2: [
            5.3542,
            5.3335,
            5.2722,
            5.1747,
            5.0476,
            4.9001,
            4.7404,
            4.5761,
            4.4137,
            4.2571,
            4.1104,
            3.9756,
            3.8542,
            3.7483,
            3.6586,
            3.5866,
            3.5334,
            3.5005,
            3.4894,
        ],
        1.3: [
            6.082,
            6.054,
            5.9710,
            5.8399,
            5.6710,
            5.4776,
            5.2711,
            5.0617,
            4.8573,
            4.6625,
            4.4819,
            4.3175,
            4.1706,
            4.0432,
            3.9360,
            3.8500,
            3.7868,
            3.7477,
            3.7344,
        ],
        1.4: [
            6.895,
            6.857,
            6.746,
            6.573,
            6.352,
            6.102,
            5.8400,
            5.5774,
            5.3244,
            5.0862,
            4.8676,
            4.6703,
            4.4955,
            4.3447,
            4.2183,
            4.1174,
            4.0432,
            3.9974,
            3.9819,
        ],
        1.5: [
            7.801,
            7.750,
            7.604,
            7.377,
            7.092,
            6.775,
            6.447,
            6.123,
            5.8143,
            5.5273,
            5.2666,
            5.0333,
            4.8281,
            4.6520,
            4.5052,
            4.3883,
            4.3024,
            4.2495,
            4.2315,
        ],
        1.6: [
            8.806,
            8.740,
            8.549,
            8.256,
            7.894,
            7.497,
            7.092,
            6.697,
            6.326,
            5.9849,
            5.6780,
            5.4057,
            5.16478,
            4.9647,
            4.7961,
            4.6622,
            4.5641,
            4.5036,
            4.4830,
        ],
        1.7: [
            9.920,
            9.834,
            9.587,
            9.214,
            8.759,
            8.268,
            7.774,
            7.299,
            6.859,
            6.458,
            6.101,
            5.7867,
            5.5140,
            5.2823,
            5.0907,
            4.9390,
            4.8279,
            4.7597,
            4.7361,
        ],
        1.8: [
            11.151,
            11.040,
            10.725,
            10.254,
            9.689,
            9.088,
            8.492,
            7.928,
            7.411,
            6.946,
            6.535,
            6.176,
            5.8662,
            5.6045,
            5.3888,
            5.2184,
            5.0936,
            5.0170,
            4.9908,
        ],
        1.9: [
            12.507,
            12.366,
            11.969,
            11.380,
            10.685,
            9.957,
            9.246,
            8.583,
            7.982,
            7.447,
            6.978,
            6.572,
            6.224,
            5.9308,
            5.6900,
            5.5001,
            5.3613,
            5.2760,
            5.2468,
        ],
        2.0: [
            13.998,
            13.819,
            13.320,
            12.593,
            11.746,
            10.873,
            10.034,
            9.262,
            8.570,
            7.961,
            7.431,
            6.975,
            6.587,
            6.261,
            5.9942,
            5.7842,
            5.6307,
            5.5365,
            5.5041,
        ],
        2.1: [
            15.632,
            15.4087,
            14.788,
            13.895,
            12.874,
            11.837,
            10.855,
            9.964,
            9.175,
            8.486,
            7.893,
            7.385,
            6.955,
            6.595,
            6.301,
            6.070,
            5.9017,
            5.7982,
            5.7627,
        ],
        2.2: [
            17.419,
            17.141,
            16.376,
            15.290,
            14.067,
            12.847,
            11.708,
            10.688,
            9.795,
            9.023,
            8.362,
            7.800,
            7.327,
            6.932,
            6.610,
            6.358,
            6.174,
            6.061,
            6.022,
        ],
        2.3: [
            19.369,
            19.025,
            18.089,
            16.778,
            15.327,
            13.902,
            12.592,
            11.433,
            10.429,
            9.569,
            8.839,
            8.220,
            7.702,
            7.272,
            6.922,
            6.648,
            6.448,
            6.325,
            6.282,
        ],
        2.4: [
            21.489,
            21.069,
            19.931,
            18.361,
            16.652,
            15.000,
            13.504,
            12.198,
            11.077,
            10.125,
            9.322,
            8.645,
            8.081,
            7.614,
            7.235,
            6.938,
            6.722,
            6.589,
            6.543,
        ],
        2.5: [
            23.791,
            23.280,
            21.907,
            20.040,
            18.041,
            16.142,
            14.445,
            12.982,
            11.738,
            10.690,
            9.810,
            9.074,
            8.462,
            7.957,
            7.548,
            7.229,
            6.996,
            6.853,
            6.803,
        ],
    }

    def runTest(self):
        ws = create_test_ws()

        sphere_radius = 0.01
        sphere_xml = (
            "<sphere id='some-sphere'><centre x='0.0'  y='0.0' z='0.0' />"
            + f"<radius val='{sphere_radius}' /></sphere><algebra val='some-sphere' />"
        )

        CreateSampleShape(ws, sphere_xml)

        for sx in np.arange(0.0, 2.6, 0.1):
            abs_ws = AbsorptionCorrection(
                InputWorkspace=ws, AttenuationXSection=0.0, ScatteringXSection=sx, SampleNumberDensity=1, ElementSize=0.5
            )
            # the tables are A* = 1/A
            # all calculated values should be within 0.37% of the tables
            np.testing.assert_allclose(1 / abs_ws.extractY().flatten(), self.ref[round(sx, 1)], rtol=0.0037, err_msg=f"Failing on sx={sx}")


def create_test_ws():
    """
    This creates a workspace with 19 detectors with 2theta from every 5 degress from 0 to 90
    """
    wavelength = 1.7982

    nspec = 19

    ws = CreateWorkspace(
        DataX=[wavelength - 0.0001, wavelength + 0.0001], DataY=[0.0] * nspec, NSpec=nspec, UnitX="Wavelength", YUnitLabel="Counts"
    )

    EditInstrumentGeometry(
        ws,
        PrimaryFlightPath=5.0,
        SpectrumIDs=list(range(1, nspec + 1)),
        L2=[2.0] * nspec,
        Polar=list(range(0, 181, 10)),
        Azimuthal=[0.0] * nspec,
        DetectorIDs=list(range(1, nspec + 1)),
        InstrumentName="Instrument",
    )

    return ws
