:: Mantid Repository : https://github.com/mantidproject/mantid
::
:: Copyright &copy; 2018 ISIS Rutherford Appleton Laboratory UKRI,
::   NScD Oak Ridge National Laboratory, European Spallation Source,
::   Institut Laue - Langevin & CSNS, Institute of High Energy Physics, CAS
:: SPDX - License - Identifier: GPL - 3.0 +
@echo off
:: Wrapper script to launch the system tests for a development build.
::
:: It uses the python, with the mantid framework on the pythonpath, to run the tests.
::  All arguments to this script are forwarded to the test runner.

set PYTHON_EXE=@PYTHON_EXECUTABLE@
set RUNNER_SCRIPT=@SYSTEMTESTS_RUNNER_SCRIPT@
set MULTI_CONFIG_GENERATOR=@MULTI_CONFIG_GENERATOR@
set BIN_DIR=@CMAKE_RUNTIME_OUTPUT_DIRECTORY@


:: Print usage
if [%1]==[-h] (
  goto usage
  goto end
)

:: Are there enough arguments
if "%MULTI_CONFIG_GENERATOR%" == "true" (
  if [%1] EQU [-C] (
    if [%2] NEQ [] (
      set PYTHONPATH=%PYTHONPATH%;%BIN_DIR%\%2\
    ) else (
      echo -C requires a config argument
      echo.
      echo Use -h for full usage
      goto error
    )
  ) else (
    echo Multi-configuration build requires -C ^<cfg^> to specify test configuration
    echo.
    echo Use -h for full usage
    goto error
  )
) else (
  if [%1] EQU [-C] (
    echo Ninja builds do not require you to specify a configuration -C.
    echo.
    echo Use -h for full usage
    goto error
  ) else (
    set PYTHONPATH=%PYTHONPATH%;%BIN_DIR%\
  )
)

:: Execute
echo.
echo Running tests...
if "%MULTI_CONFIG_GENERATOR%" == "true" (
  %PYTHON_EXE% %RUNNER_SCRIPT% --executable=%PYTHON_EXE% --exec-args= %3 %4 %5 %6 %7 %8 %9
) else (
  %PYTHON_EXE% %RUNNER_SCRIPT% --executable=%PYTHON_EXE% --exec-args= %1 %2 %3 %4 %5 %6 %7
)
goto end

:: -------- Functions  ---------

:usage
echo systemtest.bat -C ^<cfg^> ^[arg1^] ^[arg2^] ...
echo.
echo ^<cfg^> is one ^[Release^|Debug^|RelWithDebInfo^|DebugWithRelRuntime^|MinSizeRelease^]
echo All arguments after ^<cfg^> are passed to the runSystemTest.py script
%PYTHON_EXE% %RUNNER_SCRIPT% -h
goto:eof

:end
exit /b 0

:error
exit /b 1
