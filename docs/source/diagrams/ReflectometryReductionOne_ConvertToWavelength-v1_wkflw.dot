digraph ReflectometryReductionOne {
label = "ReflectometryReductionOne ConvertToWavelength Flowchart"
rankdir = TB;
 $global_style

subgraph params {
 $param_style
  inputWS             [label="InputWorkspace"]
  outputWS            [label="OutputWorkspace"]
  procCommands        [label="ProcessingCommands"]
  wavMin              [label="WavelengthMin"]
  wavMax              [label="WavelengthMax"]
  wavStep             [label="WavelengthStep"]
  detWS               [label="DetectorWorkspace"]
  monitorIndex        [label="I0MonitorIndex"]
  regionOfDirectBeam  [label="RegionOf-\nDirectBeam"]
  monIntWavMax        [label="MonitorIntegration-\nWavelengthMax"]
  monIntWavMin        [label="MonitorIntegration-\nWavelengthMin"]
  wavMaxRDB           [label="WavelengthMax"]
  wavMinRDB           [label="WavelengthMin"]
  wavStepRDB          [label="WavelengthStep"]
}

subgraph decisions {
 $decision_style
  checkMonUnity   [label="Monitors?"]
  checkNormDetMon [label="Normalize by\nIntegrated Monitors?"]
  checkBgMinMax   [label="Monitor background\nwavelength\nmin/max non-zero?"]
  checkMultRDB    [label="MultidetectorAnalysis\nand\nRegionOfDirectBeam\ngiven?"]
}

subgraph algorithms {
 $algorithm_style
  convertDet    [label="ConvertUnits\n(AlignBins = True)"]
  convertMon    [label="ConvertUnits"]
  groupDet      [label="GroupDetectors"]
  intMon        [label="Integration"]
  cropDetWS     [label="CropWorkspace"]
  rebinDet      [label="Rebin"]
  rebinToWS     [label="RebinToWorkspace"]
  cropMonWS     [label="CropWorkspace"]
  calcFlatBg    [label="CalculateFlatBackground"]
  groupDetRDB   [label="GroupDetectors"]
  convertDetRDB [label="ConvertUnits\n(AlignBins = True)"]
  cropRDBWS     [label="CropWorkspace"]
  rebinRDB      [label="Rebin"]
  rebinToWSRDB  [label="RebinToWorkspace"]
  divideDetMon  [label="Divide\n(Detectors / Monitors / Unity)"]
}

subgraph processes {
 $process_style
}

subgraph values {
 $value_style
  valUnity      [label="I(1)"]
  valDet        [label="I(&lambda;)"]
  valMon        [label="I(&lambda;)"]
  valIntegrated [label="&Sigma; I(&lambda;)"]
}

inputWS             -> convertDet     [label="Detectors"]
inputWS             -> checkMonUnity  [label="Monitors"]
checkMonUnity       -> convertMon     [label="Yes"]
checkMonUnity       -> valUnity       [label="No"]
convertDet          -> valDet
valDet              -> groupDet
procCommands        -> groupDet
convertMon          -> valMon
monIntWavMin        -> intMon
monIntWavMax        -> intMon
checkNormDetMon     -> intMon         [label="Yes"]
checkNormDetMon     -> divideDetMon   [label="No"]
groupDet            -> cropDetWS
wavMin              -> cropDetWS
wavMax              -> cropDetWS
cropDetWS           -> rebinDet
wavStep             -> rebinDet
rebinDet            -> detWS
detWS               -> rebinToWS
valMon              -> cropMonWS
monitorIndex        -> cropMonWS
cropMonWS           -> checkBgMinMax
checkBgMinMax       -> calcFlatBg     [label="Yes"]
checkBgMinMax       -> rebinToWS      [label="No"]
calcFlatBg          -> rebinToWS
rebinToWS           -> checkNormDetMon
detWS               -> checkMultRDB
valUnity            -> divideDetMon
intMon              -> valIntegrated
valIntegrated       -> divideDetMon
checkMultRDB        -> convertDetRDB  [label="Yes"]
checkMultRDB        -> divideDetMon   [label="No"]
convertDetRDB       -> groupDetRDB
regionOfDirectBeam  -> groupDetRDB
groupDetRDB         -> cropRDBWS
wavMinRDB           -> cropRDBWS
wavMaxRDB           -> cropRDBWS
cropRDBWS           -> rebinRDB
wavStepRDB          -> rebinRDB
rebinRDB            -> rebinToWSRDB
rebinToWSRDB        -> divideDetMon
divideDetMon        -> outputWS

{rank = same; convertDet; convertMon}
{rank = same; valUnity; valDet; valMon}
{rank = same; cropDetWS; cropMonWS}

}
