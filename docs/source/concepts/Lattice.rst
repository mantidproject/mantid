.. _Lattice:

Lattice
=======

The purpose of this document is to explain how Mantid is using
information about unit cells and their orientation with respect to the
laboratory frame. For a detailed description, see
http://github.com/mantidproject/documents/blob/master/Design/UBMatriximplementationnotes.pdf

Theory
------

The physics of a system studied by neutron scattering is described by
the conservation of energy and momentum. In the laboratory frame:

.. math::
    
    Q_l=  \hbar \mathbf{k}_i^{} -  \hbar \mathbf{k}_f


.. math::
    
    \Delta E_l= \frac{\hbar^2}{2m} (k_i^2 -  k_f^2)

Note that the left side in the above equations refer to what is
happening to the lattice, not to the neutron.

Let's assume that we have a periodic lattice, described by lattice
parameters :math:`a,\ b,\ c,\ \alpha,\ \beta,\ \gamma`. The reciprocal
lattice will be described by parameters
:math:`a^*,\ b^*,\ c^*,\ \alpha^*,\ \beta^*,\  \gamma^*`. Note that
Mantid uses :math:`a^*=\frac{1}{a}` type of notation, like in
crystallography.

For such a lattice, the physics will be described in terms of reciprocal
lattice parameters by

.. math::
    
    Q= 2 \pi\left(h \mathbf{a}^* + k \mathbf{b}^* +l \mathbf{c}^* \right) = \left(\begin{array}{c}
                                                            h \\
                                                            k \\
                                                            l
                                                          \end{array}\right)

The :math:`UB_{}^{}` matrix formalism relates :math:`Q_l^{}` and
:math:`Q_{}^{}` with the following equation:


.. math::

    Q_l = 2 \pi R \cdot U \cdot B \left(\begin{array}{c}
                                                            h \\
                                                            k \\
                                                            l
                                                          \end{array}\right)

The :math:`B_{}^{}` matrix transforms the :math:`h^{}_{}, k, l` triplet
into a Cartesian system, with the first axis along
:math:`\ \mathbf{a}^*`, the second in the plane defined by
:math:`\ \mathbf{a}^*` and :math:`\ \mathbf{b}^*`, and the third axis
perpendicular to this plane. In the Busing and Levi convention (W. R.
Busing and H. A. Levy, Angle calculations for 3- and 4-circle X-ray and
neutron diffractometers - Acta Cryst. (1967). 22, 457-464):

.. math::
    
    B = \left( \begin{array}{ccc}
        a^* & b^*\cos(\gamma^*) & c^*\cos(\beta^*) \\
        0 & b^*\sin(\gamma^*) & -c^*\sin(\beta^*)\cos(\alpha) \\
        0 & 0 & 1/c \end{array} \right)

The :math:`U_{}^{}` matrix represents the rotation from this Cartesian
coordinate frame to the Cartesian coordinate frame attached to the
innermost axis of the goniometer that holds the sample.

The :math:`R_{}^{}` matrix is the rotation matrix of the goniometer

Other useful equations:


.. math::
    G^* = (UB)^T UB = B^T B = \left( \begin{array}{ccc}
        a^*a^* & a^*b^*\cos(\gamma^*) & a^*c^*\cos(\beta^*) \\
        a^*b^*\cos(\gamma^*) & b^*b^* & b^*c^*\cos(\alpha^*) \\
        a^*c^*\cos(\beta^*) & b^*c^*\cos(\alpha^*) & c^*c^* \end{array} \right)


.. math::
    G=(G^*)^{-1}=\left( \begin{array}{ccc}
        aa & ab\cos(\gamma) & ac\cos(\beta) \\
        ab\cos(\gamma) & bb & bc\cos(\alpha) \\
        ac\cos(\beta) & bc\cos(\alpha) & cc \end{array} \right)

The distance in reciprocal space to the :math:`\left(h,k,l\right)` plane
is given by 

.. math::
    
    d^* =\left| B \left(\begin{array}{c}
                                                            h \\
                                                            k \\
                                                            l
                                                          \end{array}\right)\right|

The distance in real space to the :math:`\left(h,k,l\right)` plane is
given by :math:`d=\frac{1}{d^*}`

The angle between :math:`Q_1^{}` and :math:`Q_2^{}` is given by
:math:`\cos( Q_1^{}, Q_2^{})=\frac{(BQ_1)(BQ_2)}{|(BQ_1)| |(BQ_2)|}`

Unit cells
----------

The UnitCell class provides the following functions to access direct and
reciprocal lattices. The examples can be run from the script console in
Mantid 

+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Function                                       | Example                                                                         | Description                                                                                                                                                                                                                                                                                                                    |
+================================================+=================================================================================+================================================================================================================================================================================================================================================================================================================================+
| UnitCell()                                     | u = UnitCell()                                                                  | default constructor, with :math:`a=b=c=1\rm \AA, \ \alpha=\beta=\gamma=90^\circ`                                                                                                                                                                                                                                               |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| UnitCell(other unit cell)                      | | u = UnitCell()                                                                | copy constructor                                                                                                                                                                                                                                                                                                               |
|                                                | |  u2 = UnitCell(u)                                                             |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| UnitCell(a,b,c)                                | u = UnitCell(2,3.5,4)                                                           | constructor using :math:`a, b, c\ (\rm {in \ \AA}), \ \alpha=\beta=\gamma=90^\circ`                                                                                                                                                                                                                                            |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| UnitCell(a,b,c,alpha,beta,gamma,Unit = unit)   | | u = UnitCell(2,3.5,4,90,90,90)                                                | constructor using :math:`a, b, c\ (\rm {in \ \AA}), \ \alpha, \ \beta,\ \gamma \ (\rm {in \ degrees \ or \ radians})`. The optional parameter "Unit" controls the units for the angles, and can have the value of "Degrees" or "Radians". By default Unit = Degrees                                                            |
|                                                | | u = UnitCell(2,3.5,4,90,90,90,Unit = Degrees)                                 |                                                                                                                                                                                                                                                                                                                                |
|                                                | | u = UnitCell(2,3.5,4,0.5\*math.pi,0.5\*math.pi,0.5\*math.pi,Unit = Radians)   |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | a()                                          | | u = UnitCell(2,3.5,4)                                                         | returns lattice parameters :math:`a, b, c\ (\rm {in \ \AA})`                                                                                                                                                                                                                                                                   |
| |  b()                                         | |  print u.c()                                                                  |                                                                                                                                                                                                                                                                                                                                |
| |  c()                                         |                                                                                 |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | a1()                                         | | u = UnitCell(2,3.5,4)                                                         | returns lattice parameters :math:`a_1=a, a_2=b, a_3=c\ (\rm {in \ \AA})`. Note: `"International Tables for Crystallography" <http://it.iucr.org/Ba/ch1o1v0001/>`__ notation                                                                                                                                                    |
| |  a2()                                        | |  print u.a2()                                                                 |                                                                                                                                                                                                                                                                                                                                |
| |  a3()                                        |                                                                                 |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | alpha()                                      | | u = UnitCell(2,3.5,4,95,95,105)                                               | returns lattice parameters :math:`\alpha,\ \beta, \gamma\ (\rm {in \ degrees})`                                                                                                                                                                                                                                                |
| |  beta()                                      | |  print u.alpha()                                                              |                                                                                                                                                                                                                                                                                                                                |
| |  gamma()                                     |                                                                                 |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | alpha1()                                     | | u = UnitCell(2,2,4,90,90,60)                                                  | returns lattice parameters :math:`\alpha_1=\alpha,\ \alpha_2=\beta, \ \alpha_3=\gamma \ (\rm {in \ radians})`. Note: `"International Tables for Crystallography" <http://it.iucr.org/Ba/ch1o1v0001/>`__ notation                                                                                                               |
| |  alpha2()                                    | |  print u.alpha3()                                                             |                                                                                                                                                                                                                                                                                                                                |
| |  alpha3()                                    |                                                                                 |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | astar()                                      | | u = UnitCell(2,3.5,4)                                                         | returns reciprocal lattice parameters :math:`a^*, b^*, c^* \ (\rm {in \ \AA^{-1}})`                                                                                                                                                                                                                                            |
| |  bstar()                                     | |  print u.cstar()                                                              |                                                                                                                                                                                                                                                                                                                                |
| |  cstar()                                     |                                                                                 |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | b1()                                         | | u = UnitCell(2,3.5,4)                                                         | returns lattice parameters :math:`b_1=a^*, b_2=b^*, b_3=c^*\ (\rm {in \ \AA^{-1}})`. Note: `"International Tables for Crystallography" <http://it.iucr.org/Ba/ch1o1v0001/>`__ notation                                                                                                                                         |
| |  b2()                                        | |  print u.b2()                                                                 |                                                                                                                                                                                                                                                                                                                                |
| |  b3()                                        |                                                                                 |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | alphastar()                                  | | u = UnitCell(2,3.5,4,95,95,105)                                               | returns lattice parameters :math:`\alpha^*,\ \beta^*, \gamma^*\ (\rm {in \ degrees})`                                                                                                                                                                                                                                          |
| |  betastar()                                  | |  print u.alphastar()                                                          |                                                                                                                                                                                                                                                                                                                                |
| |  gammastar()                                 |                                                                                 |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | beta1()                                      | | u = UnitCell(2,2,4,90,90,60)                                                  | returns lattice parameters :math:`\beta_1=\alpha^*,\ \beta_2=\beta^*, \ \beta_3=\gamma^* \ (\rm {in \ radians})`. Note: `"International Tables for Crystallography" <http://it.iucr.org/Ba/ch1o1v0001/>`__ notation                                                                                                            |
| | beta2()                                      | |  print u.beta3()                                                              |                                                                                                                                                                                                                                                                                                                                |
| |  beta3()                                     |                                                                                 |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| set(a,b,c,alpha,beta,gamma,Unit=unit)          | | u = UnitCell()                                                                | sets :math:`a, b, c\ (\rm {in \ \AA}), \ \alpha, \ \beta,\ \gamma \ (\rm {in \ degrees \ or \ radians})` values. The optional parameter "Unit" controls the units for the angles, and can have the value of "Degrees" or "Radians". By default Unit = Degrees                                                                  |
|                                                | | u.set(2,3.5,4,90,90,90)                                                       |                                                                                                                                                                                                                                                                                                                                |
|                                                | | u.set(2,3.5,4,90,90,90,Unit = Degrees)                                        |                                                                                                                                                                                                                                                                                                                                |
|                                                | | u.set(2,3.5,4,0.5\*math.pi,0.5\*math.pi,0.5\*math.pi,Unit = Radians)          |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | seta(a)                                      | | u = UnitCell(2,3.5,4)                                                         | sets lattice parameters :math:`a, b, c\ (\rm {in \ \AA})`                                                                                                                                                                                                                                                                      |
| |  setb(b)                                     | |  u.setc(5)                                                                    |                                                                                                                                                                                                                                                                                                                                |
| |  setc(c)                                     | | print u.c()                                                                   |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | setalpha(alpha,Unit=unit)                    | | u = UnitCell()                                                                | sets :math:`\alpha, \ \beta,\ \gamma \ (\rm {in \ degrees \ or \ radians})` values. The optional parameter "Unit" controls the units for the angles, and can have the value of "Degrees" or "Radians". By default Unit = Degrees                                                                                               |
| | setbeta(beta,Unit=unit)                      | | u.setalpha(88)                                                                |                                                                                                                                                                                                                                                                                                                                |
| | setgamma(gamma,Unit=unit)                    | | u.setbeta(95,Unit = Degrees)                                                  |                                                                                                                                                                                                                                                                                                                                |
|                                                | | u.setgamma(0.5\*math.pi,Unit = Radians)                                       |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | d(h,k,l)                                     | | u = UnitCell(2,3.5,4)                                                         | returns :math:`d^{}_{}`-spacing :math:`(\rm in \ \rm \AA)` for given h,k,l coordinates                                                                                                                                                                                                                                         |
| | d(V3D vector)                                | |  print u.d(1,1,1)                                                             |                                                                                                                                                                                                                                                                                                                                |
|                                                | |  print u.d(V3D(1,1,1))                                                        |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | dstar(h,k,l)                                 | | u = UnitCell(2,3.5,4)                                                         | returns :math:`d^*=1/d \ (\rm in \ \rm \AA^{-1})` for given h,k,l coordinates                                                                                                                                                                                                                                                  |
| | dstar(V3D vector)                            | |  print u.dstar(1,1,1)                                                         |                                                                                                                                                                                                                                                                                                                                |
|                                                | |  print u.dstar(V3D(1,1,1))                                                    |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| recAngle(h1,k1,l1,h2,k2,l2,Unit=unit)          | | u = UnitCell(2,3.5,4)                                                         | returns the angle in reciprocal space between vectors given by :math:`\left(h_1, k_1, l_1\right)` and :math:`\left(h_2, k_2, l_2\right) \ (\rm {in \ degrees \ or \ radians})`. The optional parameter "Unit" controls the units for the angles, and can have the value of "Degrees" or "Radians". By default Unit = Degrees   |
|                                                | |  print u.recAngle(1,0,0,1,1,0)                                                |                                                                                                                                                                                                                                                                                                                                |
|                                                | |  print u.recAngle(1,0,0,1,1,1,Unit=Degrees)                                   |                                                                                                                                                                                                                                                                                                                                |
|                                                | |  print u.recAngle(1,0,0,1,1,0,Unit = Radians)                                 |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | volume()                                     | | u = UnitCell(2,3.5,4)                                                         | return the volume of the direct or reciprocal unit cell :math:`(\rm {in \ \AA^3 \ respectively \ \AA^{-3}})`                                                                                                                                                                                                                   |
| |  recVolume()                                 | |  print u.volume()                                                             |                                                                                                                                                                                                                                                                                                                                |
|                                                | |  print u.recVolume()                                                          |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | getB()                                       | | u = UnitCell(2,3.5,4)                                                         | return the :math:`B^{}_{}` and :math:`B^{-1}_{}` matrices                                                                                                                                                                                                                                                                      |
| |  getBinv()                                   | |  print u.getB()                                                               |                                                                                                                                                                                                                                                                                                                                |
|                                                | |  print u.getBinv()                                                            |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | getG()                                       | | u = UnitCell(2,3.5,4)                                                         | return the :math:`G^{}_{}` and :math:`G^{*}_{}` metric tensors of the direct and reciprocal lattices                                                                                                                                                                                                                           |
| |  getGstar()                                  | |  print u.getG()                                                               |                                                                                                                                                                                                                                                                                                                                |
|                                                | |  print u.getGstar()                                                           |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| recalculateFromGstar(Gstar 2D 3x3 array)       | | newGstar=array([[2,0,0],[0,0.5,0],[0,0,1]])                                   | recalculates the lattice parameters from the new :math:`G^{*}_{}` and sets them to the current UnitCell object                                                                                                                                                                                                                 |
|                                                | | u=UnitCell()                                                                  |                                                                                                                                                                                                                                                                                                                                |
|                                                | | u.recalculateFromGstar(newGstar)                                              |                                                                                                                                                                                                                                                                                                                                |
+------------------------------------------------+---------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Oriented lattices
-----------------

All the functions defined for UnitCell are inherited by the
OrientedLattice objects. In addition, the following functions are
defined for OrientedLattice only:

+-------------------------------------------------------+----------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Function                                              | Example                                                                                | Description                                                                                                                                                                                                                                                                                                                                     |
+=======================================================+========================================================================================+=================================================================================================================================================================================================================================================================================================================================================+
| OrientedLattice()                                     | o = OrientedLattice()                                                                  | default constructor, with :math:`a=b=c=1\rm \AA, \ \alpha=\beta=\gamma=90^\circ`. The :math:`U^{}_{}` matrix is set to identity                                                                                                                                                                                                                 |
+-------------------------------------------------------+----------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| OrientedLattice(other oriented lattice)               | | o = OrientedLattice()                                                                | copy constructor                                                                                                                                                                                                                                                                                                                                |
|                                                       | |  o2 = OrientedLattice(o)                                                             |                                                                                                                                                                                                                                                                                                                                                 |
+-------------------------------------------------------+----------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| OrientedLattice(a,b,c)                                | o = OrientedLattice(2,3.5,4)                                                           | constructor using :math:`a, b, c\ (\rm {in \ \AA}), \ \alpha=\beta=\gamma=90^\circ`. The :math:`U^{}_{}` matrix is set to identity                                                                                                                                                                                                              |
+-------------------------------------------------------+----------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| OrientedLattice(a,b,c,alpha,beta,gamma,Unit = unit)   | | o = OrientedLattice(2,3.5,4,90,90,90)                                                | constructor using :math:`a, b, c\ (\rm {in \ \AA}), \ \alpha, \ \beta,\ \gamma \ (\rm {in \ degrees \ or \ radians})`. The optional parameter "Unit" controls the units for the angles, and can have the value of "Degrees" or "Radians". By default Unit = Degrees. The :math:`U^{}_{}` matrix is set to identity                              |
|                                                       | | o = OrientedLattice(2,3.5,4,90,90,90,Unit = Degrees)                                 |                                                                                                                                                                                                                                                                                                                                                 |
|                                                       | | o = OrientedLattice(2,3.5,4,0.5\*math.pi,0.5\*math.pi,0.5\*math.pi,Unit = Radians)   |                                                                                                                                                                                                                                                                                                                                                 |
+-------------------------------------------------------+----------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| OrientedLattice(unit cell)                            | | u=UnitCell(2,3,4)                                                                    | constructor from UnitCell. The :math:`U^{}_{}` matrix is set to identity                                                                                                                                                                                                                                                                        |
|                                                       | |  o = OrientedLattice(u)                                                              |                                                                                                                                                                                                                                                                                                                                                 |
+-------------------------------------------------------+----------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | getU()                                              | | o.OrientedLattice(2,3.5,4)                                                           | return the :math:`U^{}_{}` and :math:`UB^{}_{}` matrices                                                                                                                                                                                                                                                                                        |
| |  getUB()                                            | |  print u.getU()                                                                      |                                                                                                                                                                                                                                                                                                                                                 |
|                                                       | |  print u.getUB()                                                                     |                                                                                                                                                                                                                                                                                                                                                 |
+-------------------------------------------------------+----------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | setU()                                              | | o.OrientedLattice(2,3.5,4)                                                           | sets the :math:`U^{}_{}` and :math:`UB^{}_{}` matrices. for setUB function, it will calculate first the lattice parameters, then the :math:`B^{}_{}` matrix, and then :math:`U^{}_{}`. See  `Note about orientation`_                                                                                                                           |
| |  setUB()                                            | |  newU=array([[0,1,0],[1,0,0],[0,0,-1]])                                              |                                                                                                                                                                                                                                                                                                                                                 |
|                                                       | | o.setU(newU)                                                                         |                                                                                                                                                                                                                                                                                                                                                 |
|                                                       | |  newUB=array([[2,1,0],[1,2,0],[2,0,-1]])                                             |                                                                                                                                                                                                                                                                                                                                                 |
|                                                       | | o.setUB(newUB)                                                                       |                                                                                                                                                                                                                                                                                                                                                 |
+-------------------------------------------------------+----------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| setUFromVectors(v1,v2)                                | | o.OrientedLattice(2,3.5,4)                                                           | recalculates and sets the :math:`U^{}_{}` matrix, such as the first vector is along the beam direction, and the second vector is in the horizontal plane. See  `Note about orientation`_. In python, the v1 and v2 vectors can be of type V3D, or length 3 list, or length 3 numpy array, not necessarily the same                              |
|                                                       | |  o.setUFromVectors([1,0,0],[0,1,0])                                                  |                                                                                                                                                                                                                                                                                                                                                 |
|                                                       | |  o.setUFromVectors(array([1,0,0]),array([0,1,0]))                                    |                                                                                                                                                                                                                                                                                                                                                 |
|                                                       | |  o.setUFromVectors(V3D(1,0,0),V3D(0,1,0))                                            |                                                                                                                                                                                                                                                                                                                                                 |
+-------------------------------------------------------+----------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| | getuVector()                                        | | o.OrientedLattice(2,3.5,4)                                                           | getuVector returns a vector along beam direction, while getvVector returns a vector in the horizontal plane, perpendicular to the beam direction (see `http://horace.isis.rl.ac.uk/Getting_started <http://horace.isis.rl.ac.uk/Getting_started>`__). See `Note about orientation`_                                                             |
| |  getvVector()                                       | |  o.setUFromVectors([5,5,0],[-2,1,0])                                                 |                                                                                                                                                                                                                                                                                                                                                 |
|                                                       | |  print o.getuVector()                                                                |                                                                                                                                                                                                                                                                                                                                                 |
|                                                       | |  print o.getvVector()                                                                |                                                                                                                                                                                                                                                                                                                                                 |
+-------------------------------------------------------+----------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Note about orientation
----------------------

Most of the instruments have incident beam along the :math:`\mathbf{z}`
direction. For an orthogonal lattice with :math:`\mathbf{a}^*` along
:math:`\mathbf{z}`, :math:`\mathbf{b}^*` along :math:`\mathbf{x}`, and
:math:`\mathbf{c}^*` along :math:`\mathbf{y}`, the :math:`U^{}_{}`
matrix has the form:

.. math::
    
    U =  \left( \begin{array}{ccc}
        0 & 1 & 0 \\
        0 & 0 & 1 \\
        1 & 0 & 0 \end{array} \right)



.. categories:: Concepts