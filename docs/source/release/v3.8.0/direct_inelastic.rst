========================
Direct Inelastic Changes
========================

.. contents:: Table of Contents
   :local:

Improvements
------------

- :ref:`MDNormDirectSC <algm-MDNormDirectSC>` has an option to skip safety checks. This improves the speed when acting on workspace groups.

- A qtiGenie method *export_masks* was brought to Mantid as :ref:`ExportSpectraMask <algm-ExportSpectraMask>` Python algorithm and got documentation, unit tests and Python GUI.
  The algorithm allows to export list of masked workspace spectra and save these spectra as ISIS *.msk* file. 
  The export mask procedure is often used by instrument scientists in ISIS, and they had to initialize qtiGenie to do this operation before these changes. 

- :ref:`GetEiMonDet <algm-GetEiMonDet>` has had a complete rewrite. The new version 2 utilizes elastic peak position data generated by :ref:`FindEPP <algm-FindEPP>`, the detectors of interest are specified by their indices instead of distances from sample, and the revised algorithm is able to deal with cases where neutrons arrive at the detectors in a later time frame.
- :ref:`MaskDetectors <algm-MaskDetectors>` has been modified to work on with grouped spectra. If a detector of the mask workspace is masked, the spectrum of the target workspace, with the detector group containing the masked detector become masked. This allows to use *.xml* masks, produced by :ref:`SaveMask <algm-SaveMask>` algorithm on the workspaces containing mapped spectra obtained from ISIS instruments.  
 
- :ref:`LoadMask <algm-LoadMask>` was modified to accept a workspace of spectra-detector map when spectra mask is provided.
  This allow users to use old legacy *.msk* files as source of mask workspaces usable with modified :ref:`MaskDetectors <algm-MaskDetectors>` algorithm
  and to use old spectra masks on a workspaces with different grouping and spectra-detector maps.

- There is a new algorithm :ref:`MagFormFactorCorrection <algm-MagFormFactorCorrection>` which will scale an input workspace by 1/:math:`|F(Q)|^2` where :math:`F(Q)` is the magnetic form factor for a specified magnetic ion. 



PyChop
------

- :ref:`PyChop <PyChop>` has been fixed and updated with a new Python commandline interface and a new GUI. Flux and resolution calculations for LET are now fully integrated into a single interface, and there is also support for calculating the resolution, flux and allowed :math:`E_i` in multi-rep mode.


Crystal Field
-------------

- A fitting function was added (:ref:`CrystalFieldMultiSpectrum <func-CrystalFieldMultiSpectrum>`) that fits crystal field parameters to multiple spectra simultaneously.
- A preliminary python interface to the Crystal Field functionality was added (:ref:`Crystal Field Python Interface`). It includes classes for defining a problem, performing a fit and basic plotting facilities.

MLZ & TOFTOF
------------

- A workflow gui for TOFTOF data reduction (#17075).
  The gui is accessible through the ``Interfaces / Direct / DGS Reduction`` menu.
  The first time the user is presented with a choice of facilites and instruments -
  choose MLZ / TOFTOF. The choice can be changed later from (any) reduction gui by
  ``Tools / Change instrument ...``.

`Full list of changes on GitHub <http://github.com/mantidproject/mantid/pulls?q=is%3Apr+milestone%3A%22Release+3.8%22+is%3Amerged+label%3A%22Component%3A+Direct+Inelastic%22>`_
