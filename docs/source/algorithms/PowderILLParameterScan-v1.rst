.. algorithm::

.. summary::

.. relatedalgorithms::

.. properties::

Description
-----------

This algorithm performs the data reduction for D20 and D1B instruments at the ILL.

Input runs
----------

Provide the list of the input runs (e.g. one `.nxs` file corresponding to a single temperature point) following the syntax in
:py:obj:`MultipleFileProperty <mantid.api.MultipleFileProperty>`.

Summing of individual runs is possible, and if requested it will be carried out by :ref:`MergeRuns <algm-MergeRuns>`, taking into account the
metadata.

The list of unsummed files will be eventually combined with :ref:`ConjoinXRuns <algm-ConjoinXRuns>`.

Scanning observable
-------------------

The scanning observable can be any numeric sample log entry (scalar or time series).
It is possible to request ordering and/or equidistant rebinning of the observable axis for the final result.

Calibration file
----------------

This has to be a processed `.nxs` file containing a single-column workspace of calibration constants generated by
:ref:`PowderILLEfficiency <algm-PowderILLEfficiency>`, and then saved with :ref:`SaveNexusProcessed <algm-SaveNexusProcessed>`.

Normalisation options
---------------------

Choose one of the 4 options suggested. If region-of-interest (ROI) normalisation is requested, provide ROI as a list of ranges in scattering angle in degrees,
for example **10,20,50,100** will mean **[10-20]** and **[50-100]**.

Output
------

The output of the algorithm is a single workspace, one spectrum (diffractogram) per each observable (e.g. temperature) point.
This algorithm does not save the output to a file itself.
Use :ref:`SaveFocusedXYE <algm-SaveFocusedXYE>` to save in FullProf format #10, or :ref:`SaveGSS <algm-SaveGSS>` for GSAS format.

Workflow
--------

.. diagram:: PowderILLParameterScan-v1_wkflw.dot

Related Algorithms
------------------

:ref:`PowderILLEfficiency <algm-PowderILLEfficiency>` reads a detector-scan run and calculates the detector efficiency constants.

Usage
-----

**Example - PowderILLParameterScan**

.. testsetup:: ExPowderILLParameterScan

   config['default.facility'] = 'ILL'
   config['default.instrument'] = 'D20'
   config.appendDataSearchSubDir('ILL/D20/')

.. testcode:: ExPowderILLParameterScan

   red_ws = PowderILLParameterScan(Run='967087,967088')
   print("Reduced workspace has {0} diffractograms having {1} bins each".format(red_ws.getNumberHistograms(),red_ws.blocksize()))
   print("The first one corresponds to T={0:.2f} K".format(red_ws.getAxis(1).extractValues()[0]))
   print("The first one corresponds to T={0:.2f} K".format(red_ws.getAxis(1).extractValues()[1]))

Output:

.. testoutput:: ExPowderILLParameterScan

   Reduced workspace has 2 diffractograms having 3008 bins each
   The first one corresponds to T=253.92 K
   The first one corresponds to T=242.82 K

.. testcleanup:: ExPowderILLParameterScan

   mtd.remove('red_ws')

.. categories::

.. sourcelink::
